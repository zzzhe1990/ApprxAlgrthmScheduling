Reading File...
File 1-1 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 50, LB: 31start at time: 1503455813
thread: thread: 2, MlBk is called with LB: 41, UB: 451
, MlBk is called with LB: 36, UB: 40
thread: 3, MlBk is called with LB: 46, UB: 50
 thread: 2, LongJobs.size() 19
 thread: 1, LongJobs.size() 21
 thread: 3, LongJobs.size() 15
thread: 0, MlBk is called with LB: 31, UB: 35
 thread: 0, LongJobs.size() 21
thread: 3, NSTable size: 18
thread: 3, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[thread][maxindex].elm[i]: 4
thread: 3, i: 4, alltableelemets[thread][maxindex].elm[i]: 5
thread: 3, i: 5, alltableelemets[thread][maxindex].elm[i]: 6
thread: 3, i: 6, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 7, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 8, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 5 3 7 0 0 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 1 2 1 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 1 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
thread: 2, NSTable size: 41
thread: 2, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[thread][maxindex].elm[i]: 3
thread: 2, i: 5, alltableelemets[thread][maxindex].elm[i]: 5
thread: 2, i: 6, alltableelemets[thread][maxindex].elm[i]: 3
thread: 2, i: 7, alltableelemets[thread][maxindex].elm[i]: 2
thread: 2, i: 8, alltableelemets[thread][maxindex].elm[i]: 6
thread: 2, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 0 2 3 4 3 7 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 2 2 1 1 1 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 1 1 0 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
thread: 0, NSTable size: 20
thread: 0, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[thread][maxindex].elm[i]: 5
thread: 0, i: 5, alltableelemets[thread][maxindex].elm[i]: 5
thread: 0, i: 6, alltableelemets[thread][maxindex].elm[i]: 3
thread: 0, i: 7, alltableelemets[thread][maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[thread][maxindex].elm[i]: 6
thread: 0, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 0 3 3 4 3 7 0 0 0 0 0 0 0 
thread: 0, divisorComp: 0 0 0 0 2 2 1 1 1 0 0 0 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 1 1 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
thread: 1, NSTable size: 31
thread: 1, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[thread][maxindex].elm[i]: 5
thread: 1, i: 5, alltableelemets[thread][maxindex].elm[i]: 5
thread: 1, i: 6, alltableelemets[thread][maxindex].elm[i]: 3
thread: 1, i: 7, alltableelemets[thread][maxindex].elm[i]: 2
thread: 1, i: 8, alltableelemets[thread][maxindex].elm[i]: 6
thread: 1, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 0 3 3 4 3 7 0 0 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 2 2 1 1 1 0 0 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 1 1 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
thread: 2, maxBlockLvlSize: 2
thread: 2, maxInBlockLvlSize: 70
thread: 2, AllTableSize: 2016, maxSubsetsSize: 64
thread: 1, maxBlockLvlSize: 2
thread: 1, maxInBlockLvlSize: 102
thread: 1, AllTableSize: 3024, maxSubsetsSize: 64
thread: 3, maxBlockLvlSize: 1
thread: 3, maxInBlockLvlSize: 15
thread: 3, AllTableSize: 210, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 2
thread: 0, maxInBlockLvlSize: 102
thread: 0, AllTableSize: 3024, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 1 0 0 0 
thread: 0, allBlocks[2]: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 1 0 0 0 0 
cpuId: 3, dpoptimal: 5
copy the latest feasible solution to instance takes time: 0.049139
thread: 0, allBlocks[3]: 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[3]: 1 1 0 0 0 
cpuId: 0, dpoptimal: 10
cpuId: 2, dpoptimal: 7
copy the latest feasible solution to instance takes time: 0.387248
copy the latest feasible solution to instance takes time: 0.506197
cpuId: 1, dpoptimal: 8
copy the latest feasible solution to instance takes time: 0.168259
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 31, UB: 33
BKID: 0, LB: 31, UB: 33, OPT: 10
Dynamic Programming Runtime: 23.587
Execution time between LB and UB is: 9
By far, all LB UB calculation runtime: 9
Iteration: 2, UB: 33, LB: 31start at time: 1503455822
thread: 0, MlBk is called with LB: 31, UB: 31
thread: 1, MlBk is called with LB: 32, UB: 32
thread: 2, MlBk is called with LB: 33, UB: 33
 thread: 0, LongJobs.size() 21
 thread: 2, LongJobs.size() 21
 thread: 1, LongJobs.size() 21
thread: 2, NSTable size: 20
thread: 2, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[thread][maxindex].elm[i]: 5
thread: 2, i: 5, alltableelemets[thread][maxindex].elm[i]: 5
thread: 2, i: 6, alltableelemets[thread][maxindex].elm[i]: 3
thread: 2, i: 7, alltableelemets[thread][maxindex].elm[i]: 2
thread: 2, i: 8, alltableelemets[thread][maxindex].elm[i]: 6
thread: 2, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: thread: 2, i: 15, alltableelemets[thread][maxindex].elm[i]: 0
1, NSTable size: 20
thread: 1, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[thread][maxindex].elm[i]: 5
thread: 1, i: 5, alltableelemets[thread][maxindex].elm[i]: 5
thread: 1, i: 6, alltableelemets[thread][maxindex].elm[i]: 3
thread: 1, i: 7, alltableelemets[thread][maxindex].elm[i]: 2

thread: 1, i: 8thread: 2, blockDimSizeComp: 0 0 0 0 3 3 4 3 7 0 0 0 0, alltableelemets[thread][maxindex].elm[i]:  60
 thread: 1, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
0thread: 1, i: 13 , alltableelemets[thread][maxindex].elm[i]: 00
 thread: 1, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 2, divisorComp: 0 0 0 0 2 2 1 1 1 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 1 1 0 0 0 

thread: 1, blockDimSizeComp: 0 0 0 0 3 3 4 3 7 0 0 0 0 0 0 0 
thread: 1, divisorComp: 0 0thread:  20 , allBlocks: 00  02  02 0 1  1 01  00 0  0 00  0 00 0  
thread: 1, largestBlockVec: 0 0 0 0 1 1 0 0 0 0 0 00 0 0  0 00 0  0 
0thread: 1, largestNoZeroBlockVec: 1 1 0 0 0 
 0 0 0 , mySum: 0
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 1 0 0 0 0 0 0thread:  10, allBlocks:  0 00  00 0  0 0, mySum:  2
0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
thread: 0, NSTable size: 26
thread: 0, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 8, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[thread][maxindex].elm[i]: 2
thread: 0, i: 10, alltableelemets[thread][maxindex].elm[i]: 3
thread: 0, i: 11, alltableelemets[thread][maxindex].elm[i]: 1
thread: 0, i: 12, alltableelemets[thread][maxindex].elm[i]: 4
thread: 0, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[thread][maxindex].elm[i]: 3
thread: 0, i: 15, alltableelemets[thread][maxindex].elm[i]: 8

thread: 0, blockDimSizeComp: 0 0 0 0 0 0 0 0 0 3 2 2 5 0 4 3 
thread: 0, divisorComp: 0 0 0 0 0 0 0 0 0 1 2 1 1 0 1 3 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 2 
thread: 0, largestNoZeroBlockVec: 0 1 0 0 0 2 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 , mySum: 2
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 2 , mySum: 3
thread: 2, maxBlockLvlSize: 2
thread: 2, maxInBlockLvlSize: 102
thread: 2, AllTableSize: 3024, maxSubsetsSize: 64
thread: 1, maxBlockLvlSize: 2
thread: 1, maxInBlockLvlSize: 102
thread: 1, AllTableSize: 3024, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 2
thread: 0, maxInBlockLvlSize: 119
thread: 0, AllTableSize: 4320, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 1 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 mySum: 2
thread: 0, blockNoZero[3]: 0 0 0 0 0 2 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[4]: 0 1 0 0 0 1 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 2 mySum: 3
thread: 0, blockNoZero[5]: 0 1 0 0 0 2 
cpuId: 0, gpu thread: 0, j: 0, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 6, it's NS: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 5
elm offset: 2901, myOPT: 5, optOffset: 0, optVecIndex: 1, indexomp: 0, ii: 0, blockLvl: 3, blockIDInLvl: 0, dev_counterVec[1]: 0
cpuId: 0, gpu thread: 0, j: 0, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 6, it's NS: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 6
elm offset: 1445, myOPT: 6, optOffset: 0, optVecIndex: 2, indexomp: 0, ii: 0, blockLvl: 3, blockIDInLvl: 0, dev_counterVec[1]: 0
cpuId: 0, gpu thread: 0, j: 0, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 6, it's NS: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 5
elm offset: 762, myOPT: 5, optOffset: 0, optVecIndex: 3, indexomp: 0, ii: 0, blockLvl: 3, blockIDInLvl: 0, dev_counterVec[1]: 0
cpuId: 0, gpu thread: 0, j: 0, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 6, it's NS: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6
elm offset: 1440, myOPT: 6, optOffset: 0, optVecIndex: 4, indexomp: 0, ii: 0, blockLvl: 3, blockIDInLvl: 0, dev_counterVec[1]: 0
cpuId: 0, gpu thread: 0, j: 1, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 7, it's NS: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 6
elm offset: 3600, myOPT: 6, optOffset: 64, optVecIndex: 1, indexomp: 1, ii: 1, blockLvl: 3, blockIDInLvl: 0, dev_counterVec[6]: 719
cpuId: 0, gpu thread: 0, j: 1, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 7, it's NS: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 7
elm offset: 1452, myOPT: 7, optOffset: 64, optVecIndex: 2, indexomp: 1, ii: 1, blockLvl: 3, blockIDInLvl: 0, dev_counterVec[6]: 719
cpuId: 0, gpu thread: 0, j: 1, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 7, it's NS: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 6
elm offset: 1445, myOPT: 6, optOffset: 64, optVecIndex: 3, indexomp: 1, ii: 1, blockLvl: 3, blockIDInLvl: 0, dev_counterVec[6]: 719
cpuId: 0, gpu thread: 0, j: 1, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 7, it's NS: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 7
elm offset: 1441, myOPT: 7, optOffset: 64, optVecIndex: 4, indexomp: 1, ii: 1, blockLvl: 3, blockIDInLvl: 0, dev_counterVec[6]: 719
cpuId: 0, gpu thread: 14, j: 21, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 8, it's NS: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 7
elm offset: 3601, myOPT: 7, optOffset: 1344, optVecIndex: 1, indexomp: 7, ii: 2, blockLvl: 3, blockIDInLvl: 0, dev_counterVec[19]: 19
cpuId: 0, gpu thread: 14, j: 21, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 8, it's NS: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 8
elm offset: 1482, myOPT: 8, optOffset: 1344, optVecIndex: 2, indexomp: 7, ii: 2, blockLvl: 3, blockIDInLvl: 0, dev_counterVec[19]: 19
cpuId: 0, gpu thread: 14, j: 21, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 8, it's NS: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 7
elm offset: 1452, myOPT: 7, optOffset: 1344, optVecIndex: 3, indexomp: 7, ii: 2, blockLvl: 3, blockIDInLvl: 0, dev_counterVec[19]: 19
cpuId: 0, gpu thread: 14, j: 21, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 8, it's NS: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 8
elm offset: 1461, myOPT: 8, optOffset: 1344, optVecIndex: 4, indexomp: 7, ii: 2, blockLvl: 3, blockIDInLvl: 0, dev_counterVec[19]: 19
cpuId: 1, dpoptimal: 10
cpuId: 2, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.512727
copy the latest feasible solution to instance takes time: 0.529472
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.234333
BKID: 0, LB: 31, UB: 31, OPT: 10
Dynamic Programming Runtime: 27.6248
Execution time between LB and UB is: 11
By far, all LB UB calculation runtime: 20
********************************************************
Total execution on UB and LB is: 20
OUT of Bk while loop  
UB    31
LB    31
T1    31
T2    31
OPT   10
nMachines   10
AllProbData.size()    2
ck :   1
AllProbData[ck].Ttable    31
ck :   0
AllProbData[ck].Ttable    33
Final OptimalSchedule
FinalMakespan34
Main Scheduling is Done
File 1-1 is Done.
******************************
Reading File...
File 1-2 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 52, LB: 33start at time: 1503455834
thread: 1, MlBk is called with LB: 38, UB: 42
thread: 3, MlBk is called with LB: 48, UB: 52
thread:  thread: 1, LongJobs.size() 19
0, MlBk is called with LB: 33, UB: 37
thread: 2, MlBk is called with LB: 43, UB: 47
 thread: 0, LongJobs.size() 21
 thread: 2, LongJobs.size() 18
 thread: 3, LongJobs.size() 16
thread: 3, NSTable size: 13
thread: 3, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[thread][maxindex].elm[i]: 1
thread: 3, i: 4, alltableelemets[thread][maxindex].elm[i]: 8
thread: 3, i: 5, alltableelemets[thread][maxindex].elm[i]: 7
thread: 3, i: 6, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 7, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 8, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 2 3 4 0 0 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 1 3 2 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 2 1 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
thread: 3, maxBlockLvlSize: 2
thread: 3, maxInBlockLvlSize: 6
thread: 3, AllTableSize: 144, maxSubsetsSize: 64
thread: 2, NSTable size: 23
thread: 2, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[thread][maxindex].elm[i]: 2
thread: 2, i: 6, alltableelemets[thread][maxindex].elm[i]: 5
thread: 2, i: 7, alltableelemets[thread][maxindex].elm[i]: 4
thread: 2, i: 8, alltableelemets[thread][maxindex].elm[i]: 7
thread: 2, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 0 0 3 3 5 4 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 0 1 2 1 2 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 1 0 1 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
thread: 2, maxBlockLvlSize: 2
thread: 2, maxInBlockLvlSize: 31
thread: 2, AllTableSize: 720, maxSubsetsSize: 64
thread: 1, NSTable size: 28
thread: 1, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[thread][maxindex].elm[i]: 1
thread: 1, i: 5, alltableelemets[thread][maxindex].elm[i]: 2
thread: 1, i: 6, alltableelemets[thread][maxindex].elm[i]: 5
thread: 1, i: 7, alltableelemets[thread][maxindex].elm[i]: 4
thread: 1, i: 8, alltableelemets[thread][maxindex].elm[i]: 7
thread: 1, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 0 2 3 3 5 4 0 0 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 1 1 2 1 2 0 0 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 1 0 1 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
thread: 1, maxBlockLvlSize: 2
thread: 1, maxInBlockLvlSize: 62
thread: 1, AllTableSize: 1440, maxSubsetsSize: 64
thread: 0, NSTable size: 23
thread: 0, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[thread][maxindex].elm[i]: 3
thread: 0, i: 5, alltableelemets[thread][maxindex].elm[i]: 2
thread: 0, i: 6, alltableelemets[thread][maxindex].elm[i]: 5
thread: 0, i: 7, alltableelemets[thread][maxindex].elm[i]: 4
thread: 0, i: 8, alltableelemets[thread][maxindex].elm[i]: 7
thread: 0, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 0 4 3 3 5 4 0 0 0 0 0 0 0 
thread: 0, divisorComp: 0 0 0 0 1 1 2 1 2 0 0 0 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 1 0 1 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
thread: 0, maxBlockLvlSize: 2
thread: 0, maxInBlockLvlSize: 114
thread: 0, AllTableSize: 2880, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 1 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[3]: 0 0 1 0 1 
cpuId: 3, dpoptimal: 6
copy the latest feasible solution to instance takes time: 0.032012
cpuId: 2, dpoptimal: 7
cpuId: 1, dpoptimal: 8
copy the latest feasible solution to instance takes time: 0.125824
copy the latest feasible solution to instance takes time: 0.191247
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.157408
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 33, UB: 35
BKID: 0, LB: 33, UB: 35, OPT: 10
Dynamic Programming Runtime: 16.0507
Execution time between LB and UB is: 7
By far, all LB UB calculation runtime: 7
Iteration: 2, UB: 35, LB: 33start at time: 1503455841
thread: 0, MlBk is called with LB: 33, UB: 33
thread: 1, MlBk is called with LB: 34, UB: 34
thread: 2, MlBk is called with LB: 35, UB: 35
 thread: 2, LongJobs.size() 21
 thread: 0, LongJobs.size() 21
 thread: 1, LongJobs.size() 21
thread: 0, NSTable size: 20
thread: 0, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[thread][maxindex].elm[i]: 3
thread: 0, i: 5, alltableelemets[thread][maxindex].elm[i]: 2
thread: 0, i: 6, alltableelemets[thread][maxindex].elm[i]: 5
thread: 0, i: 7, alltableelemets[thread][maxindex].elm[i]: 4
thread: 0, i: 8, alltableelemets[thread][maxindex].elm[i]: 7
thread: 0, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 0 4 3 3 5 4 0 0 0 0 0 0 0 
thread: 0, divisorComp: 0 0 0 0 1 1 2 1 2 0 0 0 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 1 0 1 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
thread: 2, NSTable size: 23
thread: 2, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[thread][maxindex].elm[i]: 3
thread: 2, i: 5, alltableelemets[thread][maxindex].elm[i]: 2
thread: 2, i: 6, alltableelemets[thread][maxindex].elm[i]: 5
thread: 2, i: 7, alltableelemets[thread][maxindex].elm[i]: 4
thread: 2, i: 8, alltableelemets[thread][maxindex].elm[i]: 7
thread: 2, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 0 4 3 3 5 4 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 1 1 2 1 2 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 1 0 1 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
thread: 1, NSTable size: 23
thread: 1, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[thread][maxindex].elm[i]: 3
thread: 1, i: 5, alltableelemets[thread][maxindex].elm[i]: 2
thread: 1, i: 6, alltableelemets[thread][maxindex].elm[i]: 5
thread: 1, i: 7, alltableelemets[thread][maxindex].elm[i]: 4
thread: 1, i: 8, alltableelemets[thread][maxindex].elm[i]: 7
thread: 1, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 0 4 3 3 5 4 0 0 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 1 1 2 1 2 0 0 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 1 0 1 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
thread: 0, maxBlockLvlSize: 2
thread: 0, maxInBlockLvlSize: 114
thread: 0, AllTableSize: 2880, maxSubsetsSize: 64
thread: 2, maxBlockLvlSize: 2
thread: 2, maxInBlockLvlSize: 114
thread: 2, AllTableSize: 2880, maxSubsetsSize: 64
thread: 1, maxBlockLvlSize: 2
thread: 1, maxInBlockLvlSize: 114
thread: 1, AllTableSize: 2880, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 1 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[3]: 0 0 1 0 1 
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.523895
cpuId: 1, dpoptimal: 10
cpuId: 2, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.32336
copy the latest feasible solution to instance takes time: 0.296391
BKID: 0, LB: 33, UB: 33, OPT: 10
Dynamic Programming Runtime: 15.5776
Execution time between LB and UB is: 5
By far, all LB UB calculation runtime: 12
********************************************************
Total execution on UB and LB is: 12
OUT of Bk while loop  
UB    33
LB    33
T1    33
T2    33
OPT   10
nMachines   10
AllProbData.size()    2
ck :   1
AllProbData[ck].Ttable    33
ck :   0
AllProbData[ck].Ttable    35
Final OptimalSchedule
FinalMakespan34
Main Scheduling is Done
File 1-2 is Done.
******************************
Reading File...
File 1-3 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 50, LB: 31start at time: 1503455847
thread: thread: 1, MlBk is called with LB: 36, UB: 240, MlBk is called with LB: 41, UB: 45

thread: 3, MlBk is called with LB: 46, UB: 50
 thread: 1, LongJobs.size() 21
thread: 0, MlBk is called with LB: 31, UB: 35
 thread: 2, LongJobs.size() 18
 thread: 0, LongJobs.size() 21
 thread: 3, LongJobs.size() 15
thread: 3, NSTable size: 18
thread: 3, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[thread][maxindex].elm[i]: 5
thread: 3, i: 4, alltableelemets[thread][maxindex].elm[i]: 4
thread: 3, i: 5, alltableelemets[thread][maxindex].elm[i]: 6
thread: 3, i: 6, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 7, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 8, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 3 5 7 0 0 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 2 1 1 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 1 0 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
thread: 3, maxBlockLvlSize: 1
thread: 3, maxInBlockLvlSize: 15
thread: 3, AllTableSize: 210, maxSubsetsSize: 64
thread: 2, NSTable size: 38
thread: 2, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[thread][maxindex].elm[i]: 2
thread: 2, i: 5, alltableelemets[thread][maxindex].elm[i]: 2
thread: 2, i: 6, alltableelemets[thread][maxindex].elm[i]: 5
thread: 2, i: 7, alltableelemets[thread][maxindex].elm[i]: 3
thread: 2, i: 8, alltableelemets[thread][maxindex].elm[i]: 6
thread: 2, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 0 3 3 3 2 7 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 1 1 2 2 1 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 1 1 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
thread: 2, maxBlockLvlSize: 2
thread: 2, maxInBlockLvlSize: 53
thread: 2, AllTableSize: 1512, maxSubsetsSize: 64
thread: 1, NSTable size: 30
thread: 1, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[thread][maxindex].elm[i]: 5
thread: 1, i: 5, alltableelemets[thread][maxindex].elm[i]: 2
thread: 1, i: 6, alltableelemets[thread][maxindex].elm[i]: 5
thread: 1, i: 7, alltableelemets[thread][maxindex].elm[i]: 3
thread: 1, i: 8, alltableelemets[thread][maxindex].elm[i]: 6
thread: 1, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 0 3 3 3 4 7 0 0 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 2 1 2 1 1 0 0 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 1 0 1 0 0 
thread: 0, NSTable size: 20
thread: thread: 0, i: 01, alltableelemets[thread][maxindex].elm[i]: , allBlocks: 00 
0thread: 0, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[thread][maxindex].elm[i]: 5
thread: 0, i:  0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 5, alltableelemets[thread][maxindex].elm[i]: 20
 1thread: 0, i: 6, alltableelemets[thread][maxindex].elm[i]: 5
thread: 0, i: 7 , alltableelemets[thread][maxindex].elm[i]: 3
thread: 0, i: 8, alltableelemets[thread][maxindex].elm[i]: 6
thread: 0, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[thread][maxindex].elm[i]: 0
0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 1 0 0 0 
0thread: 0, blockDimSizeComp: 0 0 0 0 3  3 3 4 7 0 0 0 0 0 00 0  00 0 0 , mySum: 2
 
thread: 0, divisorComp: 0 0 0 0 2 1 2 1 1 0 0 0 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 1 0 1 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
thread: 0, maxBlockLvlSize: 2
thread: 0, maxInBlockLvlSize: 102
thread: 0, AllTableSize: 3024, maxSubsetsSize: 64
thread: 1, maxBlockLvlSize: 2
thread: 1, maxInBlockLvlSize: 102
thread: 1, AllTableSize: 3024, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 1 0 0 
thread: 0, allBlocks[2]: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 1 0 0 0 0 
cpuId: 3, dpoptimal: 5
copy the latest feasible solution to instance takes time: 0.046145
thread: 0, allBlocks[3]: 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[3]: 1 0 1 0 0 
cpuId: 2, dpoptimal: 7
copy the latest feasible solution to instance takes time: 0.261349
cpuId: 1, dpoptimal: 9
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.355504
copy the latest feasible solution to instance takes time: 0.322036
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 31, UB: 33
BKID: 0, LB: 31, UB: 33, OPT: 10
Dynamic Programming Runtime: 20.9787
Execution time between LB and UB is: 7
By far, all LB UB calculation runtime: 7
Iteration: 2, UB: 33, LB: 31start at time: 1503455854
thread: 0, MlBk is called with LB: 31, UB: 31
thread: 2, MlBk is called with LB: 33, UB: 33
thread: 1, MlBk is called with LB: 32, UB: 32
 thread: 0, LongJobs.size() 21
 thread: 2, LongJobs.size() 21
 thread: 1, LongJobs.size() 21
thread: 2, NSTable size: 20
thread: 2, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[thread][maxindex].elm[i]: 5
thread: 2, i: 5, alltableelemets[thread][maxindex].elm[i]: 2
thread: 2, i: 6, alltableelemets[thread][maxindex].elm[i]: 5
thread: 2, i: 7, alltableelemets[thread][maxindex].elm[i]: 3
thread: 2, i: 8, alltableelemets[thread][maxindex].elm[i]: 6
thread: 2, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 0 3 3 3 4 7 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 2 1 2 1 1 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 1 0 1 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
thread: 0, NSTable size: 33
thread: 0, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 8, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[thread][maxindex].elm[i]: 3
thread: 0, i: 10, alltableelemets[thread][maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[thread][maxindex].elm[i]: 1
thread: 0, i: 12, alltableelemets[thread][maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[thread][maxindex].elm[i]: 4
thread: 0, i: 14, alltableelemets[thread][maxindex].elm[i]: 1
thread: 0, i: 15, alltableelemets[thread][maxindex].elm[i]: 9

thread: 0, blockDimSizeComp: 0 0 0 0 0 0 0 0 0 2 3 2 2 5 2 5 
thread: 0, divisorComp: 0 0 0 0 0 0 0 0 0 2 1 1 1 1 1 2 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 
thread: 0, largestNoZeroBlockVec: 1 0 0 0 0 0 1 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 , mySum: 2
thread: 1, NSTable size: 20
thread: 1, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[thread][maxindex].elm[i]: 5
thread: 1, i: 5, alltableelemets[thread][maxindex].elm[i]: 2
thread: 1, i: 6, alltableelemets[thread][maxindex].elm[i]: 5
thread: 1, i: 7, alltableelemets[thread][maxindex].elm[i]: 3
thread: 1, i: 8, alltableelemets[thread][maxindex].elm[i]: 6
thread: 1, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 0 3 3 3 4 7 0 0 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 2 1 2 1 1 0 0 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 1 0 1 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
thread: 2, maxBlockLvlSize: 2
thread: 2, maxInBlockLvlSize: 102
thread: 2, AllTableSize: 3024, maxSubsetsSize: 64
thread: 1, maxBlockLvlSize: 2
thread: 1, maxInBlockLvlSize: 102
thread: 1, AllTableSize: 3024, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 2
thread: 0, maxInBlockLvlSize: 192
thread: 0, AllTableSize: 4800, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 1 0 0 0 0 0 0 
cpuId: 0, gpu thread: 32, j: 64, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 6, it's NS: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 5
elm offset: 1213, myOPT: 5, optOffset: 4096, optVecIndex: 1, indexomp: 32, ii: 3, blockLvl: 1, blockIDInLvl: 0, dev_counterVec[55]: 241
cpuId: 0, gpu thread: 32, j: 64, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 6, it's NS: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 6
elm offset: 1230, myOPT: 6, optOffset: 4096, optVecIndex: 2, indexomp: 32, ii: 3, blockLvl: 1, blockIDInLvl: 0, dev_counterVec[55]: 241
cpuId: 0, gpu thread: 32, j: 64, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 6, it's NS: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 5
elm offset: 1203, myOPT: 5, optOffset: 4096, optVecIndex: 3, indexomp: 32, ii: 3, blockLvl: 1, blockIDInLvl: 0, dev_counterVec[55]: 241
cpuId: 0, gpu thread: 32, j: 64, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 6, it's NS: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6
elm offset: 1201, myOPT: 6, optOffset: 4096, optVecIndex: 4, indexomp: 32, ii: 3, blockLvl: 1, blockIDInLvl: 0, dev_counterVec[55]: 241
cpuId: 0, gpu thread: 61, j: 148, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 7, it's NS: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 6
elm offset: 1264, myOPT: 6, optOffset: 9472, optVecIndex: 1, indexomp: 87, ii: 4, blockLvl: 1, blockIDInLvl: 0, dev_counterVec[97]: 4
cpuId: 0, gpu thread: 61, j: 148, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 7, it's NS: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 7
elm offset: 1248, myOPT: 7, optOffset: 9472, optVecIndex: 2, indexomp: 87, ii: 4, blockLvl: 1, blockIDInLvl: 0, dev_counterVec[97]: 4
cpuId: 0, gpu thread: 61, j: 148, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 7, it's NS: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 6
elm offset: 1230, myOPT: 6, optOffset: 9472, optVecIndex: 3, indexomp: 87, ii: 4, blockLvl: 1, blockIDInLvl: 0, dev_counterVec[97]: 4
cpuId: 0, gpu thread: 61, j: 148, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 7, it's NS: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 7
elm offset: 1214, myOPT: 7, optOffset: 9472, optVecIndex: 4, indexomp: 87, ii: 4, blockLvl: 1, blockIDInLvl: 0, dev_counterVec[97]: 4
cpuId: 0, gpu thread: 42, j: 226, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 8, it's NS: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 7
elm offset: 1348, myOPT: 7, optOffset: 14464, optVecIndex: 1, indexomp: 184, ii: 5, blockLvl: 1, blockIDInLvl: 0, dev_counterVec[142]: 0
cpuId: 0, gpu thread: 42, j: 226, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 8, it's NS: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 8
elm offset: 1307, myOPT: 8, optOffset: 14464, optVecIndex: 2, indexomp: 184, ii: 5, blockLvl: 1, blockIDInLvl: 0, dev_counterVec[142]: 0
cpuId: 0, gpu thread: 42, j: 226, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 8, it's NS: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 7
elm offset: 1248, myOPT: 7, optOffset: 14464, optVecIndex: 3, indexomp: 184, ii: 5, blockLvl: 1, blockIDInLvl: 0, dev_counterVec[142]: 0
cpuId: 0, gpu thread: 42, j: 226, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 8, it's NS: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 8
elm offset: 1247, myOPT: 8, optOffset: 14464, optVecIndex: 4, indexomp: 184, ii: 5, blockLvl: 1, blockIDInLvl: 0, dev_counterVec[142]: 0
thread: 0, allBlocks[3]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[3]: 1 0 0 0 0 0 1 
cpuId: 2, dpoptimal: 10
cpuId: 1, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.514162
copy the latest feasible solution to instance takes time: 0.534776
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.280393
BKID: 0, LB: 31, UB: 31, OPT: 10
Dynamic Programming Runtime: 37.8834
Execution time between LB and UB is: 17
By far, all LB UB calculation runtime: 24
********************************************************
Total execution on UB and LB is: 24
OUT of Bk while loop  
UB    31
LB    31
T1    31
T2    31
OPT   10
nMachines   10
AllProbData.size()    2
ck :   1
AllProbData[ck].Ttable    31
ck :   0
AllProbData[ck].Ttable    33
Final OptimalSchedule
FinalMakespan34
Main Scheduling is Done
File 1-3 is Done.
******************************
Reading File...
File 1-4 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 50, LB: 31start at time: 1503455871
thread: thread: 2, MlBk is called with LB: 141, MlBk is called with LB: , UB: 4536, UB: 40
thread: 
 thread: 2, LongJobs.size() 20
thread: 0 thread: , MlBk is called with LB: 31, UB: 135, LongJobs.size() 
213, MlBk is called with LB: 46, UB: 50
 thread: 0, LongJobs.size() 21

 thread: 3, LongJobs.size() 16
thread: 3, NSTable size: 18
thread: 3, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[thread][maxindex].elm[i]: 5
thread: 3, i: 4, alltableelemets[thread][maxindex].elm[i]: 7
thread: 3, i: 5, alltableelemets[thread][maxindex].elm[i]: 4
thread: 3, i: 6, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 7, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 8, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 3 4 5 0 0 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 2 2 1 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 1 1 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
thread: 3, maxBlockLvlSize: 2
thread: 3, maxInBlockLvlSize: 11
thread: 3, AllTableSize: 240, maxSubsetsSize: 64
thread: 2, NSTable size: 39
thread: 2, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[thread][maxindex].elm[i]: 2
thread: 2, i: 5, alltableelemets[thread][maxindex].elm[i]: 3
thread: 2, i: 6, alltableelemets[thread][maxindex].elm[i]: 8
thread: 2, i: 7, alltableelemets[thread][maxindex].elm[i]: 3
thread: 2, i: 8, alltableelemets[thread][maxindex].elm[i]: 4
thread: 2, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 0 3 2 3 4 5 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 1 2 3 1 1 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 1 2 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 , mySum: 3
thread: 0, NSTable size: 20
thread: 0, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[thread][maxindex].elm[i]: 3
thread: 0, i: 5, alltableelemets[thread][maxindex].elm[i]: 3
thread: 0, i: 6, alltableelemets[thread][maxindex].elm[i]: 8
thread: 0, i: 7, alltableelemets[thread][maxindex].elm[i]: 3
thread: 0, i: 8, alltableelemets[thread][maxindex].elm[i]: 4
thread: 0, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 0 2 4 3 4 5 0 0 0 0 0 0 0 
thread: 0, divisorComp: 0 0 0 0 2 1 3 1 1 0 0 0 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 1 0 2 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 , mySum: 3
thread: 1, NSTable size: 31
thread: 1, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[thread][maxindex].elm[i]: 3
thread: 1, i: 5, alltableelemets[thread][maxindex].elm[i]: 3
thread: 1, i: 6, alltableelemets[thread][maxindex].elm[i]: 8
thread: 1, i: 7, alltableelemets[thread][maxindex].elm[i]: 3
thread: 1, i: 8, alltableelemets[thread][maxindex].elm[i]: 4
thread: 1, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 0 2 4 3 4 5 0 0 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 2 1 3 1 1 0 0 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 1 0 2 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 , mySum: 3
thread: 2, maxBlockLvlSize: 2
thread: 2, maxInBlockLvlSize: 62
thread: 2, AllTableSize: 2160, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 2
thread: 0, maxInBlockLvlSize: 77
thread: 0, AllTableSize: 2880, maxSubsetsSize: 64
thread: 1, maxBlockLvlSize: 2
thread: 1, maxInBlockLvlSize: 77
thread: 1, AllTableSize: 2880, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 1 0 0 
thread: 0, allBlocks[2]: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 1 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[3]: 0 0 2 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 1 0 1 0 0 
cpuId: 3, dpoptimal: 5
copy the latest feasible solution to instance takes time: 0.051744
thread: 0, allBlocks[5]: 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[5]: 1 0 2 0 0 
cpuId: 1, dpoptimal: 9
cpuId: 2, dpoptimal: 7
copy the latest feasible solution to instance takes time: 0.475749
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.23896
copy the latest feasible solution to instance takes time: 0.247288
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 31, UB: 33
BKID: 0, LB: 31, UB: 33, OPT: 10
Dynamic Programming Runtime: 22.8388
Execution time between LB and UB is: 9
By far, all LB UB calculation runtime: 9
Iteration: 2, UB: 33, LB: 31start at time: 1503455880
thread: 0, MlBk is called with LB: 31, UB: 31
thread: 2, MlBk is called with LB: 33, UB: 33
thread: 1, MlBk is called with LB: 32, UB: 32
 thread: 0, LongJobs.size() 21
 thread: 2, LongJobs.size() 21
 thread: 1, LongJobs.size() 21
thread: 2, NSTable size: 20
thread: 2, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[thread][maxindex].elm[i]: 3
thread: 2, i: 5, alltableelemets[thread][maxindex].elm[i]: 3
thread: 2, i: 6, alltableelemets[thread][maxindex].elm[i]: 8
thread: 2, i: 7, alltableelemets[thread][maxindex].elm[i]: 3
thread: 2, i: 8, alltableelemets[thread][maxindex].elm[i]: 4
thread: 2, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 0 2 4 3 4 5 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 2 1 3 1 1 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 1 0 2 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 , mySum: 3
thread: 1, NSTable size: 20
thread: 1, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[thread][maxindex].elm[i]: 3
thread: 1, i: 5, alltableelemets[thread][maxindex].elm[i]: 3
thread: 1, i: 6, alltableelemets[thread][maxindex].elm[i]: 8
thread: 1, i: 7, alltableelemets[thread][maxindex].elm[i]: 3
thread: 1, i: 8, alltableelemets[thread][maxindex].elm[i]: 4
thread: 1, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 0 2 4 3 4 5 0 0 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 2 1 3 1 1 0 0 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 1 0 2 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 , mySum: 3
thread: 2, maxBlockLvlSize: 2
thread: 2, maxInBlockLvlSize: 77
thread: 2, AllTableSize: 2880, maxSubsetsSize: 64
thread: 1, maxBlockLvlSize: 2
thread: 1, maxInBlockLvlSize: 77
thread: 1, AllTableSize: 2880, maxSubsetsSize: 64
thread: 0, NSTable size: 32
thread: 0, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 8, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[thread][maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[thread][maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[thread][maxindex].elm[i]: 2
thread: 0, i: 12, alltableelemets[thread][maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[thread][maxindex].elm[i]: 4
thread: 0, i: 14, alltableelemets[thread][maxindex].elm[i]: 4
thread: 0, i: 15, alltableelemets[thread][maxindex].elm[i]: 7

thread: 0, blockDimSizeComp: 0 0 0 0 0 0 0 0 0 2 3 3 2 5 5 4 
thread: 0, divisorComp: 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 2 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
thread: 0, largestNoZeroBlockVec: 0 0 0 0 0 0 1 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
thread: 0, maxBlockLvlSize: 1
thread: 0, maxInBlockLvlSize: 512
thread: 0, AllTableSize: 7200, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 0 1 
cpuId: 0, gpu thread: 81, j: 183, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 6, it's NS: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 5
elm offset: 3636, myOPT: 5, optOffset: 11712, optVecIndex: 1, indexomp: 102, ii: 4, blockLvl: 1, blockIDInLvl: 0, dev_counterVec[140]: 0
cpuId: 0, gpu thread: 81, j: 183, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 6, it's NS: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 6
elm offset: 3667, myOPT: 6, optOffset: 11712, optVecIndex: 2, indexomp: 102, ii: 4, blockLvl: 1, blockIDInLvl: 0, dev_counterVec[140]: 0
cpuId: 0, gpu thread: 81, j: 183, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 6, it's NS: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 5
elm offset: 3626, myOPT: 5, optOffset: 11712, optVecIndex: 3, indexomp: 102, ii: 4, blockLvl: 1, blockIDInLvl: 0, dev_counterVec[140]: 0
cpuId: 0, gpu thread: 81, j: 183, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 6, it's NS: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6
elm offset: 3616, myOPT: 6, optOffset: 11712, optVecIndex: 4, indexomp: 102, ii: 4, blockLvl: 1, blockIDInLvl: 0, dev_counterVec[140]: 0
cpuId: 0, gpu thread: 18, j: 260, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 7, it's NS: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 6
elm offset: 3783, myOPT: 6, optOffset: 16640, optVecIndex: 1, indexomp: 242, ii: 5, blockLvl: 1, blockIDInLvl: 0, dev_counterVec[240]: 0
cpuId: 0, gpu thread: 18, j: 260, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 7, it's NS: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 7
elm offset: 3742, myOPT: 7, optOffset: 16640, optVecIndex: 2, indexomp: 242, ii: 5, blockLvl: 1, blockIDInLvl: 0, dev_counterVec[240]: 0
cpuId: 0, gpu thread: 18, j: 260, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 7, it's NS: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 6
elm offset: 3667, myOPT: 6, optOffset: 16640, optVecIndex: 3, indexomp: 242, ii: 5, blockLvl: 1, blockIDInLvl: 0, dev_counterVec[240]: 0
cpuId: 0, gpu thread: 18, j: 260, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 7, it's NS: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 7
elm offset: 3669, myOPT: 7, optOffset: 16640, optVecIndex: 4, indexomp: 242, ii: 5, blockLvl: 1, blockIDInLvl: 0, dev_counterVec[240]: 0
cpuId: 2, dpoptimal: 10
cpuId: 1, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.489154
copy the latest feasible solution to instance takes time: 0.510655
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 2e-06
BKID: 0, LB: 32, UB: 32, OPT: 11
Dynamic Programming Runtime: 72.9483
Execution time between LB and UB is: 35
By far, all LB UB calculation runtime: 44
********************************************************
Total execution on UB and LB is: 44
OUT of Bk while loop  
UB    32
LB    32
T1    31
T2    32
OPT   11
nMachines   10
AllProbData.size()    2
ck :   1
AllProbData[ck].Ttable    32
ck :   0
AllProbData[ck].Ttable    33
Final OptimalSchedule
FinalMakespan34
Main Scheduling is Done
File 1-4 is Done.
******************************
Reading File...
File 1-5 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 48, LB: 30start at time: 1503455915
thread: 2, MlBk is called with LB: 38, UB: 41
thread: 1, MlBk is called with LB: 34, UB: 37
 thread: 2, LongJobs.size() 21
thread: 3, MlBk is called with LB: 42, UB: 48
 thread: 1, LongJobs.size() 21
 thread: 3, LongJobs.size() 18
thread: 0, MlBk is called with LB: 30, UB: 33
 thread: 0, LongJobs.size() 21
thread: 3, NSTable size: 23
thread: 3, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 5, alltableelemets[thread][maxindex].elm[i]: 7
thread: 3, i: 6, alltableelemets[thread][maxindex].elm[i]: 2
thread: 3, i: 7, alltableelemets[thread][maxindex].elm[i]: 7
thread: 3, i: 8, alltableelemets[thread][maxindex].elm[i]: 2
thread: 3, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 0 0 4 3 4 3 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 0 0 2 1 2 1 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 1 0 1 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
thread: 3, maxBlockLvlSize: 2
thread: 3, maxInBlockLvlSize: 28
thread: 3, AllTableSize: 576, maxSubsetsSize: 64
thread: 2, NSTable size: 31
thread: 2, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[thread][maxindex].elm[i]: 3
thread: 2, i: 5, alltableelemets[thread][maxindex].elm[i]: 7
thread: 2, i: 6, alltableelemets[thread][maxindex].elm[i]: 2
thread: 2, i: 7, alltableelemets[thread][maxindex].elm[i]: 7
thread: 2, i: 8, alltableelemets[thread][maxindex].elm[i]: 2
thread: 2, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 0 2 4 3 4 3 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 2 2 1 2 1 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 1 1 0 1 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 1 1 0 1 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 1 0 0 0 0 0 0 0 0 , mySum: 3
thread: 1, NSTable size: 23
thread: 1, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[thread][maxindex].elm[i]: 3
thread: 1, i: 5, alltableelemets[thread][maxindex].elm[i]: 7
thread: 1, i: 6, alltableelemets[thread][maxindex].elm[i]: 2
thread: 1, i: 7, alltableelemets[thread][maxindex].elm[i]: 7
thread: 1, i: 8, alltableelemets[thread][maxindex].elm[i]: 2
thread: 1, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 0 2 4 3 4 3 0 0 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 2 2 1 2 1 0 0 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 1 1 0 1 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 1 1 0 1 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 1 0 0 0 0 0 0 0 0 , mySum: 3
thread: 0, NSTable size: 30
thread: 0, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 8, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[thread][maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[thread][maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[thread][maxindex].elm[i]: 6
thread: 0, i: 12, alltableelemets[thread][maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[thread][maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[thread][maxindex].elm[i]: 1
thread: 0, i: 15, alltableelemets[thread][maxindex].elm[i]: 9

thread: 0, blockDimSizeComp: 0 0 0 0 0 0 0 0 0 2 3 7 2 2 2 5 
thread: 0, divisorComp: 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 2 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
thread: 0, largestNoZeroBlockVec: 0 0 0 0 0 0 1 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
thread: 2, maxBlockLvlSize: 3
thread: 2, maxInBlockLvlSize: 53
thread: 2, AllTableSize: 2304, maxSubsetsSize: 64
thread: 1, maxBlockLvlSize: 3
thread: 1, maxInBlockLvlSize: 53
thread: 1, AllTableSize: 2304, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 1
thread: 0, maxInBlockLvlSize: 226
thread: 0, AllTableSize: 3360, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 0 1 
cpuId: 0, gpu thread: 17, j: 49, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 6, it's NS: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 5
elm offset: 1709, myOPT: 5, optOffset: 3136, optVecIndex: 1, indexomp: 32, ii: 3, blockLvl: 1, blockIDInLvl: 0, dev_counterVec[55]: 0
cpuId: 0, gpu thread: 17, j: 49, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 6, it's NS: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 6
elm offset: 1707, myOPT: 6, optOffset: 3136, optVecIndex: 2, indexomp: 32, ii: 3, blockLvl: 1, blockIDInLvl: 0, dev_counterVec[55]: 0
cpuId: 0, gpu thread: 17, j: 49, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 6, it's NS: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 5
elm offset: 1683, myOPT: 5, optOffset: 3136, optVecIndex: 3, indexomp: 32, ii: 3, blockLvl: 1, blockIDInLvl: 0, dev_counterVec[55]: 0
cpuId: 0, gpu thread: 17, j: 49, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 6, it's NS: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6
elm offset: 1681, myOPT: 6, optOffset: 3136, optVecIndex: 4, indexomp: 32, ii: 3, blockLvl: 1, blockIDInLvl: 0, dev_counterVec[55]: 0
cpuId: 0, gpu thread: 7, j: 94, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 7, it's NS: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 6
elm offset: 1729, myOPT: 6, optOffset: 6016, optVecIndex: 1, indexomp: 87, ii: 4, blockLvl: 1, blockIDInLvl: 0, dev_counterVec[97]: 0
cpuId: 0, gpu thread: 7, j: 94, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 7, it's NS: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 7
elm offset: 1754, myOPT: 7, optOffset: 6016, optVecIndex: 2, indexomp: 87, ii: 4, blockLvl: 1, blockIDInLvl: 0, dev_counterVec[97]: 0
cpuId: 0, gpu thread: 7, j: 94, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 7, it's NS: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 6
elm offset: 1707, myOPT: 6, optOffset: 6016, optVecIndex: 3, indexomp: 87, ii: 4, blockLvl: 1, blockIDInLvl: 0, dev_counterVec[97]: 0
cpuId: 0, gpu thread: 7, j: 94, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 7, it's NS: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 7
elm offset: 1703, myOPT: 7, optOffset: 6016, optVecIndex: 4, indexomp: 87, ii: 4, blockLvl: 1, blockIDInLvl: 0, dev_counterVec[97]: 0
cpuId: 0, gpu thread: 70, j: 254, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 8, it's NS: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 7
elm offset: 1774, myOPT: 7, optOffset: 16256, optVecIndex: 1, indexomp: 184, ii: 5, blockLvl: 1, blockIDInLvl: 0, dev_counterVec[143]: 0
cpuId: 0, gpu thread: 70, j: 254, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 8, it's NS: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 8
elm offset: 1769, myOPT: 8, optOffset: 16256, optVecIndex: 2, indexomp: 184, ii: 5, blockLvl: 1, blockIDInLvl: 0, dev_counterVec[143]: 0
cpuId: 0, gpu thread: 70, j: 254, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 8, it's NS: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 7
elm offset: 1754, myOPT: 7, optOffset: 16256, optVecIndex: 3, indexomp: 184, ii: 5, blockLvl: 1, blockIDInLvl: 0, dev_counterVec[143]: 0
cpuId: 0, gpu thread: 70, j: 254, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 8, it's NS: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 8
elm offset: 1756, myOPT: 8, optOffset: 16256, optVecIndex: 4, indexomp: 184, ii: 5, blockLvl: 1, blockIDInLvl: 0, dev_counterVec[143]: 0
cpuId: 3, dpoptimal: 6
copy the latest feasible solution to instance takes time: 0.090137
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 5e-06
cpuId: 1, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.252801
cpuId: 2, dpoptimal: 8
copy the latest feasible solution to instance takes time: 0.124582
Thread: 0 has dirc: 1 -1 -1 -1
Pick seg 1 for next iteration where LB: 32, UB: 35
BKID: 0, LB: 32, UB: 35, OPT: 9
Dynamic Programming Runtime: 36.6772
Execution time between LB and UB is: 16
By far, all LB UB calculation runtime: 16
Iteration: 2, UB: 35, LB: 32start at time: 1503455931
thread: 0, MlBk is called with LB: 32, UB: 32
thread: thread: 32, MlBk is called with LB: , MlBk is called with LB: 3534thread: , UB: , UB: 35341, MlBk is called with LB: 
33, UB: 
33
 thread: 3, LongJobs.size() 21
thread: 3, NSTable size: 23
thread: 3, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[thread][maxindex].elm[i]: 3
thread: 3, i: 5, alltableelemets[thread][maxindex].elm[i]: 7
thread: 3, i: 6, alltableelemets[thread][maxindex].elm[i]: 2
thread: 3, i: 7, alltableelemets[thread][maxindex].elm[i]: 7
thread: 3, i: 8, alltableelemets[thread][maxindex].elm[i]: 2
thread: 3, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 0 2 4 3 4 3 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 0 2 2 1 2 1 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 1 1 0 1 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 1 1 0 1 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 1 0 0 0 0 0 0 0 0 , mySum: 3
 thread: 0, LongJobs.size() 21
 thread: 1, LongJobs.size() 21
 thread: 2, LongJobs.size() 21
thread: 3, maxBlockLvlSize: 3
thread: 3, maxInBlockLvlSize: 53
thread: 3, AllTableSize: 2304, maxSubsetsSize: 64
thread: 2, NSTable size: 23
thread: 2, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[thread][maxindex].elm[i]: 3
thread: 2, i: 5, alltableelemets[thread][maxindex].elm[i]: 7
thread: 2, i: 6, alltableelemets[thread][maxindex].elm[i]: 2
thread: 2, i: 7, alltableelemets[thread][maxindex].elm[i]: 7
thread: 2, i: 8, alltableelemets[thread][maxindex].elm[i]: 2
thread: 2, i: 9, alltableelemets[thread][maxindex].elm[i]: 0thread: 1
thread: 2, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
, NSTable size: thread: 2, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[thread][maxindex].elm[i]: 0
20
thread: 
1thread: 2, blockDimSizeComp: 0 0 0 0 2 4 3, i: 0, alltableelemets[thread][maxindex].elm[i]: 0 
4 thread: 1, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[thread][maxindex].elm[i]: 3
thread: 1, i: 5, alltableelemets[thread][maxindex].elm[i]: 7
thread: 1, i: 6, alltableelemets[thread][maxindex].elm[i]: 2
thread: 1, i: 7, alltableelemets[thread][maxindex].elm[i]: 7
thread: 1, i: 8, alltableelemets[thread][maxindex].elm[i]: 2
3thread: 1, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
 thread: 1, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[thread][maxindex].elm[i]: 0
0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 2 2 1 2 1 0 0 0 0 0 0 0 

thread: 2, largestBlockVec: 0 0 0 0 1thread: 1, blockDimSizeComp: 0 0 0 0 2 4 3 1 0  41  30  00  00 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 2 2 1 2 1 0 0 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 1  1 0 10  00  0 0 0 
thread: 2, largestNoZeroBlockVec: 1 1 00 1  0 
0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 1 1 0 1 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 thread: 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 01 0 0, allBlocks:  00  00 0  00  0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 00
 0 0 0 0 0 0 0 1 0 0 00 0 0  00  , mySum: 01
0 0 0 0 0 1 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0  10  00  00 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 1  0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 00 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 1 0 0 0 0  00 0  0 00 0 0 0 , mySum: 2
0 0 0 0 1 1 0 0 0 0 0  0 0 00 0  00  , mySum: 2, mySum: 
0 0 0 0 1 1 0 1 02 0 0 0 0 0 0 0 , mySum: 3

0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 1 0 0 0 0 0 0 0 0 , mySum: 3
thread: 0, NSTable size: 20
thread: 0, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[thread][maxindex].elm[i]: 3
thread: 0, i: 5, alltableelemets[thread][maxindex].elm[i]: 7
thread: 0, i: 6, alltableelemets[thread][maxindex].elm[i]: 2
thread: 0, i: 7, alltableelemets[thread][maxindex].elm[i]: 7
thread: 0, i: 8, alltableelemets[thread][maxindex].elm[i]: 2
thread: 0, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 0 2 4 3 4 3 0 0 0 0 0 0 0 
thread: 0, divisorComp: 0 0 0 0 2 2 1 2 1 0 0 0 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 1 1 0 1 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 1 1 0 1 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 1 0 0 0 0 0 0 0 0 , mySum: 3
thread: 2, maxBlockLvlSize: 3
thread: 2, maxInBlockLvlSize: 53
thread: 2, AllTableSize: 2304, maxSubsetsSize: 64
thread: 1, maxBlockLvlSize: 3
thread: 1, maxInBlockLvlSize: 53
thread: 1, AllTableSize: 2304, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 3
thread: 0, maxInBlockLvlSize: 53
thread: 0, AllTableSize: 2304, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 1 0 
thread: 0, allBlocks[2]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 1 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 1 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 1 0 1 0 
thread: 0, allBlocks[5]: 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 1 0 0 1 0 
thread: 0, allBlocks[6]: 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 1 1 0 0 0 
thread: 0, allBlocks[7]: 0 0 0 0 1 1 0 1 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[7]: 1 1 0 1 0 
cpuId: 1, dpoptimal: 10
cpuId: 3, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.548311
cpuId: 0, dpoptimal: 10
cpuId: 2, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.441821
copy the latest feasible solution to instance takes time: 0.367662
copy the latest feasible solution to instance takes time: 0.327696
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 32, UB: 32
BKID: 0, LB: 32, UB: 32, OPT: 10
Dynamic Programming Runtime: 12.744
Execution time between LB and UB is: 4
By far, all LB UB calculation runtime: 20
********************************************************
Total execution on UB and LB is: 20
OUT of Bk while loop  
UB    32
LB    32
T1    32
T2    32
OPT   10
nMachines   10
AllProbData.size()    2
ck :   1
AllProbData[ck].Ttable    32
ck :   0
AllProbData[ck].Ttable    35
Final OptimalSchedule
FinalMakespan34
Main Scheduling is Done
File 1-5 is Done.
******************************
Reading File...
File 1-6 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 50, LB: 31start at time: 1503455935
thread: 3, MlBk is called with LB: 46, UB: 50
 thread: 3, LongJobs.size() thread: 15
thread: 2, MlBk is called with LB: 41, UB: 45
 thread: 2, LongJobs.size() 18
1, MlBk is called with LB: 36, UB: 40
 thread: 1, LongJobs.size() 21
thread: 3, NSTable size: 17
thread: 3, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[thread][maxindex].elm[i]: 3
thread: 3, i: 4, alltableelemets[thread][maxindex].elm[i]: 8
thread: 3, i: 5, alltableelemets[thread][maxindex].elm[i]: 4
thread: 3, i: 6, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 7, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 8, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 2 3 5 0 0 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 2 3 1 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 1 2 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
thread: 3, maxBlockLvlSize: 2
thread: 3, maxInBlockLvlSize: 6
thread: 3, AllTableSize: 180, maxSubsetsSize: 64
thread: 2, NSTable size: 21
thread: 0, MlBk is called with LB: 31, UB: 35
thread: 2, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[thread][maxindex].elm[i]: 5
thread: 2, i:  thread: 0, LongJobs.size() 21
6, alltableelemets[thread][maxindex].elm[i]: 4
thread: 2, i: 7, alltableelemets[thread][maxindex].elm[i]: 5
thread: 2, i: 8, alltableelemets[thread][maxindex].elm[i]: 4
thread: 2, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 0 0 3 5 3 5 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 0 2 1 2 1 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 1 0 1 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
thread: 2, maxBlockLvlSize: 2
thread: 2, maxInBlockLvlSize: 37
thread: 2, AllTableSize: 900, maxSubsetsSize: 64
thread: 1, NSTable size: 31
thread: 1, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[thread][maxindex].elm[i]: 3
thread: 1, i: 5, alltableelemets[thread][maxindex].elm[i]: 5
thread: 1, i: 6, alltableelemets[thread][maxindex].elm[i]: 4
thread: 1, i: 7, alltableelemets[thread][maxindex].elm[i]: 5
thread: 1, i: 8, alltableelemets[thread][maxindex].elm[i]: 4
thread: 1, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 0 4 3 5 3 5 0 0 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 1 2 1 2 1 0 0 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 1 0 1 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
thread: 0, NSTable size: 20
thread: 0, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[thread][maxindex].elm[i]: 3
thread: 0, i: 5, alltableelemets[thread][maxindex].elm[i]: 5
thread: 0, i: 6, alltableelemets[thread][maxindex].elm[i]: 4
thread: 0, i: 7, alltableelemets[thread][maxindex].elm[i]: 5
thread: 0, i: 8, alltableelemets[thread][maxindex].elm[i]: 4
thread: 0, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 0 4 3 5 3 5 0 0 0 0 0 0 0 
thread: 0, divisorComp: 0 0 0 0 1 2 1 2 1 0 0 0 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 1 0 1 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
thread: 1, maxBlockLvlSize: 2
thread: 1, maxInBlockLvlSize: 132
thread: 1, AllTableSize: 3600, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 2
thread: 0, maxInBlockLvlSize: 132
thread: 0, AllTableSize: 3600, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 1 0 
thread: 0, allBlocks[2]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 1 0 0 0 
cpuId: 3, dpoptimal: 5
copy the latest feasible solution to instance takes time: 0.035466
thread: 0, allBlocks[3]: 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[3]: 0 1 0 1 0 
cpuId: 2, dpoptimal: 7
copy the latest feasible solution to instance takes time: 0.14448
cpuId: 1, dpoptimal: 9
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.424131
copy the latest feasible solution to instance takes time: 0.380638
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 31, UB: 33
BKID: 0, LB: 31, UB: 33, OPT: 10
Dynamic Programming Runtime: 28.5644
Execution time between LB and UB is: 14
By far, all LB UB calculation runtime: 14
Iteration: 2, UB: 33, LB: 31start at time: 1503455949
thread: 0, MlBk is called with LB: 31, UB: 31
thread: 2, MlBk is called with LB: 33, UB: 33
thread: 1, MlBk is called with LB: 32, UB: 32
 thread: 2, LongJobs.size() 21
thread: 2, NSTable size: 20
thread: 2, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[thread][maxindex].elm[i]: 3
thread: 2, i: 5, alltableelemets[thread][maxindex].elm[i]: 5
thread: 2, i: 6, alltableelemets[thread][maxindex].elm[i]: 4
thread: 2, i: 7, alltableelemets[thread][maxindex].elm[i]: 5
thread: 2, i: 8, alltableelemets[thread][maxindex].elm[i]: 4
thread: 2, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 0 4 3 5 3 5 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 1 2 1 2 1 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 1 0 1 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
 thread: 0, LongJobs.size() 21
 thread: 1, LongJobs.size() 21
thread: 2, maxBlockLvlSize: 2
thread: 2, maxInBlockLvlSize: 132
thread: 2, AllTableSize: 3600, maxSubsetsSize: 64
thread: 1, NSTable size: 20
thread: 1, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[thread][maxindex].elm[i]: 3
thread: 1, i: 5, alltableelemets[thread][maxindex].elm[i]: 5
thread: 1, i: 6, alltableelemets[thread][maxindex].elm[i]: 4
thread: 1, i: 7, alltableelemets[thread][maxindex].elm[i]: 5
thread: 1, i: 8, alltableelemets[thread][maxindex].elm[i]: 4
thread: 1, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 0 4 3 5 3 5 0 0 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 1 2 1 2 1 0 0 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 1 0 1 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
thread: 0, NSTable size: 26
thread: 0, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 8, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[thread][maxindex].elm[i]: 3
thread: 0, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[thread][maxindex].elm[i]: 3
thread: 0, i: 12, alltableelemets[thread][maxindex].elm[i]: 2
thread: 0, i: 13, alltableelemets[thread][maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[thread][maxindex].elm[i]: 3
thread: 0, i: 15, alltableelemets[thread][maxindex].elm[i]: 9

thread: 0, blockDimSizeComp: 0 0 0 0 0 0 0 0 0 2 0 2 3 2 4 5 
thread: 0, divisorComp: 0 0 0 0 0 0 0 0 0 2 0 2 1 1 1 2 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 
thread: 0, largestNoZeroBlockVec: 1 1 0 0 0 1 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 , mySum: 3
thread: 1, maxBlockLvlSize: 2
thread: 1, maxInBlockLvlSize: 132
thread: 1, AllTableSize: 3600, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 3
thread: 0, maxInBlockLvlSize: 84
thread: 0, AllTableSize: 3840, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 1 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 1 0 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 mySum: 2
thread: 0, blockNoZero[4]: 0 1 0 0 0 1 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[5]: 1 0 0 0 0 1 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 1 1 0 0 0 0 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 mySum: 3
thread: 0, blockNoZero[7]: 1 1 0 0 0 1 
cpuId: 2, dpoptimal: 10
cpuId: 1, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.642726
copy the latest feasible solution to instance takes time: 0.655177
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.206764
BKID: 0, LB: 31, UB: 31, OPT: 10
Dynamic Programming Runtime: 22.0784
Execution time between LB and UB is: 8
By far, all LB UB calculation runtime: 22
********************************************************
Total execution on UB and LB is: 22
OUT of Bk while loop  
UB    31
LB    31
T1    31
T2    31
OPT   10
nMachines   10
AllProbData.size()    2
ck :   1
AllProbData[ck].Ttable    31
ck :   0
AllProbData[ck].Ttable    33
Final OptimalSchedule
FinalMakespan33
Main Scheduling is Done
File 1-6 is Done.
******************************
Reading File...
File 1-7 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 49, LB: 30start at time: 1503455957
thread: 2, MlBk is called with LB: 40, UB: 44
thread: thread: 0, MlBk is called with LB: 30, UB: 343, MlBk is called with LB: 45
, UB: 49 thread: 2
, LongJobs.size() 18
thread: 1, MlBk is called with LB: 35, UB: 39
 thread: 1, LongJobs.size() 21
 thread: 3, LongJobs.size() 16
thread: 3, NSTable size: 27
thread: 3, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 5, alltableelemets[thread][maxindex].elm[i]: 3
thread: 3, i: 6, alltableelemets[thread][maxindex].elm[i]: 5
thread: 3, i: 7, alltableelemets[thread][maxindex].elm[i]: 5
thread: 3, i: 8, alltableelemets[thread][maxindex].elm[i]: 3
thread: 3, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 0 0 2 3 3 4 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 0 0 2 2 2 1 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 1 1 1 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 , mySum: 3
thread: 2, NSTable size: 39
thread: 2, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[thread][maxindex].elm[i]: 2
thread: 2, i: 5, alltableelemets[thread][maxindex].elm[i]: 3
thread: 2, i: 6, alltableelemets[thread][maxindex].elm[i]: 5
thread: 2, i: 7, alltableelemets[thread][maxindex].elm[i]: 5
thread: 2, i: 8, alltableelemets[thread][maxindex].elm[i]: 3
thread: 2, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 0 3 2 3 3 4 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 1 2 2 2 1 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 1 1 1 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 , mySum: 3
thread: 3, maxBlockLvlSize: 3
thread: 3, maxInBlockLvlSize: 16
thread: 3, AllTableSize: 576, maxSubsetsSize: 64
 thread: 0, LongJobs.size() 21
thread: 1, NSTable size: 27
thread: 1, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[thread][maxindex].elm[i]: 5
thread: 1, i: 5, alltableelemets[thread][maxindex].elm[i]: 3
thread: 1, i: 6, alltableelemets[thread][maxindex].elm[i]: 5
thread: 1, i: 7, alltableelemets[thread][maxindex].elm[i]: 5
thread: 1, i: 8, alltableelemets[thread][maxindex].elm[i]: 3
thread: 1, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 0 3 4 3 3 4 0 0 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 2 1 2 2 1 0 0 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 1 0 1 1 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 , mySum: 3
thread: 2, maxBlockLvlSize: 3
thread: 2, maxInBlockLvlSize: 44
thread: 2, AllTableSize: 1728, maxSubsetsSize: 64
thread: 0, NSTable size: 20
thread: 0, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[thread][maxindex].elm[i]: 5
thread: 0, i: 5, alltableelemets[thread][maxindex].elm[i]: 3
thread: 0, i: 6, alltableelemets[thread][maxindex].elm[i]: 5
thread: 0, i: 7, alltableelemets[thread][maxindex].elm[i]: 5
thread: 0, i: 8, alltableelemets[thread][maxindex].elm[i]: 3
thread: 0, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 0 3 4 3 3 4 0 0 0 0 0 0 0 
thread: 0, divisorComp: 0 0 0 0 2 1 2 2 1 0 0 0 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 1 0 1 1 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 , mySum: 3
thread: 1, maxBlockLvlSize: 3
thread: 1, maxInBlockLvlSize: 78
thread: 1, AllTableSize: 3456, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 3
thread: 0, maxInBlockLvlSize: 78
thread: 0, AllTableSize: 3456, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 1 0 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 1 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 1 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 1 1 0 
thread: 0, allBlocks[5]: 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 1 0 0 1 0 
thread: 0, allBlocks[6]: 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 1 0 1 0 0 
cpuId: 3, dpoptimal: 6
copy the latest feasible solution to instance takes time: 0.116798
thread: 0, allBlocks[7]: 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[7]: 1 0 1 1 0 
cpuId: 1, dpoptimal: 9
cpuId: 2, dpoptimal: 7
copy the latest feasible solution to instance takes time: 0.595352
copy the latest feasible solution to instance takes time: 0.241385
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.18155
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 30, UB: 32
BKID: 0, LB: 30, UB: 32, OPT: 10
Dynamic Programming Runtime: 20.6362
Execution time between LB and UB is: 8
By far, all LB UB calculation runtime: 8
Iteration: 2, UB: 32, LB: 30start at time: 1503455965
thread: thread: 0, MlBk is called with LB: 30, UB: 301, MlBk is called with LB: 31, UB: 31

thread: 2, MlBk is called with LB: 32, UB: 32
 thread: 2, LongJobs.size() 21
 thread: 0, LongJobs.size() 21
thread: 2, NSTable size: 20
thread: 2, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[thread][maxindex].elm[i]: 5
thread: 2, i: 5, alltableelemets[thread][maxindex].elm[i]: 3
thread: 2, i: 6, alltableelemets[thread][maxindex].elm[i]: 5
thread: 2, i: 7, alltableelemets[thread][maxindex].elm[i]: 5
thread: 2, i: 8, alltableelemets[thread][maxindex].elm[i]: 3
thread: 2, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 0 3 4 3 3 4 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 2 1 2 2 1 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 1 0 1 1 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 , mySum: 3
 thread: 1, LongJobs.size() 21
thread: 2, maxBlockLvlSize: 3
thread: 2, maxInBlockLvlSize: 78
thread: 2, AllTableSize: 3456, maxSubsetsSize: 64
thread: 0, NSTable size: 32
thread: 0, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 8, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[thread][maxindex].elm[i]: 3
thread: 0, i: 10, alltableelemets[thread][maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[thread][maxindex].elm[i]: 2
thread: 0, i: 12, alltableelemets[thread][maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[thread][maxindex].elm[i]: 4
thread: 0, i: 14, alltableelemets[thread][maxindex].elm[i]: 1
thread: 0, i: 15, alltableelemets[thread][maxindex].elm[i]: 8
thread: 1, NSTable size: 34
thread: 1, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 7, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 8, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 9, alltableelemets[thread][maxindex].elm[i]: 3
thread: 1, i: 10, alltableelemets[thread][maxindex].elm[i]: 2
thread: 1, i: 11, alltableelemets[thread][maxindex].elm[i]: 2
thread: 1, i: 12, alltableelemets[thread][maxindex].elm[i]: 1
thread: 1, i: 13, alltableelemets[thread][maxindex].elm[i]: 4
thread: 1, i: 14, alltableelemets[thread][maxindex].elm[i]: 1
thread: 1, i: 15, alltableelemets[thread][maxindex].elm[i]: 8

thread: 0, blockDimSizeComp: 0 0 
0thread: 1, blockDimSizeComp: 0 0 0 0 0 0 0 0 0 2 3 3 2 5 2 3 
thread: 1, divisorComp: 0 0 0 0 0 0 0 0 0 2 1 1 1 1  1 03  
0thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0  00  01  0 0 02  30 3  02  5 02  03 2  
thread: 1, largestNoZeroBlockVec: 1 0 0 0 0 0 
2 
thread: 0, divisorComp: 0 0 0 0 0 0 0 0 0 2 1 1 1 1 1 3 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 2 
thread: 0, largestNoZeroBlockVec: 1 0 0 0 0 0 2 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0  0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 , mySum: 20
0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 2 , mySum: 3
 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 2 , mySum: 3
thread: 1, maxBlockLvlSize: 2
thread: 1, maxInBlockLvlSize: 184
thread: 1, AllTableSize: 6480, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 2
thread: 0, maxInBlockLvlSize: 184
thread: 0, AllTableSize: 6480, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 1 0 0 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 mySum: 2
thread: 0, blockNoZero[3]: 0 0 0 0 0 0 2 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[4]: 1 0 0 0 0 0 1 
cpuId: 0, gpu thread: 15, j: 23, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 6, it's NS: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 5
elm offset: 1178, myOPT: 5, optOffset: 1472, optVecIndex: 1, indexomp: 8, ii: 2, blockLvl: 2, blockIDInLvl: 0, dev_counterVec[25]: 0
cpuId: 0, gpu thread: 15, j: 23, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 6, it's NS: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 6
elm offset: 2163, myOPT: 6, optOffset: 1472, optVecIndex: 2, indexomp: 8, ii: 2, blockLvl: 2, blockIDInLvl: 0, dev_counterVec[25]: 0
cpuId: 0, gpu thread: 15, j: 23, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 6, it's NS: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 5
elm offset: 1164, myOPT: 5, optOffset: 1472, optVecIndex: 3, indexomp: 8, ii: 2, blockLvl: 2, blockIDInLvl: 0, dev_counterVec[25]: 0
cpuId: 0, gpu thread: 15, j: 23, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 6, it's NS: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6
elm offset: 2160, myOPT: 6, optOffset: 1472, optVecIndex: 4, indexomp: 8, ii: 2, blockLvl: 2, blockIDInLvl: 0, dev_counterVec[25]: 0
cpuId: 0, gpu thread: 26, j: 59, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 7, it's NS: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 6
elm offset: 2183, myOPT: 6, optOffset: 3776, optVecIndex: 1, indexomp: 33, ii: 3, blockLvl: 2, blockIDInLvl: 0, dev_counterVec[60]: 0
cpuId: 0, gpu thread: 26, j: 59, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 7, it's NS: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 7
elm offset: 2178, myOPT: 7, optOffset: 3776, optVecIndex: 2, indexomp: 33, ii: 3, blockLvl: 2, blockIDInLvl: 0, dev_counterVec[60]: 0
cpuId: 0, gpu thread: 26, j: 59, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 7, it's NS: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 6
elm offset: 2163, myOPT: 6, optOffset: 3776, optVecIndex: 3, indexomp: 33, ii: 3, blockLvl: 2, blockIDInLvl: 0, dev_counterVec[60]: 0
cpuId: 0, gpu thread: 26, j: 59, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 7, it's NS: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 7
elm offset: 2161, myOPT: 7, optOffset: 3776, optVecIndex: 4, indexomp: 33, ii: 3, blockLvl: 2, blockIDInLvl: 0, dev_counterVec[60]: 0
cpuId: 0, gpu thread: 5, j: 98, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 8, it's NS: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 7
elm offset: 2219, myOPT: 7, optOffset: 6272, optVecIndex: 1, indexomp: 93, ii: 4, blockLvl: 2, blockIDInLvl: 0, dev_counterVec[108]: 0
cpuId: 0, gpu thread: 5, j: 98, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 8, it's NS: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 8
elm offset: 2244, myOPT: 8, optOffset: 6272, optVecIndex: 2, indexomp: 93, ii: 4, blockLvl: 2, blockIDInLvl: 0, dev_counterVec[108]: 0
cpuId: 0, gpu thread: 5, j: 98, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 8, it's NS: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 7
elm offset: 2178, myOPT: 7, optOffset: 6272, optVecIndex: 3, indexomp: 93, ii: 4, blockLvl: 2, blockIDInLvl: 0, dev_counterVec[108]: 0
cpuId: 0, gpu thread: 5, j: 98, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 8, it's NS: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 8
elm offset: 2184, myOPT: 8, optOffset: 6272, optVecIndex: 4, indexomp: 93, ii: 4, blockLvl: 2, blockIDInLvl: 0, dev_counterVec[108]: 0
thread: 0, allBlocks[5]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 2 mySum: 3
thread: 0, blockNoZero[5]: 1 0 0 0 0 0 2 
cpuId: 2, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.630114
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.773098
cpuId: 1, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.356864
BKID: 0, LB: 30, UB: 30, OPT: 10
Dynamic Programming Runtime: 65.4623
Execution time between LB and UB is: 30
By far, all LB UB calculation runtime: 38
********************************************************
Total execution on UB and LB is: 38
OUT of Bk while loop  
UB    30
LB    30
T1    30
T2    30
OPT   10
nMachines   10
AllProbData.size()    2
ck :   1
AllProbData[ck].Ttable    30
ck :   0
AllProbData[ck].Ttable    32
Final OptimalSchedule
FinalMakespan31
Main Scheduling is Done
File 1-7 is Done.
******************************
Reading File...
File 1-8 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 49, LB: 30start at time: 1503455995
thread: 1, MlBk is called with LB: 35, UB: 39
thread: 2, MlBk is called with LB: 40, UB: 44
 thread: 1, LongJobs.size() 21
thread:  thread: 2, LongJobs.size() 19
3, MlBk is called with LB: 45, UB: 49
thread: 0, MlBk is called with LB: 30, UB: 34
 thread: 0, LongJobs.size() 21
 thread: 3, LongJobs.size() 17
thread: 2, NSTable size: 39
thread: 2, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[thread][maxindex].elm[i]: 2
thread: 2, i: 5, alltableelemets[thread][maxindex].elm[i]: 6
thread: 2, i: 6, alltableelemets[thread][maxindex].elm[i]: 6
thread: 2, i: 7, alltableelemets[thread][maxindex].elm[i]: 2
thread: 2, i: 8, alltableelemets[thread][maxindex].elm[i]: 3
thread: 2, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 0 3 7 7 3 2 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 1 1 1 1 2 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 0 0 1 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
thread: 3, NSTable size: 27
thread: 3, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 5, alltableelemets[thread][maxindex].elm[i]: 6
thread: 3, i: 6, alltableelemets[thread][maxindex].elm[i]: 6
thread: 3, i: 7, alltableelemets[thread][maxindex].elm[i]: 2
thread: 3, i: 8, alltableelemets[thread][maxindex].elm[i]: 3
thread: 3, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 0 0 7 7 3 2 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 0 0 1 1 1 2 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 0 0 1 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
thread: 3, maxBlockLvlSize: 1
thread: 3, maxInBlockLvlSize: 37
thread: 3, AllTableSize: 588, maxSubsetsSize: 64
thread: 1, NSTable size: 27
thread: 1, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[thread][maxindex].elm[i]: 4
thread: 1, i: 5, alltableelemets[thread][maxindex].elm[i]: 6
thread: 1, i: 6, alltableelemets[thread][maxindex].elm[i]: 6
thread: 1, i: 7, alltableelemets[thread][maxindex].elm[i]: 2
thread: 1, i: 8, alltableelemets[thread][maxindex].elm[i]: 3
thread: 1, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: thread: 1, i: 013, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[thread][maxindex].elm[i]: 0
, NSTable size: 20

thread: thread: 1, blockDimSizeComp: 0 0 0 0 5 7 7 3 4 0 0 00 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 1, i:  1 1 1 1 0 0 0 0 0 0 0 
0, alltableelemets[thread][maxindex].elm[i]: 0
thread: thread: 0, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
1thread: , largestBlockVec: 0, i: 02 , alltableelemets[thread][maxindex].elm[i]: 00
thread: 0, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[thread][maxindex].elm[i]: 4
 thread: 0, i: 05, alltableelemets[thread][maxindex].elm[i]:  60
 0thread: 0, i: 6, alltableelemets[thread][maxindex].elm[i]: 6
thread: 0, i: 7, alltableelemets[thread][maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[thread][maxindex].elm[i]: 3
thread: 0, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[thread][maxindex].elm[i]: 0
 0 0 0 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0

thread: 0, blockDimSizeComp: 0 0 0 0 5 7 7 3 4 0 0 0 0 0 0 0 
thread: 0, divisorComp: 0 0 0 0 1 1 1 1 1 0 0 0 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
thread: 2, maxBlockLvlSize: 1
thread: 2, maxInBlockLvlSize: 107
thread: 2, AllTableSize: 1764, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 1
thread: 0, maxInBlockLvlSize: 322
thread: 0, AllTableSize: 2940, maxSubsetsSize: 64
thread: 1, maxBlockLvlSize: 1
thread: 1, maxInBlockLvlSize: 322
thread: 1, AllTableSize: 2940, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 
cpuId: 3, dpoptimal: 6
cpuId: 1, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.129405
cpuId: 2, dpoptimal: 7
copy the latest feasible solution to instance takes time: 0.49661
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.216094
copy the latest feasible solution to instance takes time: 0.179589
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 30, UB: 32
BKID: 0, LB: 30, UB: 32, OPT: 10
Dynamic Programming Runtime: 30.9801
Execution time between LB and UB is: 12
By far, all LB UB calculation runtime: 12
Iteration: 2, UB: 32, LB: 30start at time: 1503456007
thread: 0, MlBk is called with LB: 30, UB: 30
thread: 2, MlBk is called with LB: 32, UB: 32
thread: 1, MlBk is called with LB: 31, UB: 31
 thread: 2, LongJobs.size() 21
 thread: 0, LongJobs.size() 21
thread: 2, NSTable size: 20
thread: 2, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[thread][maxindex].elm[i]: 4
thread: 2, i: 5, alltableelemets[thread][maxindex].elm[i]: 6
thread: 2, i: 6, alltableelemets[thread][maxindex].elm[i]: 6
thread: 2, i: 7, alltableelemets[thread][maxindex].elm[i]: 2
thread: 2, i: 8, alltableelemets[thread][maxindex].elm[i]: 3
thread: 2, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 0 5 7 7 3 4 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 1 1 1 1 1 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 0 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
 thread: 1, LongJobs.size() 21
thread: 2, maxBlockLvlSize: 1
thread: 2, maxInBlockLvlSize: 322
thread: 2, AllTableSize: 2940, maxSubsetsSize: 64
thread: 0, NSTable size: 33
thread: 0, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 8, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[thread][maxindex].elm[i]: 2
thread: 0, i: 10, alltableelemets[thread][maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[thread][maxindex].elm[i]: 2
thread: 0, i: 12, alltableelemets[thread][maxindex].elm[i]: 4
thread: 0, i: 13, alltableelemets[thread][maxindex].elm[i]: 3
thread: 0, i: 14, alltableelemets[thread][maxindex].elm[i]: 3
thread: 0, i: 15, alltableelemets[thread][maxindex].elm[i]: 5

thread: 0, blockDimSizeComp: 0 0 0 0 0 0 0 0 0 3 3 3 5 2 4 3 
thread: 0, divisorComp: 0 0 0 0 0 0 0 0 0 1 1 1 1 2 1 2 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 
thread: 0, largestNoZeroBlockVec: 0 0 0 0 1 0 1 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 , mySum: 2
thread: 1, NSTable size: 35
thread: 1, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 7, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 8, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 9, alltableelemets[thread][maxindex].elm[i]: 2
thread: 1, i: 10, alltableelemets[thread][maxindex].elm[i]: 2
thread: 1, i: 11, alltableelemets[thread][maxindex].elm[i]: 2
thread: 1, i: 12, alltableelemets[thread][maxindex].elm[i]: 4
thread: 1, i: 13, alltableelemets[thread][maxindex].elm[i]: 3
thread: 1, i: 14, alltableelemets[thread][maxindex].elm[i]: 3
thread: 1, i: 15, alltableelemets[thread][maxindex].elm[i]: 5

thread: 1, blockDimSizeComp: 0 0 0 0 0 0 0 0 0 3 3 3 5 2 4 3 
thread: 1, divisorComp: 0 0 0 0 0 0 0 0 0 1 1 1 1 2 1 2 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 
thread: 1, largestNoZeroBlockVec: 0 0 0 0 1 0 1 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 , mySum: 2
thread: 0, maxBlockLvlSize: 2
thread: 0, maxInBlockLvlSize: 502
thread: 0, AllTableSize: 12960, maxSubsetsSize: 64
thread: 1, maxBlockLvlSize: 2
thread: 1, maxInBlockLvlSize: 502
thread: 1, AllTableSize: 12960, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 0 0 1 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 mySum: 2
thread: 0, blockNoZero[3]: 0 0 0 0 1 0 1 
cpuId: 2, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.487536
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 4e-06
cpuId: 1, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.72451
BKID: 0, LB: 31, UB: 31, OPT: 11
Dynamic Programming Runtime: 138.104
Execution time between LB and UB is: 63
By far, all LB UB calculation runtime: 75
********************************************************
Total execution on UB and LB is: 75
OUT of Bk while loop  
UB    31
LB    31
T1    30
T2    31
OPT   11
nMachines   10
AllProbData.size()    2
ck :   1
AllProbData[ck].Ttable    31
ck :   0
AllProbData[ck].Ttable    32
Final OptimalSchedule
FinalMakespan34
Main Scheduling is Done
File 1-8 is Done.
******************************
Reading File...
File 1-9 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 51, LB: 32start at time: 1503456071
thread: 2, MlBk is called with LB: 42, UB: 46
thread: 3, MlBk is called with LB: 47, UB: 51
thread: 0, MlBk is called with LB: 32, UB: 36
thread:  thread: 2, LongJobs.size() 171
, MlBk is called with LB: 37, UB: 41
 thread: 0, LongJobs.size() 21
 thread: 1, LongJobs.size() 21
thread: 2, NSTable size: 24
thread: 2, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[thread][maxindex].elm[i]: 3
thread: 2, i: 6, alltableelemets[thread][maxindex].elm[i]: 5
thread: 2, i: 7, alltableelemets[thread][maxindex].elm[i]: 2
thread: 2, i: 8, alltableelemets[thread][maxindex].elm[i]: 7
thread: 2, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 0 0 2 3 3 4 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 0 2 2 1 2 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 1 1 0 1 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 1 1 0 1 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 1 0 0 0 0 0 0 0 , mySum: 3
thread: 2, maxBlockLvlSize: 3
thread: 2, maxInBlockLvlSize: 16
thread: 2, AllTableSize: 576, maxSubsetsSize: 64
 thread: 3, LongJobs.size() 16
thread: 3, NSTable size: 18
thread: 3, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[thread][maxindex].elm[i]: 6
thread: 3, i: 4, alltableelemets[thread][maxindex].elm[i]: 3
thread: 3, i: 5, alltableelemets[thread][maxindex].elm[i]: 7
thread: 3, i: 6, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 7, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 8, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 7 2 4 0 0 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 1 2 2 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 1 1 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
thread: 3, maxBlockLvlSize: 2
thread: 3, maxInBlockLvlSize: 8
thread: 3, AllTableSize: 224, maxSubsetsSize: 64
thread: 1, NSTable size: 31
thread: 1, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[thread][maxindex].elm[i]: 4
thread: 1, i: 5, alltableelemets[thread][maxindex].elm[i]: 3
thread: 1, i: 6, alltableelemets[thread][maxindex].elm[i]: 5
thread: 1, i: 7, alltableelemets[thread][maxindex].elm[i]: 2
thread: 1, i: 8, alltableelemets[thread][maxindex].elm[i]: 7
thread: 1, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 0 5 4 3 3 4 0 0 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 1 1 2 1 2 0 0 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 1 0 1 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
thread: 0, NSTable size: 23
thread: 0, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[thread][maxindex].elm[i]: 4
thread: 0, i: 5, alltableelemets[thread][maxindex].elm[i]: 3
thread: 0, i: 6, alltableelemets[thread][maxindex].elm[i]: 5
thread: 0, i: 7, alltableelemets[thread][maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[thread][maxindex].elm[i]: 7
thread: 0, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 0 5 4 3 3 4 0 0 0 0 0 0 0 
thread: 0, divisorComp: 0 0 0 0 1 1 2 1 2 0 0 0 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 1 0 1 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
thread: 1, maxBlockLvlSize: 2
thread: 1, maxInBlockLvlSize: 114
thread: 1, AllTableSize: 2880, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 2
thread: 0, maxInBlockLvlSize: 114
thread: 0, AllTableSize: 2880, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 1 0 0 
cpuId: 3, dpoptimal: 6
copy the latest feasible solution to instance takes time: 0.044825
thread: 0, allBlocks[3]: 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[3]: 0 0 1 0 1 
cpuId: 2, dpoptimal: 7
copy the latest feasible solution to instance takes time: 0.069434
cpuId: 1, dpoptimal: 9
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.338557
copy the latest feasible solution to instance takes time: 0.301126
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 32, UB: 34
BKID: 0, LB: 32, UB: 34, OPT: 10
Dynamic Programming Runtime: 19.6662
Execution time between LB and UB is: 8
By far, all LB UB calculation runtime: 8
Iteration: 2, UB: 34, LB: 32start at time: 1503456079
thread: 0, MlBk is called with LB: 32, UB: 32
thread: 2, MlBk is called with LB: 34, UB: 34
thread: 1, MlBk is called with LB: 33, UB: 33
 thread: 2, LongJobs.size() 21
thread: 2, NSTable size: 23
thread: 2, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[thread][maxindex].elm[i]: 4
thread: 2, i: 5, alltableelemets[thread][maxindex].elm[i]: 3
thread: 2, i: 6, alltableelemets[thread][maxindex].elm[i]: 5
thread: 2, i: 7, alltableelemets[thread][maxindex].elm[i]: 2
thread: 2, i: 8, alltableelemets[thread][maxindex].elm[i]: 7
thread: 2, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 0 5 4 3 3 4 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 1 1 2 1 2 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 1 0 1 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
 thread: 0, LongJobs.size() 21
 thread: 1, LongJobs.size() 21
thread: 2, maxBlockLvlSize: 2
thread: 2, maxInBlockLvlSize: 114
thread: 2, AllTableSize: 2880, maxSubsetsSize: 64
thread: 1, NSTable size: 20
thread: 1, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[thread][maxindex].elm[i]: 4
thread: 1, i: 5, alltableelemets[thread][maxindex].elm[i]: 3
thread: 1, i: 6, alltableelemets[thread][maxindex].elm[i]: 5
thread: 1, i: 7, alltableelemets[thread][maxindex].elm[i]: 2
thread: 1, i: 8, alltableelemets[thread][maxindex].elm[i]: 7
thread: 1, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 0 5 4 3 3 4 0 0 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 1 1 2 1 2 0 0 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 1 0 1 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
thread: 0, NSTable size: 20
thread: 0, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[thread][maxindex].elm[i]: 4
thread: 0, i: 5, alltableelemets[thread][maxindex].elm[i]: 3
thread: 0, i: 6, alltableelemets[thread][maxindex].elm[i]: 5
thread: 0, i: 7, alltableelemets[thread][maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[thread][maxindex].elm[i]: 7
thread: 0, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 0 5 4 3 3 4 0 0 0 0 0 0 0 
thread: 0, divisorComp: 0 0 0 0 1 1 2 1 2 0 0 0 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 1 0 1 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
thread: 1, maxBlockLvlSize: 2
thread: 1, maxInBlockLvlSize: 114
thread: 1, AllTableSize: 2880, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 2
thread: 0, maxInBlockLvlSize: 114
thread: 0, AllTableSize: 2880, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 1 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[3]: 0 0 1 0 1 
cpuId: 1, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.485191
cpuId: 2, dpoptimal: 10
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.343236
copy the latest feasible solution to instance takes time: 0.308762
BKID: 0, LB: 32, UB: 32, OPT: 10
Dynamic Programming Runtime: 15.264
Execution time between LB and UB is: 5
By far, all LB UB calculation runtime: 13
********************************************************
Total execution on UB and LB is: 13
OUT of Bk while loop  
UB    32
LB    32
T1    32
T2    32
OPT   10
nMachines   10
AllProbData.size()    2
ck :   1
AllProbData[ck].Ttable    32
ck :   0
AllProbData[ck].Ttable    34
Final OptimalSchedule
FinalMakespan34
Main Scheduling is Done
File 1-9 is Done.
******************************
Reading File...
File 1-10 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 51, LB: 32start at time: 1503456084
thread: thread: 21, MlBk is called with LB: , MlBk is called with LB: 4237, UB: 46, UB: 41

thread: 0, MlBk is called with LB: 32, UB: 36
 thread: 1, LongJobs.size() 21
 thread: 2, LongJobs.size() 18
 thread: thread: 3, MlBk is called with LB: 047, LongJobs.size() , UB: 5121

 thread: 3, LongJobs.size() 18
thread: 2, NSTable size: 23
thread: 2, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[thread][maxindex].elm[i]: 2
thread: 2, i: 6, alltableelemets[thread][maxindex].elm[i]: 7
thread: 2, i: 7, alltableelemets[thread][maxindex].elm[i]: 6
thread: 2, i: 8, alltableelemets[thread][maxindex].elm[i]: 3
thread: 2, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 0 0 3 4 7 2 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 0 1 2 1 2 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 1 0 1 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
thread: 3, NSTable size: 18
thread: 3, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[thread][maxindex].elm[i]: 4
thread: 3, i: 4, alltableelemets[thread][maxindex].elm[i]: 11
thread: 3, i: 5, alltableelemets[thread][maxindex].elm[i]: 3
thread: 3, i: 6, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 7, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 8, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 5 4 2 0 0 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 1 3 2 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 2 1 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
thread: 3, maxBlockLvlSize: 2
thread: 3, maxInBlockLvlSize: 8
thread: 3, AllTableSize: 240, maxSubsetsSize: 64
thread: 2, maxBlockLvlSize: 2
thread: 2, maxInBlockLvlSize: 24
thread: 2, AllTableSize: 672, maxSubsetsSize: 64
thread: 1, NSTable size: 30
thread: 1, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[thread][maxindex].elm[i]: 3
thread: 1, i: 5, alltableelemets[thread][maxindex].elm[i]: 2
thread: 1, i: 6, alltableelemets[thread][maxindex].elm[i]: 7
thread: 1, i: 7, alltableelemets[thread][maxindex].elm[i]: 6
thread: 1, i: 8, alltableelemets[thread][maxindex].elm[i]: 3
thread: 1, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 0 2 3 4 7 4 0 0 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 2 1 2 1 1 0 0 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 1 0 1 0 0 
thread: 0, NSTable size: 23
thread: 0, i: 0thread: , alltableelemets[thread][maxindex].elm[i]: 0
1thread: 0, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[thread][maxindex].elm[i]: 3
thread: 0, i: 5, alltableelemets[thread][maxindex].elm[i]: 2
thread: 0, i: 6, alltableelemets[thread][maxindex].elm[i]: 7
thread: 0, i: 7, alltableelemets[thread][maxindex].elm[i]: 6
thread: 0, i: 8, alltableelemets[thread][maxindex].elm[i]: 3
thread: 0, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[thread][maxindex].elm[i]: 0
, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0
thread: 0, blockDimSizeComp: 0 0 0 0 2  3 40  , mySum: 71 
40 0 0 0 1 0 0 0  00  0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 1 0 0 0 0 00 0 0 0 0 , mySum: 2
 0 0 0 0 0 
thread: 0, divisorComp: 0 0 0 0 2 1 2 1 1 0 0 0 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 1 0 1 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
thread: 1, maxBlockLvlSize: 2
thread: 1, maxInBlockLvlSize: 90
thread: 1, AllTableSize: 2688, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 2
thread: 0, maxInBlockLvlSize: 90
thread: 0, AllTableSize: 2688, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 1 0 0 
thread: 0, allBlocks[2]: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 1 0 0 0 0 
cpuId: 3, dpoptimal: 6
copy the latest feasible solution to instance takes time: 0.051784
thread: 0, allBlocks[3]: 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[3]: 1 0 1 0 0 
cpuId: 2, dpoptimal: 7
copy the latest feasible solution to instance takes time: 0.075972
cpuId: 1, dpoptimal: 9
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.298672
copy the latest feasible solution to instance takes time: 0.287142
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 32, UB: 34
BKID: 0, LB: 32, UB: 34, OPT: 10
Dynamic Programming Runtime: 23.2682
Execution time between LB and UB is: 11
By far, all LB UB calculation runtime: 11
Iteration: 2, UB: 34, LB: 32start at time: 1503456095
thread: 0, MlBk is called with LB: 32, UB: 32
thread: 2, MlBk is called with LB: 34, UB: 34
thread: 1, MlBk is called with LB: 33, UB: 33
 thread: 2, LongJobs.size() 21
 thread: 0, LongJobs.size() 21
thread: 2, NSTable size: 23
thread: 2, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[thread][maxindex].elm[i]: 3
thread: 2, i: 5, alltableelemets[thread][maxindex].elm[i]: 2
thread: 2, i: 6, alltableelemets[thread][maxindex].elm[i]: 7
thread: 2, i: 7, alltableelemets[thread][maxindex].elm[i]: 6
thread: 2, i: 8, alltableelemets[thread][maxindex].elm[i]: 3
thread: 2, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 0 2 3 4 7 4 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 2 1 2 1 1 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 1 0 1 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
thread: 0, NSTable size: 20
thread: 0, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[thread][maxindex].elm[i]: 3
thread: 0, i: 5, alltableelemets[thread][maxindex].elm[i]: 2
thread: 0, i: 6, alltableelemets[thread][maxindex].elm[i]: 7
thread: 0, i: 7, alltableelemets[thread][maxindex].elm[i]: 6
thread: 0, i: 8, alltableelemets[thread][maxindex].elm[i]: 3
thread: 0, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 0 2 3 4 7 4 0 0 0 0 0 0 0 
thread: 0, divisorComp: 0 0 0 0 2 1 2 1 1 0 0 0 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 1 0 1 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
 thread: 1, LongJobs.size() 21
thread: 2, maxBlockLvlSize: 2
thread: 2, maxInBlockLvlSize: 90
thread: 2, AllTableSize: 2688, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 2
thread: 0, maxInBlockLvlSize: 90
thread: 0, AllTableSize: 2688, maxSubsetsSize: 64
thread: 1, NSTable size: 20
thread: 1, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[thread][maxindex].elm[i]: 3
thread: 1, i: 5, alltableelemets[thread][maxindex].elm[i]: 2
thread: 1, i: 6, alltableelemets[thread][maxindex].elm[i]: 7
thread: 1, i: 7, alltableelemets[thread][maxindex].elm[i]: 6
thread: 1, i: 8, alltableelemets[thread][maxindex].elm[i]: 3
thread: 1, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 0 2 3 4 7 4 0 0 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 2 1 2 1 1 0 0 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 1 0 1 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
thread: 1, maxBlockLvlSize: 2
thread: 1, maxInBlockLvlSize: 90
thread: 1, AllTableSize: 2688, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 1 0 0 
thread: 0, allBlocks[2]: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 1 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[3]: 1 0 1 0 0 
cpuId: 1, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.464821
cpuId: 2, dpoptimal: 10
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.342662
copy the latest feasible solution to instance takes time: 0.327338
BKID: 0, LB: 32, UB: 32, OPT: 10
Dynamic Programming Runtime: 15.9344
Execution time between LB and UB is: 5
By far, all LB UB calculation runtime: 16
********************************************************
Total execution on UB and LB is: 16
OUT of Bk while loop  
UB    32
LB    32
T1    32
T2    32
OPT   10
nMachines   10
AllProbData.size()    2
ck :   1
AllProbData[ck].Ttable    32
ck :   0
AllProbData[ck].Ttable    34
Final OptimalSchedule
FinalMakespan34
Main Scheduling is Done
File 1-10 is Done.
******************************
Reading File...
File 1-11 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 48, LB: 29start at time: 1503456101
thread: 1, MlBk is called with LB: thread: 34, UB: 380
, MlBk is called with LB: thread: 2, MlBk is called with LB: 39, UB: 43
thread: 3, MlBk is called with LB: 44 thread: 1, LongJobs.size() 21 thread: 
, UB: 48
29, UB: 33
2, LongJobs.size() 18
 thread: 0, LongJobs.size() 21
 thread: 3, LongJobs.size() 16
thread: 3, NSTable size: 27
thread: 3, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 5, alltableelemets[thread][maxindex].elm[i]: 6
thread: 3, i: 6, alltableelemets[thread][maxindex].elm[i]: 4
thread: 3, i: 7, alltableelemets[thread][maxindex].elm[i]: 4
thread: 3, i: 8, alltableelemets[thread][maxindex].elm[i]: 2
thread: 3, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, NSTable size: 34
thread: 2, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2
, i: thread: 3, blockDimSizeComp: 0 0 0 0 0 7 5 5 3 0 0 0 0 0 0 0 3
, alltableelemets[thread][maxindex].elm[i]: thread: 3, divisorComp: 0 0 0 0 0 1 1 1 1 0 0 0 0 0 00
 0thread: 2, i: 4, alltableelemets[thread][maxindex].elm[i]: 2
 
thread: 3, largestBlockVec: 0 0 0 0 0 0 0 0thread:  20 , i: 05, alltableelemets[thread][maxindex].elm[i]:  60 
0thread: 2, i: 6, alltableelemets[thread][maxindex].elm[i]: 4
thread: 2, i: 7, alltableelemets[thread][maxindex].elm[i]: 4
thread: 2, i: 8, alltableelemets[thread][maxindex].elm[i]: 2
thread: 2, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[thread][maxindex].elm[i]: 0
 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 0 0 0 

thread: 2, blockDimSizeComp: 0 0 0 0 3 7 5 5 3 0 0 0 thread: 0 30, allBlocks:  0 00  
0 thread: 2, divisorComp: 0 0 0 0 1 1 1 1 1 0 0 0 0 0 0 00 
thread: 2, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 0  0 0 0 0 0 0 0 0 0 0 00  00 0  
, mySum: 0
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
thread: 3, maxBlockLvlSize: 1
thread: 3, maxInBlockLvlSize: 67
thread: 3, AllTableSize: 525, maxSubsetsSize: 64
thread: 1, NSTable size: 27
thread: 1, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[thread][maxindex].elm[i]: 5
thread: 1, i: 5, alltableelemets[thread][maxindex].elm[i]: 6
thread: 1, i: 6, alltableelemets[thread][maxindex].elm[i]: 4
thread: 1, i: 7, alltableelemets[thread][maxindex].elm[i]: 4
thread: 1, i: 8, alltableelemets[thread][maxindex].elm[i]: 2
thread: 1, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 0 3 7 5 5 3 0 0 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 2 1 1 1 1 0 0 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 1 0 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
thread: 2, maxBlockLvlSize: 1
thread: 2, maxInBlockLvlSize: 195
thread: 2, AllTableSize: 1575, maxSubsetsSize: 64
thread: 1, maxBlockLvlSize: 1
thread: 1, maxInBlockLvlSize: 195
thread: 1, AllTableSize: 3150, maxSubsetsSize: 64
thread: 0, NSTable size: 36
thread: 0, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 8, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[thread][maxindex].elm[i]: 3
thread: 0, i: 10, alltableelemets[thread][maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[thread][maxindex].elm[i]: 4
thread: 0, i: 12, alltableelemets[thread][maxindex].elm[i]: 2
thread: 0, i: 13, alltableelemets[thread][maxindex].elm[i]: 2
thread: 0, i: 14, alltableelemets[thread][maxindex].elm[i]: 2
thread: 0, i: 15, alltableelemets[thread][maxindex].elm[i]: 6

thread: 0, blockDimSizeComp: 0 0 0 0 0 0 0 0 0 2 3 5 3 3 3 7 
thread: 0, divisorComp: 0 0 0 0 0 0 0 0 0 2 1 1 1 1 1 1 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 1 0 0 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
thread: 0, maxBlockLvlSize: 1
thread: 0, maxInBlockLvlSize: 710
thread: 0, AllTableSize: 11340, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 
cpuId: 0, gpu thread: 34, j: 1510, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 6, it's NS: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 5
elm offset: 1070, myOPT: 5, optOffset: 96640, optVecIndex: 1, indexomp: 1476, ii: 8, blockLvl: 0, blockIDInLvl: 0, dev_counterVec[649]: 0
cpuId: 0, gpu thread: 34, j: 1510, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 6, it's NS: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 6
elm offset: 1224, myOPT: 6, optOffset: 96640, optVecIndex: 2, indexomp: 1476, ii: 8, blockLvl: 0, blockIDInLvl: 0, dev_counterVec[649]: 0
cpuId: 0, gpu thread: 34, j: 1510, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 6, it's NS: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 5
elm offset: 630, myOPT: 5, optOffset: 96640, optVecIndex: 3, indexomp: 1476, ii: 8, blockLvl: 0, blockIDInLvl: 0, dev_counterVec[649]: 0
cpuId: 0, gpu thread: 34, j: 1510, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 6, it's NS: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6
elm offset: 651, myOPT: 6, optOffset: 96640, optVecIndex: 4, indexomp: 1476, ii: 8, blockLvl: 0, blockIDInLvl: 0, dev_counterVec[649]: 0
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 1 0 0 0 0 0 0 
cpuId: 3, dpoptimal: 6
copy the latest feasible solution to instance takes time: 0.074922
cpuId: 2, dpoptimal: 7
copy the latest feasible solution to instance takes time: 0.255769
cpuId: 1, dpoptimal: 8
copy the latest feasible solution to instance takes time: 0.352546
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.626121
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 29, UB: 31
BKID: 0, LB: 29, UB: 31, OPT: 10
Dynamic Programming Runtime: 147.511
Execution time between LB and UB is: 70
By far, all LB UB calculation runtime: 70
Iteration: 2, UB: 31, LB: 29start at time: 1503456171
thread: 0, MlBk is called with LB: 29, UB: 29
thread: 2, MlBk is called with LB: 31, UB: 31
thread: 1, MlBk is called with LB: 30, UB: 30
 thread: 2, LongJobs.size() 21
 thread: 1, LongJobs.size() 21
 thread: 0, LongJobs.size() 21
thread: 2, NSTable size: 36
thread: 2, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 6, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 7, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 8, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 9, alltableelemets[thread][maxindex].elm[i]: 3
thread: 2, i: 10, alltableelemets[thread][maxindex].elm[i]: 2
thread: 2, i: 11, alltableelemets[thread][maxindex].elm[i]: 4
thread: 2, i: 12, alltableelemets[thread][maxindex].elm[i]: 2
thread: 2, i: 13, alltableelemets[thread][maxindex].elm[i]: 2
thread: 2, i: 14, alltableelemets[thread][maxindex].elm[i]: 2
thread: 2, i: 15, alltableelemets[thread][maxindex].elm[i]: 6

thread: 2, blockDimSizeComp: 0 0 0 0 0 0 0 0 0 2 3 5 3 3 3 7 
thread: 2, divisorComp: 0 0 0 0 0 0 0 0 0 2 1 1 1 1 1 1 
thread: 2, largestBlockVec: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 1 0 0 0 0 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
thread: 1, NSTable size: 34
thread: 1, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 7, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 8, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 9, alltableelemets[thread][maxindex].elm[i]: 3
thread: 1, i: 10, alltableelemets[thread][maxindex].elm[i]: 2
thread: 1, i: 11, alltableelemets[thread][maxindex].elm[i]: 4
thread: 1, i: 12, alltableelemets[thread][maxindex].elm[i]: 2
thread: 1, i: 13, alltableelemets[thread][maxindex].elm[i]: 2
thread: 1, i: 14, alltableelemets[thread][maxindex].elm[i]: 2
thread: 1, i: 15, alltableelemets[thread][maxindex].elm[i]: 6

thread: 1, blockDimSizeComp: 0 0 0 0 0 0 0 0 0 2 3 5 3 3 3 7 
thread: 1, divisorComp: 0 0 0 0 0 0 0 0 0 2 1 1 1 1 1 1 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 1 0 0 0 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
thread: 0, NSTable size: 31
thread: 0, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 8, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[thread][maxindex].elm[i]: 3
thread: 0, i: 10, alltableelemets[thread][maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[thread][maxindex].elm[i]: 4
thread: 0, i: 12, alltableelemets[thread][maxindex].elm[i]: 2
thread: 0, i: 13, alltableelemets[thread][maxindex].elm[i]: 2
thread: 0, i: 14, alltableelemets[thread][maxindex].elm[i]: 2
thread: 0, i: 15, alltableelemets[thread][maxindex].elm[i]: 6

thread: 0, blockDimSizeComp: 0 0 0 0 0 0 0 0 0 2 3 5 3 3 3 7 
thread: 0, divisorComp: 0 0 0 0 0 0 0 0 0 2 1 1 1 1 1 1 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 1 0 0 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
thread: 2, maxBlockLvlSize: 1
thread: 2, maxInBlockLvlSize: 710
thread: 2, AllTableSize: 11340, maxSubsetsSize: 64
thread: 1, maxBlockLvlSize: 1
thread: 1, maxInBlockLvlSize: 710
thread: 1, AllTableSize: 11340, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 1
thread: 0, maxInBlockLvlSize: 710
thread: 0, AllTableSize: 11340, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 
cpuId: 0, gpu thread: 34, j: 1510, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 6, it's NS: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 5
elm offset: 1070, myOPT: 5, optOffset: 96640, optVecIndex: 1, indexomp: 1476, ii: 8, blockLvl: 0, blockIDInLvl: 0, dev_counterVec[649]: 1
cpuId: 0, gpu thread: 34, j: 1510, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 6, it's NS: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 6
elm offset: 1224, myOPT: 6, optOffset: 96640, optVecIndex: 2, indexomp: 1476, ii: 8, blockLvl: 0, blockIDInLvl: 0, dev_counterVec[649]: 1
cpuId: 0, gpu thread: 34, j: 1510, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 6, it's NS: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 5
elm offset: 630, myOPT: 5, optOffset: 96640, optVecIndex: 3, indexomp: 1476, ii: 8, blockLvl: 0, blockIDInLvl: 0, dev_counterVec[649]: 1
cpuId: 0, gpu thread: 34, j: 1510, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 6, it's NS: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6
elm offset: 651, myOPT: 6, optOffset: 96640, optVecIndex: 4, indexomp: 1476, ii: 8, blockLvl: 0, blockIDInLvl: 0, dev_counterVec[649]: 1
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 1 0 0 0 0 0 0 
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 7e-06
cpuId: 2, dpoptimal: 10
cpuId: 1, dpoptimal: 10
copy the latest feasible solution to instance takes time: 1.43371
copy the latest feasible solution to instance takes time: 1.31565
BKID: 0, LB: 30, UB: 30, OPT: 11
Dynamic Programming Runtime: 191.01
Execution time between LB and UB is: 66
By far, all LB UB calculation runtime: 136
********************************************************
Total execution on UB and LB is: 136
OUT of Bk while loop  
UB    30
LB    30
T1    29
T2    30
OPT   11
nMachines   10
AllProbData.size()    2
ck :   1
AllProbData[ck].Ttable    30
ck :   0
AllProbData[ck].Ttable    31
Final OptimalSchedule
FinalMakespan32
Main Scheduling is Done
File 1-11 is Done.
******************************
Reading File...
File 1-12 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 49, LB: 30start at time: 1503456238
thread: 3, MlBk is called with LB: 45, UB: 49
thread: 2, MlBk is called with LB: 40, UB: 44
thread: 0, MlBk is called with LB: 30thread: , UB: 34
 thread: 2, LongJobs.size() 16
1, MlBk is called with LB: 35, UB: 39
 thread: 0, LongJobs.size() 21
 thread: 1, LongJobs.size() 21
thread: 2, NSTable size: 38
thread: 2, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[thread][maxindex].elm[i]: 2
thread: 2, i: 5, alltableelemets[thread][maxindex].elm[i]: 3
thread: 2, i: 6, alltableelemets[thread][maxindex].elm[i]: 2
thread: 2, i: 7, alltableelemets[thread][maxindex].elm[i]: 3
thread: 2, i: 8, alltableelemets[thread][maxindex].elm[i]: 6
thread: 2, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 0 3 2 3 2 7 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 1 2 1 2 1 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 1 0 1 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
 thread: 3, LongJobs.size() 14
thread: 3, NSTable size: 26
thread: 3, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 5, alltableelemets[thread][maxindex].elm[i]: 3
thread: 3, i: 6, alltableelemets[thread][maxindex].elm[i]: 2
thread: 3, i: 7, alltableelemets[thread][maxindex].elm[i]: 3
thread: 3, i: 8, alltableelemets[thread][maxindex].elm[i]: 6
thread: 3, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 0 0 2 3 2 7 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 0 0 2 1 2 1 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 1 0 1 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
thread: 3, maxBlockLvlSize: 2
thread: 3, maxInBlockLvlSize: 12
thread: 3, AllTableSize: 336, maxSubsetsSize: 64
thread: 2, maxBlockLvlSize: 2
thread: 2, maxInBlockLvlSize: 36
thread: 2, AllTableSize: 1008, maxSubsetsSize: 64
thread: 1, NSTable size: 27
thread: 1, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[thread][maxindex].elm[i]: 7
thread: 1, i: 5, alltableelemets[thread][maxindex].elm[i]: 3
thread: 1, i: 6, alltableelemets[thread][maxindex].elm[i]: 2
thread: 1, i: 7, alltableelemets[thread][maxindex].elm[i]: 3
thread: 1, i: 8, alltableelemets[thread][maxindex].elm[i]: 6
thread: 1, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 0 4 2 3 4 7 0 0 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 2 2 1 1 1 0 0 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 
thread: 0, NSTable size: 20thread: 1
, largestNoZeroBlockVec: 1thread: 0 , i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[thread][maxindex].elm[i]: 7
thread: 0, i: 5, alltableelemets[thread][maxindex].elm[i]: 3
thread: 0, i: 6, alltableelemets[thread][maxindex].elm[i]: 1 0 0 0 
2
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 thread: 0 0 0 0, i: , mySum: 70, alltableelemets[thread][maxindex].elm[i]: 
30 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 
1thread: 0, i:  8, alltableelemets[thread][maxindex].elm[i]: 6
0thread: 0, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[thread][maxindex].elm[i]: 0
 0 0 0 0 0 0 0 0 0 , mySum: 2

thread: 0, blockDimSizeComp: 0 0 0 0 4 2 3 4 7 0 0 0 0 0 0 0 
thread: 0, divisorComp: 0 0 0 0 2 2 1 1 1 0 0 0 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 1 1 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
thread: 1, maxBlockLvlSize: 2
thread: 1, maxInBlockLvlSize: 90
thread: 1, AllTableSize: 2688, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 2
thread: 0, maxInBlockLvlSize: 90
thread: 0, AllTableSize: 2688, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 1 0 0 0 
thread: 0, allBlocks[2]: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 1 0 0 0 0 
cpuId: 3, dpoptimal: 5
copy the latest feasible solution to instance takes time: 0.073596
thread: 0, allBlocks[3]: 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[3]: 1 1 0 0 0 
cpuId: 2, dpoptimal: 6
copy the latest feasible solution to instance takes time: 0.276213
cpuId: 0, dpoptimal: 10
cpuId: 1, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.420146
copy the latest feasible solution to instance takes time: 0.436109
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 30, UB: 32
BKID: 0, LB: 30, UB: 32, OPT: 10
Dynamic Programming Runtime: 18.3443
Execution time between LB and UB is: 6
By far, all LB UB calculation runtime: 6
Iteration: 2, UB: 32, LB: 30start at time: 1503456244
thread: 0, MlBk is called with LB: 30, UB: 30
thread: 1, MlBk is called with LB: 31, UB: 31
thread: 2, MlBk is called with LB: 32, UB: 32
 thread: 0, LongJobs.size() 21
 thread: 2, LongJobs.size() 21
thread: 0, NSTable size: 19
thread: 0, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 8, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[thread][maxindex].elm[i]: 5
thread: 0, i: 10, alltableelemets[thread][maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[thread][maxindex].elm[i]: 3
thread: 0, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[thread][maxindex].elm[i]: 2
thread: 0, i: 15, alltableelemets[thread][maxindex].elm[i]: 9

thread: 0, blockDimSizeComp: 0 0 0 0 0 0 0 0 0 3 3 2 0 0 3 5 
thread: 0, divisorComp: 0 0 0 0 0 0 0 0 0 2 1 2 0 0 1 2 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 
thread: 0, largestNoZeroBlockVec: 1 0 1 0 1 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 , mySum: 3
thread: 2, NSTable size: 20
thread: 2, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[thread][maxindex].elm[i]: 7
thread: 2, i: 5, alltableelemets[thread][maxindex].elm[i]: 3
thread: 2, i: 6, alltableelemets[thread][maxindex].elm[i]: 2
thread: 2, i: 7, alltableelemets[thread][maxindex].elm[i]: 3
thread: 2, i: 8, alltableelemets[thread][maxindex].elm[i]: 6
thread: 2, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 0 4 2 3 4 7 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 2 2 1 1 1 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 1 1 0 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
 thread: 1, LongJobs.size() 21
thread: 0, maxBlockLvlSize: 3
thread: 0, maxInBlockLvlSize: 48
thread: 0, AllTableSize: 2160, maxSubsetsSize: 64
thread: 1, NSTable size: 21
thread: 1, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 7, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 8, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 9, alltableelemets[thread][maxindex].elm[i]: 5
thread: 1, i: 10, alltableelemets[thread][maxindex].elm[i]: 2
thread: 1, i: 11, alltableelemets[thread][maxindex].elm[i]: 3
thread: 1, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[thread][maxindex].elm[i]: 2
thread: 1, i: 15, alltableelemets[thread][maxindex].elm[i]: 9

thread: 1, blockDimSizeComp: 0 0 0 0 0 0 0 0 0 3 3 2 0 0 3 5 
thread: 1, divisorComp: 0 0 0 0 0 0 0 0 0 2 1 2 0 0 1 2 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 
thread: 1, largestNoZeroBlockVec: 1 0 1 0 1 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 , mySum: 3
thread: 2, maxBlockLvlSize: 2
thread: 2, maxInBlockLvlSize: 90
thread: 2, AllTableSize: 2688, maxSubsetsSize: 64
thread: 1, maxBlockLvlSize: 3
thread: 1, maxInBlockLvlSize: 48
thread: 1, AllTableSize: 2160, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 1 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 1 0 0 0 0 
cpuId: 0, gpu thread: 0, j: 20, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 6, it's NS: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 5
elm offset: 283, myOPT: 5, optOffset: 1280, optVecIndex: 1, indexomp: 20, ii: 3, blockLvl: 1, blockIDInLvl: 0, dev_counterVec[27]: 0
cpuId: 0, gpu thread: 0, j: 20, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 6, it's NS: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 6
elm offset: 280, myOPT: 6, optOffset: 1280, optVecIndex: 2, indexomp: 20, ii: 3, blockLvl: 1, blockIDInLvl: 0, dev_counterVec[27]: 0
cpuId: 0, gpu thread: 0, j: 20, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 6, it's NS: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 5
elm offset: 274, myOPT: 5, optOffset: 1280, optVecIndex: 3, indexomp: 20, ii: 3, blockLvl: 1, blockIDInLvl: 0, dev_counterVec[27]: 0
cpuId: 0, gpu thread: 0, j: 20, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 6, it's NS: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6
elm offset: 271, myOPT: 6, optOffset: 1280, optVecIndex: 4, indexomp: 20, ii: 3, blockLvl: 1, blockIDInLvl: 0, dev_counterVec[27]: 0
cpuId: 0, gpu thread: 32, j: 79, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 7, it's NS: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 6
elm offset: 290, myOPT: 6, optOffset: 5056, optVecIndex: 1, indexomp: 47, ii: 4, blockLvl: 1, blockIDInLvl: 0, dev_counterVec[40]: 0
cpuId: 0, gpu thread: 32, j: 79, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 7, it's NS: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 7
elm offset: 316, myOPT: 7, optOffset: 5056, optVecIndex: 2, indexomp: 47, ii: 4, blockLvl: 1, blockIDInLvl: 0, dev_counterVec[40]: 0
cpuId: 0, gpu thread: 32, j: 79, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 7, it's NS: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 6
elm offset: 280, myOPT: 6, optOffset: 5056, optVecIndex: 3, indexomp: 47, ii: 4, blockLvl: 1, blockIDInLvl: 0, dev_counterVec[40]: 0
cpuId: 0, gpu thread: 32, j: 79, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 7, it's NS: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 7
elm offset: 289, myOPT: 7, optOffset: 5056, optVecIndex: 4, indexomp: 47, ii: 4, blockLvl: 1, blockIDInLvl: 0, dev_counterVec[40]: 0
cpuId: 0, gpu thread: 28, j: 115, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 8, it's NS: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 7
elm offset: 349, myOPT: 7, optOffset: 7360, optVecIndex: 1, indexomp: 87, ii: 5, blockLvl: 1, blockIDInLvl: 0, dev_counterVec[48]: 0
cpuId: 0, gpu thread: 28, j: 115, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 8, it's NS: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 8
elm offset: 348, myOPT: 8, optOffset: 7360, optVecIndex: 2, indexomp: 87, ii: 5, blockLvl: 1, blockIDInLvl: 0, dev_counterVec[48]: 0
cpuId: 0, gpu thread: 28, j: 115, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 8, it's NS: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 7
elm offset: 316, myOPT: 7, optOffset: 7360, optVecIndex: 3, indexomp: 87, ii: 5, blockLvl: 1, blockIDInLvl: 0, dev_counterVec[48]: 0
cpuId: 0, gpu thread: 28, j: 115, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 8, it's NS: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 8
elm offset: 309, myOPT: 8, optOffset: 7360, optVecIndex: 4, indexomp: 87, ii: 5, blockLvl: 1, blockIDInLvl: 0, dev_counterVec[48]: 0
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 mySum: 2
thread: 0, blockNoZero[4]: 0 0 1 0 1 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[5]: 1 0 0 0 1 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 1 0 1 0 0 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 mySum: 3
thread: 0, blockNoZero[7]: 1 0 1 0 1 
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 5e-06
cpuId: 1, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.300003
cpuId: 2, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.160377
BKID: 0, LB: 31, UB: 31, OPT: 11
Dynamic Programming Runtime: 13.7336
Execution time between LB and UB is: 5
By far, all LB UB calculation runtime: 11
********************************************************
Total execution on UB and LB is: 11
OUT of Bk while loop  
UB    31
LB    31
T1    30
T2    31
OPT   11
nMachines   10
AllProbData.size()    2
ck :   1
AllProbData[ck].Ttable    31
ck :   0
AllProbData[ck].Ttable    32
Final OptimalSchedule
FinalMakespan33
Main Scheduling is Done
File 1-12 is Done.
******************************
Reading File...
File 1-13 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 49, LB: 30start at time: 1503456249
thread: thread: 1thread: , MlBk is called with LB: 3523, MlBk is called with LB: , UB: 40, UB: 4439

 thread: 2, LongJobs.size() 20
thread: 0, MlBk is called with LB: 30, UB: 34
 thread: , MlBk is called with LB: 1, LongJobs.size() 21
45, UB: 49
 thread: 0, LongJobs.size() 21
 thread: 3, LongJobs.size() 16
thread: 3, NSTable size: 27
thread: 3, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 5, alltableelemets[thread][maxindex].elm[i]: 4
thread: 3, i: 6, alltableelemets[thread][maxindex].elm[i]: 6
thread: 3, i: 7, alltableelemets[thread][maxindex].elm[i]: 4
thread: 3, i: 8, alltableelemets[thread][maxindex].elm[i]: 2
thread: 3, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 0 0 5 7 5 3 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 0 0 1 1 1 1 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 0 0 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
thread: 3, maxBlockLvlSize: 1
thread: 3, maxInBlockLvlSize: 67
thread: 3, AllTableSize: 525, maxSubsetsSize: 64
thread: 2, NSTable size: 42
thread: 2, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[thread][maxindex].elm[i]: 4
thread: 2, i: 5, alltableelemets[thread][maxindex].elm[i]: 4
thread: 2, i: 6, alltableelemets[thread][maxindex].elm[i]: 6
thread: 2, i: 7, alltableelemets[thread][maxindex].elm[i]: 4
thread: 2, i: 8, alltableelemets[thread][maxindex].elm[i]: 2
thread: 2, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 0 5 5 7 5 3 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 1 1 1 1 1 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 0 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
thread: 1, NSTable size: 27
thread: 1, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[thread][maxindex].elm[i]: 5
thread: 1, i: 5, alltableelemets[thread][maxindex].elm[i]: 4
thread: 1, i: 6, alltableelemets[thread][maxindex].elm[i]: 6
thread: 1, i: 7, alltableelemets[thread][maxindex].elm[i]: 4
thread: 1, i: 8, alltableelemets[thread][maxindex].elm[i]: 2
thread: 1, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 0 3 5 7 5 3 0 0 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 2 1 1 1 1 0 0 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 1 0 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
thread: 0, NSTable size: 20
thread: 0, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[thread][maxindex].elm[i]: 5
thread: 0, i: 5, alltableelemets[thread][maxindex].elm[i]: 4
thread: 0, i: 6, alltableelemets[thread][maxindex].elm[i]: 6
thread: 0, i: 7, alltableelemets[thread][maxindex].elm[i]: 4
thread: 0, i: 8, alltableelemets[thread][maxindex].elm[i]: 2
thread: 0, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 0 3 5 7 5 3 0 0 0 0 0 0 0 
thread: 0, divisorComp: 0 0 0 0 2 1 1 1 1 0 0 0 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 1 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
thread: 2, maxBlockLvlSize: 1
thread: 2, maxInBlockLvlSize: 307
thread: 2, AllTableSize: 2625, maxSubsetsSize: 64
thread: 1, maxBlockLvlSize: 1
thread: 1, maxInBlockLvlSize: 195
thread: 1, AllTableSize: 3150, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 1
thread: 0, maxInBlockLvlSize: 195
thread: 0, AllTableSize: 3150, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 1 0 0 0 0 
cpuId: 2, dpoptimal: 7
cpuId: 3, dpoptimal: 6
copy the latest feasible solution to instance takes time: 0.25338
copy the latest feasible solution to instance takes time: 0.855228
cpuId: 1, dpoptimal: 9
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.481601
copy the latest feasible solution to instance takes time: 0.45023
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 30, UB: 32
BKID: 0, LB: 30, UB: 32, OPT: 10
Dynamic Programming Runtime: 41.3198
Execution time between LB and UB is: 16
By far, all LB UB calculation runtime: 16
Iteration: 2, UB: 32, LB: 30start at time: 1503456265
thread: 0, MlBk is called with LB: 30, UB: 30
thread: 2, MlBk is called with LB: 32, UB: 32
thread: 1, MlBk is called with LB: 31, UB: 31
 thread: 0, LongJobs.size() 21
 thread: 2, LongJobs.size() 21
 thread: 1, LongJobs.size() 21
thread: 2, NSTable size: 20
thread: 2, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[thread][maxindex].elm[i]: 5
thread: 2, i: 5, alltableelemets[thread][maxindex].elm[i]: 4
thread: 2, i: 6, alltableelemets[thread][maxindex].elm[i]: 6
thread: 2, i: 7, alltableelemets[thread][maxindex].elm[i]: 4
thread: 2, i: 8, alltableelemets[thread][maxindex].elm[i]: 2
thread: 2, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 0 3 5 7 5 3 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 2 1 1 1 1 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 1 0 0 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
thread: 2, maxBlockLvlSize: 1
thread: 2, maxInBlockLvlSize: 195
thread: 2, AllTableSize: 3150, maxSubsetsSize: 64
thread: 0, NSTable size: 32
thread: 0, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 8, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[thread][maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[thread][maxindex].elm[i]: 4
thread: 0, i: 11, alltableelemets[thread][maxindex].elm[i]: 2
thread: 0, i: 12, alltableelemets[thread][maxindex].elm[i]: 2
thread: 0, i: 13, alltableelemets[thread][maxindex].elm[i]: 2
thread: 0, i: 14, alltableelemets[thread][maxindex].elm[i]: 4
thread: 0, i: 15, alltableelemets[thread][maxindex].elm[i]: 6

thread: 0, blockDimSizeComp: 0 0 0 0 0 0 0 0 0 2 5 3 3 3 5 7 
thread: 0, divisorComp: 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 0 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
thread: 1, NSTable size: 33
thread: 1, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 7, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 8, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 9, alltableelemets[thread][maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[thread][maxindex].elm[i]: 4
thread: 1, i: 11, alltableelemets[thread][maxindex].elm[i]: 2
thread: 1, i: 12, alltableelemets[thread][maxindex].elm[i]: 2
thread: 1, i: 13, alltableelemets[thread][maxindex].elm[i]: 2
thread: 1, i: 14, alltableelemets[thread][maxindex].elm[i]: 4
thread: 1, i: 15, alltableelemets[thread][maxindex].elm[i]: 6

thread: 1, blockDimSizeComp: 0 0 0 0 0 0 0 0 0 2 5 3 3 3 5 7 
thread: 1, divisorComp: 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 0 0 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
thread: 1, maxBlockLvlSize: 1
thread: 1, maxInBlockLvlSize: 1115
thread: 1, AllTableSize: 9450, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 1
thread: 0, maxInBlockLvlSize: 1115
thread: 0, AllTableSize: 9450, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 
cpuId: 0, gpu thread: 797, j: 2508, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 6, it's NS: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 5
elm offset: 1194, myOPT: 5, optOffset: 160512, optVecIndex: 1, indexomp: 1711, ii: 8, blockLvl: 0, blockIDInLvl: 0, dev_counterVec[871]: 0
cpuId: 0, gpu thread: 797, j: 2508, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 6, it's NS: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 6
elm offset: 1353, myOPT: 6, optOffset: 160512, optVecIndex: 2, indexomp: 1711, ii: 8, blockLvl: 0, blockIDInLvl: 0, dev_counterVec[871]: 0
cpuId: 0, gpu thread: 797, j: 2508, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 6, it's NS: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 5
elm offset: 795, myOPT: 5, optOffset: 160512, optVecIndex: 3, indexomp: 1711, ii: 8, blockLvl: 0, blockIDInLvl: 0, dev_counterVec[871]: 0
cpuId: 0, gpu thread: 797, j: 2508, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 6, it's NS: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6
elm offset: 781, myOPT: 6, optOffset: 160512, optVecIndex: 4, indexomp: 1711, ii: 8, blockLvl: 0, blockIDInLvl: 0, dev_counterVec[871]: 0
cpuId: 2, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.864859
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 3e-06
cpuId: 1, dpoptimal: 11
copy the latest feasible solution to instance takes time: 1e-06
BKID: 0, LB: 32, UB: 32, OPT: 11
Dynamic Programming Runtime: 156.646
Execution time between LB and UB is: 53
By far, all LB UB calculation runtime: 69
********************************************************
Total execution on UB and LB is: 69
OUT of Bk while loop  
UB    32
LB    32
T1    31
T2    32
OPT   11
nMachines   10
AllProbData.size()    2
ck :   1
AllProbData[ck].Ttable    32
ck :   0
AllProbData[ck].Ttable    32
Final OptimalSchedule
FinalMakespan34
Main Scheduling is Done
File 1-13 is Done.
******************************
Reading File...
File 1-14 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 52, LB: 33start at time: 1503456318
thread: 3, MlBk is called with LB: 48, UB: 52
thread: 0, MlBk is called with LB: thread: 33, UB: 372, MlBk is called with LB: 43, UB: 
47 thread: 0, LongJobs.size() 21

thread: 1 thread: , MlBk is called with LB: 38, UB: 422
, LongJobs.size() 18
 thread: 1, LongJobs.size() 20
thread: 2, NSTable size: 19
thread: 2, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[thread][maxindex].elm[i]: 1
thread: 2, i: 6, alltableelemets[thread][maxindex].elm[i]: 5
thread: 2, i: 7, alltableelemets[thread][maxindex].elm[i]: 8
thread: 2, i: 8, alltableelemets[thread][maxindex].elm[i]: 4
thread: 2, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 0 0 2 3 3 5 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 0 1 2 3 1 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 1 2 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 , mySum: 3
thread: 2, maxBlockLvlSize: 2
thread: 2, maxInBlockLvlSize: 17
thread: 2, AllTableSize: 540, maxSubsetsSize: 64
 thread: 3, LongJobs.size() 17
thread: 3, NSTable size: 16
thread: 3, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[thread][maxindex].elm[i]: 2
thread: 3, i: 4, alltableelemets[thread][maxindex].elm[i]: 11
thread: 3, i: 5, alltableelemets[thread][maxindex].elm[i]: 4
thread: 3, i: 6, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 7, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 8, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 3 4 5 0 0 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 1 3 1 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 2 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
thread: 3, maxBlockLvlSize: 1
thread: 3, maxInBlockLvlSize: 11
thread: 3, AllTableSize: 180, maxSubsetsSize: 64
thread: 0, NSTable size: 21
thread: 0, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[thread][maxindex].elm[i]: 3
thread: 0, i: 5, alltableelemets[thread][maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[thread][maxindex].elm[i]: 5
thread: 0, i: 7, alltableelemets[thread][maxindex].elm[i]: 8
thread: 0, i: 8, alltableelemets[thread][maxindex].elm[i]: 4
thread: 0, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 0 4 2 3 3 5 0 0 0 0 0 0 0 
thread: 0, divisorComp: 0 0 0 0 1 1 2 3 1 0 0 0 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 1 2 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 , mySum: 3
thread: 0, maxBlockLvlSize: 2
thread: 0, maxInBlockLvlSize: 62
thread: 0, AllTableSize: 2160, maxSubsetsSize: 64
thread: 1, NSTable size: 29
thread: 1, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[thread][maxindex].elm[i]: 2
thread: 1, i: 5, alltableelemets[thread][maxindex].elm[i]: 1
thread: 1, i: 6, alltableelemets[thread][maxindex].elm[i]: 5
thread: 1, i: 7, alltableelemets[thread][maxindex].elm[i]: 8
thread: 1, i: 8, alltableelemets[thread][maxindex].elm[i]: 4
thread: 1, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 0 3 2 3 3 5 0 0 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 1 1 2 3 1 0 0 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 1 2 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 , mySum: 3
thread: 1, maxBlockLvlSize: 2
thread: 1, maxInBlockLvlSize: 48
thread: 1, AllTableSize: 1620, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 1 0 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 1 0 0 
cpuId: 3, dpoptimal: 6
copy the latest feasible solution to instance takes time: 0.04754
thread: 0, allBlocks[3]: 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[3]: 0 0 0 2 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 1 1 0 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[5]: 0 0 1 2 0 
cpuId: 2, dpoptimal: 8
copy the latest feasible solution to instance takes time: 0.114616
cpuId: 1, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.278423
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.140427
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 33, UB: 35
BKID: 0, LB: 33, UB: 35, OPT: 10
Dynamic Programming Runtime: 9.6904
Execution time between LB and UB is: 4
By far, all LB UB calculation runtime: 4
Iteration: 2, UB: 35, LB: 33start at time: 1503456322
thread: 0, MlBk is called with LB: 33, UB: 33
thread: 2, MlBk is called with LB: 35, UB: 35
thread: 1, MlBk is called with LB: 34, UB: 34
 thread: 2, LongJobs.size() 21
 thread: 0, LongJobs.size() 21
thread: 2, NSTable size: 21
thread: 2, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[thread][maxindex].elm[i]: 3
thread: 2, i: 5, alltableelemets[thread][maxindex].elm[i]: 1
thread: 2, i: 6, alltableelemets[thread][maxindex].elm[i]: 5
thread: 2, i: 7, alltableelemets[thread][maxindex].elm[i]: 8
thread: 2, i: 8, alltableelemets[thread][maxindex].elm[i]: 4
thread: 2, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 0 4 2 3 3 5 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 1 1 2 3 1 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 1 2 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 , mySum: 3
 thread: 1, LongJobs.size() 21
thread: 0, NSTable size: 19
thread: 0, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[thread][maxindex].elm[i]: 3
thread: 0, i: 5, alltableelemets[thread][maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[thread][maxindex].elm[i]: 5
thread: 0, i: 7, alltableelemets[thread][maxindex].elm[i]: 8
thread: 0, i: 8, alltableelemets[thread][maxindex].elm[i]: 4
thread: 0, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 0 4 2 3 3 5 0 0 0 0 0 0 0 
thread: 0, divisorComp: 0 0 0 0 1 1 2 3 1 0 0 0 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 1 2 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 , mySum: 3
thread: 2, maxBlockLvlSize: 2
thread: 2, maxInBlockLvlSize: 62
thread: 2, AllTableSize: 2160, maxSubsetsSize: 64
thread: 1, NSTable size: 21
thread: 1, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[thread][maxindex].elm[i]: 3
thread: 1, i: 5, alltableelemets[thread][maxindex].elm[i]: 1
thread: 1, i: 6, alltableelemets[thread][maxindex].elm[i]: 5
thread: 1, i: 7, alltableelemets[thread][maxindex].elm[i]: 8
thread: 1, i: 8, alltableelemets[thread][maxindex].elm[i]: 4
thread: 1, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 0 4 2 3 3 5 0 0 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 1 1 2 3 1 0 0 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 1 2 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 , mySum: 3
thread: 0, maxBlockLvlSize: 2
thread: 0, maxInBlockLvlSize: 62
thread: 0, AllTableSize: 2160, maxSubsetsSize: 64
thread: 1, maxBlockLvlSize: 2
thread: 1, maxInBlockLvlSize: 62
thread: 1, AllTableSize: 2160, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 1 0 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 1 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[3]: 0 0 0 2 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 1 1 0 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[5]: 0 0 1 2 0 
cpuId: 2, dpoptimal: 10
cpuId: 0, dpoptimal: 10
cpuId: 1, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.696409
copy the latest feasible solution to instance takes time: 0.690759
copy the latest feasible solution to instance takes time: 0.725637
BKID: 0, LB: 33, UB: 33, OPT: 10
Dynamic Programming Runtime: 11.4264
Execution time between LB and UB is: 4
By far, all LB UB calculation runtime: 8
********************************************************
Total execution on UB and LB is: 8
OUT of Bk while loop  
UB    33
LB    33
T1    33
T2    33
OPT   10
nMachines   10
AllProbData.size()    2
ck :   1
AllProbData[ck].Ttable    33
ck :   0
AllProbData[ck].Ttable    35
Final OptimalSchedule
FinalMakespan34
Main Scheduling is Done
File 1-14 is Done.
******************************
Reading File...
File 1-15 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 52, LB: 33start at time: 1503456326
thread: thread: 2, MlBk is called with LB: 143, MlBk is called with LB: , UB: 47
38, UB: 42
thread: 0, MlBk is called with LB: 33, UB: 37
 thread: 2, LongJobs.size() 20
thread: 3, MlBk is called with LB: 48, UB: 52
 thread: 0, LongJobs.size() 21
 thread: 1, LongJobs.size() 21
 thread: 3, LongJobs.size() 17
thread: 3, NSTable size: 18
thread: 3, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[thread][maxindex].elm[i]: 6
thread: 3, i: 4, alltableelemets[thread][maxindex].elm[i]: 6
thread: 3, i: 5, alltableelemets[thread][maxindex].elm[i]: 5
thread: 3, i: 6, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 7, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 8, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 7 7 3 0 0 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 1 1 2 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 0 1 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
thread: 3, maxBlockLvlSize: 1
thread: 3, maxInBlockLvlSize: 19
thread: 3, AllTableSize: 294, maxSubsetsSize: 64
thread: 2, NSTable size: 24
thread: 2, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[thread][maxindex].elm[i]: 5
thread: 2, i: 6, alltableelemets[thread][maxindex].elm[i]: 4
thread: 2, i: 7, alltableelemets[thread][maxindex].elm[i]: 6
thread: 2, i: 8, alltableelemets[thread][maxindex].elm[i]: 5
thread: 2, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 0 0 3 5 7 3 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 0 2 1 1 2 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 1 0 0 1 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 2
thread: 0, NSTable size: 19
thread: 0, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[thread][maxindex].elm[i]: 1
thread: 0, i: 5, alltableelemets[thread][maxindex].elm[i]: 5
thread: 0, i: 6, alltableelemets[thread][maxindex].elm[i]: 4
thread: 0, i: 7, alltableelemets[thread][maxindex].elm[i]: 6
thread: 0, i: 8, alltableelemets[thread][maxindex].elm[i]: 5
thread: thread: 1, NSTable size: 029, i: 9, alltableelemets[thread][maxindex].elm[i]: 0

thread: 0, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: thread: 1, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 112, alltableelemets[thread][maxindex].elm[i]: , alltableelemets[thread][maxindex].elm[i]: 00
thread: 0, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 
13thread: 1, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
, alltableelemets[thread][maxindex].elm[i]: thread: 1, i: 04
, alltableelemets[thread][maxindex].elm[i]: thread: 0, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[thread][maxindex].elm[i]: 0
1
thread: 1, i: 5, alltableelemets[thread][maxindex].elm[i]: 5
thread: 1, i: 6, alltableelemets[thread][maxindex].elm[i]: 4
thread: 1, i: 7, alltableelemets[thread][maxindex].elm[i]: 6
thread: 1, i: 8, alltableelemets[thread][maxindex].elm[i]: 5
thread: 1, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 12
, alltableelemets[thread][maxindex].elm[i]: thread: 0, blockDimSizeComp: 0 0 0 0 2 3 5 70 3 0 
0thread: 1, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[thread][maxindex].elm[i]: 0
 0 0 0 0 0 
thread: 0, divisorComp: 0 0 0 0 1 2 1 1 2 0 0 0 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 1 0 0 1 

thread: 1, blockDimSizeComp: 0 0 0 0 2 3 5 7 3 0 0 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 1 2 1 1 2 0thread:  00 , allBlocks: 0 0 00  00  00 
thread: 1, largestBlockVec: 0 0 0 0 0 1 0 0  0 0 0 10  00  00 0 0  00  0 00  0 
0 thread: 1, largestNoZeroBlockVec: 0 1 0 0 1 
0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 1 0 thread: 01 0, allBlocks:  0 00  00 0  , mySum: 02 0
 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 2
thread: 2, maxBlockLvlSize: 2
thread: 2, maxInBlockLvlSize: 43
thread: 2, AllTableSize: 1260, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 2
thread: 0, maxInBlockLvlSize: 84
thread: 0, AllTableSize: 2520, maxSubsetsSize: 64
thread: 1, maxBlockLvlSize: 2
thread: 1, maxInBlockLvlSize: 84
thread: 1, AllTableSize: 2520, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 1 0 0 0 
cpuId: 3, dpoptimal: 6
copy the latest feasible solution to instance takes time: 0.069296
thread: 0, allBlocks[3]: 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[3]: 0 1 0 0 1 
cpuId: 2, dpoptimal: 8
copy the latest feasible solution to instance takes time: 0.336829
cpuId: 0, dpoptimal: 10
cpuId: 1, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.463331
copy the latest feasible solution to instance takes time: 0.456141
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 33, UB: 35
BKID: 0, LB: 33, UB: 35, OPT: 10
Dynamic Programming Runtime: 17.5579
Execution time between LB and UB is: 7
By far, all LB UB calculation runtime: 7
Iteration: 2, UB: 35, LB: 33start at time: 1503456333
thread: thread: 01, MlBk is called with LB: , MlBk is called with LB: 3334, UB: , UB: 3334

thread: 2, MlBk is called with LB: 35, UB: 35
 thread: 2, LongJobs.size() 21
 thread: 0, LongJobs.size() 21
thread: 2, NSTable size: 19
thread: 2, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[thread][maxindex].elm[i]: 1
thread: 2, i: 5, alltableelemets[thread][maxindex].elm[i]: 5
thread: 2, i: 6, alltableelemets[thread][maxindex].elm[i]: 4
thread: 2, i: 7, alltableelemets[thread][maxindex].elm[i]: 6
thread: 2, i: 8, alltableelemets[thread][maxindex].elm[i]: 5
thread: 2, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 0 2 3 5 7 3 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 1 2 1 1 2 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 1 0 0 1 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 2
 thread: 1, LongJobs.size() 21
thread: 1, NSTable size: 19
thread: 1, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[thread][maxindex].elm[i]: 1
thread: 1, i: 5, alltableelemets[thread][maxindex].elm[i]: 5
thread: 1, i: 6, alltableelemets[thread][maxindex].elm[i]: 4
thread: 1, i: 7, alltableelemets[thread][maxindex].elm[i]: 6
thread: 1, i: 8, alltableelemets[thread][maxindex].elm[i]: 5
thread: 1, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 0 2 3 5 7 3 0 0 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 1 2 1 1 2 0 0 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 1 0 0 1 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 2
thread: 0, NSTable size: 17
thread: 0, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[thread][maxindex].elm[i]: 1
thread: 0, i: 5, alltableelemets[thread][maxindex].elm[i]: 5
thread: 0, i: 6, alltableelemets[thread][maxindex].elm[i]: 4
thread: 0, i: 7, alltableelemets[thread][maxindex].elm[i]: 6
thread: 0, i: 8, alltableelemets[thread][maxindex].elm[i]: 5
thread: 0, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 0 2 3 5 7 3 0 0 0 0 0 0 0 
thread: 0, divisorComp: 0 0 0 0 1 2 1 1 2 0 0 0 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 1 0 0 1 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 2
thread: 2, maxBlockLvlSize: 2
thread: 2, maxInBlockLvlSize: 84
thread: 2, AllTableSize: 2520, maxSubsetsSize: 64
thread: 1, maxBlockLvlSize: 2
thread: 1, maxInBlockLvlSize: 84
thread: 1, AllTableSize: 2520, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 2
thread: 0, maxInBlockLvlSize: 84
thread: 0, AllTableSize: 2520, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 1 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[3]: 0 1 0 0 1 
cpuId: 1, dpoptimal: 10
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 7e-06
cpuId: 2, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.466336
copy the latest feasible solution to instance takes time: 0.448741
BKID: 0, LB: 34, UB: 34, OPT: 11
Dynamic Programming Runtime: 14.3832
Execution time between LB and UB is: 5
By far, all LB UB calculation runtime: 12
********************************************************
Total execution on UB and LB is: 12
OUT of Bk while loop  
UB    34
LB    34
T1    33
T2    34
OPT   11
nMachines   10
AllProbData.size()    2
ck :   1
AllProbData[ck].Ttable    34
ck :   0
AllProbData[ck].Ttable    35
Final OptimalSchedule
FinalMakespan36
Main Scheduling is Done
File 1-15 is Done.
******************************
Reading File...
File 1-16 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 49, LB: 30start at time: 1503456338
thread: thread: thread: 20, MlBk is called with LB: 1, MlBk is called with LB: 4030, UB: , MlBk is called with LB: 35, UB: 39
thread: 3, MlBk is called with LB: 45, UB: 49
 thread: 1, LongJobs.size() 21
, UB: 44
34
 thread: 2, LongJobs.size() 20
 thread: 0, LongJobs.size() 21
 thread: 3, LongJobs.size() 17
thread: 3, NSTable size: 27
thread: 3, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 5, alltableelemets[thread][maxindex].elm[i]: 5
thread: 3, i: 6, alltableelemets[thread][maxindex].elm[i]: 6
thread: 3, i: 7, alltableelemets[thread][maxindex].elm[i]: 3
thread: 3, i: 8, alltableelemets[thread][maxindex].elm[i]: 3
thread: 3, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 0 0 3 7 2 4 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 0 0 2 1 2 1 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 1 0 1 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
thread: 3, maxBlockLvlSize: 2
thread: 3, maxInBlockLvlSize: 24
thread: 3, AllTableSize: 672, maxSubsetsSize: 64
thread: 2, NSTable size: 41
thread: 2, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[thread][maxindex].elm[i]: 3
thread: 2, i: 5, alltableelemets[thread][maxindex].elm[i]: 5
thread: 2, i: 6, alltableelemets[thread][maxindex].elm[i]: 6
thread: 2, i: 7, alltableelemets[thread][maxindex].elm[i]: 3
thread: 2, i: 8, alltableelemets[thread][maxindex].elm[i]: 3
thread: 2, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 0 2 3 7 4 4 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 2 2 1 1 1 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 1 1 0 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
thread: 1, NSTable size: 27
thread: 1, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[thread][maxindex].elm[i]: 4
thread: 1, i: 5, alltableelemets[thread][maxindex].elm[i]: 5
thread: 1, i: 6, alltableelemets[thread][maxindex].elm[i]: 6
thread: 1, i: 7, alltableelemets[thread][maxindex].elm[i]: 3
thread: 1, i: 8, alltableelemets[thread][maxindex].elm[i]: 3
thread: 1, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 0 5 3 7 4 4 0 0 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 1 2 1 1 1 0 0 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 1 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
thread: 0, NSTable size: 20
thread: 0, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[thread][maxindex].elm[i]: 4
thread: 0, i: 5, alltableelemets[thread][maxindex].elm[i]: 5
thread: 0, i: 6, alltableelemets[thread][maxindex].elm[i]: 6
thread: 0, i: 7, alltableelemets[thread][maxindex].elm[i]: 3
thread: 0, i: 8, alltableelemets[thread][maxindex].elm[i]: 3
thread: 0, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 0 5 3 7 4 4 0 0 0 0 0 0 0 
thread: 0, divisorComp: 0 0 0 0 1 2 1 1 1 0 0 0 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 1 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
thread: 2, maxBlockLvlSize: 2
thread: 2, maxInBlockLvlSize: 90
thread: 2, AllTableSize: 2688, maxSubsetsSize: 64
thread: 1, maxBlockLvlSize: 1
thread: 1, maxInBlockLvlSize: 210
thread: 1, AllTableSize: 3360, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 1
thread: 0, maxInBlockLvlSize: 210
thread: 0, AllTableSize: 3360, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 1 0 0 0 
cpuId: 3, dpoptimal: 6
copy the latest feasible solution to instance takes time: 0.277308
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.866343
cpuId: 1, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.42123
cpuId: 2, dpoptimal: 7
copy the latest feasible solution to instance takes time: 0.164286
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 30, UB: 32
BKID: 0, LB: 30, UB: 32, OPT: 10
Dynamic Programming Runtime: 40.7972
Execution time between LB and UB is: 17
By far, all LB UB calculation runtime: 17
Iteration: 2, UB: 32, LB: 30start at time: 1503456355
thread: 0, MlBk is called with LB: 30, UB: 30
thread: 2, MlBk is called with LB: 32, UB: 32
thread: 1, MlBk is called with LB: 31, UB: 31
 thread: 0, LongJobs.size() 21
 thread: 2, LongJobs.size() 21
 thread: 1, LongJobs.size() 21
thread: 2, NSTable size: 20
thread: 2, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[thread][maxindex].elm[i]: 4
thread: 2, i: 5, alltableelemets[thread][maxindex].elm[i]: 5
thread: 2, i: 6, alltableelemets[thread][maxindex].elm[i]: 6
thread: 2, i: 7, alltableelemets[thread][maxindex].elm[i]: 3
thread: 2, i: 8, alltableelemets[thread][maxindex].elm[i]: 3
thread: 2, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 0 5 3 7 4 4 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 1 2 1 1 1 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 1 0 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
thread: 2, maxBlockLvlSize: 1
thread: 2, maxInBlockLvlSize: 210
thread: 2, AllTableSize: 3360, maxSubsetsSize: 64
thread: 1, NSTable size: 32
thread: 1, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 7, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 8, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 9, alltableelemets[thread][maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[thread][maxindex].elm[i]: 3
thread: 1, i: 11, alltableelemets[thread][maxindex].elm[i]: 4
thread: 1, i: 12, alltableelemets[thread][maxindex].elm[i]: 1
thread: 1, i: 13, alltableelemets[thread][maxindex].elm[i]: 3
thread: 1, i: 14, alltableelemets[thread][maxindex].elm[i]: 3
thread: 1, i: 15, alltableelemets[thread][maxindex].elm[i]: 6

thread: 1, blockDimSizeComp: 0 0 0 0 0 0 0 0 0 2 2 5 2 4 4 7 
thread: 1, divisorComp: 0 0 0 0 0 0 0 0 0 1 2 1 1 1 1 1 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 1 0 0 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
thread: 0, NSTable size: 31
thread: 0, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 8, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[thread][maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[thread][maxindex].elm[i]: 3
thread: 0, i: 11, alltableelemets[thread][maxindex].elm[i]: 4
thread: 0, i: 12, alltableelemets[thread][maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[thread][maxindex].elm[i]: 3
thread: 0, i: 14, alltableelemets[thread][maxindex].elm[i]: 3
thread: 0, i: 15, alltableelemets[thread][maxindex].elm[i]: 6

thread: 0, blockDimSizeComp: 0 0 0 0 0 0 0 0 0 2 2 5 2 4 4 7 
thread: 0, divisorComp: 0 0 0 0 0 0 0 0 0 1 2 1 1 1 1 1 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 1 0 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
thread: 1, maxBlockLvlSize: 1
thread: 1, maxInBlockLvlSize: 552
thread: 1, AllTableSize: 8960, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 1
thread: 0, maxInBlockLvlSize: 552
thread: 0, AllTableSize: 8960, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 1 0 0 0 0 0 
cpuId: 0, gpu thread: 48, j: 487, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 6, it's NS: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 5
elm offset: 4721, myOPT: 5, optOffset: 31168, optVecIndex: 1, indexomp: 439, ii: 6, blockLvl: 1, blockIDInLvl: 0, dev_counterVec[320]: 0
cpuId: 0, gpu thread: 48, j: 487, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 6, it's NS: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 6
elm offset: 863, myOPT: 6, optOffset: 31168, optVecIndex: 2, indexomp: 439, ii: 6, blockLvl: 1, blockIDInLvl: 0, dev_counterVec[320]: 0
cpuId: 0, gpu thread: 48, j: 487, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 6, it's NS: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 5
elm offset: 569, myOPT: 5, optOffset: 31168, optVecIndex: 3, indexomp: 439, ii: 6, blockLvl: 1, blockIDInLvl: 0, dev_counterVec[320]: 0
cpuId: 0, gpu thread: 48, j: 487, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 6, it's NS: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6
elm offset: 487, myOPT: 6, optOffset: 31168, optVecIndex: 4, indexomp: 439, ii: 6, blockLvl: 1, blockIDInLvl: 0, dev_counterVec[320]: 0
cpuId: 2, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.734291
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 4e-06
cpuId: 1, dpoptimal: 11
copy the latest feasible solution to instance takes time: 2e-06
BKID: 0, LB: 32, UB: 32, OPT: 11
Dynamic Programming Runtime: 140.926
Execution time between LB and UB is: 48
By far, all LB UB calculation runtime: 65
********************************************************
Total execution on UB and LB is: 65
OUT of Bk while loop  
UB    32
LB    32
T1    31
T2    32
OPT   11
nMachines   10
AllProbData.size()    2
ck :   1
AllProbData[ck].Ttable    32
ck :   0
AllProbData[ck].Ttable    32
Final OptimalSchedule
FinalMakespan34
Main Scheduling is Done
File 1-16 is Done.
******************************
Reading File...
File 1-17 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 51, LB: 32start at time: 1503456403
thread: thread: 12, MlBk is called with LB: 42, MlBk is called with LB: , UB: 3746, UB: 41

thread: 3, MlBk is called with LB: 47, UB: 51
 thread: 1, LongJobs.size() 21
 thread: 2, LongJobs.size() 18
thread: 0, MlBk is called with LB: 32, UB: 36
 thread: 0, LongJobs.size() 21
thread: 2, NSTable size: 24
thread: 2, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[thread][maxindex].elm[i]: 4
thread: 2, i: 6, alltableelemets[thread][maxindex].elm[i]: 5
thread: 2, i: 7, alltableelemets[thread][maxindex].elm[i]: 5
thread: 2, i: 8, alltableelemets[thread][maxindex].elm[i]: 4
thread: 2, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 0 0 5 3 3 5 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 0 1 2 2 1 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 1 1 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
 thread: 3, LongJobs.size() 16
thread: 3, NSTable size: 18
thread: 3, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[thread][maxindex].elm[i]: 5
thread: 3, i: 4, alltableelemets[thread][maxindex].elm[i]: 7
thread: 3, i: 5, alltableelemets[thread][maxindex].elm[i]: 4
thread: 3, i: 6, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 7, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 8, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 3 4 5 0 0 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 2 2 1 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 1 1 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
thread: 3, maxBlockLvlSize: 2
thread: 3, maxInBlockLvlSize: 11
thread: 3, AllTableSize: 240, maxSubsetsSize: 64
thread: 2, maxBlockLvlSize: 2
thread: 2, maxInBlockLvlSize: 37
thread: 2, AllTableSize: 900, maxSubsetsSize: 64
thread: 1, NSTable size: 31
thread: 1, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[thread][maxindex].elm[i]: 3
thread: 1, i: 5, alltableelemets[thread][maxindex].elm[i]: 4
thread: 1, i: 6, alltableelemets[thread][maxindex].elm[i]: 5
thread: 1, i: 7, alltableelemets[thread][maxindex].elm[i]: 5
thread: 1, i: 8, alltableelemets[thread][maxindex].elm[i]: 4
thread: 1, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 0 4 5 3 3 5 0 0 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 1 1 2 2 1 0 0 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 1 1 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
thread: 0, NSTable size: 23
thread: 0, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[thread][maxindex].elm[i]: 3
thread: 0, i: 5, alltableelemets[thread][maxindex].elm[i]: 4
thread: 0, i: 6, alltableelemets[thread][maxindex].elm[i]: 5
thread: 0, i: 7, alltableelemets[thread][maxindex].elm[i]: 5
thread: 0, i: 8, alltableelemets[thread][maxindex].elm[i]: 4
thread: 0, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 0 4 5 3 3 5 0 0 0 0 0 0 0 
thread: 0, divisorComp: 0 0 0 0 1 1 2 2 1 0 0 0 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 1 1 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
thread: 1, maxBlockLvlSize: 2
thread: 1, maxInBlockLvlSize: 132
thread: 1, AllTableSize: 3600, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 2
thread: 0, maxInBlockLvlSize: 132
thread: 0, AllTableSize: 3600, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 1 0 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 1 0 0 
cpuId: 3, dpoptimal: 5
copy the latest feasible solution to instance takes time: 0.066966
thread: 0, allBlocks[3]: 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[3]: 0 0 1 1 0 
cpuId: 2, dpoptimal: 7
copy the latest feasible solution to instance takes time: 0.216059
cpuId: 1, dpoptimal: 9
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.650723
copy the latest feasible solution to instance takes time: 0.637845
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 32, UB: 34
BKID: 0, LB: 32, UB: 34, OPT: 10
Dynamic Programming Runtime: 23.7599
Execution time between LB and UB is: 8
By far, all LB UB calculation runtime: 8
Iteration: 2, UB: 34, LB: 32start at time: 1503456411
thread: 2, MlBk is called with LB: 34, UB: 34
thread: 0, MlBk is called with LB: 32, UB: 32thread: 
1, MlBk is called with LB: 33, UB: 33
 thread: 2, LongJobs.size() 21
 thread: 0, LongJobs.size() 21
thread: 2, NSTable size: 23
thread: 2, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[thread][maxindex].elm[i]: 3
thread: 2, i: 5, alltableelemets[thread][maxindex].elm[i]: 4
thread: 2, i: 6, alltableelemets[thread][maxindex].elm[i]: 5
thread: 2, i: 7, alltableelemets[thread][maxindex].elm[i]: 5
thread: 2, i: 8, alltableelemets[thread][maxindex].elm[i]: 4
thread: 2, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 0 4 5 3 3 5 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 1 1 2 2 1 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 1 1 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
 thread: 1, LongJobs.size() 21
thread: 2, maxBlockLvlSize: 2
thread: 2, maxInBlockLvlSize: 132
thread: 2, AllTableSize: 3600, maxSubsetsSize: 64
thread: 0, NSTable size: 20
thread: 0, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[thread][maxindex].elm[i]: 3
thread: 0, i: 5, alltableelemets[thread][maxindex].elm[i]: 4
thread: 0, i: 6, alltableelemets[thread][maxindex].elm[i]: 5
thread: 0, i: 7, alltableelemets[thread][maxindex].elm[i]: 5
thread: 0, i: 8, alltableelemets[thread][maxindex].elm[i]: 4
thread: 0, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 0 4 5 3 3 5 0 0 0 0 0 0 0 
thread: 0, divisorComp: 0 0 0 0 1 1 2 2 1 0 0 0 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 1 1 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
thread: 1, NSTable size: 20
thread: 1, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[thread][maxindex].elm[i]: 3
thread: 1, i: 5, alltableelemets[thread][maxindex].elm[i]: 4
thread: 1, i: 6, alltableelemets[thread][maxindex].elm[i]: 5
thread: 1, i: 7, alltableelemets[thread][maxindex].elm[i]: 5
thread: 1, i: 8, alltableelemets[thread][maxindex].elm[i]: 4
thread: 1, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 0 4 5 3 3 5 0 0 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 1 1 2 2 1 0 0 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 1 1 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
thread: 0, maxBlockLvlSize: 2
thread: 0, maxInBlockLvlSize: 132
thread: 0, AllTableSize: 3600, maxSubsetsSize: 64
thread: 1, maxBlockLvlSize: 2
thread: 1, maxInBlockLvlSize: 132
thread: 1, AllTableSize: 3600, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 1 0 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 1 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[3]: 0 0 1 1 0 
cpuId: 1, dpoptimal: 10
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.929864
cpuId: 2, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.817356
copy the latest feasible solution to instance takes time: 0.358243
BKID: 0, LB: 32, UB: 32, OPT: 10
Dynamic Programming Runtime: 20.4911
Execution time between LB and UB is: 8
By far, all LB UB calculation runtime: 16
********************************************************
Total execution on UB and LB is: 16
OUT of Bk while loop  
UB    32
LB    32
T1    32
T2    32
OPT   10
nMachines   10
AllProbData.size()    2
ck :   1
AllProbData[ck].Ttable    32
ck :   0
AllProbData[ck].Ttable    34
Final OptimalSchedule
FinalMakespan34
Main Scheduling is Done
File 1-17 is Done.
******************************
Reading File...
File 1-18 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 48, LB: 29start at time: 1503456419
thread: thread: 1, MlBk is called with LB: 34, UB: 380
, MlBk is called with LB: 29, UB: 33
thread: 2, MlBk is called with LB: 39, UB: 43
 thread: thread: 3, MlBk is called with LB: 44, UB: 48
 thread: 2, LongJobs.size() 17
 thread: 10, LongJobs.size() 21, LongJobs.size() 
21
 thread: 3, LongJobs.size() 14
thread: 3, NSTable size: 27
thread: 3, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 5, alltableelemets[thread][maxindex].elm[i]: 5
thread: 3, i: 6, alltableelemets[thread][maxindex].elm[i]: 3
thread: 3, i: 7, alltableelemets[thread][maxindex].elm[i]: 2
thread: 3, i: 8, alltableelemets[thread][maxindex].elm[i]: 4
thread: 3, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 0 0 3 2 3 5 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 0 0 2 2 1 1 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 1 1 0 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
thread: 2, NSTable size: 35
thread: 2, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[thread][maxindex].elm[i]: 3
thread: 2, i: 5, alltableelemets[thread][maxindex].elm[i]: 5
thread: 2, i: 6, alltableelemets[thread][maxindex].elm[i]: 3
thread: 2, i: 7, alltableelemets[thread][maxindex].elm[i]: 2
thread: 2, i: 8, alltableelemets[thread][maxindex].elm[i]: 4
thread: 2, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 0 2 3 4 3 5 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 2 2 1 1 1 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 1 1 0 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
thread: 3, maxBlockLvlSize: 2
thread: 3, maxInBlockLvlSize: 17
thread: 3, AllTableSize: 360, maxSubsetsSize: 64
thread: 1, NSTable size: 27
thread: 1, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[thread][maxindex].elm[i]: 7
thread: 1, i: 5, alltableelemets[thread][maxindex].elm[i]: 5
thread: 1, i: 6, alltableelemets[thread][maxindex].elm[i]: 3
thread: 1, i: 7, alltableelemets[thread][maxindex].elm[i]: 2
thread: 1, i: 8, alltableelemets[thread][maxindex].elm[i]: 4
thread: 1, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 0 4 3 4 3 5 0 0 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 2 2 1 1 1 0 0 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 1 1 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
thread: 2, maxBlockLvlSize: 2
thread: 2, maxInBlockLvlSize: 62
thread: 2, AllTableSize: 1440, maxSubsetsSize: 64
thread: 1, maxBlockLvlSize: 2
thread: 1, maxInBlockLvlSize: 114
thread: 1, AllTableSize: 2880, maxSubsetsSize: 64
thread: 0, NSTable size: 28
thread: 0, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 8, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[thread][maxindex].elm[i]: 4
thread: 0, i: 10, alltableelemets[thread][maxindex].elm[i]: 3
thread: 0, i: 11, alltableelemets[thread][maxindex].elm[i]: 2
thread: 0, i: 12, alltableelemets[thread][maxindex].elm[i]: 3
thread: 0, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[thread][maxindex].elm[i]: 3
thread: 0, i: 15, alltableelemets[thread][maxindex].elm[i]: 6

thread: 0, blockDimSizeComp: 0 0 0 0 0 0 0 0 0 5 2 3 4 0 4 7 
thread: 0, divisorComp: 0 0 0 0 0 0 0 0 0 1 2 1 1 0 1 1 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 1 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
thread: 0, maxBlockLvlSize: 1
thread: 0, maxInBlockLvlSize: 411
thread: 0, AllTableSize: 6720, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 1 0 0 0 0 
cpuId: 3, dpoptimal: 5
copy the latest feasible solution to instance takes time: 0.100145
cpuId: 0, gpu thread: 128, j: 464, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 6, it's NS: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 5
elm offset: 3640, myOPT: 5, optOffset: 29696, optVecIndex: 1, indexomp: 336, ii: 6, blockLvl: 1, blockIDInLvl: 0, dev_counterVec[240]: 1
cpuId: 0, gpu thread: 128, j: 464, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 6, it's NS: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 6
elm offset: 789, myOPT: 6, optOffset: 29696, optVecIndex: 2, indexomp: 336, ii: 6, blockLvl: 1, blockIDInLvl: 0, dev_counterVec[240]: 1
cpuId: 0, gpu thread: 128, j: 464, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 6, it's NS: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 5
elm offset: 553, myOPT: 5, optOffset: 29696, optVecIndex: 3, indexomp: 336, ii: 6, blockLvl: 1, blockIDInLvl: 0, dev_counterVec[240]: 1
cpuId: 0, gpu thread: 128, j: 464, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 6, it's NS: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6
elm offset: 464, myOPT: 6, optOffset: 29696, optVecIndex: 4, indexomp: 336, ii: 6, blockLvl: 1, blockIDInLvl: 0, dev_counterVec[240]: 1
cpuId: 2, dpoptimal: 6
copy the latest feasible solution to instance takes time: 0.36371
cpuId: 1, dpoptimal: 8
copy the latest feasible solution to instance takes time: 0.354248
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.372764
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 29, UB: 31
BKID: 0, LB: 29, UB: 31, OPT: 10
Dynamic Programming Runtime: 68.8273
Execution time between LB and UB is: 32
By far, all LB UB calculation runtime: 32
Iteration: 2, UB: 31, LB: 29start at time: 1503456451
thread: 0, MlBk is called with LB: 29, UB: 29
thread: 1, MlBk is called with LB: 30, UB: 30
thread: 2, MlBk is called with LB: 31, UB: 31
 thread: 2, LongJobs.size() 21
 thread: 1, LongJobs.size() 21
 thread: 0, LongJobs.size() 21
thread: 2, NSTable size: 28
thread: 2, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 6, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 7, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 8, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 9, alltableelemets[thread][maxindex].elm[i]: 4
thread: 2, i: 10, alltableelemets[thread][maxindex].elm[i]: 3
thread: 2, i: 11, alltableelemets[thread][maxindex].elm[i]: 2
thread: 2, i: 12, alltableelemets[thread][maxindex].elm[i]: 3
thread: 2, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[thread][maxindex].elm[i]: 3
thread: 2, i: 15, alltableelemets[thread][maxindex].elm[i]: 6

thread: 2, blockDimSizeComp: 0 0 0 0 0 0 0 0 0 5 2 3 4 0 4 7 
thread: 2, divisorComp: 0 0 0 0 0 0 0 0 0 1 2 1 1 0 1 1 
thread: 2, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 1 0 0 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
thread: 1, NSTable size: 26
thread: 1, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 7, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 8, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 9, alltableelemets[thread][maxindex].elm[i]: 4
thread: 1, i: 10, alltableelemets[thread][maxindex].elm[i]: 3
thread: 1, i: 11, alltableelemets[thread][maxindex].elm[i]: 2
thread: 1, i: 12, alltableelemets[thread][maxindex].elm[i]: 3
thread: 1, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[thread][maxindex].elm[i]: 3
thread: 1, i: 15, alltableelemets[thread][maxindex].elm[i]: 6

thread: 1, blockDimSizeComp: 0 0 0 0 0 0 0 0 0 5 2 3 4 0 4 7 
thread: 1, divisorComp: 0 0 0 0 0 0 0 0 0 1 2 1 1 0 1 1 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 1 0 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
thread: 0, NSTable size: 24
thread: 0, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 8, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[thread][maxindex].elm[i]: 4
thread: 0, i: 10, alltableelemets[thread][maxindex].elm[i]: 3
thread: 0, i: 11, alltableelemets[thread][maxindex].elm[i]: 2
thread: 0, i: 12, alltableelemets[thread][maxindex].elm[i]: 3
thread: 0, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[thread][maxindex].elm[i]: 3
thread: 0, i: 15, alltableelemets[thread][maxindex].elm[i]: 6

thread: 0, blockDimSizeComp: 0 0 0 0 0 0 0 0 0 5 2 3 4 0 4 7 
thread: 0, divisorComp: 0 0 0 0 0 0 0 0 0 1 2 1 1 0 1 1 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 1 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
thread: 2, maxBlockLvlSize: 1
thread: 2, maxInBlockLvlSize: 411
thread: 2, AllTableSize: 6720, maxSubsetsSize: 64
thread: 1, maxBlockLvlSize: 1
thread: 1, maxInBlockLvlSize: 411
thread: 1, AllTableSize: 6720, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 1
thread: 0, maxInBlockLvlSize: 411
thread: 0, AllTableSize: 6720, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 1 0 0 0 0 
cpuId: 0, gpu thread: 128, j: 464, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 6, it's NS: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 5
elm offset: 3640, myOPT: 5, optOffset: 29696, optVecIndex: 1, indexomp: 336, ii: 6, blockLvl: 1, blockIDInLvl: 0, dev_counterVec[240]: 0
cpuId: 0, gpu thread: 128, j: 464, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 6, it's NS: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 6
elm offset: 789, myOPT: 6, optOffset: 29696, optVecIndex: 2, indexomp: 336, ii: 6, blockLvl: 1, blockIDInLvl: 0, dev_counterVec[240]: 0
cpuId: 0, gpu thread: 128, j: 464, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 6, it's NS: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 5
elm offset: 553, myOPT: 5, optOffset: 29696, optVecIndex: 3, indexomp: 336, ii: 6, blockLvl: 1, blockIDInLvl: 0, dev_counterVec[240]: 0
cpuId: 0, gpu thread: 128, j: 464, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 6, it's NS: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6
elm offset: 464, myOPT: 6, optOffset: 29696, optVecIndex: 4, indexomp: 336, ii: 6, blockLvl: 1, blockIDInLvl: 0, dev_counterVec[240]: 0
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 7e-06
cpuId: 2, dpoptimal: 10
cpuId: 1, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.973214
copy the latest feasible solution to instance takes time: 0.94325
BKID: 0, LB: 30, UB: 30, OPT: 11
Dynamic Programming Runtime: 89.7977
Execution time between LB and UB is: 31
By far, all LB UB calculation runtime: 63
********************************************************
Total execution on UB and LB is: 63
OUT of Bk while loop  
UB    30
LB    30
T1    29
T2    30
OPT   11
nMachines   10
AllProbData.size()    2
ck :   1
AllProbData[ck].Ttable    30
ck :   0
AllProbData[ck].Ttable    31
Final OptimalSchedule
FinalMakespan31
Main Scheduling is Done
File 1-18 is Done.
******************************
Reading File...
File 1-19 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 49, LB: 30start at time: 1503456482
thread: 2, MlBk is called with LB: 40, UB: 44
thread: 0, MlBk is called with LB: 30, UB: 34
 thread: 2, LongJobs.size() 18
thread:  thread: 0, LongJobs.size() 21
1, MlBk is called with LB: 35, UB: 39
 thread: 1, LongJobs.size() 21
thread: 3, MlBk is called with LB: 45, UB: 49
 thread: 3, LongJobs.size() 15
thread: 2, NSTable size: 37
thread: 2, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[thread][maxindex].elm[i]: 3
thread: 2, i: 5, alltableelemets[thread][maxindex].elm[i]: 5
thread: 2, i: 6, alltableelemets[thread][maxindex].elm[i]: 1
thread: 2, i: 7, alltableelemets[thread][maxindex].elm[i]: 6
thread: 2, i: 8, alltableelemets[thread][maxindex].elm[i]: 3
thread: 2, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 0 2 3 2 7 4 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 2 2 1 1 1 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 1 1 0 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
thread: 3, NSTable size: 22
thread: 3, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 5, alltableelemets[thread][maxindex].elm[i]: 5
thread: 3, i: 6, alltableelemets[thread][maxindex].elm[i]: 1
thread: 3, i: 7, alltableelemets[thread][maxindex].elm[i]: 6
thread: 3, i: 8, alltableelemets[thread][maxindex].elm[i]: 3
thread: 3, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 0 0 3 2 7 2 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 0 0 2 1 1 2 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 1 0 0 1 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 2
thread: 3, maxBlockLvlSize: 2
thread: 3, maxInBlockLvlSize: 12
thread: 3, AllTableSize: 336, maxSubsetsSize: 64
thread: 0, NSTable size: 19
thread: 0, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[thread][maxindex].elm[i]: 6
thread: 0, i: 5, alltableelemets[thread][maxindex].elm[i]: 5
thread: 0, i: 6, alltableelemets[thread][maxindex].elm[i]: 1
thread: 0, i: 7, alltableelemets[thread][maxindex].elm[i]: 6
thread: 0, i: 8, alltableelemets[thread][maxindex].elm[i]: 3
thread: 0, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 0 7 3 2 7 4 0 0 0 0 0 0 0 
thread: 0, divisorComp: 0 0 0 0 1 2 1 1 1 0 0 0 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 1 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
thread: 1, NSTable size: 26
thread: 1, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[thread][maxindex].elm[i]: 6
thread: 1, i: 5, alltableelemets[thread][maxindex].elm[i]: 5
thread: 1, i: 6, alltableelemets[thread][maxindex].elm[i]: 1
thread: 1, i: 7, alltableelemets[thread][maxindex].elm[i]: 6
thread: 1, i: 8, alltableelemets[thread][maxindex].elm[i]: 3
thread: 1, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 0 7 3 2 7 4 0 0 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 1 2 1 1 1 0 0 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 1 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
thread: 2, maxBlockLvlSize: 2
thread: 2, maxInBlockLvlSize: 47
thread: 2, AllTableSize: 1344, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 1
thread: 0, maxInBlockLvlSize: 140
thread: 0, AllTableSize: 2352, maxSubsetsSize: 64
thread: 1, maxBlockLvlSize: 1
thread: 1, maxInBlockLvlSize: 140
thread: 1, AllTableSize: 2352, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 1 0 0 0 
cpuId: 3, dpoptimal: 5
cpuId: 1, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.123054
cpuId: 2, dpoptimal: 7
copy the latest feasible solution to instance takes time: 0.642588
copy the latest feasible solution to instance takes time: 0.320575
cpuId: 0, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.182708
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 30, UB: 32
BKID: 0, LB: 30, UB: 32, OPT: 9
Dynamic Programming Runtime: 23.8082
Execution time between LB and UB is: 9
By far, all LB UB calculation runtime: 9
Iteration: 2, UB: 32, LB: 30start at time: 1503456491
thread: 0, MlBk is called with LB: 30, UB: 30
thread: 2, MlBk is called with LB: 32, UB: 32
thread: 1, MlBk is called with LB: 31, UB: 31
 thread: 2, LongJobs.size() 21
 thread: 0, LongJobs.size() 21
 thread: 1, LongJobs.size() 21
thread: 2, NSTable size: 19
thread: 2, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[thread][maxindex].elm[i]: 6
thread: 2, i: 5, alltableelemets[thread][maxindex].elm[i]: 5
thread: 2, i: 6, alltableelemets[thread][maxindex].elm[i]: 1
thread: 2, i: 7, alltableelemets[thread][maxindex].elm[i]: 6
thread: 2, i: 8, alltableelemets[thread][maxindex].elm[i]: 3
thread: 2, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 0 7 3 2 7 4 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 1 2 1 1 1 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 1 0 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
thread: 0, NSTable size: 24
thread: 0, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 8, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[thread][maxindex].elm[i]: 3
thread: 0, i: 10, alltableelemets[thread][maxindex].elm[i]: 3
thread: 0, i: 11, alltableelemets[thread][maxindex].elm[i]: 4
thread: 0, i: 12, alltableelemets[thread][maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[thread][maxindex].elm[i]: 1
thread: 0, i: 15, alltableelemets[thread][maxindex].elm[i]: 9

thread: 0, blockDimSizeComp: 0 0 0 0 0 0 0 0 0 2 4 5 2 0 2 5 
thread: 0, divisorComp: 0 0 0 0 0 0 0 0 0 2 1 1 1 0 1 2 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 
thread: 0, largestNoZeroBlockVec: 1 0 0 0 0 1 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 , mySum: 2
thread: 1, NSTable size: 26
thread: 1, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 7, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 8, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 9, alltableelemets[thread][maxindex].elm[i]: 3
thread: 1, i: 10, alltableelemets[thread][maxindex].elm[i]: 3
thread: 1, i: 11, alltableelemets[thread][maxindex].elm[i]: 4
thread: 1, i: 12, alltableelemets[thread][maxindex].elm[i]: 1
thread: 1, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[thread][maxindex].elm[i]: 1
thread: 1, i: 15, alltableelemets[thread][maxindex].elm[i]: 9

thread: 1, blockDimSizeComp: 0 0 0 0 0 0 0 0 0 2 4 5 2 0 2 5 
thread: 1, divisorComp: 0 0 0 0 0 0 0 0 0 2 1 1 1 0 1 2 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 
thread: 1, largestNoZeroBlockVec: 1 0 0 0 0 1 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 , mySum: 2
thread: 2, maxBlockLvlSize: 1
thread: 2, maxInBlockLvlSize: 140
thread: 2, AllTableSize: 2352, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 2
thread: 0, maxInBlockLvlSize: 124
thread: 0, AllTableSize: 3200, maxSubsetsSize: 64
thread: 1, maxBlockLvlSize: 2
thread: 1, maxInBlockLvlSize: 124
thread: 1, AllTableSize: 3200, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 1 0 0 0 0 0 
cpuId: 0, gpu thread: 14, j: 39, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 6, it's NS: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 5
elm offset: 816, myOPT: 5, optOffset: 2496, optVecIndex: 1, indexomp: 25, ii: 3, blockLvl: 1, blockIDInLvl: 0, dev_counterVec[38]: 0
cpuId: 0, gpu thread: 14, j: 39, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 6, it's NS: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 6
elm offset: 821, myOPT: 6, optOffset: 2496, optVecIndex: 2, indexomp: 25, ii: 3, blockLvl: 1, blockIDInLvl: 0, dev_counterVec[38]: 0
cpuId: 0, gpu thread: 14, j: 39, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 6, it's NS: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 5
elm offset: 803, myOPT: 5, optOffset: 2496, optVecIndex: 3, indexomp: 25, ii: 3, blockLvl: 1, blockIDInLvl: 0, dev_counterVec[38]: 0
cpuId: 0, gpu thread: 14, j: 39, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 6, it's NS: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6
elm offset: 801, myOPT: 6, optOffset: 2496, optVecIndex: 4, indexomp: 25, ii: 3, blockLvl: 1, blockIDInLvl: 0, dev_counterVec[38]: 0
cpuId: 0, gpu thread: 34, j: 97, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 7, it's NS: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 6
elm offset: 839, myOPT: 6, optOffset: 6208, optVecIndex: 1, indexomp: 63, ii: 4, blockLvl: 1, blockIDInLvl: 0, dev_counterVec[65]: 0
cpuId: 0, gpu thread: 34, j: 97, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 7, it's NS: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 7
elm offset: 845, myOPT: 7, optOffset: 6208, optVecIndex: 2, indexomp: 63, ii: 4, blockLvl: 1, blockIDInLvl: 0, dev_counterVec[65]: 0
cpuId: 0, gpu thread: 34, j: 97, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 7, it's NS: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 6
elm offset: 821, myOPT: 6, optOffset: 6208, optVecIndex: 3, indexomp: 63, ii: 4, blockLvl: 1, blockIDInLvl: 0, dev_counterVec[65]: 0
cpuId: 0, gpu thread: 34, j: 97, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 7, it's NS: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 7
elm offset: 809, myOPT: 7, optOffset: 6208, optVecIndex: 4, indexomp: 63, ii: 4, blockLvl: 1, blockIDInLvl: 0, dev_counterVec[65]: 0
cpuId: 0, gpu thread: 90, j: 218, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 8, it's NS: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 7
elm offset: 897, myOPT: 7, optOffset: 13952, optVecIndex: 1, indexomp: 128, ii: 5, blockLvl: 1, blockIDInLvl: 0, dev_counterVec[94]: 0
cpuId: 0, gpu thread: 90, j: 218, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 8, it's NS: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 8
elm offset: 927, myOPT: 8, optOffset: 13952, optVecIndex: 2, indexomp: 128, ii: 5, blockLvl: 1, blockIDInLvl: 0, dev_counterVec[94]: 0
cpuId: 0, gpu thread: 90, j: 218, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 8, it's NS: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 7
elm offset: 845, myOPT: 7, optOffset: 13952, optVecIndex: 3, indexomp: 128, ii: 5, blockLvl: 1, blockIDInLvl: 0, dev_counterVec[94]: 0
cpuId: 0, gpu thread: 90, j: 218, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 8, it's NS: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 8
elm offset: 844, myOPT: 8, optOffset: 13952, optVecIndex: 4, indexomp: 128, ii: 5, blockLvl: 1, blockIDInLvl: 0, dev_counterVec[94]: 0
thread: 0, allBlocks[3]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[3]: 1 0 0 0 0 1 
cpuId: 2, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.78047
cpuId: 1, dpoptimal: 10
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 3e-06
copy the latest feasible solution to instance takes time: 0.233976
BKID: 0, LB: 31, UB: 31, OPT: 11
Dynamic Programming Runtime: 26.5916
Execution time between LB and UB is: 10
By far, all LB UB calculation runtime: 19
********************************************************
Total execution on UB and LB is: 19
OUT of Bk while loop  
UB    31
LB    31
T1    30
T2    31
OPT   11
nMachines   10
AllProbData.size()    2
ck :   1
AllProbData[ck].Ttable    31
ck :   0
AllProbData[ck].Ttable    32
Final OptimalSchedule
FinalMakespan31
Main Scheduling is Done
File 1-19 is Done.
******************************
Reading File...
File 1-20 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 50, LB: 31start at time: 1503456501
thread: 3, MlBk is called with LB: 46, UB: 50
thread: 1, MlBk is called with LB: 36, UB: 40
thread: 0, MlBk is called with LB: 31, UB: 35
 thread: 1, LongJobs.size() 21
 thread: 0, LongJobs.size() 21
thread: 2, MlBk is called with LB: 41, UB: 45
 thread: 2, LongJobs.size() 20
 thread: 3, LongJobs.size() 14
thread: 3, NSTable size: 16
thread: 3, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[thread][maxindex].elm[i]: 2
thread: 3, i: 4, alltableelemets[thread][maxindex].elm[i]: 8
thread: 3, i: 5, alltableelemets[thread][maxindex].elm[i]: 4
thread: 3, i: 6, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 7, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 8, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 3 3 5 0 0 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 1 3 1 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 2 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
thread: 3, maxBlockLvlSize: 1
thread: 3, maxInBlockLvlSize: 9
thread: 3, AllTableSize: 135, maxSubsetsSize: 64
thread: 2, NSTable size: 39
thread: 2, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[thread][maxindex].elm[i]: 2
thread: 2, i: 5, alltableelemets[thread][maxindex].elm[i]: 5
thread: 2, i: 6, alltableelemets[thread][maxindex].elm[i]: 4
thread: 2, i: 7, alltableelemets[thread][maxindex].elm[i]: 5
thread: 2, i: 8, alltableelemets[thread][maxindex].elm[i]: 4
thread: 2, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 0 3 3 5 3 5 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 1 2 1 2 1 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 1 0 1 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
thread: 1, NSTable size: 31
thread: 1, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[thread][maxindex].elm[i]: 3
thread: 1, i: 5, alltableelemets[thread][maxindex].elm[i]: 5
thread: 1, i: 6, alltableelemets[thread][maxindex].elm[i]: 4
thread: 1, i: 7, alltableelemets[thread][maxindex].elm[i]: 5
thread: 1, i: 8, alltableelemets[thread][maxindex].elm[i]: 4
thread: 1, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 0 4 3 5 3 5 0 0 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 1 2 1 2 1 0 0 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 1 0 1 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
thread: 0, NSTable size: 20
thread: 0, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[thread][maxindex].elm[i]: 3
thread: 0, i: 5, alltableelemets[thread][maxindex].elm[i]: 5
thread: 0, i: 6, alltableelemets[thread][maxindex].elm[i]: 4
thread: 0, i: 7, alltableelemets[thread][maxindex].elm[i]: 5
thread: 0, i: 8, alltableelemets[thread][maxindex].elm[i]: 4
thread: 0, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 0 4 3 5 3 5 0 0 0 0 0 0 0 
thread: 0, divisorComp: 0 0 0 0 1 2 1 2 1 0 0 0 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 1 0 1 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
thread: 2, maxBlockLvlSize: 2
thread: 2, maxInBlockLvlSize: 105
thread: 2, AllTableSize: 2700, maxSubsetsSize: 64
thread: 1, maxBlockLvlSize: 2
thread: 1, maxInBlockLvlSize: 132
thread: 1, AllTableSize: 3600, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 2
thread: 0, maxInBlockLvlSize: 132
thread: 0, AllTableSize: 3600, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 1 0 
thread: 0, allBlocks[2]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 1 0 0 0 
cpuId: 3, dpoptimal: 5
copy the latest feasible solution to instance takes time: 0.038351
thread: 0, allBlocks[3]: 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[3]: 0 1 0 1 0 
cpuId: 0, dpoptimal: 10
cpuId: 2, dpoptimal: 7
copy the latest feasible solution to instance takes time: 1.11619
cpuId: 1, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.528565
copy the latest feasible solution to instance takes time: 0.395562
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 31, UB: 33
BKID: 0, LB: 31, UB: 33, OPT: 10
Dynamic Programming Runtime: 25.6291
Execution time between LB and UB is: 9
By far, all LB UB calculation runtime: 9
Iteration: 2, UB: 33, LB: 31start at time: 1503456510
thread: 1, MlBk is called with LB: 32, UB: 32
thread: 2, MlBk is called with LB: 33, UB: 33
thread: 0, MlBk is called with LB: 31, UB: 31
 thread: 2, LongJobs.size() 21
 thread: 0, LongJobs.size() 21
 thread: 1, LongJobs.size() 21
thread: 2, NSTable size: 20
thread: 2, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[thread][maxindex].elm[i]: 3
thread: 2, i: 5, alltableelemets[thread][maxindex].elm[i]: 5
thread: 2, i: 6, alltableelemets[thread][maxindex].elm[i]: 4
thread: 2, i: 7, alltableelemets[thread][maxindex].elm[i]: 5
thread: 2, i: 8, alltableelemets[thread][maxindex].elm[i]: 4
thread: 2, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 0 4 3 5 3 5 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 1 2 1 2 1 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 1 0 1 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
thread: 1, NSTable size: 20
thread: 1, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[thread][maxindex].elm[i]: 3
thread: 1, i: 5, alltableelemets[thread][maxindex].elm[i]: 5
thread: 1, i: 6, alltableelemets[thread][maxindex].elm[i]: 4
thread: 1, i: 7, alltableelemets[thread][maxindex].elm[i]: 5
thread: 1, i: 8, alltableelemets[thread][maxindex].elm[i]: 4
thread: 1, i: 9, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[thread][maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[thread][maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 0 4 3 5 3 5 0 0 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 1 2 1 2 1 0 0 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 1 0 1 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
thread: 0, NSTable size: 31
thread: 0, i: 0, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 8, alltableelemets[thread][maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[thread][maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[thread][maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[thread][maxindex].elm[i]: 4
thread: 0, i: 12, alltableelemets[thread][maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[thread][maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[thread][maxindex].elm[i]: 3
thread: 0, i: 15, alltableelemets[thread][maxindex].elm[i]: 9

thread: 0, blockDimSizeComp: 0 0 0 0 0 0 0 0 0 2 3 5 2 2 2 5 
thread: 0, divisorComp: 0 0 0 0 0 0 0 0 0 1 1 1 1 1 2 2 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
thread: 0, largestNoZeroBlockVec: 0 0 0 0 0 1 1 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 , mySum: 2
thread: 2, maxBlockLvlSize: 2
thread: 2, maxInBlockLvlSize: 132
thread: 2, AllTableSize: 3600, maxSubsetsSize: 64
thread: 1, maxBlockLvlSize: 2
thread: 1, maxInBlockLvlSize: 132
thread: 1, AllTableSize: 3600, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 2
thread: 0, maxInBlockLvlSize: 192
thread: 0, AllTableSize: 4800, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 0 0 0 1 0 
cpuId: 0, gpu thread: 17, j: 49, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 6, it's NS: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 5
elm offset: 1229, myOPT: 5, optOffset: 3136, optVecIndex: 1, indexomp: 32, ii: 3, blockLvl: 1, blockIDInLvl: 0, dev_counterVec[55]: 0
cpuId: 0, gpu thread: 17, j: 49, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 6, it's NS: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 6
elm offset: 1227, myOPT: 6, optOffset: 3136, optVecIndex: 2, indexomp: 32, ii: 3, blockLvl: 1, blockIDInLvl: 0, dev_counterVec[55]: 0
cpuId: 0, gpu thread: 17, j: 49, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 6, it's NS: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 5
elm offset: 1203, myOPT: 5, optOffset: 3136, optVecIndex: 3, indexomp: 32, ii: 3, blockLvl: 1, blockIDInLvl: 0, dev_counterVec[55]: 0
cpuId: 0, gpu thread: 17, j: 49, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 6, it's NS: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6
elm offset: 1201, myOPT: 6, optOffset: 3136, optVecIndex: 4, indexomp: 32, ii: 3, blockLvl: 1, blockIDInLvl: 0, dev_counterVec[55]: 0
cpuId: 0, gpu thread: 7, j: 94, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 7, it's NS: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 6
elm offset: 1249, myOPT: 6, optOffset: 6016, optVecIndex: 1, indexomp: 87, ii: 4, blockLvl: 1, blockIDInLvl: 0, dev_counterVec[97]: 0
cpuId: 0, gpu thread: 7, j: 94, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 7, it's NS: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 7
elm offset: 1274, myOPT: 7, optOffset: 6016, optVecIndex: 2, indexomp: 87, ii: 4, blockLvl: 1, blockIDInLvl: 0, dev_counterVec[97]: 0
cpuId: 0, gpu thread: 7, j: 94, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 7, it's NS: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 6
elm offset: 1227, myOPT: 6, optOffset: 6016, optVecIndex: 3, indexomp: 87, ii: 4, blockLvl: 1, blockIDInLvl: 0, dev_counterVec[97]: 0
cpuId: 0, gpu thread: 7, j: 94, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 7, it's NS: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 7
elm offset: 1223, myOPT: 7, optOffset: 6016, optVecIndex: 4, indexomp: 87, ii: 4, blockLvl: 1, blockIDInLvl: 0, dev_counterVec[97]: 0
cpuId: 0, gpu thread: 57, j: 241, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 8, it's NS: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 7
elm offset: 1294, myOPT: 7, optOffset: 15424, optVecIndex: 1, indexomp: 184, ii: 5, blockLvl: 1, blockIDInLvl: 0, dev_counterVec[142]: 0
cpuId: 0, gpu thread: 57, j: 241, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 8, it's NS: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 8
elm offset: 1289, myOPT: 8, optOffset: 15424, optVecIndex: 2, indexomp: 184, ii: 5, blockLvl: 1, blockIDInLvl: 0, dev_counterVec[142]: 0
cpuId: 0, gpu thread: 57, j: 241, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 8, it's NS: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 7
elm offset: 1274, myOPT: 7, optOffset: 15424, optVecIndex: 3, indexomp: 184, ii: 5, blockLvl: 1, blockIDInLvl: 0, dev_counterVec[142]: 0
cpuId: 0, gpu thread: 57, j: 241, This is: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 8, it's NS: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 8
elm offset: 1276, myOPT: 8, optOffset: 15424, optVecIndex: 4, indexomp: 184, ii: 5, blockLvl: 1, blockIDInLvl: 0, dev_counterVec[142]: 0
thread: 0, allBlocks[3]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 mySum: 2
thread: 0, blockNoZero[3]: 0 0 0 0 0 1 1 
cpuId: 1, dpoptimal: 10
cpuId: 2, dpoptimal: 10
copy the latest feasible solution to instance takes time: 1.20421
copy the latest feasible solution to instance takes time: 1.2373
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 1e-06
BKID: 0, LB: 32, UB: 32, OPT: 11
Dynamic Programming Runtime: 36.4155
Execution time between LB and UB is: 15
By far, all LB UB calculation runtime: 24
********************************************************
Total execution on UB and LB is: 24
OUT of Bk while loop  
UB    32
LB    32
T1    31
T2    32
OPT   11
nMachines   10
AllProbData.size()    2
ck :   1
AllProbData[ck].Ttable    32
ck :   0
AllProbData[ck].Ttable    33
Final OptimalSchedule
FinalMakespan34
Main Scheduling is Done
File 1-20 is Done.
******************************
Total running time is: 712
