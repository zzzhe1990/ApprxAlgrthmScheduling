Reading File...
File 1-1 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 50, LB: 31start at time: 1505276315
thread: 0, MlBk is called with LB: thread: thread: thread: 21, MlBk is called with LB: , MlBk is called with LB: 41, UB: 3646, UB: 41

3, MlBk is called with LB: 46, UB: 51
 thread: 2, LongJobs.size() 19
 thread: 3, LongJobs.size() 15
31, UB: 36
 thread: 0, LongJobs.size() 21
 thread: 1, LongJobs.size() 21
thread: 3, NSTable size: 18
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 4
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 5
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 6
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 5, maxN[i].idx: 0, blockDimSize[i]: 5
thread: 3, i: 1, maxN[i].weit: 6, maxN[i].idx: 1, blockDimSize[i]: 6
thread: 3, i: 2, maxN[i].weit: 7, maxN[i].idx: 2, blockDimSize[i]: 7
thread: 3, i: 0, divisor[i]: 5, blockDimSize[i]: 1
thread: 3, i: 1, divisor[i]: 2, blockDimSize[i]: 3
thread: 3, i: 2, divisor[i]: 7, blockDimSize[i]: 1
thread: 3, largestBlockVec.elm: 0 0 0 4 1 6 0 0 0 0 0 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 1 3 1 0 0 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 5 2 7 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 4 1 6 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 4 1 6 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 2 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 3 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 2 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 1 1 2 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 3 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 3 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 1 0 3 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 1 1 3 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 4 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 4 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 2 1 2 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 3 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 5 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 1 0 4 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 2 0 3 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 4 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 3 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 3 1 2 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 3 0 3 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 5 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 4 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 4 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 1 0 5 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 2 1 3 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 2 0 4 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 6 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 1 1 4 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 2 1 4 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 6 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 2 0 5 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 3 0 4 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 4 0 3 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 1 0 6 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 3 1 3 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 4 1 2 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 1 1 5 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 1 1 6 0 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 4 0 4 0 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 2 1 5 0 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 3 1 4 0 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 4 1 3 0 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 3 0 5 0 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 2 0 6 0 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 3 1 5 0 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 4 1 4 0 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 4 0 5 0 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 3 0 6 0 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 2 1 6 0 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 4 1 5 0 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 3 1 6 0 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 4 0 6 0 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 4 1 6 0 0 0 0 0 0 0 0 0 0 , mySum: 11
thread: 2, NSTable size: 41
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 5
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 6
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 2, i: 1, maxN[i].weit: 6, maxN[i].idx: 1, blockDimSize[i]: 6
thread: 2, i: 2, maxN[i].weit: 4, maxN[i].idx: 2, blockDimSize[i]: 4
thread: 2, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 2, i: 4, maxN[i].weit: 7, maxN[i].idx: 4, blockDimSize[i]: 7
thread: 2, i: 0, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, i: 1, divisor[i]: 2, blockDimSize[i]: 3
thread: 2, i: 2, divisor[i]: 1, blockDimSize[i]: 4
thread: 2, i: 3, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 4, divisor[i]: 7, blockDimSize[i]: 1
thread: 2, largestBlockVec.elm: 0 0 0 0 1 1 0 0 6 0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 0 2 3 4 3 1 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 2 2 1 1 7 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 1 1 0 0 6 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 1 1 0 0 6 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 0 0 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 1 0 0 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 0 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 1 0 0 3 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 0 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 0 0 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 0 5 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 0 0 5 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 1 0 0 4 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 0 0 0 6 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 0 0 6 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 1 0 0 5 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 1 0 0 6 0 0 0 0 0 0 0 , mySum: 8
thread: 1, NSTable size: 31
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 5
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 5
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 6
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 6, maxN[i].idx: 0, blockDimSize[i]: 6
thread: 1, i: 1, maxN[i].weit: 6, maxN[i].idx: 1, blockDimSize[i]: 6
thread: 1, i: 2, maxN[i].weit: 4, maxN[i].idx: 2, blockDimSize[i]: 4
thread: 1, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 1, i: 4, maxN[i].weit: 7, maxN[i].idx: 4, blockDimSize[i]: 7
thread: 1, i: 0, divisor[i]: 2, blockDimSize[i]: 3
thread: 1, i: 1, divisor[i]: 2, blockDimSize[i]: 3
thread: 1, i: 2, divisor[i]: 1, blockDimSize[i]: 4
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 4, divisor[i]: 7, blockDimSize[i]: 1
thread: 1, largestBlockVec.elm: 0 0 0 0 1 1 0 0 6 0 0 0 0 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 0 3 3 4 3 1 0 0 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 2 2 1 1 7 0 0 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 1 1 0 0 6 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 1 1 0 0 6 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 0 0 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 1 0 0 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 0 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 1 0 0 3 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 0 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 0 0 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 0 5 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 0 0 5 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 1 0 0 4 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 0 0 0 6 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 0 0 6 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 1 0 0 5 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 1 0 0 6 0 0 0 0 0 0 0 , mySum: 8
thread: 0, NSTable size: 20
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 5
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 5
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 6
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 0, maxN[i].weit: 6, maxN[i].idx: 0, blockDimSize[i]: 6
thread: 0, i: 1, maxN[i].weit: 6, maxN[i].idx: 1, blockDimSize[i]: 6
thread: 0, i: 2, maxN[i].weit: 4, maxN[i].idx: 2, blockDimSize[i]: 4
thread: 0, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 0, i: 4, maxN[i].weit: 7, maxN[i].idx: 4, blockDimSize[i]: 7
thread: 0, i: 0, divisor[i]: 2, blockDimSize[i]: 3
thread: 0, i: 1, divisor[i]: 2, blockDimSize[i]: 3
thread: 0, i: 2, divisor[i]: 1, blockDimSize[i]: 4
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 4, divisor[i]: 7, blockDimSize[i]: 1
thread: 0, largestBlockVec.elm: 0 0 0 0 1 1 0 0 6 0 0 0 0 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 0 3 3 4 3 1 0 0 0 0 0 0 0 
thread: 0, divisorComp: 0 0 0 0 2 2 1 1 7 0 0 0 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 1 1 0 0 6 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 1 1 0 0 6 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 0 0 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 1 0 0 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 0 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 1 0 0 3 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 0 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 0 0 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 0 5 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 0 0 5 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 1 0 0 4 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 0 0 0 6 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 0 0 6 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 1 0 0 5 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 1 0 0 6 0 0 0 0 0 0 0 , mySum: 8
thread: 3, maxBlockLvlSize: 10
thread: 3, maxInBlockLvlSize: 1
thread: 3, AllTableSize: 210, maxSubsetsSize: 64
thread: 1, maxBlockLvlSize: 4
thread: 1, maxInBlockLvlSize: 22
thread: 1, AllTableSize: 3024, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 4
thread: 0, maxInBlockLvlSize: 22
thread: 0, AllTableSize: 3024, maxSubsetsSize: 64
thread: 2, maxBlockLvlSize: 4
thread: 2, maxInBlockLvlSize: 16
thread: 2, AllTableSize: 2016, maxSubsetsSize: 64
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 5
copy the latest feasible solution to instance takes time: 0.009517
thread: 3, sOPT: 5
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 1 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 1 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 1 0 0 1 
thread: 0, allBlocks[5]: 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 1 1 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 0 0 0 2 
thread: 0, allBlocks[7]: 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 1 0 0 0 1 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[8]: 0 0 0 0 3 
thread: 0, allBlocks[9]: 0 0 0 0 0 1 0 0 2 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[9]: 0 1 0 0 2 
thread: 0, allBlocks[10]: 0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 1 1 0 0 1 
thread: 0, allBlocks[11]: 0 0 0 0 1 0 0 0 2 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 1 0 0 0 2 
thread: 0, allBlocks[12]: 0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[12]: 0 0 0 0 4 
thread: 0, allBlocks[13]: 0 0 0 0 0 1 0 0 3 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[13]: 0 1 0 0 3 
thread: 0, allBlocks[14]: 0 0 0 0 1 1 0 0 2 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[14]: 1 1 0 0 2 
thread: 0, allBlocks[15]: 0 0 0 0 1 0 0 0 3 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[15]: 1 0 0 0 3 
thread: 0, allBlocks[16]: 0 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[16]: 0 0 0 0 5 
thread: 0, allBlocks[17]: 0 0 0 0 1 1 0 0 3 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[17]: 1 1 0 0 3 
thread: 0, allBlocks[18]: 0 0 0 0 1 0 0 0 4 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[18]: 1 0 0 0 4 
thread: 0, allBlocks[19]: 0 0 0 0 0 1 0 0 4 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[19]: 0 1 0 0 4 
thread: 0, allBlocks[20]: 0 0 0 0 1 0 0 0 5 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[20]: 1 0 0 0 5 
thread: 0, allBlocks[21]: 0 0 0 0 0 1 0 0 5 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[21]: 0 1 0 0 5 
thread: 0, allBlocks[22]: 0 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[22]: 0 0 0 0 6 
thread: 0, allBlocks[23]: 0 0 0 0 1 1 0 0 4 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[23]: 1 1 0 0 4 
thread: 0, allBlocks[24]: 0 0 0 0 1 0 0 0 6 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[24]: 1 0 0 0 6 
thread: 0, allBlocks[25]: 0 0 0 0 0 1 0 0 6 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[25]: 0 1 0 0 6 
thread: 0, allBlocks[26]: 0 0 0 0 1 1 0 0 5 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[26]: 1 1 0 0 5 
thread: 0, allBlocks[27]: 0 0 0 0 1 1 0 0 6 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[27]: 1 1 0 0 6 
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 7
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.209584
thread: 2, sOPT: 7
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 8
copy the latest feasible solution to instance takes time: 0.230473
thread: 0, sOPT: 10
copy the latest feasible solution to instance takes time: 0.093304
thread: 1, sOPT: 8
Thread: 1, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: Thread: 2, MlBk function is done, and BkID for all processes are collected.
0, MlBk function is done, and BkID for all processes are collected.
3, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 31, UB: 34
BKID: 0, LB: 31, UB: 34, OPT: 10
Dynamic Programming Runtime: 1.52415
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 1
Iteration: 2, UB: 34, LB: 31start at time: 1505276316
thread: 0, MlBk is called with LB: 31, UB: 32
 thread: 0, LongJobs.size() 21
thread: thread: 1, MlBk is called with LB: 232, MlBk is called with LB: , UB: 3333, UB: 
34
 thread:  thread: 2, LongJobs.size() 21
1, LongJobs.size() 21
thread: 2, NSTable size: 20
thread: thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
1thread: , NSTable size: 2, i: 420, alltableelemets[maxindex].elm[i]: 5

thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 5
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 6
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 5
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 5
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 6
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 6, maxN[i].idx: 0, blockDimSize[i]: 6
thread: 1, i: 1, maxN[i].weit: 6, maxN[i].idx: 1, blockDimSize[i]: 6
thread: 1, i: 2, maxN[i].weit: 4, maxN[i].idx: 2, blockDimSize[i]: 4
thread: 1, i: , maxN[i].weit: 6, maxN[i].idx: 30, maxN[i].weit: 3, blockDimSize[i]: , maxN[i].idx: 63, blockDimSize[i]: 3
thread: 1, i: 4, maxN[i].weit: 7, maxN[i].idx: 4, blockDimSize[i]: 
7
thread: 2, i: 1, maxN[i].weit: 6, maxN[i].idx: 1, blockDimSize[i]: 6
thread: 2, i: 2, maxN[i].weit: 4thread: 1, i: 0, divisor[i]: 2, blockDimSize[i]: 3
thread: 1, i: 1, divisor[i]: 2, blockDimSize[i]: 3
thread: , maxN[i].idx: 1, i: 2, divisor[i]: 2, blockDimSize[i]: 14, blockDimSize[i]: 4

thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 4, divisor[i]: 7, blockDimSize[i]: 1
thread: 2, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 2, i: 4thread: 1, largestBlockVec.elm: , maxN[i].weit: 0 7, maxN[i].idx: 4, blockDimSize[i]: 7
0thread: 2, i:  0, divisor[i]: 2, blockDimSize[i]: 3
thread: 2, i: 1, divisor[i]: 2, blockDimSize[i]: 3
thread: 2, i: 2, divisor[i]: 1, blockDimSize[i]: 4
thread: 2, i: 3, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 4, divisor[i]: 7, blockDimSize[i]: 1
0thread:  2, largestBlockVec.elm: 0 0 10  01  00  0 6 0 0 10  0 10  00  00  
thread: 1, blockDimSizeComp: 0 0 0 0 3 3 4 3 1 60  00  00  0 00  0 00  00  0 

thread: 1, divisorComp: 0 0 0 0 2 2 1 1 7 thread: 2, blockDimSizeComp: 0 0 0 0 3 30 0 0 0 0  4 03  1 00  
thread: 1, largestBlockVec: 0 0 0 0 1 1 0 0 6 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 1 1 00 0 6  0
 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 2 2 1 1 7 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 1 1 0 0 6 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 1 1 0 0 6 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1thread: 
2, allBlocks: 0 0 0 0 0 1 0 0 1 0 0 0 0 0 00 0  0 0, mySum:  20
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum:  00 
00 0 0 0 0 0 0 0 1 0 0 0 0 0 0  0, mySum:  , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 02 0 0
0 0 0 0 0 0 0 0 2 0 0 0 0  0 , mySum: 01 
0 , mySum: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 20 0 , mySum: 1

0 0 0 0 0 1 0 0 1 0 0 0 00 0 0 0 1 0 0 0 1 0 0 0 0  0 00 0  0 0, mySum:  2, mySum: 2

0 0 0 0 1 1 0 0 0 0 0 0 0 00 0 0 0 0 0 0 0 3 0 0  0 0 00  00  , mySum: 20
 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 , mySum: 0 , mySum: 32
0 0 0 0 0 1 0 0 2 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 1 0 0 0 0 00  0, mySum:  0 , mySum: 32

0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 00 0 0  0 0 0, mySum:  3
0 0 0 0 0 1 0 0 2 0 0 0 0 00 0  0, mySum:  3, mySum: 
30 0 0 0 1 0 0 0 2 0 0 0 0 0
 00 0 0 0 1 1 0 0 1 0 0 0  0 0 00  , mySum: 03 
, mySum: 3
0 0 0 0 0 0 0 0 4 0 0 0 0 0 00 0 0 0 1 0 0 0 2 0 0 0 0  0 00  0, mySum:  , mySum: 3
40 0 0 0 0 0 0 0 4 0 0 0 0 0 
0 0 0 0 0 0 1 0 0 3 0 0 0 0 00  0, mySum:  0 4, mySum: 4

0 0 0 0 1 1 0 0 2 0 0 0 0 00 0 0 0 0 1 0 0 3 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 0 3 0 0 0 0 0  0 0 00  , mySum: 04
 0 0 0 0 0 0 0 0 5 0 0 0 0 0 , mySum: 4
0 0 0 0 1 1 0 0 2 0 0 0 0 00 0 0 , mySum: 5
 0 0 0 0 1 1 0 0 3 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 0 3 0 0 0 0 00 0 0 , mySum:  50 0 
, mySum: 4
0 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 0 1 0 0 0 4 0 0 00 0  00  00  0 , mySum: , mySum: 55

0 0 0 0 1 1 0 0 3 0 0 0 0 0 0 0 0 0 0 0 1 0 0 4 0 00 0  , mySum: 05 
0 0 0 0 1 0 0 0 4 0 0 0 0 0 00 0  0, mySum: 5 
0 0 0 0 0 1 0 0 4 0 0 0 0 0 00 0  , mySum: , mySum: 55
0 0 0 0 1 0 0 0 5 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 5 0 0 00 0 0  0 , mySum: 06 
, mySum: 0 0 0 0 0 1 0 0 5 0 0 0 0 0 06 0 
, mySum: 0 0 0 0 0 1 0 0 5 0 0 0 0 06 0 
00 0 0 0 0 0 0 0 6 0 0 0  0 , mySum: 0 60 
0 , mySum: 0 0 0 0 0 0 0 0 6 0 0 0 0 0 0 60 , mySum: 6

0 0 0 0 1 1 0 0 4 0 0 0 0 0 0 0 0 1 1 0 0 4 0 0 00 0  00  00  0 , mySum: , mySum: 6
60 0 0 0 1 0 0 0 6 0 0 0 0 0 
0 0 0 0 0 1 0 0 0 6 0 0 0 0 00 0  , mySum: 07 
0 0 0 0 0 1 0 0 6 0 0 0 0 0, mySum:  0 70 , mySum: 
70 0 0 0 0 1 0 0 6 0 0 0 0 0
 0 0 0 0 1 1 0 0 5 0 0 0 0 0 , mySum: 7
00 0 0 0 1 1 0 0 5 0 0 0 0 0  0 0 0, mySum:  0 70 , mySum: 
7
0 0 0 0 1 1 0 0 6 0 0 0 0 0 00 0 0 0 1 1 0 0 6 0 0 0 0  0 00  , mySum: 08
 , mySum: 8
thread: 1, maxBlockLvlSize: 4
thread: 1, maxInBlockLvlSize: 22
thread: 1, AllTableSize: 3024, maxSubsetsSize: 64
thread: 2, maxBlockLvlSize: 4
thread: 2, maxInBlockLvlSize: 22
thread: 2, AllTableSize: 3024, maxSubsetsSize: 64
thread: 0, NSTable size: 26
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 8
thread: 0, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 0, i: 1, maxN[i].weit: 4, maxN[i].idx: 1, blockDimSize[i]: 4
thread: 0, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 0, i: 3, maxN[i].weit: 5, maxN[i].idx: 3, blockDimSize[i]: 5
thread: 0, i: 4, maxN[i].weit: 4, maxN[i].idx: 4, blockDimSize[i]: 4
thread: 0, i: 5, maxN[i].weit: 9, maxN[i].idx: 5, blockDimSize[i]: 9
thread: 0, i: 0, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 1, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 3, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 4
thread: 0, i: 5, divisor[i]: 3, blockDimSize[i]: 3
thread: 0, largestBlockVec.elm: 0 0 0 0 0 0 0 0 0 0 1 0 4 0 0 2 
thread: 0, blockDimSizeComp: 0 0 0 0 0 0 0 0 0 3 2 2 1 0 4 3 
thread: 0, divisorComp: 0 0 0 0 0 0 0 0 0 1 2 1 5 0 1 3 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 1 0 4 0 0 2 
thread: 0, largestNoZeroBlockVec: 0 1 0 4 0 2 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 1 0 2 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 2 , mySum: 3
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 2 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 2 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 2 , mySum: 4
0 0 0 0 0 0 0 0 0 0 1 0 2 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 1 0 3 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 1 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 2 , mySum: 5
0 0 0 0 0 0 0 0 0 0 1 0 2 0 0 2 , mySum: 5
0 0 0 0 0 0 0 0 0 0 1 0 3 0 0 1 , mySum: 5
0 0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 2 , mySum: 6
0 0 0 0 0 0 0 0 0 0 1 0 3 0 0 2 , mySum: 6
0 0 0 0 0 0 0 0 0 0 1 0 4 0 0 1 , mySum: 6
0 0 0 0 0 0 0 0 0 0 1 0 4 0 0 2 , mySum: 7
thread: 0, maxBlockLvlSize: 6
thread: 0, maxInBlockLvlSize: 30
thread: 0, AllTableSize: 4320, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 1 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 0 1 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 mySum: 2
thread: 0, blockNoZero[4]: 0 0 0 1 0 1 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 1 0 1 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[6]: 0 1 0 0 0 1 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 mySum: 2
thread: 0, blockNoZero[7]: 0 0 0 0 0 2 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 mySum: 2
thread: 0, blockNoZero[8]: 0 0 0 2 0 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 mySum: 3
thread: 0, blockNoZero[9]: 0 0 0 3 0 0 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 0 0 0 0 1 0 2 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 0 1 0 2 0 0 
thread: 0, allBlocks[11]: 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 1 mySum: 3
thread: 0, blockNoZero[11]: 0 1 0 1 0 1 
thread: 0, allBlocks[12]: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 2 mySum: 3
thread: 0, blockNoZero[12]: 0 0 0 1 0 2 
thread: 0, allBlocks[13]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 2 mySum: 3
thread: 0, blockNoZero[13]: 0 1 0 0 0 2 
thread: 0, allBlocks[14]: 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 1 mySum: 3
thread: 0, blockNoZero[14]: 0 0 0 2 0 1 
thread: 0, allBlocks[15]: 0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 mySum: 4
thread: 0, blockNoZero[15]: 0 0 0 4 0 0 
thread: 0, allBlocks[16]: 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 1 mySum: 4
thread: 0, blockNoZero[16]: 0 0 0 3 0 1 
thread: 0, allBlocks[17]: 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 2 mySum: 4
thread: 0, blockNoZero[17]: 0 1 0 1 0 2 
thread: 0, allBlocks[18]: 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 2 mySum: 4
thread: 0, blockNoZero[18]: 0 0 0 2 0 2 
thread: 0, allBlocks[19]: 0 0 0 0 0 0 0 0 0 0 1 0 2 0 0 1 mySum: 4
thread: 0, blockNoZero[19]: 0 1 0 2 0 1 
thread: 0, allBlocks[20]: 0 0 0 0 0 0 0 0 0 0 1 0 3 0 0 0 mySum: 4
thread: 0, blockNoZero[20]: 0 1 0 3 0 0 
thread: 0, allBlocks[21]: 0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 1 mySum: 5
thread: 0, blockNoZero[21]: 0 0 0 4 0 1 
thread: 0, allBlocks[22]: 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 2 mySum: 5
thread: 0, blockNoZero[22]: 0 0 0 3 0 2 
thread: 0, allBlocks[23]: 0 0 0 0 0 0 0 0 0 0 1 0 2 0 0 2 mySum: 5
thread: 0, blockNoZero[23]: 0 1 0 2 0 2 
thread: 0, allBlocks[24]: 0 0 0 0 0 0 0 0 0 0 1 0 3 0 0 1 mySum: 5
thread: 0, blockNoZero[24]: 0 1 0 3 0 1 
thread: 0, allBlocks[25]: 0 0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 mySum: 5
thread: 0, blockNoZero[25]: 0 1 0 4 0 0 
thread: 0, allBlocks[26]: 0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 2 mySum: 6
thread: 0, blockNoZero[26]: 0 0 0 4 0 2 
thread: 0, allBlocks[27]: 0 0 0 0 0 0 0 0 0 0 1 0 3 0 0 2 mySum: 6
thread: 0, blockNoZero[27]: 0 1 0 3 0 2 
thread: 0, allBlocks[28]: 0 0 0 0 0 0 0 0 0 0 1 0 4 0 0 1 mySum: 6
thread: 0, blockNoZero[28]: 0 1 0 4 0 1 
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
thread: 0, allBlocks[29]: 0 0 0 0 0 0 0 0 0 0 1 0 4 0 0 2 mySum: 7
thread: 0, blockNoZero[29]: 0 1 0 4 0 2 
copy the latest feasible solution to instance takes time: 0.180382
thread: 1, sOPT: 10
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.139015
thread: 2, sOPT: 10
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.08876
thread: 0, sOPT: 10
BKID: 0, LB: 31, UB: 31, OPT: 10
Dynamic Programming Runtime: 1.75203
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 2
********************************************************
Total execution on UB and LB is: 2
OUT of Bk while loop  
UB    31
LB    31
T1    31
T2    31
OPT   10
nMachines   10
BkID	0
AllProbData.size()    2
ck :   1
AllProbData[ck].Ttable    31
ck :   0
AllProbData[ck].Ttable    33
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan34
Main Scheduling is Done
File 1-1 is Done.
******************************
Reading File...
File 1-2 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 52, LB: 33start at time: 1505276317
thread: 0, MlBk is called with LB: 33, UB: 38
 thread: 0, LongJobs.size() 21
thread: thread: 1, MlBk is called with LB: 338, UB: 43, MlBk is called with LB: 48, UB: 
53 thread: 1, LongJobs.size() 19

thread: 2, MlBk is called with LB: 43, UB: 48
 thread: 3, LongJobs.size() 16
 thread: 2, LongJobs.size() 18
thread: 3, NSTable size: 13
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 8
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 7
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 3, i: 1, maxN[i].weit: 9, maxN[i].idx: 1, blockDimSize[i]: 9
thread: 3, i: 2, maxN[i].weit: 8, maxN[i].idx: 2, blockDimSize[i]: 8
thread: 3, i: 0, divisor[i]: 2, blockDimSize[i]: 1
thread: 3, i: 1, divisor[i]: 3, blockDimSize[i]: 3
thread: 3, i: 2, divisor[i]: 2, blockDimSize[i]: 4
thread: 3, largestBlockVec.elm: 0 0 0 1 2 1 0 0 0 0 0 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 1 3 4 0 0 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 2 3 2 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 1 2 1 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 1 2 1 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 4
thread: 3, maxBlockLvlSize: 4
thread: 3, maxInBlockLvlSize: 3
thread: 3, AllTableSize: 144, maxSubsetsSize: 64
thread: 2, NSTable size: 23
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 5
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 7
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 2, i: 1, maxN[i].weit: 6, maxN[i].idx: 1, blockDimSize[i]: 6
thread: 2, i: 2, maxN[i].weit: 5, maxN[i].idx: 2, blockDimSize[i]: 5
thread: 2, i: 3, maxN[i].weit: 8, maxN[i].idx: 3, blockDimSize[i]: 8
thread: 2, i: 0, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 1, divisor[i]: 2, blockDimSize[i]: 3
thread: 2, i: 2, divisor[i]: 5, blockDimSize[i]: 1
thread: 2, i: 3, divisor[i]: 2, blockDimSize[i]: 4
thread: 2, largestBlockVec.elm: 0 0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 0 0 3 3 1 4 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 0 1 2 5 2 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 1 4 1 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 3 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 2 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 4 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 3 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 , mySum: 6
thread: 1, NSTable size: 28
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 5
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 7
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 1, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 1, i: 2, maxN[i].weit: 6, maxN[i].idx: 2, blockDimSize[i]: 6
thread: 1, i: 3, maxN[i].weit: 5, maxN[i].idx: 3, blockDimSize[i]: 5
thread: 1, i: 4, maxN[i].weit: 8, maxN[i].idx: 4, blockDimSize[i]: 8
thread: 1, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 2, divisor[i]: 2, blockDimSize[i]: 3
thread: 1, i: 3, divisor[i]: 5, blockDimSize[i]: 1
thread: 1, i: 4, divisor[i]: 2, blockDimSize[i]: 4
thread: 1, largestBlockVec.elm: 0 0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 0 2 3 3 1 4 0 0 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 1 1 2 5 2 0 0 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 1 4 1 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 3 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 2 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 4 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 3 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 , mySum: 6
thread: 2, maxBlockLvlSize: 4
thread: 2, maxInBlockLvlSize: 8
thread: 2, AllTableSize: 720, maxSubsetsSize: 64
thread: 1, maxBlockLvlSize: 4
thread: 1, maxInBlockLvlSize: 16
thread: 1, AllTableSize: 1440, maxSubsetsSize: 64
thread: 0, NSTable size: 23
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 5
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 7
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 0, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 0, i: 2, maxN[i].weit: 6, maxN[i].idx: 2, blockDimSize[i]: 6
thread: 0, i: 3, maxN[i].weit: 5, maxN[i].idx: 3, blockDimSize[i]: 5
thread: 0, i: 4, maxN[i].weit: 8, maxN[i].idx: 4, blockDimSize[i]: 8
thread: 0, i: 0, divisor[i]: 1, blockDimSize[i]: 4
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 2, divisor[i]: 2, blockDimSize[i]: 3
thread: 0, i: 3, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, i: 4, divisor[i]: 2, blockDimSize[i]: 4
thread: 0, largestBlockVec.elm: 0 0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 0 4 3 3 1 4 0 0 0 0 0 0 0 
thread: 0, divisorComp: 0 0 0 0 1 1 2 5 2 0 0 0 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 1 4 1 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 3 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 2 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 4 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 3 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 , mySum: 6
thread: 0, maxBlockLvlSize: 4
thread: 0, maxInBlockLvlSize: 28
thread: 0, AllTableSize: 2880, maxSubsetsSize: 64
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 6
copy the latest feasible solution to instance takes time: 0.006345
thread: 3, sOPT: 6
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 1 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 0 1 0 
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 7
copy the latest feasible solution to instance takes time: 0.037687
thread: 2, sOPT: 7
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 0 2 0 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 0 1 1 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 0 1 0 1 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 0 0 0 1 1 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[8]: 0 0 0 3 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[9]: 0 0 0 2 1 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 0 0 1 1 1 
thread: 0, allBlocks[11]: 0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 0 0 1 2 0 
thread: 0, allBlocks[12]: 0 0 0 0 0 0 0 3 1 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[12]: 0 0 0 3 1 
thread: 0, allBlocks[13]: 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[13]: 0 0 0 4 0 
thread: 0, allBlocks[14]: 0 0 0 0 0 0 1 2 1 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[14]: 0 0 1 2 1 
thread: 0, allBlocks[15]: 0 0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[15]: 0 0 1 3 0 
thread: 0, allBlocks[16]: 0 0 0 0 0 0 0 4 1 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[16]: 0 0 0 4 1 
thread: 0, allBlocks[17]: 0 0 0 0 0 0 1 3 1 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[17]: 0 0 1 3 1 
thread: 0, allBlocks[18]: 0 0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[18]: 0 0 1 4 0 
thread: 0, allBlocks[19]: 0 0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[19]: 0 0 1 4 1 
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.060676
thread: 1, sOPT: 9
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.058583
thread: 0, sOPT: 10
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 1, MlBk function is done, and BkID for all processes are collected.
2, MlBk function is done, and BkID for all processes are collected.
Thread: 3, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 33, UB: 36
BKID: 0, LB: 33, UB: 36, OPT: 10
Dynamic Programming Runtime: 0.882529
Execution time between LB and UB is: 0
By far, all LB UB calculation runtime: 0
Iteration: 2, UB: 36, LB: 33start at time: 1505276317
thread: 0, MlBk is called with LB: 33, UB: 34
 thread: 0, LongJobs.size() 21
thread: thread: 2, MlBk is called with LB: 135, MlBk is called with LB: , UB: 3436, UB: 35

 thread: 2, LongJobs.size() 21
 thread: 1, LongJobs.size() 21
thread: 2, NSTable size: 23
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 5
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 7
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 2, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 2, i: 2, maxN[i].weit: 6, maxN[i].idx: 2, blockDimSize[i]: 6
thread: 2, i: 3, maxN[i].weit: 5, maxN[i].idx: 3, blockDimSize[i]: 5
thread: 2, i: 4, maxN[i].weit: 8, maxN[i].idx: 4, blockDimSize[i]: 8
thread: 2, i: 0, divisor[i]: 1, blockDimSize[i]: 4
thread: 2, i: 1, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 2, divisor[i]: 2, blockDimSize[i]: 3
thread: 2, i: 3, divisor[i]: 5, blockDimSize[i]: 1
thread: 2, i: 4, divisor[i]: 2, blockDimSize[i]: 4
thread: 2, largestBlockVec.elm: 0 0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 0 4 3 3 1 4 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 1 1 2 5 2 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 1 4 1 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 thread: 01, NSTable size:  230
 thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 05 , alltableelemets[maxindex].elm[i]: 20 
1thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 5
 thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 40 
1thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 7
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 1, i: 1, maxN[i].weit: 3, maxN[i].idx:  0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 3 10, blockDimSize[i]:  03 
0thread: 1, i: 2, maxN[i].weit: 6, maxN[i].idx: 2, blockDimSize[i]: 6
thread: 1, i: 3, maxN[i].weit: 5 0 0 0 , maxN[i].idx: 03, blockDimSize[i]:  50
thread: 1, i: 4, maxN[i].weit: 8, maxN[i].idx: 4 , blockDimSize[i]: , mySum: 38

thread: 10 0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 , mySum: 3
, i: 0 0 00 , divisor[i]: 1, blockDimSize[i]: 04 
0thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 2, divisor[i]: 2, blockDimSize[i]: 3
thread: 1, i: 3, divisor[i]: 5, blockDimSize[i]: 1
thread: 1, i: 4, divisor[i]: 2, blockDimSize[i]: 4
 thread: 1, largestBlockVec.elm: 0 1 01  1 0 0 0 0 0 00 0  0 0 , mySum: 3
0 0 0 0 0 0 1 2 0 0 0 0 0 0 1 4 0 0 10  00  , mySum: 03 
0 0 0 0 0 0 0 3 1 0 0 0 0 0 0 0 , mySum: 4
00 0 0  00 0  00  00  
0thread: 1, blockDimSizeComp: 0 0 0 0 4 3 3 1 4 0 0 4 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 2 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 3 0 0 0 0 0 0 0  00  0 00  0 
, mySum: 4
0 0 0 0 0 0 0 4 1 0 0 0 0 0 0 0 , mySum: 5
0 thread: 1, divisorComp: 0 0 0 0 1 01 2  05  0 0 20 1  30  0 10  0 00 0  0 00 0  0 0
 thread: 1, largestBlockVec: 0 0 0 0 0 0 1 4 1 0 , mySum: 5
0 0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 0 00  00  , mySum: 05 0
 
0 0 0 0 0 0 1 4 1 0 0 0 0 thread: 1, largestNoZeroBlockVec: 0 0 1 4 1 
0 0 0 , mySum: 6
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 3 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 2 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 4 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 3 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 , mySum: 6
thread: 0, NSTable size: 20
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 5
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 7
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 0, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 0, i: 2, maxN[i].weit: 6, maxN[i].idx: 2, blockDimSize[i]: 6
thread: 0, i: 3, maxN[i].weit: 5, maxN[i].idx: 3, blockDimSize[i]: 5
thread: 0, i: 4, maxN[i].weit: 8, maxN[i].idx: 4, blockDimSize[i]: 8
thread: 0, i: 0, divisor[i]: 1, blockDimSize[i]: 4
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 2, divisor[i]: 2, blockDimSize[i]: 3
thread: 0, i: 3, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, i: 4, divisor[i]: 2, blockDimSize[i]: 4
thread: 0, largestBlockVec.elm: 0 0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 0 4 3 3 1 4 0 0 0 0 0 0 0 
thread: 0, divisorComp: 0 0 0 0 1 1 2 5 2 0 0 0 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 1 4 1 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 3 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 2 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 4 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 3 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 , mySum: 6
thread: 2, maxBlockLvlSize: 4
thread: 2, maxInBlockLvlSize: 28
thread: 2, AllTableSize: 2880, maxSubsetsSize: 64
thread: 1, maxBlockLvlSize: 4
thread: 1, maxInBlockLvlSize: 28
thread: 1, AllTableSize: 2880, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 4
thread: 0, maxInBlockLvlSize: 28
thread: 0, AllTableSize: 2880, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 1 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 0 1 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 0 2 0 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 0 1 1 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 0 1 0 1 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 0 0 0 1 1 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[8]: 0 0 0 3 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[9]: 0 0 0 2 1 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 0 0 1 1 1 
thread: 0, allBlocks[11]: 0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 0 0 1 2 0 
thread: 0, allBlocks[12]: 0 0 0 0 0 0 0 3 1 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[12]: 0 0 0 3 1 
thread: 0, allBlocks[13]: 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[13]: 0 0 0 4 0 
thread: 0, allBlocks[14]: 0 0 0 0 0 0 1 2 1 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[14]: 0 0 1 2 1 
thread: 0, allBlocks[15]: 0 0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[15]: 0 0 1 3 0 
thread: 0, allBlocks[16]: 0 0 0 0 0 0 0 4 1 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[16]: 0 0 0 4 1 
thread: 0, allBlocks[17]: 0 0 0 0 0 0 1 3 1 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[17]: 0 0 1 3 1 
thread: 0, allBlocks[18]: 0 0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[18]: 0 0 1 4 0 
thread: 0, allBlocks[19]: 0 0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[19]: 0 0 1 4 1 
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.243431
thread: 1, sOPT: 10
copy the latest feasible solution to instance takes time: 0.260134
thread: 2, sOPT: 10
copy the latest feasible solution to instance takes time: 0.150797
thread: 0, sOPT: 10
BKID: 0, LB: 33, UB: 33, OPT: 10
Dynamic Programming Runtime: 1.44033
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 1
********************************************************
Total execution on UB and LB is: 1
OUT of Bk while loop  
UB    33
LB    33
T1    33
T2    33
OPT   10
nMachines   10
BkID	0
AllProbData.size()    2
ck :   1
AllProbData[ck].Ttable    33
ck :   0
AllProbData[ck].Ttable    35
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan34
Main Scheduling is Done
File 1-2 is Done.
******************************
Reading File...
File 1-3 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 50, LB: 31start at time: 1505276318
thread: 0, MlBk is called with LB: 31, UB: 36
thread: 3, MlBk is called with LB: 46, UB: 51
 thread: 0, LongJobs.size() 21
thread: 1thread: , MlBk is called with LB: 36, UB: 41
2, MlBk is called with LB: 41, UB:  thread: 1, LongJobs.size() 21
46
 thread: 3, LongJobs.size() 15
 thread: 2, LongJobs.size() 18
thread: 3, NSTable size: 18
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 5
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 4
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 6
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 6, maxN[i].idx: 0, blockDimSize[i]: 6
thread: 3, i: 1, maxN[i].weit: 5, maxN[i].idx: 1, blockDimSize[i]: 5
thread: 3, i: 2, maxN[i].weit: 7, maxN[i].idx: 2, blockDimSize[i]: 7
thread: 3, i: 0, divisor[i]: 2, blockDimSize[i]: 3
thread: 3, i: 1, divisor[i]: 5, blockDimSize[i]: 1
thread: 3, i: 2, divisor[i]: 7, blockDimSize[i]: 1
thread: 3, largestBlockVec.elm: 0 0 0 1 4 6 0 0 0 0 0 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 3 1 1 0 0 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 2 5 7 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 1 4 6 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 1 4 6 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 1 0 3 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 3 1 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 1 1 2 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 1 3 0 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 3 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 1 1 3 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 5 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 1 2 2 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 1 0 4 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 1 3 1 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 1 4 0 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 4 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 3 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 4 1 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 3 2 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 5 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 4 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 1 1 4 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 3 3 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 1 2 3 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 1 0 5 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 6 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 1 4 1 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 4 2 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 1 3 2 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 1 2 4 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 6 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 4 3 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 1 3 3 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 1 1 5 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 2 5 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 1 0 6 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 3 4 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 1 4 2 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 1 3 4 0 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 1 4 3 0 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 4 4 0 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 1 2 5 0 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 1 1 6 0 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 2 6 0 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 3 5 0 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 1 2 6 0 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 1 3 5 0 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 3 6 0 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 4 5 0 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 1 4 4 0 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 1 3 6 0 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 4 6 0 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 1 4 5 0 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 1 4 6 0 0 0 0 0 0 0 0 0 0 , mySum: 11
thread: 3, maxBlockLvlSize: 10
thread: 3, maxInBlockLvlSize: 1
thread: 3, AllTableSize: 210, maxSubsetsSize: 64
thread: 2, NSTable size: 38
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 5
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 6
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 2, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 2, i: 2, maxN[i].weit: 6, maxN[i].idx: 2, blockDimSize[i]: 6
thread: 2, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 2, i: 4, maxN[i].weit: 7, maxN[i].idx: 4, blockDimSize[i]: 7
thread: 2, i: 0, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 1, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 2, divisor[i]: 2, blockDimSize[i]: 3
thread: 2, i: 3, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, i: 4, divisor[i]: 7, blockDimSize[i]: 1
thread: 2, largestBlockVec.elm: 0 0 0 0 0 0 1 1 6 0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 0 3 3 3 2 1 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 1 1 2 2 7 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 1 1 6 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 1 1 6 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 1 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 1 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 0 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 1 3 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 0 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 1 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 0 5 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 1 5 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 1 1 4 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 1 0 6 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 0 1 6 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 1 1 5 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 1 1 6 0 0 0 0 0 0 0 , mySum: 8
thread: 2, maxBlockLvlSize: 4
thread: 2, maxInBlockLvlSize: 13
thread: 2, AllTableSize: 1512, maxSubsetsSize: 64
thread: 1, NSTable size: 30
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 5
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 5
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 6
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 6, maxN[i].idx: 0, blockDimSize[i]: 6
thread: 1, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 1, i: 2, maxN[i].weit: 6, maxN[i].idx: 2, blockDimSize[i]: 6
thread: 1, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 1, i: 4, maxN[i].weit: 7, maxN[i].idx: 4, blockDimSize[i]: 7
thread: 1, i: 0, divisor[i]: 2, blockDimSize[i]: 3
thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 2, divisor[i]: 2, blockDimSize[i]: 3
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 4
thread: 1, i: 4, divisor[i]: 7, blockDimSize[i]: 1
thread: 1, largestBlockVec.elm: 0 0 0 0 1 0 1 0 6 0 0 0 0 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 0 3 3 3 4 1 0 0 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 2 1 2 1 7 0 0 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 1 0 1 0 6 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 1 0 1 0 6 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 0 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 1 0 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 0 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 1 0 3 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 0 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 0 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 0 5 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 1 0 5 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 0 1 0 4 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 0 0 0 6 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 1 0 6 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 0 1 0 5 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 0 1 0 6 0 0 0 0 0 0 0 , mySum: 8
thread: 0, NSTable size: 20
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 5
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 5
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 6
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 0, maxN[i].weit: 6, maxN[i].idx: 0, blockDimSize[i]: 6
thread: 0, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 0, i: 2, maxN[i].weit: 6, maxN[i].idx: 2, blockDimSize[i]: 6
thread: 0, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 0, i: 4, maxN[i].weit: 7, maxN[i].idx: 4, blockDimSize[i]: 7
thread: 0, i: 0, divisor[i]: 2, blockDimSize[i]: 3
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 2, divisor[i]: 2, blockDimSize[i]: 3
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 4
thread: 0, i: 4, divisor[i]: 7, blockDimSize[i]: 1
thread: 0, largestBlockVec.elm: 0 0 0 0 1 0 1 0 6 0 0 0 0 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 0 3 3 3 4 1 0 0 0 0 0 0 0 
thread: 0, divisorComp: 0 0 0 0 2 1 2 1 7 0 0 0 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 1 0 1 0 6 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 1 0 1 0 6 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 0 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 1 0 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 0 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 1 0 3 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 0 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 0 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 0 5 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 1 0 5 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 0 1 0 4 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 0 0 0 6 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 1 0 6 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 0 1 0 5 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 0 1 0 6 0 0 0 0 0 0 0 , mySum: 8
thread: 0, maxBlockLvlSize: 4
thread: 0, maxInBlockLvlSize: 22
thread: 0, AllTableSize: 3024, maxSubsetsSize: 64
thread: 1, maxBlockLvlSize: 4
thread: 1, maxInBlockLvlSize: 22
thread: 1, AllTableSize: 3024, maxSubsetsSize: 64
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 5
copy the latest feasible solution to instance takes time: 0.010049
thread: 3, sOPT: 5
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 1 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 1 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 1 0 1 
thread: 0, allBlocks[5]: 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 1 0 1 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 0 0 0 2 
thread: 0, allBlocks[7]: 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 1 0 0 0 1 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[8]: 0 0 0 0 3 
thread: 0, allBlocks[9]: 0 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[9]: 0 0 1 0 2 
thread: 0, allBlocks[10]: 0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 1 0 1 0 1 
thread: 0, allBlocks[11]: 0 0 0 0 1 0 0 0 2 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 1 0 0 0 2 
thread: 0, allBlocks[12]: 0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[12]: 0 0 0 0 4 
thread: 0, allBlocks[13]: 0 0 0 0 0 0 1 0 3 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[13]: 0 0 1 0 3 
thread: 0, allBlocks[14]: 0 0 0 0 1 0 1 0 2 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[14]: 1 0 1 0 2 
thread: 0, allBlocks[15]: 0 0 0 0 1 0 0 0 3 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[15]: 1 0 0 0 3 
thread: 0, allBlocks[16]: 0 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[16]: 0 0 0 0 5 
thread: 0, allBlocks[17]: 0 0 0 0 1 0 1 0 3 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[17]: 1 0 1 0 3 
thread: 0, allBlocks[18]: 0 0 0 0 1 0 0 0 4 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[18]: 1 0 0 0 4 
thread: 0, allBlocks[19]: 0 0 0 0 0 0 1 0 4 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[19]: 0 0 1 0 4 
thread: 0, allBlocks[20]: 0 0 0 0 1 0 0 0 5 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[20]: 1 0 0 0 5 
thread: 0, allBlocks[21]: 0 0 0 0 0 0 1 0 5 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[21]: 0 0 1 0 5 
thread: 0, allBlocks[22]: 0 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[22]: 0 0 0 0 6 
thread: 0, allBlocks[23]: 0 0 0 0 1 0 1 0 4 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[23]: 1 0 1 0 4 
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 7
thread: 0, allBlocks[24]: 0 0 0 0 1 0 0 0 6 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[24]: 1 0 0 0 6 
thread: 0, allBlocks[25]: 0 0 0 0 0 0 1 0 6 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[25]: 0 0 1 0 6 
thread: 0, allBlocks[26]: 0 0 0 0 1 0 1 0 5 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[26]: 1 0 1 0 5 
copy the latest feasible solution to instance takes time: 0.084267
thread: 2, sOPT: 7
thread: 0, allBlocks[27]: 0 0 0 0 1 0 1 0 6 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[27]: 1 0 1 0 6 
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.156499
thread: 0, sOPT: 10
copy the latest feasible solution to instance takes time: 0.080002
thread: 1, sOPT: 9
Thread: 1, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 0, MlBk function is done, and BkID for all processes are collected.
3, MlBk function is done, and BkID for all processes are collected.Thread: 
2, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 31, UB: 34
BKID: 0, LB: 31, UB: 34, OPT: 10
Dynamic Programming Runtime: 1.17411
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 1
Iteration: 2, UB: 34, LB: 31start at time: 1505276319
thread: 0, MlBk is called with LB: 31, UB: 32
 thread: 0, LongJobs.size() 21
thread: thread: 2, MlBk is called with LB: 33, UB: 1, MlBk is called with LB: 3432, UB: 33

 thread: 2, LongJobs.size() 21
 thread: 1, LongJobs.size() 21
thread: 2, NSTable size: 20
thread: thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
, NSTable size: 20thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 5

thread: 2thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
, i: thread: 1, i: 51, alltableelemets[maxindex].elm[i]: , alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 5
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 6
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 6, maxN[i].idx: 0, blockDimSize[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 5
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 5
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 6
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 6
thread: 2, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 2, i: 2, maxN[i].weit: 6, maxN[i].idx: 2, blockDimSize[i]: 6
thread: 2, i: 3, maxN[i].weit: 4, maxN[i].idx: 0, maxN[i].weit: 6, maxN[i].idx: 0, blockDimSize[i]: 63
thread: 1, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 1, i: 2, maxN[i].weit: 6, maxN[i].idx: 2, blockDimSize[i]: 6
thread: 1, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 1, i: 4, maxN[i].weit: 7, maxN[i].idx: 4, blockDimSize[i]: 7
thread: 1, i: 0, divisor[i]: 2, blockDimSize[i]: 3
thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 3
, blockDimSize[i]: thread: 1, i: 2, divisor[i]: 2, blockDimSize[i]: 34
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 4
thread: 1, i: 4, divisor[i]: 7, blockDimSize[i]: 1

thread: 2, i: 4, maxN[i].weit: 7, maxN[i].idx: 4, blockDimSize[i]: 7
thread: thread: 1, largestBlockVec.elm: 0 2, i: 0, divisor[i]: 20, blockDimSize[i]:  3
thread: 2, i: 1, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 2, divisor[i]: 2, blockDimSize[i]: 3
thread: 2, i: 3, divisor[i]: 1, blockDimSize[i]: 4
thread: 2, i: 4, divisor[i]: 7, blockDimSize[i]: 1
0thread: 2, largestBlockVec.elm:  00  0 0 1 00  1 0 1 06  0 0 10 0  0 0 0 0 6 
0 0thread: 1, blockDimSizeComp: 0 0 0 0 3 3 3 4 1 0 0 0 0 0  0 0 
0thread: 1, divisorComp: 0 0 0 0 2 1 2 1 7  0 00 0  0 00  00  0 
0thread: 2, blockDimSizeComp: 0 0 0 0 3 3 3 4 1  0 
0thread: 1, largestBlockVec: 0 0 0 0 1 0 1 0 6 0 0 0  0 0 0 00 
 thread: 1, largestNoZeroBlockVec: 1 0 1 0 6 
0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 2 1 2 1 7 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 1 0 1 0 6 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 1 0 1 0 6 thread: 
1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0thread:  2, allBlocks: 0 10 0  00 0  0 0 00  10 0  0 00  00  00 0  0 0, mySum:  20 
0 0 0 0 0 0 0 0 0 3 00  00  0, mySum:  0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 3
00 0 0 0 0 0 1 0 2 0 0 0 0  0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 00 0 0  0, mySum:  1
0 0 0 0 0 0 1 0 0 0 0 0 00 0  0 , mySum: 03 
, mySum: 0 0 0 0 1 0 1 0 1 0 0 0 0 0 10 0
 0 0 0 0 0 0 1 0 1 0 0 0 0 0, mySum:  0 30 , mySum: 
2
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 2 0 0 00 0  00  0 0, mySum:  02 
0 0 0 0 0 0 0 0 2 0 0 0 0 0, mySum: 3
0 0 0 0 0 0 0 0 4 0 0 0  0 0 , mySum: 2
0 0 0 0 1 0 0 0 1 0 0 0 00 0 0 0 , mySum: 4
0 0 0 0 0 0 1 0 3 0 0 0 0 0  0 00  0 , mySum: 04
0 0 0 0 1 0 1 0 2 0 0 0 0  0, mySum:  20
 0 0 0 0 0 0 0 0 3 0 0 0 0 00 0 0  , mySum: , mySum: 43
0 0 0 0 0 0 1 0 2 0 0 0 0 0
 00 0 0 0 1 0 0 0 3 0 0 0 , mySum: 3
0 0 0 0 1 0 1 0 1 0 0 0 0  0 0 00  0 , mySum: 03
0 0 0 0 1 0 0 0 2 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 5 0 0 0  0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 4 0 0 0 0 00 0 0  , mySum: 0 04 0 
, mySum: 0 0 0 0 0 0 1 0 3 0 0 0 0 05 0 
00 0 0 0 1 0 1 0 3 0 0 0  , mySum: 4
0 0 0 0 1 0 1 0 2 0 0 0 0 00 0  00  0, mySum:  4
00 0 0 0 1 0 0 0 3 0 0 0 0  0 , mySum: 05 
0 , mySum: 0 0 0 0 1 0 0 0 4 0 0 0 04
0 0 0 0 0 0 0 0 5 0 0 0 0  0 0 0 , mySum: 50
 0 0 0 0 0 0 1 0 4 0 0 00 0 0  0 0 0, mySum: 5 
0 0 0 0 1 0 1 0 3 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 0 5 0 0 00 0 , mySum: 5
0 0 0 0 1 0 0 0 4 0 0 0 0  0 0 0 0 , mySum: 06 
0 0 0 0 0 0 1 0 5 0 0 0 00 0  00  0 , mySum: , mySum: 5
60 0 0 0 0 0 1 0 4 0 0 0 0 0 
00 0 0 0 0 0 0 0 6 0 0  0 0 0 00 , mySum:  50 , mySum: 
60 0 0 0 1 0 0 0 5 0 0 0 0 0 
00 0 0 0 1 0 1 0 4 0 0  0 0 00 0  0 , mySum: , mySum: 6
6
0 0 0 0 1 0 0 0 6 0 0 0 00 0 0 0 0 0 1 0 5 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 1 0 6 0 0 0 0  0 00  00  , mySum: 7
0 0 0 0 1 0 1 0 5 0 0 00 0  00  , mySum: 0 0 6, mySum: 7

0 0 0 0 1 0 1 0 6 0 0 0 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 00  0 , mySum: 0 08 
, mySum: 6
0 0 0 0 1 0 1 0 4 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 0 0 0 6 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 1 0 6 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 0 1 0 5 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 0 1 0 6 0 0 0 0 0 0 0 , mySum: 8
thread: 1, maxBlockLvlSize: 4
thread: 1, maxInBlockLvlSize: 22
thread: 1, AllTableSize: 3024, maxSubsetsSize: 64
thread: 2, maxBlockLvlSize: 4
thread: 2, maxInBlockLvlSize: 22
thread: 2, AllTableSize: 3024, maxSubsetsSize: 64
thread: 0, NSTable size: 33
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 9
thread: 0, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 0, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 0, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 0, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 0, i: 4, maxN[i].weit: 5, maxN[i].idx: 4, blockDimSize[i]: 5
thread: 0, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 0, i: 6, maxN[i].weit: 10, maxN[i].idx: 6, blockDimSize[i]: 10
thread: 0, i: 0, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 6, divisor[i]: 2, blockDimSize[i]: 5
thread: 0, largestBlockVec.elm: 0 0 0 0 0 0 0 0 0 1 0 0 0 4 0 1 
thread: 0, blockDimSizeComp: 0 0 0 0 0 0 0 0 0 2 3 2 2 1 2 5 
thread: 0, divisorComp: 0 0 0 0 0 0 0 0 0 2 1 1 1 5 1 2 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 1 0 0 0 4 0 1 
thread: 0, largestNoZeroBlockVec: 1 0 0 0 4 0 1 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 1 0 0 0 2 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 1 0 0 0 2 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 1 0 0 0 3 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 4 0 1 , mySum: 5
0 0 0 0 0 0 0 0 0 1 0 0 0 3 0 1 , mySum: 5
0 0 0 0 0 0 0 0 0 1 0 0 0 4 0 0 , mySum: 5
0 0 0 0 0 0 0 0 0 1 0 0 0 4 0 1 , mySum: 6
thread: 0, maxBlockLvlSize: 4
thread: 0, maxInBlockLvlSize: 46
thread: 0, AllTableSize: 4800, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 1 0 0 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 0 0 1 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 0 0 2 0 0 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 mySum: 2
thread: 0, blockNoZero[5]: 1 0 0 0 1 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[6]: 1 0 0 0 0 0 1 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 mySum: 2
thread: 0, blockNoZero[7]: 0 0 0 0 1 0 1 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 mySum: 3
thread: 0, blockNoZero[8]: 0 0 0 0 3 0 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 1 mySum: 3
thread: 0, blockNoZero[9]: 0 0 0 0 2 0 1 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 1 mySum: 3
thread: 0, blockNoZero[10]: 1 0 0 0 1 0 1 
thread: 0, allBlocks[11]: 0 0 0 0 0 0 0 0 0 1 0 0 0 2 0 0 mySum: 3
thread: 0, blockNoZero[11]: 1 0 0 0 2 0 0 
thread: 0, allBlocks[12]: 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 1 mySum: 4
thread: 0, blockNoZero[12]: 0 0 0 0 3 0 1 
thread: 0, allBlocks[13]: 0 0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 mySum: 4
thread: 0, blockNoZero[13]: 0 0 0 0 4 0 0 
thread: 0, allBlocks[14]: 0 0 0 0 0 0 0 0 0 1 0 0 0 2 0 1 mySum: 4
thread: 0, blockNoZero[14]: 1 0 0 0 2 0 1 
thread: 0, allBlocks[15]: 0 0 0 0 0 0 0 0 0 1 0 0 0 3 0 0 mySum: 4
thread: 0, blockNoZero[15]: 1 0 0 0 3 0 0 
thread: 0, allBlocks[16]: 0 0 0 0 0 0 0 0 0 0 0 0 0 4 0 1 mySum: 5
thread: 0, blockNoZero[16]: 0 0 0 0 4 0 1 
Thread: 1, gpu_BlockDP is done.
Thread: 2, gpu_BlockDP is done.
thread: 0, allBlocks[17]: 0 0 0 0 0 0 0 0 0 1 0 0 0 3 0 1 mySum: 5
thread: 0, blockNoZero[17]: 1 0 0 0 3 0 1 
thread: 0, allBlocks[18]: 0 0 0 0 0 0 0 0 0 1 0 0 0 4 0 0 mySum: 5
thread: 0, blockNoZero[18]: 1 0 0 0 4 0 0 
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.196389
thread: 1, sOPT: 10
thread: 0, allBlocks[19]: 0 0 0 0 0 0 0 0 0 1 0 0 0 4 0 1 mySum: 6
thread: 0, blockNoZero[19]: 1 0 0 0 4 0 1 
copy the latest feasible solution to instance takes time: 0.25091
thread: 2, sOPT: 10
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.098659
thread: 0, sOPT: 10
BKID: 0, LB: 31, UB: 31, OPT: 10
Dynamic Programming Runtime: 2.05443
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 2
********************************************************
Total execution on UB and LB is: 2
OUT of Bk while loop  
UB    31
LB    31
T1    31
T2    31
OPT   10
nMachines   10
BkID	0
AllProbData.size()    2
ck :   1
AllProbData[ck].Ttable    31
ck :   0
AllProbData[ck].Ttable    33
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan34
Main Scheduling is Done
File 1-3 is Done.
******************************
Reading File...
File 1-4 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 50, LB: 31start at time: 1505276320
thread: 0, MlBk is called with LB: 31, UB: 36
thread: 3, MlBk is called with LB: 46, UB: 51
 thread: 0, LongJobs.size() 21
thread: 2, MlBk is called with LB: 41, UB: 46
 thread: 3, LongJobs.size() 16
 thread: 2, LongJobs.size() 20
thread: 3, NSTable size: 18
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 5
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 7
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 4
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 6, maxN[i].idx: 0, blockDimSize[i]: 6
thread: 3, i: 1, maxN[i].weit: 8, maxN[i].idx: 1, blockDimSize[i]: 8
thread: 3, i: 2, maxN[i].weit: 5, maxN[i].idx: 2, blockDimSize[i]: 5
thread: 3, i: 0, divisor[i]: 2, blockDimSize[i]: 3
thread: 3, i: 1, divisor[i]: 2, blockDimSize[i]: 4
thread: 3, i: 2, divisor[i]: 5, blockDimSize[i]: 1
thread: 3, largestBlockVec.elm: 0 0 0 1 1 4 0 0 0 0 0 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 3 4 1 0 0 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 2 2 5 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 1 1 4 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 1 1 4 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 3 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 1 0 3 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 1 1 2 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 4 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 1 0 4 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 1 1 3 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 1 1 4 0 0 0 0 0 0 0 0 0 0 , mySum: 6
thread: 3, maxBlockLvlSize: 4
thread: 3, maxInBlockLvlSize: 3
thread: 3, AllTableSize: 240, maxSubsetsSize: 64
thread: 1, MlBk is called with LB: 36, UB: 41
 thread: 1, LongJobs.size() 21
thread: 0, NSTable size: 20
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 8
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 0, i: 1, maxN[i].weit: 4, maxN[i].idx: 1, blockDimSize[i]: 4
thread: 0, i: 2, maxN[i].weit: 9, maxN[i].idx: 2, blockDimSize[i]: 9
thread: 0, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 0, i: 4, maxN[i].weit: 5, maxN[i].idx: 4, blockDimSize[i]: 5
thread: 0, i: 0, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 4
thread: 0, i: 2, divisor[i]: 3, blockDimSize[i]: 3
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 4
thread: 0, i: 4, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, largestBlockVec.elm: 0 0 0 0 1 0 2 0 4 0 0 0 0 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 0 2 4 3 4 1 0 0 0 0 0 0 0 
thread: 0, divisorComp: 0 0 0 0 2 1 3 1 5 0 0 0 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 1 0 2 0 4 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 1 0 2 0 4 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 0 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 0 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 0 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 1 0 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 2 0 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 2 0 3 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 0 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 0 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 1 0 3 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 2 0 2 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 2 0 4 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 0 2 0 3 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 0 1 0 4 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 0 2 0 4 0 0 0 0 0 0 0 , mySum: 7
thread: 0, maxBlockLvlSize: 6
thread: 0, maxInBlockLvlSize: 19
thread: 0, AllTableSize: 2880, maxSubsetsSize: 64
thread: 1, NSTable size: 31
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 8
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 1, i: 1, maxN[i].weit: 4, maxN[i].idx: 1, blockDimSize[i]: 4
thread: 1, i: 2, maxN[i].weit: 9, maxN[i].idx: 2, blockDimSize[i]: 9
thread: 1, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 1, i: 4, maxN[i].weit: 5, maxN[i].idx: 4, blockDimSize[i]: 5
thread: 1, i: 0, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 4
thread: 1, i: 2, divisor[i]: 3, blockDimSize[i]: 3
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 4
thread: 1, i: 4, divisor[i]: 5, blockDimSize[i]: 1
thread: 1, largestBlockVec.elm: 0 0 0 0 1 0 2 0 4 0 0 0 0 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 0 2 4 3 4 1 0 0 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 2 1 3 1 5 0 0 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 1 0 2 0 4 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 1 0 2 0 4 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 0 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 0 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 0 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 1 0 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 2 0 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 2 0 3 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 0 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 0 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 1 0 3 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 2 0 2 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 2 0 4 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 0 2 0 3 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 0 1 0 4 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 0 2 0 4 0 0 0 0 0 0 0 , mySum: 7
thread: 1, maxBlockLvlSize: 6
thread: 1, maxInBlockLvlSize: 19
thread: 1, AllTableSize: 2880, maxSubsetsSize: 64
thread: 2, NSTable size: 39
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 8
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 2, i: 1, maxN[i].weit: 4, maxN[i].idx: 1, blockDimSize[i]: 4
thread: 2, i: 2, maxN[i].weit: 9, maxN[i].idx: 2, blockDimSize[i]: 9
thread: 2, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 2, i: 4, maxN[i].weit: 5, maxN[i].idx: 4, blockDimSize[i]: 5
thread: 2, i: 0, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 1, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, i: 2, divisor[i]: 3, blockDimSize[i]: 3
thread: 2, i: 3, divisor[i]: 1, blockDimSize[i]: 4
thread: 2, i: 4, divisor[i]: 5, blockDimSize[i]: 1
thread: 2, largestBlockVec.elm: 0 0 0 0 0 1 2 0 4 0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 0 3 2 3 4 1 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 1 2 3 1 5 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 1 2 0 4 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 1 2 0 4 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 1 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 0 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 0 0 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 0 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 1 0 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 2 0 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 2 0 3 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 0 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 0 0 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 1 0 3 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 2 0 2 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 2 0 4 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 2 0 3 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 1 0 4 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 2 0 4 0 0 0 0 0 0 0 , mySum: 7
thread: 2, maxBlockLvlSize: 6
thread: 2, maxInBlockLvlSize: 16
thread: 2, AllTableSize: 2160, maxSubsetsSize: 64
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 6
copy the latest feasible solution to instance takes time: 0.009923
thread: 3, sOPT: 6
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 1 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 1 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 1 0 1 
thread: 0, allBlocks[5]: 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 1 0 1 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 0 2 0 0 
thread: 0, allBlocks[7]: 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 1 0 0 0 1 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[8]: 0 0 0 0 2 
thread: 0, allBlocks[9]: 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[9]: 0 0 0 0 3 
thread: 0, allBlocks[10]: 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 1 0 2 0 0 
thread: 0, allBlocks[11]: 0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 1 0 1 0 1 
thread: 0, allBlocks[12]: 0 0 0 0 1 0 0 0 2 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[12]: 1 0 0 0 2 
thread: 0, allBlocks[13]: 0 0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[13]: 0 0 2 0 1 
thread: 0, allBlocks[14]: 0 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[14]: 0 0 1 0 2 
thread: 0, allBlocks[15]: 0 0 0 0 0 0 2 0 2 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[15]: 0 0 2 0 2 
thread: 0, allBlocks[16]: 0 0 0 0 1 0 0 0 3 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[16]: 1 0 0 0 3 
thread: 0, allBlocks[17]: 0 0 0 0 0 0 1 0 3 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[17]: 0 0 1 0 3 
thread: 0, allBlocks[18]: 0 0 0 0 1 0 1 0 2 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[18]: 1 0 1 0 2 
thread: 0, allBlocks[19]: 0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[19]: 0 0 0 0 4 
thread: 0, allBlocks[20]: 0 0 0 0 1 0 2 0 1 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[20]: 1 0 2 0 1 
thread: 0, allBlocks[21]: 0 0 0 0 0 0 2 0 3 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[21]: 0 0 2 0 3 
thread: 0, allBlocks[22]: 0 0 0 0 0 0 1 0 4 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[22]: 0 0 1 0 4 
thread: 0, allBlocks[23]: 0 0 0 0 1 0 0 0 4 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[23]: 1 0 0 0 4 
thread: 0, allBlocks[24]: 0 0 0 0 1 0 1 0 3 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[24]: 1 0 1 0 3 
thread: 0, allBlocks[25]: 0 0 0 0 1 0 2 0 2 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[25]: 1 0 2 0 2 
thread: 0, allBlocks[26]: 0 0 0 0 0 0 2 0 4 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[26]: 0 0 2 0 4 
thread: 0, allBlocks[27]: 0 0 0 0 1 0 2 0 3 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[27]: 1 0 2 0 3 
thread: 0, allBlocks[28]: 0 0 0 0 1 0 1 0 4 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[28]: 1 0 1 0 4 
thread: 0, allBlocks[29]: 0 0 0 0 1 0 2 0 4 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[29]: 1 0 2 0 4 
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 7
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.173254
thread: 2, sOPT: 7
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.196061
thread: 0, sOPT: 10
copy the latest feasible solution to instance takes time: 0.095663
thread: 1, sOPT: 9
Thread: 1, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 32, MlBk function is done, and BkID for all processes are collected., MlBk function is done, and BkID for all processes are collected.

Thread: 0, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 31, UB: 34
BKID: 0, LB: 31, UB: 34, OPT: 10
Dynamic Programming Runtime: 1.311
Execution time between LB and UB is: 0
By far, all LB UB calculation runtime: 0
Iteration: 2, UB: 34, LB: 31start at time: 1505276321
thread: 0, MlBk is called with LB: 31, UB: 32
 thread: 0, LongJobs.size() 21
thread: 2, MlBk is called with LB: 33, UB: 34thread: 
1, MlBk is called with LB: 32, UB: 33
 thread: 2, LongJobs.size() 21
 thread: 1, LongJobs.size() 21
thread: 1, NSTable size: 20
thread: thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 20
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: , NSTable size: 220, alltableelemets[maxindex].elm[i]: 0

thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
1thread: 2, i: , i: 24, alltableelemets[maxindex].elm[i]: , alltableelemets[maxindex].elm[i]: 0
3thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 
4, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 8
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 4thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 3
, maxN[i].idx: thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 08, blockDimSize[i]: 
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 04, maxN[i].weit: 4, maxN[i].idx: 0
, blockDimSize[i]: 4thread: 2
, i: thread: 1, i: 1, maxN[i].weit: 1, maxN[i].weit: 4, maxN[i].idx: 14, blockDimSize[i]: , maxN[i].idx: 1, blockDimSize[i]: 44
thread: 1, i: 2, maxN[i].weit: 9, maxN[i].idx: 2, blockDimSize[i]: 9
thread: 1, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 1, i: 4, maxN[i].weit: 5, maxN[i].idx: 4, blockDimSize[i]: 5

thread: 1, i: 0, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 4
thread: 1, i: 2, divisor[i]: 3, blockDimSize[i]: 3
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 4
thread: 1, i: 4, divisor[i]: 5, blockDimSize[i]: 1
thread: 2, i: 2, maxN[i].weit: thread: 91, largestBlockVec.elm: , maxN[i].idx: 2, blockDimSize[i]: 90
thread: 2, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 2, i: 4, maxN[i].weit: 5, maxN[i].idx: 4, blockDimSize[i]:  5
0 thread: 2, i: 00, divisor[i]:  2, blockDimSize[i]: 02 
thread: 2, i: 1, divisor[i]: 1, blockDimSize[i]: 4
thread: 2, i: 2, divisor[i]: 3, blockDimSize[i]: 3
thread: 2, i: 3, divisor[i]: 1, blockDimSize[i]: 4
thread: 2, i: 4, divisor[i]: 5, blockDimSize[i]: 1
1thread: 2 , largestBlockVec.elm: 0 0 02  0 0 0 4 0 0 0 01  00  0 0 2
 0thread: 1, blockDimSizeComp: 0 0 0 0 2 4 3  4 1 0 0 0 0 0 4 00 0  0 
0thread: 1, divisorComp: 0 0 0 0 2 1 3 1 5 0 0 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 1 0 2 0 4 0 0  0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 0 2 4 3 4 1 00 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 1 0 2 0 4 
 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 2 1 3 1 5 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 1 0 2 0 4 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 1 0 2 0 4 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 thread: 12 , allBlocks: 00  10  00  00  0 00  0 00  0 00  0, mySum:  20
 0 0 0 0 1 0 1 0 0 0 0 0 0 0 00 0  , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 00 0  0 00  , mySum: 2, mySum: 
10 0 0 0 1 0 0 0 1 0 0 0 0 0 
0 00 0 0 0 1 0 0 0 0 0 0 0  0, mySum:  20
 00 0 0 0 0 0 0 0 2 0 0 0 0  0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 20
 0 0 0 0 0 0 0 0 3 0 0 0 0 00 0  00 , mySum:  1, mySum: 
30 0 0 0 0 0 1 0 1 0 0 0 0 0 
00 0 0 0 1 0 2 0 0 0 0 0  0 00  0 , mySum: 0 , mySum: 23

0 0 0 0 1 0 1 0 0 0 0 0 0 0 00 0 0 0 1 0 1 0 1 0 0 0  0 0 00  , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0, mySum: 3
0 0 0 0 1 0 0 0 2 0 0 0 0  0 0 , mySum: 2
00 0 0 0 1 0 0 0 1 0 0 0 0 0  0 00  , mySum: 2
00 0 0 0 0 0 0 0 2 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 0 1 0 0 0 0 0  0 0 , mySum: 2
00 0 0 0 0 0 0 0 3 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 0 2 0 0 0 0  0 0 , mySum: 3
0 0 0 0 1 0 2 0 0 0 0 0 0 0 00  00  , mySum: 03 
, mySum: 30 0 0 0 1 0 1 0 1 0 0 0 0 
0 0 0 0 0 0 0 2 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 0 2 0 0 0 0 00 0  0 , mySum: 0 4, mySum: 3
0 0 0 0 0 0 2 0 1 0 0 0 0 
0 0 0 0 0 1 0 0 0 3 0 0 0 00 0  00  0, mySum:  3, mySum: 4

0 0 0 0 0 0 1 0 3 0 0 0 00 0 0 0 0 0 1 0 2 0 0  0 0 0 , mySum: 40
 0 0 0 0 1 0 1 0 2 0 0 0 0 00 0 0  , mySum: 04 
0 00 0 0 0 0 0 0 0 4 0 0 0 0 0  0 , mySum: 0 , mySum: 4
30 0 0 0 1 0 2 0 1 0 0 0 0 0
 0 0 0 0 0 0 2 0 2 0 0 0 0 00 0  00  , mySum: , mySum: 44
0 0 0 0 0 0 2 0 3 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 3 0 0 0 00 0  , mySum: 05 
00 0 0 0 0 0 1 0 4 0 0 0 0 0 0  0, mySum:  , mySum: 5
40 0 0 0 1 0 0 0 4 0 0 0 0 
0 0 0 0 0 0 0 1 0 3 0 0 0 00 0  0 0 0, mySum:  4, mySum: 
50 0 0 0 1 0 1 0 2 0 0 0 0 
0 0 0 0 0 1 0 1 0 3 0 0 0 0 00  00  0, mySum: 4 , mySum: 
50 0 0 0 0 0 0 0 4 0 0 0 0 0
 0 0 0 0 0 1 0 2 0 2 0 0 0 00 0  0 , mySum: 0 , mySum: 45
0 0 0 0 1 0 2 0 1 0 0 0 0 0
 0 0 0 0 0 0 2 0 4 0 00 0 , mySum: 4
0 0 0 0 0 0 2 0 3 0 0 0 0 0 0 0 0 0  0, mySum:  60
 0 0 0 0 1 0 2 0 3 0 0 0 0 0 00 0  , mySum: 6, mySum: 
0 0 0 0 1 0 1 0 4 0 0 0 0 05 0 0
 , mySum: 0 0 0 0 0 0 1 0 4 0 0 0 0 06
0 0 0 0 1 0 2 0 4 0 0 0 0 0 0 , mySum: 5
 0 0 0 0 1 0 0 0 4 0 0 0 0 0 00 0  , mySum: 05
0 0 0 0 1 0 1 0 3 0 0 0 0  0 0 00  , mySum: 5, mySum: 
7
0 0 0 0 1 0 2 0 2 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 2 0 4 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 0 2 0 3 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 0 1 0 4 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 0 2 0 4 0 0 0 0 0 0 0 , mySum: 7
thread: 1, maxBlockLvlSize: 6
thread: 1, maxInBlockLvlSize: 19
thread: 1, AllTableSize: 2880, maxSubsetsSize: 64
thread: 2, maxBlockLvlSize: 6
thread: 2, maxInBlockLvlSize: 19
thread: 2, AllTableSize: 2880, maxSubsetsSize: 64
thread: 0, NSTable size: 32
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 7
thread: 0, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 0, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 0, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 0, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 0, i: 4, maxN[i].weit: 5, maxN[i].idx: 4, blockDimSize[i]: 5
thread: 0, i: 5, maxN[i].weit: 5, maxN[i].idx: 5, blockDimSize[i]: 5
thread: 0, i: 6, maxN[i].weit: 8, maxN[i].idx: 6, blockDimSize[i]: 8
thread: 0, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 2, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, i: 5, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, i: 6, divisor[i]: 2, blockDimSize[i]: 4
thread: 0, largestBlockVec.elm: 0 0 0 0 0 0 0 0 0 0 0 0 0 4 4 1 
thread: 0, blockDimSizeComp: 0 0 0 0 0 0 0 0 0 2 3 3 2 1 1 4 
thread: 0, divisorComp: 0 0 0 0 0 0 0 0 0 1 1 1 1 5 5 2 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 4 4 1 
thread: 0, largestNoZeroBlockVec: 0 0 0 0 4 4 1 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 2 1 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 1 2 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 1 2 1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 1 3 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 3 1 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 2 1 1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 2 2 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 2 2 1 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 0 3 1 1 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 0 3 2 0 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 0 4 0 1 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 0 4 1 0 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 0 2 3 0 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 1 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 0 1 3 1 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 0 1 4 0 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 0 2 4 0 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 0 0 4 2 0 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 0 0 4 1 1 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 0 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 0 0 3 2 1 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 0 0 1 4 1 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 0 0 2 3 1 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 1 , mySum: 7
0 0 0 0 0 0 0 0 0 0 0 0 0 3 4 0 , mySum: 7
0 0 0 0 0 0 0 0 0 0 0 0 0 2 4 1 , mySum: 7
0 0 0 0 0 0 0 0 0 0 0 0 0 4 2 1 , mySum: 7
0 0 0 0 0 0 0 0 0 0 0 0 0 4 3 0 , mySum: 7
0 0 0 0 0 0 0 0 0 0 0 0 0 3 4 1 , mySum: 8
0 0 0 0 0 0 0 0 0 0 0 0 0 4 3 1 , mySum: 8
0 0 0 0 0 0 0 0 0 0 0 0 0 4 4 0 , mySum: 8
0 0 0 0 0 0 0 0 0 0 0 0 0 4 4 1 , mySum: 9
thread: 0, maxBlockLvlSize: 9
thread: 0, maxInBlockLvlSize: 30
thread: 0, AllTableSize: 7200, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 0 0 0 1 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 0 0 1 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 mySum: 2
thread: 0, blockNoZero[4]: 0 0 0 0 0 1 1 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 mySum: 2
thread: 0, blockNoZero[5]: 0 0 0 0 0 2 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 0 0 0 2 0 0 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 mySum: 2
thread: 0, blockNoZero[7]: 0 0 0 0 1 0 1 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 mySum: 2
thread: 0, blockNoZero[8]: 0 0 0 0 1 1 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 mySum: 3
thread: 0, blockNoZero[9]: 0 0 0 0 3 0 0 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 0 0 0 0 0 0 0 2 1 0 mySum: 3
thread: 0, blockNoZero[10]: 0 0 0 0 2 1 0 
thread: 0, allBlocks[11]: 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 1 mySum: 3
thread: 0, blockNoZero[11]: 0 0 0 0 2 0 1 
thread: 0, allBlocks[12]: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 2 0 mySum: 3
thread: 0, blockNoZero[12]: 0 0 0 0 1 2 0 
thread: 0, allBlocks[13]: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 mySum: 3
thread: 0, blockNoZero[13]: 0 0 0 0 1 1 1 
thread: 0, allBlocks[14]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 mySum: 3
thread: 0, blockNoZero[14]: 0 0 0 0 0 3 0 
thread: 0, allBlocks[15]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 1 mySum: 3
thread: 0, blockNoZero[15]: 0 0 0 0 0 2 1 
thread: 0, allBlocks[16]: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 2 1 mySum: 4
thread: 0, blockNoZero[16]: 0 0 0 0 1 2 1 
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
thread: 0, allBlocks[17]: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 3 0 mySum: 4
thread: 0, blockNoZero[17]: 0 0 0 0 1 3 0 
thread: 0, allBlocks[18]: 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 1 mySum: 4
thread: 0, blockNoZero[18]: 0 0 0 0 3 0 1 
thread: 0, allBlocks[19]: 0 0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 mySum: 4
thread: 0, blockNoZero[19]: 0 0 0 0 4 0 0 
thread: 0, allBlocks[20]: 0 0 0 0 0 0 0 0 0 0 0 0 0 3 1 0 mySum: 4
thread: 0, blockNoZero[20]: 0 0 0 0 3 1 0 
thread: 0, allBlocks[21]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 0 mySum: 4
thread: 0, blockNoZero[21]: 0 0 0 0 0 4 0 
Thread: 2, gpu_BlockDP is done.
thread: 0, allBlocks[22]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 1 mySum: 4
thread: 0, blockNoZero[22]: 0 0 0 0 0 3 1 
thread: 0, allBlocks[23]: 0 0 0 0 0 0 0 0 0 0 0 0 0 2 1 1 mySum: 4
thread: 0, blockNoZero[23]: 0 0 0 0 2 1 1 
thread: 0, allBlocks[24]: 0 0 0 0 0 0 0 0 0 0 0 0 0 2 2 0 mySum: 4
thread: 0, blockNoZero[24]: 0 0 0 0 2 2 0 
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.145737
thread: 1, sOPT: 10
thread: 0, allBlocks[25]: 0 0 0 0 0 0 0 0 0 0 0 0 0 2 2 1 mySum: 5
thread: 0, blockNoZero[25]: 0 0 0 0 2 2 1 
thread: 0, allBlocks[26]: 0 0 0 0 0 0 0 0 0 0 0 0 0 3 1 1 mySum: 5
thread: 0, blockNoZero[26]: 0 0 0 0 3 1 1 
thread: 0, allBlocks[27]: 0 0 0 0 0 0 0 0 0 0 0 0 0 3 2 0 mySum: 5
thread: 0, blockNoZero[27]: 0 0 0 0 3 2 0 
thread: 0, allBlocks[28]: 0 0 0 0 0 0 0 0 0 0 0 0 0 4 0 1 mySum: 5
thread: 0, blockNoZero[28]: 0 0 0 0 4 0 1 
thread: 0, allBlocks[29]: 0 0 0 0 0 0 0 0 0 0 0 0 0 4 1 0 mySum: 5
thread: 0, blockNoZero[29]: 0 0 0 0 4 1 0 
thread: 0, allBlocks[30]: 0 0 0 0 0 0 0 0 0 0 0 0 0 2 3 0 mySum: 5
thread: 0, blockNoZero[30]: 0 0 0 0 2 3 0 
thread: 0, allBlocks[31]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 1 mySum: 5
thread: 0, blockNoZero[31]: 0 0 0 0 0 4 1 
thread: 0, allBlocks[32]: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 3 1 mySum: 5
thread: 0, blockNoZero[32]: 0 0 0 0 1 3 1 
thread: 0, allBlocks[33]: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 4 0 mySum: 5
thread: 0, blockNoZero[33]: 0 0 0 0 1 4 0 
copy the latest feasible solution to instance takes time: 0.157581
thread: 2, sOPT: 10
thread: 0, allBlocks[34]: 0 0 0 0 0 0 0 0 0 0 0 0 0 2 4 0 mySum: 6
thread: 0, blockNoZero[34]: 0 0 0 0 2 4 0 
thread: 0, allBlocks[35]: 0 0 0 0 0 0 0 0 0 0 0 0 0 4 2 0 mySum: 6
thread: 0, blockNoZero[35]: 0 0 0 0 4 2 0 
thread: 0, allBlocks[36]: 0 0 0 0 0 0 0 0 0 0 0 0 0 4 1 1 mySum: 6
thread: 0, blockNoZero[36]: 0 0 0 0 4 1 1 
thread: 0, allBlocks[37]: 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 0 mySum: 6
thread: 0, blockNoZero[37]: 0 0 0 0 3 3 0 
thread: 0, allBlocks[38]: 0 0 0 0 0 0 0 0 0 0 0 0 0 3 2 1 mySum: 6
thread: 0, blockNoZero[38]: 0 0 0 0 3 2 1 
thread: 0, allBlocks[39]: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 4 1 mySum: 6
thread: 0, blockNoZero[39]: 0 0 0 0 1 4 1 
thread: 0, allBlocks[40]: 0 0 0 0 0 0 0 0 0 0 0 0 0 2 3 1 mySum: 6
thread: 0, blockNoZero[40]: 0 0 0 0 2 3 1 
thread: 0, allBlocks[41]: 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 1 mySum: 7
thread: 0, blockNoZero[41]: 0 0 0 0 3 3 1 
thread: 0, allBlocks[42]: 0 0 0 0 0 0 0 0 0 0 0 0 0 3 4 0 mySum: 7
thread: 0, blockNoZero[42]: 0 0 0 0 3 4 0 
thread: 0, allBlocks[43]: 0 0 0 0 0 0 0 0 0 0 0 0 0 2 4 1 mySum: 7
thread: 0, blockNoZero[43]: 0 0 0 0 2 4 1 
thread: 0, allBlocks[44]: 0 0 0 0 0 0 0 0 0 0 0 0 0 4 2 1 mySum: 7
thread: 0, blockNoZero[44]: 0 0 0 0 4 2 1 
thread: 0, allBlocks[45]: 0 0 0 0 0 0 0 0 0 0 0 0 0 4 3 0 mySum: 7
thread: 0, blockNoZero[45]: 0 0 0 0 4 3 0 
thread: 0, allBlocks[46]: 0 0 0 0 0 0 0 0 0 0 0 0 0 3 4 1 mySum: 8
thread: 0, blockNoZero[46]: 0 0 0 0 3 4 1 
thread: 0, allBlocks[47]: 0 0 0 0 0 0 0 0 0 0 0 0 0 4 3 1 mySum: 8
thread: 0, blockNoZero[47]: 0 0 0 0 4 3 1 
thread: 0, allBlocks[48]: 0 0 0 0 0 0 0 0 0 0 0 0 0 4 4 0 mySum: 8
thread: 0, blockNoZero[48]: 0 0 0 0 4 4 0 
thread: 0, allBlocks[49]: 0 0 0 0 0 0 0 0 0 0 0 0 0 4 4 1 mySum: 9
thread: 0, blockNoZero[49]: 0 0 0 0 4 4 1 
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 1e-06
thread: 0, sOPT: 11
BKID: 0, LB: 32, UB: 32, OPT: 10
Dynamic Programming Runtime: 1.65549
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 2
********************************************************
Total execution on UB and LB is: 2
OUT of Bk while loop  
UB    32
LB    32
T1    32
T2    32
OPT   10
nMachines   10
BkID	0
AllProbData.size()    2
ck :   1
AllProbData[ck].Ttable    32
ck :   0
AllProbData[ck].Ttable    33
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan34
Main Scheduling is Done
File 1-4 is Done.
******************************
Reading File...
File 1-5 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 48, LB: 30start at time: 1505276322
thread: 0, MlBk is called with LB: 30, UB: 34
thread: 3, MlBk is called with LB: 42, UB: 48
 thread: 0, LongJobs.size() 21
 thread: 3, LongJobs.size() 18
thread: 1, MlBk is called with LB: 34, UB: 38
thread: 2, MlBk is called with LB: 38, UB: 42
 thread: 1, LongJobs.size() 21
 thread: 2, LongJobs.size() 20
thread: 3, NSTable size: 23
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 7
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 7
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 8, maxN[i].idx: 0, blockDimSize[i]: 8
thread: 3, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 3, i: 2, maxN[i].weit: 8, maxN[i].idx: 2, blockDimSize[i]: 8
thread: 3, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 3, i: 0, divisor[i]: 2, blockDimSize[i]: 4
thread: 3, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, i: 2, divisor[i]: 2, blockDimSize[i]: 4
thread: 3, i: 3, divisor[i]: 1, blockDimSize[i]: 3
thread: 3, largestBlockVec.elm: 0 0 0 0 0 1 2 1 0 0 0 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 0 0 4 1 4 3 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 0 0 2 3 2 1 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 1 2 1 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 1 2 1 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 2 1 0 0 0 0 0 0 0 0 , mySum: 4
thread: 3, maxBlockLvlSize: 4
thread: 3, maxInBlockLvlSize: 10
thread: 3, AllTableSize: 576, maxSubsetsSize: 64
thread: 2, NSTable size: 34
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 7
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 7
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 2, i: 1, maxN[i].weit: 8, maxN[i].idx: 1, blockDimSize[i]: 8
thread: 2, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 2, i: 3, maxN[i].weit: 8, maxN[i].idx: 3, blockDimSize[i]: 8
thread: 2, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 2, i: 0, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 1, divisor[i]: 2, blockDimSize[i]: 4
thread: 2, i: 2, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 3, divisor[i]: 2, blockDimSize[i]: 4
thread: 2, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, largestBlockVec.elm: 0 0 0 0 2 1 0 1 0 0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 0 1 4 3 4 3 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 3 2 1 2 1 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 2 1 0 1 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 2 1 0 1 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 1 0 1 0 0 0 0 0 0 0 0 , mySum: 4
thread: 1, NSTable size: 27
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 7
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 7
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 1, i: 1, maxN[i].weit: 8, maxN[i].idx: 1, blockDimSize[i]: 8
thread: 1, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 1, i: 3, maxN[i].weit: 8, maxN[i].idx: 3, blockDimSize[i]: 8
thread: 1, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 1, i: 0, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, i: 1, divisor[i]: 2, blockDimSize[i]: 4
thread: 1, i: 2, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 3, divisor[i]: 2, blockDimSize[i]: 4
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, largestBlockVec.elm: 0 0 0 0 1 1 0 1 0 0 0 0 0 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 0 2 4 3 4 3 0 0 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 2 2 1 2 1 0 0 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 1 1 0 1 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 1 1 0 1 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 1 0 0 0 0 0 0 0 0 , mySum: 3
thread: 2, maxBlockLvlSize: 4
thread: 2, maxInBlockLvlSize: 28
thread: 2, AllTableSize: 1728, maxSubsetsSize: 64
thread: 0, NSTable size: 20
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 7
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 7
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 0, i: 1, maxN[i].weit: 8, maxN[i].idx: 1, blockDimSize[i]: 8
thread: 0, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 0, i: 3, maxN[i].weit: 8, maxN[i].idx: 3, blockDimSize[i]: 8
thread: 0, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 0, i: 0, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 1, divisor[i]: 2, blockDimSize[i]: 4
thread: 0, i: 2, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 3, divisor[i]: 2, blockDimSize[i]: 4
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, largestBlockVec.elm: 0 0 0 0 1 1 0 1 0 0 0 0 0 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 0 2 4 3 4 3 0 0 0 0 0 0 0 
thread: 0, divisorComp: 0 0 0 0 2 2 1 2 1 0 0 0 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 1 1 0 1 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 1 1 0 1 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 1 0 0 0 0 0 0 0 0 , mySum: 3
thread: 1, maxBlockLvlSize: 3
thread: 1, maxInBlockLvlSize: 53
thread: 1, AllTableSize: 2304, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 3
thread: 0, maxInBlockLvlSize: 53
thread: 0, AllTableSize: 2304, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 1 0 
thread: 0, allBlocks[2]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 1 0 0 0 
Thread: 3, gpu_BlockDP is done.
thread: 0, allBlocks[3]: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 1 0 0 0 0 
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 6
copy the latest feasible solution to instance takes time: 0.050749
thread: 3, sOPT: 6
thread: 0, allBlocks[4]: 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 1 0 1 0 
thread: 0, allBlocks[5]: 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 1 0 0 1 0 
thread: 0, allBlocks[6]: 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 1 1 0 0 0 
thread: 0, allBlocks[7]: 0 0 0 0 1 1 0 1 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[7]: 1 1 0 1 0 
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 8
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.134223
thread: 2, sOPT: 8
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.129498
thread: 1, sOPT: 9
copy the latest feasible solution to instance takes time: 0.070572
thread: 0, sOPT: 10
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: Thread: 31, MlBk function is done, and BkID for all processes are collected.2
, MlBk function is done, and BkID for all processes are collected.
, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 30, UB: 33
BKID: 0, LB: 30, UB: 33, OPT: 10
Dynamic Programming Runtime: 1.57971
Execution time between LB and UB is: 0
By far, all LB UB calculation runtime: 0
Iteration: 2, UB: 33, LB: 30start at time: 1505276322
thread: 0, MlBk is called with LB: 30, UB: 31
 thread: 0, LongJobs.size() 21
thread: thread: 2, MlBk is called with LB: 32, UB: 133, MlBk is called with LB: 
31, UB: 32
 thread: 2, LongJobs.size() 21
 thread: 1, LongJobs.size() 21
thread: 2, NSTable size: 20
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 7
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 7
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 2, i: 1, maxN[i].weit: 8, maxN[i].idx: 1, blockDimSize[i]: 8
thread: 2, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 2, i: 3, maxN[i].weit: 8, maxN[i].idx: 3, blockDimSize[i]: 8
thread: 2, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 2, i: 0, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, i: 1, divisor[i]: 2, blockDimSize[i]: 4
thread: 2, i: 2, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 3, divisor[i]: 2, blockDimSize[i]: 4
thread: 2, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, largestBlockVec.elm: 0 0 0 0 1 1 0 1 0 0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 0 2 4 3 4 3 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 2 2 1 2 1 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 1 1 0 1 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 1 1 0 1 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 1 0 0 0 0 0 0 0 0 , mySum: 3
thread: 1, NSTable size: 30
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 6
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 9
thread: 1, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 1, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 1, i: 2, maxN[i].weit: 7, maxN[i].idx: 2, blockDimSize[i]: 7
thread: 1, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 1, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 1, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 1, i: 6, maxN[i].weit: 10, maxN[i].idx: 6, blockDimSize[i]: 10
thread: 1, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 2, divisor[i]: 7, blockDimSize[i]: 1
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 6, divisor[i]: 2, blockDimSize[i]: 5
thread: 1, largestBlockVec.elm: 0 0 0 0 0 0 0 0 0 0 2 6 0 0 0 1 
thread: 1, blockDimSizeComp: 0 0 0 0 0 0 0 0 0 2 1 1 2 2 2 5 
thread: 1, divisorComp: 0 0 0 0 0 0 0 0 0 1 3 7 1 1 1 2 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 2 6 0 0 0 1 
thread: 1, largestNoZeroBlockVec: 0 2 6 0 0 0 1 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 1 2 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 1 3 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 1 2 0 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 2 1 0 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 2 2 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 2 2 0 0 0 1 , mySum: 5
0 0 0 0 0 0 0 0 0 0 2 3 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 0 0 0 1 3 0 0 0 1 , mySum: 5
0 0 0 0 0 0 0 0 0 0 1 4 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 5 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 1 , mySum: 5
0 0 0 0 0 0 0 0 0 0 1 5 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 0 0 0 1 4 0 0 0 1 , mySum: 6
0 0 0 0 0 0 0 0 0 0 2 4 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 6 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 5 0 0 0 1 , mySum: 6
0 0 0 0 0 0 0 0 0 0 2 3 0 0 0 1 , mySum: 6
0 0 0 0 0 0 0 0 0 0 1 5 0 0 0 1 , mySum: 7
0 0 0 0 0 0 0 0 0 0 2 5 0 0 0 0 , mySum: 7
0 0 0 0 0 0 0 0 0 0 2 4 0 0 0 1 , mySum: 7
0 0 0 0 0 0 0 0 0 0 0 6 0 0 0 1 , mySum: 7
0 0 0 0 0 0 0 0 0 0 1 6 0 0 0 0 , mySum: 7
0 0 0 0 0 0 0 0 0 0 1 6 0 0 0 1 , mySum: 8
0 0 0 0 0 0 0 0 0 0 2 5 0 0 0 1 , mySum: 8
0 0 0 0 0 0 0 0 0 0 2 6 0 0 0 0 , mySum: 8
0 0 0 0 0 0 0 0 0 0 2 6 0 0 0 1 , mySum: 9
thread: 2, maxBlockLvlSize: 3
thread: 2, maxInBlockLvlSize: 53
thread: 2, AllTableSize: 2304, maxSubsetsSize: 64
thread: 0, NSTable size: 29
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 6
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 9
thread: 0, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 0, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 0, i: 2, maxN[i].weit: 7, maxN[i].idx: 2, blockDimSize[i]: 7
thread: 0, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 0, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 0, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 0, i: 6, maxN[i].weit: 10, maxN[i].idx: 6, blockDimSize[i]: 10
thread: 0, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 2, divisor[i]: 7, blockDimSize[i]: 1
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 6, divisor[i]: 2, blockDimSize[i]: 5
thread: 0, largestBlockVec.elm: 0 0 0 0 0 0 0 0 0 0 2 6 0 0 0 1 
thread: 0, blockDimSizeComp: 0 0 0 0 0 0 0 0 0 2 1 1 2 2 2 5 
thread: 0, divisorComp: 0 0 0 0 0 0 0 0 0 1 3 7 1 1 1 2 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 2 6 0 0 0 1 
thread: 0, largestNoZeroBlockVec: 0 2 6 0 0 0 1 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 1 2 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 1 3 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 1 2 0 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 2 1 0 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 2 2 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 2 2 0 0 0 1 , mySum: 5
0 0 0 0 0 0 0 0 0 0 2 3 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 0 0 0 1 3 0 0 0 1 , mySum: 5
0 0 0 0 0 0 0 0 0 0 1 4 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 5 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 1 , mySum: 5
0 0 0 0 0 0 0 0 0 0 1 5 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 0 0 0 1 4 0 0 0 1 , mySum: 6
0 0 0 0 0 0 0 0 0 0 2 4 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 6 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 5 0 0 0 1 , mySum: 6
0 0 0 0 0 0 0 0 0 0 2 3 0 0 0 1 , mySum: 6
0 0 0 0 0 0 0 0 0 0 1 5 0 0 0 1 , mySum: 7
0 0 0 0 0 0 0 0 0 0 2 5 0 0 0 0 , mySum: 7
0 0 0 0 0 0 0 0 0 0 2 4 0 0 0 1 , mySum: 7
0 0 0 0 0 0 0 0 0 0 0 6 0 0 0 1 , mySum: 7
0 0 0 0 0 0 0 0 0 0 1 6 0 0 0 0 , mySum: 7
0 0 0 0 0 0 0 0 0 0 1 6 0 0 0 1 , mySum: 8
0 0 0 0 0 0 0 0 0 0 2 5 0 0 0 1 , mySum: 8
0 0 0 0 0 0 0 0 0 0 2 6 0 0 0 0 , mySum: 8
0 0 0 0 0 0 0 0 0 0 2 6 0 0 0 1 , mySum: 9
thread: 1, maxBlockLvlSize: 6
thread: 1, maxInBlockLvlSize: 16
thread: 1, AllTableSize: 3360, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 6
thread: 0, maxInBlockLvlSize: 16
thread: 0, AllTableSize: 3360, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 1 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 1 0 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 2 0 0 0 0 0 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 1 1 0 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[6]: 0 1 0 0 0 0 1 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 mySum: 2
thread: 0, blockNoZero[7]: 0 0 1 0 0 0 1 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 mySum: 2
thread: 0, blockNoZero[8]: 0 0 2 0 0 0 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 1 mySum: 3
thread: 0, blockNoZero[9]: 0 2 0 0 0 0 1 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 0 0 0 0 1 2 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 0 1 2 0 0 0 0 
thread: 0, allBlocks[11]: 0 0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 0 2 1 0 0 0 0 
thread: 0, allBlocks[12]: 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 mySum: 3
thread: 0, blockNoZero[12]: 0 0 3 0 0 0 0 
thread: 0, allBlocks[13]: 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 1 mySum: 3
thread: 0, blockNoZero[13]: 0 0 2 0 0 0 1 
thread: 0, allBlocks[14]: 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 1 mySum: 3
thread: 0, blockNoZero[14]: 0 1 1 0 0 0 1 
thread: 0, allBlocks[15]: 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 mySum: 4
thread: 0, blockNoZero[15]: 0 0 4 0 0 0 0 
thread: 0, allBlocks[16]: 0 0 0 0 0 0 0 0 0 0 1 3 0 0 0 0 mySum: 4
thread: 0, blockNoZero[16]: 0 1 3 0 0 0 0 
thread: 0, allBlocks[17]: 0 0 0 0 0 0 0 0 0 0 1 2 0 0 0 1 mySum: 4
thread: 0, blockNoZero[17]: 0 1 2 0 0 0 1 
thread: 0, allBlocks[18]: 0 0 0 0 0 0 0 0 0 0 2 1 0 0 0 1 mySum: 4
thread: 0, blockNoZero[18]: 0 2 1 0 0 0 1 
thread: 0, allBlocks[19]: 0 0 0 0 0 0 0 0 0 0 2 2 0 0 0 0 mySum: 4
thread: 0, blockNoZero[19]: 0 2 2 0 0 0 0 
thread: 0, allBlocks[20]: 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 1 mySum: 4
thread: 0, blockNoZero[20]: 0 0 3 0 0 0 1 
thread: 0, allBlocks[21]: 0 0 0 0 0 0 0 0 0 0 2 2 0 0 0 1 mySum: 5
thread: 0, blockNoZero[21]: 0 2 2 0 0 0 1 
thread: 0, allBlocks[22]: 0 0 0 0 0 0 0 0 0 0 2 3 0 0 0 0 mySum: 5
thread: 0, blockNoZero[22]: 0 2 3 0 0 0 0 
thread: 0, allBlocks[23]: 0 0 0 0 0 0 0 0 0 0 1 3 0 0 0 1 mySum: 5
thread: 0, blockNoZero[23]: 0 1 3 0 0 0 1 
thread: 0, allBlocks[24]: 0 0 0 0 0 0 0 0 0 0 1 4 0 0 0 0 mySum: 5
thread: 0, blockNoZero[24]: 0 1 4 0 0 0 0 
thread: 0, allBlocks[25]: 0 0 0 0 0 0 0 0 0 0 0 5 0 0 0 0 mySum: 5
thread: 0, blockNoZero[25]: 0 0 5 0 0 0 0 
thread: 0, allBlocks[26]: 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 1 mySum: 5
thread: 0, blockNoZero[26]: 0 0 4 0 0 0 1 
thread: 0, allBlocks[27]: 0 0 0 0 0 0 0 0 0 0 1 5 0 0 0 0 mySum: 6
thread: 0, blockNoZero[27]: 0 1 5 0 0 0 0 
thread: 0, allBlocks[28]: 0 0 0 0 0 0 0 0 0 0 1 4 0 0 0 1 mySum: 6
thread: 0, blockNoZero[28]: 0 1 4 0 0 0 1 
thread: 0, allBlocks[29]: 0 0 0 0 0 0 0 0 0 0 2 4 0 0 0 0 mySum: 6
thread: 0, blockNoZero[29]: 0 2 4 0 0 0 0 
thread: 0, allBlocks[30]: 0 0 0 0 0 0 0 0 0 0 0 6 0 0 0 0 mySum: 6
thread: 0, blockNoZero[30]: 0 0 6 0 0 0 0 
thread: 0, allBlocks[31]: 0 0 0 0 0 0 0 0 0 0 0 5 0 0 0 1 mySum: 6
thread: 0, blockNoZero[31]: 0 0 5 0 0 0 1 
thread: 0, allBlocks[32]: 0 0 0 0 0 0 0 0 0 0 2 3 0 0 0 1 mySum: 6
thread: 0, blockNoZero[32]: 0 2 3 0 0 0 1 
thread: 0, allBlocks[33]: 0 0 0 0 0 0 0 0 0 0 1 5 0 0 0 1 mySum: 7
thread: 0, blockNoZero[33]: 0 1 5 0 0 0 1 
thread: 0, allBlocks[34]: 0 0 0 0 0 0 0 0 0 0 2 5 0 0 0 0 mySum: 7
thread: 0, blockNoZero[34]: 0 2 5 0 0 0 0 
thread: 0, allBlocks[35]: 0 0 0 0 0 0 0 0 0 0 2 4 0 0 0 1 mySum: 7
thread: 0, blockNoZero[35]: 0 2 4 0 0 0 1 
thread: 0, allBlocks[36]: 0 0 0 0 0 0 0 0 0 0 0 6 0 0 0 1 mySum: 7
thread: 0, blockNoZero[36]: 0 0 6 0 0 0 1 
thread: 0, allBlocks[37]: 0 0 0 0 0 0 0 0 0 0 1 6 0 0 0 0 mySum: 7
thread: 0, blockNoZero[37]: 0 1 6 0 0 0 0 
thread: 0, allBlocks[38]: 0 0 0 0 0 0 0 0 0 0 1 6 0 0 0 1 mySum: 8
thread: 0, blockNoZero[38]: 0 1 6 0 0 0 1 
thread: 0, allBlocks[39]: 0 0 0 0 0 0 0 0 0 0 2 5 0 0 0 1 mySum: 8
thread: 0, blockNoZero[39]: 0 2 5 0 0 0 1 
thread: 0, allBlocks[40]: 0 0 0 0 0 0 0 0 0 0 2 6 0 0 0 0 mySum: 8
thread: 0, blockNoZero[40]: 0 2 6 0 0 0 0 
thread: 0, allBlocks[41]: 0 0 0 0 0 0 0 0 0 0 2 6 0 0 0 1 mySum: 9
thread: 0, blockNoZero[41]: 0 2 6 0 0 0 1 
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
Thread: 1, gpu_BlockDP is done.
Thread: 0, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 11
copy the latest feasible solution to instance takes time: 4e-06
thread: 1, sOPT: 11
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 5e-06
thread: 0, sOPT: 11
copy the latest feasible solution to instance takes time: 0.054181
thread: 2, sOPT: 10
BKID: 0, LB: 32, UB: 32, OPT: 10
Dynamic Programming Runtime: 1.40458
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 1
********************************************************
Total execution on UB and LB is: 1
OUT of Bk while loop  
UB    32
LB    32
T1    32
T2    32
OPT   10
nMachines   10
BkID	0
AllProbData.size()    2
ck :   1
AllProbData[ck].Ttable    32
ck :   0
AllProbData[ck].Ttable    32
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan34
Main Scheduling is Done
File 1-5 is Done.
******************************
Reading File...
File 1-6 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 50, LB: 31start at time: 1505276323
thread: 0, MlBk is called with LB: 31, UB: 36
thread: 3, MlBk is called with LB: 46, UB: 51 thread: 0, LongJobs.size() 
21
 thread: 3, LongJobs.size() 15
thread: 1, MlBk is called with LB: 36, UB: 41
thread:  thread: 21, LongJobs.size() , MlBk is called with LB: 2141
, UB: 46
 thread: 2, LongJobs.size() 18
thread: 3, NSTable size: 17
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 8
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 4
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 3, i: 1, maxN[i].weit: 9, maxN[i].idx: 1, blockDimSize[i]: 9
thread: 3, i: 2, maxN[i].weit: 5, maxN[i].idx: 2, blockDimSize[i]: 5
thread: 3, i: 0, divisor[i]: 2, blockDimSize[i]: 2
thread: 3, i: 1, divisor[i]: 3, blockDimSize[i]: 3
thread: 3, i: 2, divisor[i]: 5, blockDimSize[i]: 1
thread: 3, largestBlockVec.elm: 0 0 0 1 2 4 0 0 0 0 0 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 2 3 1 0 0 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 2 3 5 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 1 2 4 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 1 2 4 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 1 0 3 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 3 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 1 1 2 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 1 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 3 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 4 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 1 0 4 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 1 1 3 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 1 2 2 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 4 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 1 2 3 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 1 1 4 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 1 2 4 0 0 0 0 0 0 0 0 0 0 , mySum: 7
thread: 3, maxBlockLvlSize: 6
thread: 3, maxInBlockLvlSize: 2
thread: 3, AllTableSize: 180, maxSubsetsSize: 64
thread: 2, NSTable size: 21
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 5
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 5
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 6, maxN[i].idx: 0, blockDimSize[i]: 6
thread: 2, i: 1, maxN[i].weit: 5, maxN[i].idx: 1, blockDimSize[i]: 5
thread: 2, i: 2, maxN[i].weit: 6, maxN[i].idx: 2, blockDimSize[i]: 6
thread: 2, i: 3, maxN[i].weit: 5, maxN[i].idx: 3, blockDimSize[i]: 5
thread: 2, i: 0, divisor[i]: 2, blockDimSize[i]: 3
thread: 2, i: 1, divisor[i]: 5, blockDimSize[i]: 1
thread: 2, i: 2, divisor[i]: 2, blockDimSize[i]: 3
thread: 2, i: 3, divisor[i]: 1, blockDimSize[i]: 5
thread: 2, largestBlockVec.elm: 0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 0 0 3 1 3 5 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 0 2 5 2 1 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 1 4 1 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 3 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 2 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 4 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 3 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 0 , mySum: 6
thread: 2, maxBlockLvlSize: 4
thread: 2, maxInBlockLvlSize: 9
thread: 2, AllTableSize: 900, maxSubsetsSize: 64
thread: 1, NSTable size: 31
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 5
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 5
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 1, i: 1, maxN[i].weit: 6, maxN[i].idx: 1, blockDimSize[i]: 6
thread: 1, i: 2, maxN[i].weit: 5, maxN[i].idx: 2, blockDimSize[i]: 5
thread: 1, i: 3, maxN[i].weit: 6, maxN[i].idx: 3, blockDimSize[i]: 6
thread: 1, i: 4, maxN[i].weit: 5, maxN[i].idx: 4, blockDimSize[i]: 5
thread: 1, i: 0, divisor[i]: 1, blockDimSize[i]: 4
thread: 1, i: 1, divisor[i]: 2, blockDimSize[i]: 3
thread: 1, i: 2, divisor[i]: 5, blockDimSize[i]: 1
thread: 1, i: 3, divisor[i]: 2, blockDimSize[i]: 3
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 5
thread: 1, largestBlockVec.elm: 0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 0 4 3 1 3 5 0 0 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 1 2 5 2 1 0 0 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 1 4 1 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 3 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 2 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 4 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 3 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 0 , mySum: 6
thread: 0, NSTable size: 20
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 5
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 5
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 0, i: 1, maxN[i].weit: 6, maxN[i].idx: 1, blockDimSize[i]: 6
thread: 0, i: 2, maxN[i].weit: 5, maxN[i].idx: 2, blockDimSize[i]: 5
thread: 0, i: 3, maxN[i].weit: 6, maxN[i].idx: 3, blockDimSize[i]: 6
thread: 0, i: 4, maxN[i].weit: 5, maxN[i].idx: 4, blockDimSize[i]: 5
thread: 0, i: 0, divisor[i]: 1, blockDimSize[i]: 4
thread: 0, i: 1, divisor[i]: 2, blockDimSize[i]: 3
thread: 0, i: 2, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, i: 3, divisor[i]: 2, blockDimSize[i]: 3
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 5
thread: 0, largestBlockVec.elm: 0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 0 4 3 1 3 5 0 0 0 0 0 0 0 
thread: 0, divisorComp: 0 0 0 0 1 2 5 2 1 0 0 0 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 1 4 1 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 3 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 2 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 4 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 3 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 0 , mySum: 6
thread: 1, maxBlockLvlSize: 4
thread: 1, maxInBlockLvlSize: 31
thread: 1, AllTableSize: 3600, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 4
thread: 0, maxInBlockLvlSize: 31
thread: 0, AllTableSize: 3600, maxSubsetsSize: 64
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 5
copy the latest feasible solution to instance takes time: 0.008196
thread: 3, sOPT: 5
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 1 0 
thread: 0, allBlocks[2]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 1 0 0 0 
Thread: 2, gpu_BlockDP is done.
thread: 0, allBlocks[3]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 1 0 0 
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 7
copy the latest feasible solution to instance takes time: 0.047298
thread: 2, sOPT: 7
thread: 0, allBlocks[4]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 2 0 0 
thread: 0, allBlocks[5]: 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 1 1 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 1 0 1 0 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 0 0 1 1 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[8]: 0 0 3 0 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[9]: 0 0 2 1 0 
thread: 0, allBlocks[10]: 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 0 1 1 1 0 
thread: 0, allBlocks[11]: 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 0 1 2 0 0 
thread: 0, allBlocks[12]: 0 0 0 0 0 0 3 1 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[12]: 0 0 3 1 0 
thread: 0, allBlocks[13]: 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[13]: 0 0 4 0 0 
thread: 0, allBlocks[14]: 0 0 0 0 0 1 2 1 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[14]: 0 1 2 1 0 
thread: 0, allBlocks[15]: 0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[15]: 0 1 3 0 0 
thread: 0, allBlocks[16]: 0 0 0 0 0 0 4 1 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[16]: 0 0 4 1 0 
thread: 0, allBlocks[17]: 0 0 0 0 0 1 3 1 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[17]: 0 1 3 1 0 
thread: 0, allBlocks[18]: 0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[18]: 0 1 4 0 0 
thread: 0, allBlocks[19]: 0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[19]: 0 1 4 1 0 
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.179312
thread: 0, sOPT: 10
copy the latest feasible solution to instance takes time: 0.138514
thread: 1, sOPT: 9
Thread: 1, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: Thread: 30, MlBk function is done, and BkID for all processes are collected., MlBk function is done, and BkID for all processes are collected.
2, MlBk function is done, and BkID for all processes are collected.

sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 31, UB: 34
BKID: 0, LB: 31, UB: 34, OPT: 10
Dynamic Programming Runtime: 1.3395
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 1
Iteration: 2, UB: 34, LB: 31start at time: 1505276324
thread: 0, MlBk is called with LB: 31, UB: 32
 thread: 0, LongJobs.size() 21
thread: 2, MlBk is called with LB: 33, UB: 34thread: 
1, MlBk is called with LB: 32, UB: 33
 thread: 2, LongJobs.size() 21
 thread: 1, LongJobs.size() 21
thread: 2, NSTable size: 20
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 5
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 5
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: thread: 1, NSTable size: 020, maxN[i].weit: 4
, maxN[i].idx: thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 05, blockDimSize[i]: 
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 5
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 42, i: 1
, maxN[i].weit: 6thread: 1, i: 1, maxN[i].weit: 6, maxN[i].idx: 1, blockDimSize[i]: , maxN[i].idx: 6
thread: 1, i: 2, maxN[i].weit: 5, maxN[i].idx: 2, blockDimSize[i]: 5
thread: 1, i: 3, maxN[i].weit: 6, maxN[i].idx: 3, blockDimSize[i]: 6
thread: 1, i: 4, maxN[i].weit: 5, maxN[i].idx: 1, blockDimSize[i]: 6
thread: 2, i: 2, maxN[i].weit: 45, maxN[i].idx: , blockDimSize[i]: 25
, blockDimSize[i]: 5
thread: thread: 2, i: 3, maxN[i].weit: 6, maxN[i].idx: 3, blockDimSize[i]: 6
thread: 2, i: 4, maxN[i].weit: 51, i: 0, divisor[i]: 1, blockDimSize[i]: 4, maxN[i].idx: 
4, blockDimSize[i]: 5
thread: 1, i: 1, divisor[i]: 2, blockDimSize[i]: 3
thread: 1, i: 2, divisor[i]: 5, blockDimSize[i]: 1
thread: 1, i: 3, divisor[i]: 2, blockDimSize[i]: 3
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 5
thread: 1, largestBlockVec.elm: thread: 02 , i: 0, divisor[i]: 01 , blockDimSize[i]: 40
 0thread: 2, i: 1, divisor[i]: 2, blockDimSize[i]: 3
thread: 2, i: 2, divisor[i]: 5, blockDimSize[i]: 1
thread: 2, i: 3, divisor[i]: 2, blockDimSize[i]: 3
thread: 2, i: 4, divisor[i]: 1, blockDimSize[i]: 5
 thread: 2, largestBlockVec.elm: 0 00  1 4 01  0 00  0 10  4 01 0  0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 0 4 3 1 3 5 0 0 0 0 0 0 00  00 0  0 00  
thread: 1, divisorComp: 0 0 0 0 1 2 5 2 1 0 0 
thread: 2, blockDimSizeComp: 0 0 0 0 4 3 1 3 50 0  00  0 00 0  00  00 0  
thread: 2, divisorComp: 0 0 0 0 1 2 5 2 1 
0 thread: 1, largestBlockVec: 0 0 0 0 0 1 4 1 00 0  00  00  00  0 00  00  
thread: 2, largestBlockVec: 0 0 0 0 0 1 4 1 0 0 0 
0thread: 1, largestNoZeroBlockVec: 0 1 4 1 0 
 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 1 4 1 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: thread: 12, allBlocks: 
0 0 0 0 0 0 1 0 0 0 0 0 00  00  0 00  00  0, mySum: 1 
0 00 0 0 0 0 0 1 0 0 0 0 0 0 0  0 0 00  , mySum: 01
 0 0 0 0 0 0 2 0 0 0 0 0 0 00 0  00  , mySum: 02 0 
0 0 0 0 0 0 1 1 0 0 0 0 0 0, mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0  0 0 00  0 00 , mySum:  1
0 0 0 0 0 1 0 0 0 0 0 0 0, mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0  0 0 0 , mySum: 01 0
 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 1 0 0 0 0 0 0 00 0  , mySum: 02
0 0 0 0 0 0 3 0 0 0 0 0 0 0  0 0 0, mySum: 1 
0 0 0 0 0 0 2 0 0 0 0 0 0 0, mySum: 3
0 0 0 0 0 0 2 1 0 0 0 0 0  0 0 00  0, mySum:  3, mySum: 
2
0 0 0 0 0 1 1 1 0 0 0 0 00 0 0 0 0 1 1 0 0 0 0  0 0 00  0 00  0 , mySum: 3, mySum: 
2
0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 00  0 00  , mySum: 03 , mySum: 
2
0 0 0 0 0 0 3 1 0 0 0 0 0 0 00 0 0 0 0 0 1 1 0 0 0  0 0 00  , mySum: 04
 00 0 0 0 0 0 4 0 0 0 0 0 0 0  , mySum: 2
0 0 0 0 0 0 3 0 0 0 0 0 0 00 0  00  , mySum: , mySum: 4
30 0 0 0 0 1 2 1 0 0 0 0 0 
0 00 0 0 0 0 0 2 1 0 0 0 0 0  0 0 00 , mySum:  3
, mySum: 0 0 0 0 0 1 1 1 0 0 0 0 0 40 0 
0 , mySum: 0 0 0 0 0 1 3 0 0 0 0 0 0 03
0 0 0 0 0 1 2 0 0 0 0 0  0 0 , mySum: 4
00 0 0 0 0 0 4 1 0 0 0 0 0  0 0 0 , mySum: 03 0
 0 0 0 0 0 0 3 1 0 0 0 0 0 00 0 0  , mySum: , mySum: 45

0 0 0 0 0 1 3 1 0 0 0 0 0 0 00 0 0 0 0 0 4 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 4 0 0 0 0 0 0  0 0 00 , mySum:  5
0 0 0 0 0 1 4 1 0 0 0 0 00 0  0 0 , mySum: 06
 0 , mySum: 4
0 0 0 0 0 1 2 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 4 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 3 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 0 , mySum: 6
thread: 0, NSTable size: 26
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 9
thread: 0, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 0, i: 1, maxN[i].weit: 4, maxN[i].idx: 1, blockDimSize[i]: 4
thread: 0, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 0, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 0, i: 4, maxN[i].weit: 4, maxN[i].idx: 4, blockDimSize[i]: 4
thread: 0, i: 5, maxN[i].weit: 10, maxN[i].idx: 5, blockDimSize[i]: 10
thread: 0, i: 0, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 1, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 2, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 4
thread: 0, i: 5, divisor[i]: 2, blockDimSize[i]: 5
thread: 0, largestBlockVec.elm: 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 
thread: 0, blockDimSizeComp: 0 0 0 0 0 0 0 0 0 2 0 2 3 2 4 5 
thread: 0, divisorComp: 0 0 0 0 0 0 0 0 0 2 0 2 1 1 1 2 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 
thread: 0, largestNoZeroBlockVec: 1 1 0 0 0 1 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 , mySum: 3
thread: 1, maxBlockLvlSize: 4
thread: 1, maxInBlockLvlSize: 31
thread: 1, AllTableSize: 3600, maxSubsetsSize: 64
thread: 2, maxBlockLvlSize: 4
thread: 2, maxInBlockLvlSize: 31
thread: 2, AllTableSize: 3600, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 3
thread: 0, maxInBlockLvlSize: 84
thread: 0, AllTableSize: 3840, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 1 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 1 0 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 mySum: 2
thread: 0, blockNoZero[4]: 0 1 0 0 0 1 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[5]: 1 0 0 0 0 1 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 1 1 0 0 0 0 
Thread: 1, gpu_BlockDP is done.
Thread: 2, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.206469
thread: 1, sOPT: 10
copy the latest feasible solution to instance takes time: 0.266038
thread: 2, sOPT: 10
thread: 0, allBlocks[7]: 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 mySum: 3
thread: 0, blockNoZero[7]: 1 1 0 0 0 1 
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.076015
thread: 0, sOPT: 10
BKID: 0, LB: 31, UB: 31, OPT: 10
Dynamic Programming Runtime: 2.6404
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 2
********************************************************
Total execution on UB and LB is: 2
OUT of Bk while loop  
UB    31
LB    31
T1    31
T2    31
OPT   10
nMachines   10
BkID	0
AllProbData.size()    2
ck :   1
AllProbData[ck].Ttable    31
ck :   0
AllProbData[ck].Ttable    33
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan33
Main Scheduling is Done
File 1-6 is Done.
******************************
Reading File...
File 1-7 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 49, LB: 30start at time: 1505276325
thread: 0, MlBk is called with LB: 30, UB: 35
 thread: 0, LongJobs.size() 21
thread: 2, MlBk is called with LB: 40, UB: 45
thread: 1, MlBk is called with LB: 35, UB: 40
 thread: 2, LongJobs.size() 18
 thread: 1, LongJobs.size() 21
thread: 2, NSTable size: 39
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 5
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 5
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 2, i: 1, maxN[i].weit: 4, maxN[i].idx: 1, blockDimSize[i]: 4
thread: 2, i: 2, maxN[i].weit: 6, maxN[i].idx: 2, blockDimSize[i]: 6
thread: 2, i: 3, maxN[i].weit: 6, maxN[i].idx: 3, blockDimSize[i]: 6
thread: 2, i: 4, maxN[i].weit: 4, maxN[i].idx: 4, blockDimSize[i]: 4
thread: 2, i: 0, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 1, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, i: 2, divisor[i]: 2, blockDimSize[i]: 3
thread: 2, i: 3, divisor[i]: 2, blockDimSize[i]: 3
thread: 2, i: 4, divisor[i]: 1, blockDimSize[i]: 4
thread: 2, largestBlockVec.elm: 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 0 3 2 3 3 4 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 1 2 2 2 1 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 1 1 1 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 , mySum: 3
thread: 2, maxBlockLvlSize: 3
thread: 2, maxInBlockLvlSize: 44
thread: 2, AllTableSize: 1728, maxSubsetsSize: 64
thread: 1, NSTable size: 27
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 5
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 5
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 5
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 6, maxN[i].idx: 0, blockDimSize[i]: 6
thread: 1, i: 1, maxN[i].weit: 4, maxN[i].idx: 1, blockDimSize[i]: 4
thread: 1, i: 2, maxN[i].weit: 6, maxN[i].idx: 2, blockDimSize[i]: 6
thread: 1, i: 3, maxN[i].weit: 6, maxN[i].idx: 3, blockDimSize[i]: 6
thread: 1, i: 4, maxN[i].weit: 4, maxN[i].idx: 4, blockDimSize[i]: 4
thread: 1, i: 0, divisor[i]: 2, blockDimSize[i]: 3
thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 4
thread: 1, i: 2, divisor[i]: 2, blockDimSize[i]: 3
thread: 1, i: 3, divisor[i]: 2, blockDimSize[i]: 3
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 4
thread: 1, largestBlockVec.elm: 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 0 3 4 3 3 4 0 0 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 2 1 2 2 1 0 0 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 1 0 1 1 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 , mySum: 3
thread: 0, NSTable size: 20
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 5
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 5
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 5
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 0, maxN[i].weit: 6, maxN[i].idx: 0, blockDimSize[i]: 6
thread: 0, i: 1, maxN[i].weit: 4, maxN[i].idx: 1, blockDimSize[i]: 4
thread: 0, i: 2, maxN[i].weit: 6, maxN[i].idx: 2, blockDimSize[i]: 6
thread: 0, i: 3, maxN[i].weit: 6, maxN[i].idx: 3, blockDimSize[i]: 6
thread: 0, i: 4, maxN[i].weit: 4, maxN[i].idx: 4, blockDimSize[i]: 4
thread: 0, i: 0, divisor[i]: 2, blockDimSize[i]: 3
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 4
thread: 0, i: 2, divisor[i]: 2, blockDimSize[i]: 3
thread: 0, i: 3, divisor[i]: 2, blockDimSize[i]: 3
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 4
thread: 0, largestBlockVec.elm: 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 0 3 4 3 3 4 0 0 0 0 0 0 0 
thread: 0, divisorComp: 0 0 0 0 2 1 2 2 1 0 0 0 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 1 0 1 1 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 , mySum: 3
thread: 3, MlBk is called with LB: 45, UB: 50
 thread: 3, LongJobs.size() 16
thread: 0, maxBlockLvlSize: 3
thread: 0, maxInBlockLvlSize: 78
thread: 0, AllTableSize: 3456, maxSubsetsSize: 64
thread: 3, NSTable size: 27
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 5
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 5
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 3, i: 1, maxN[i].weit: 6, maxN[i].idx: 1, blockDimSize[i]: 6
thread: 3, i: 2, maxN[i].weit: 6, maxN[i].idx: 2, blockDimSize[i]: 6
thread: 3, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 3, i: 0, divisor[i]: 2, blockDimSize[i]: 2
thread: 3, i: 1, divisor[i]: 2, blockDimSize[i]: 3
thread: 3, i: 2, divisor[i]: 2, blockDimSize[i]: 3
thread: 3, i: 3, divisor[i]: 1, blockDimSize[i]: 4
thread: 3, largestBlockVec.elm: 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 0 0 2 3 3 4 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 0 0 2 2 2 1 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 1 1 1 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 , mySum: 3
thread: 3, maxBlockLvlSize: 3
thread: 3, maxInBlockLvlSize: 16
thread: 3, AllTableSize: 576, maxSubsetsSize: 64
thread: 1, maxBlockLvlSize: 3
thread: 1, maxInBlockLvlSize: 78
thread: 1, AllTableSize: 3456, maxSubsetsSize: 64
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 6
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 
copy the latest feasible solution to instance takes time: 0.043206
thread: 3, sOPT: 6
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 1 0 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 1 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 1 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 1 1 0 
thread: 0, allBlocks[5]: 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 1 0 0 1 0 
thread: 0, allBlocks[6]: 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 1 0 1 0 0 
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 7
copy the latest feasible solution to instance takes time: 0.098663
thread: 2, sOPT: 7
thread: 0, allBlocks[7]: 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[7]: 1 0 1 1 0 
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.164025
thread: 1, sOPT: 9
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.067062
thread: 0, sOPT: 10
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: 3, MlBk function is done, and BkID for all processes are collected.
Thread: 1, MlBk function is done, and BkID for all processes are collected.
Thread: 2, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 30, UB: 33
BKID: 0, LB: 30, UB: 33, OPT: 10
Dynamic Programming Runtime: 2.96074
Execution time between LB and UB is: 2
By far, all LB UB calculation runtime: 2
Iteration: 2, UB: 33, LB: 30start at time: 1505276327
thread: 0, MlBk is called with LB: 30, UB: 31
 thread: 0, LongJobs.size() 21
thread: 1, MlBk is called with LB: 31, UB: thread: 322, MlBk is called with LB: 32, UB: 
33
 thread: 1, LongJobs.size()  thread: 21
2, LongJobs.size() 21
thread: 2, NSTable size: 20
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 5
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 5
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 5
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 6, maxN[i].idx: 0, blockDimSize[i]: 6
thread: 2, i: 1, maxN[i].weit: 4, maxN[i].idx: 1, blockDimSize[i]: 4
thread: 2, i: 2, maxN[i].weit: 6, maxN[i].idx: 2, blockDimSize[i]: 6
thread: 2, i: 3, maxN[i].weit: 6, maxN[i].idx: 3, blockDimSize[i]: 6
thread: 2, i: 4, maxN[i].weit: 4, maxN[i].idx: 4, blockDimSize[i]: 4
thread: 2, i: 0, divisor[i]: 2, blockDimSize[i]: 3
thread: 2, i: 1, divisor[i]: 1, blockDimSize[i]: 4
thread: 2, i: 2, divisor[i]: 2, blockDimSize[i]: 3
thread: 2, i: 3, divisor[i]: 2, blockDimSize[i]: 3
thread: 2, i: 4, divisor[i]: 1, blockDimSize[i]: 4
thread: 2, largestBlockVec.elm: 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 0 3 4 3 3 4 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 2 1 2 2 1 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 1 0 1 1 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 , mySum: 3
thread: 2, maxBlockLvlSize: 3
thread: 2, maxInBlockLvlSize: 78
thread: 2, AllTableSize: 3456, maxSubsetsSize: 64
thread: 1, NSTable size: 34
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 8
thread: 1, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 1, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 1, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 1, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 1, i: 4, maxN[i].weit: 5, maxN[i].idx: 4, blockDimSize[i]: 5
thread: 1, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 1, i: 6, maxN[i].weit: 9, maxN[i].idx: 6, blockDimSize[i]: 9
thread: 1, i: 0, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 2, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 4, divisor[i]: 5, blockDimSize[i]: 1
thread: 1, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 6, divisor[i]: 3, blockDimSize[i]: 3
thread: 1, largestBlockVec.elm: 0 0 0 0 0 0 0 0 0 1 0 0 0 4 0 2 
thread: 1, blockDimSizeComp: 0 0 0 0 0 0 0 0 0 2 3 3 2 1 2 3 
thread: 1, divisorComp: 0 0 0 0 0 0 0 0 0 2 1 1 1 5 1 3 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0 1 0 0 0 4 0 2 
thread: 1, largestNoZeroBlockVec: 1 0 0 0 4 0 2 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 1 0 0 0 2 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 2 , mySum: 3
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 2 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 2 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 2 , mySum: 4
0 0 0 0 0 0 0 0 0 1 0 0 0 2 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 1 0 0 0 3 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 4 0 1 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 2 , mySum: 5
0 0 0 0 0 0 0 0 0 1 0 0 0 2 0 2 , mySum: 5
0 0 0 0 0 0 0 0 0 1 0 0 0 3 0 1 , mySum: 5
0 0 0 0 0 0 0 0 0 1 0 0 0 4 0 0 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 0 4 0 2 , mySum: 6
0 0 0 0 0 0 0 0 0 1 0 0 0 3 0 2 , mySum: 6
0 0 0 0 0 0 0 0 0 1 0 0 0 4 0 1 , mySum: 6
0 0 0 0 0 0 0 0 0 1 0 0 0 4 0 2 , mySum: 7
thread: 0, NSTable size: 32
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 8
thread: 0, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 0, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 0, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 0, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 0, i: 4, maxN[i].weit: 5, maxN[i].idx: 4, blockDimSize[i]: 5
thread: 0, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 0, i: 6, maxN[i].weit: 9, maxN[i].idx: 6, blockDimSize[i]: 9
thread: 0, i: 0, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 2, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 6, divisor[i]: 3, blockDimSize[i]: 3
thread: 0, largestBlockVec.elm: 0 0 0 0 0 0 0 0 0 1 0 0 0 4 0 2 
thread: 0, blockDimSizeComp: 0 0 0 0 0 0 0 0 0 2 3 3 2 1 2 3 
thread: 0, divisorComp: 0 0 0 0 0 0 0 0 0 2 1 1 1 5 1 3 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 1 0 0 0 4 0 2 
thread: 0, largestNoZeroBlockVec: 1 0 0 0 4 0 2 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 1 0 0 0 2 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 2 , mySum: 3
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 2 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 2 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 2 , mySum: 4
0 0 0 0 0 0 0 0 0 1 0 0 0 2 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 1 0 0 0 3 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 4 0 1 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 2 , mySum: 5
0 0 0 0 0 0 0 0 0 1 0 0 0 2 0 2 , mySum: 5
0 0 0 0 0 0 0 0 0 1 0 0 0 3 0 1 , mySum: 5
0 0 0 0 0 0 0 0 0 1 0 0 0 4 0 0 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 0 4 0 2 , mySum: 6
0 0 0 0 0 0 0 0 0 1 0 0 0 3 0 2 , mySum: 6
0 0 0 0 0 0 0 0 0 1 0 0 0 4 0 1 , mySum: 6
0 0 0 0 0 0 0 0 0 1 0 0 0 4 0 2 , mySum: 7
thread: 1, maxBlockLvlSize: 6
thread: 1, maxInBlockLvlSize: 48
thread: 1, AllTableSize: 6480, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 6
thread: 0, maxInBlockLvlSize: 48
thread: 0, AllTableSize: 6480, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 1 0 0 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 0 0 1 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 mySum: 2
thread: 0, blockNoZero[4]: 0 0 0 0 1 0 1 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 mySum: 2
thread: 0, blockNoZero[5]: 1 0 0 0 1 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[6]: 1 0 0 0 0 0 1 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 mySum: 2
thread: 0, blockNoZero[7]: 0 0 0 0 0 0 2 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 mySum: 2
thread: 0, blockNoZero[8]: 0 0 0 0 2 0 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 mySum: 3
thread: 0, blockNoZero[9]: 0 0 0 0 3 0 0 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 0 0 0 1 0 0 0 2 0 0 mySum: 3
thread: 0, blockNoZero[10]: 1 0 0 0 2 0 0 
thread: 0, allBlocks[11]: 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 1 mySum: 3
thread: 0, blockNoZero[11]: 1 0 0 0 1 0 1 
thread: 0, allBlocks[12]: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 2 mySum: 3
thread: 0, blockNoZero[12]: 0 0 0 0 1 0 2 
thread: 0, allBlocks[13]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 2 mySum: 3
thread: 0, blockNoZero[13]: 1 0 0 0 0 0 2 
thread: 0, allBlocks[14]: 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 1 mySum: 3
thread: 0, blockNoZero[14]: 0 0 0 0 2 0 1 
thread: 0, allBlocks[15]: 0 0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 mySum: 4
thread: 0, blockNoZero[15]: 0 0 0 0 4 0 0 
thread: 0, allBlocks[16]: 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 1 mySum: 4
thread: 0, blockNoZero[16]: 0 0 0 0 3 0 1 
thread: 0, allBlocks[17]: 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 2 mySum: 4
thread: 0, blockNoZero[17]: 1 0 0 0 1 0 2 
thread: 0, allBlocks[18]: 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 2 mySum: 4
thread: 0, blockNoZero[18]: 0 0 0 0 2 0 2 
thread: 0, allBlocks[19]: 0 0 0 0 0 0 0 0 0 1 0 0 0 2 0 1 mySum: 4
thread: 0, blockNoZero[19]: 1 0 0 0 2 0 1 
thread: 0, allBlocks[20]: 0 0 0 0 0 0 0 0 0 1 0 0 0 3 0 0 mySum: 4
thread: 0, blockNoZero[20]: 1 0 0 0 3 0 0 
thread: 0, allBlocks[21]: 0 0 0 0 0 0 0 0 0 0 0 0 0 4 0 1 mySum: 5
thread: 0, blockNoZero[21]: 0 0 0 0 4 0 1 
thread: 0, allBlocks[22]: 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 2 mySum: 5
thread: 0, blockNoZero[22]: 0 0 0 0 3 0 2 
thread: 0, allBlocks[23]: 0 0 0 0 0 0 0 0 0 1 0 0 0 2 0 2 mySum: 5
thread: 0, blockNoZero[23]: 1 0 0 0 2 0 2 
thread: 0, allBlocks[24]: 0 0 0 0 0 0 0 0 0 1 0 0 0 3 0 1 mySum: 5
thread: 0, blockNoZero[24]: 1 0 0 0 3 0 1 
thread: 0, allBlocks[25]: 0 0 0 0 0 0 0 0 0 1 0 0 0 4 0 0 mySum: 5
thread: 0, blockNoZero[25]: 1 0 0 0 4 0 0 
thread: 0, allBlocks[26]: 0 0 0 0 0 0 0 0 0 0 0 0 0 4 0 2 mySum: 6
thread: 0, blockNoZero[26]: 0 0 0 0 4 0 2 
thread: 0, allBlocks[27]: 0 0 0 0 0 0 0 0 0 1 0 0 0 3 0 2 mySum: 6
thread: 0, blockNoZero[27]: 1 0 0 0 3 0 2 
thread: 0, allBlocks[28]: 0 0 0 0 0 0 0 0 0 1 0 0 0 4 0 1 mySum: 6
thread: 0, blockNoZero[28]: 1 0 0 0 4 0 1 
thread: 0, allBlocks[29]: 0 0 0 0 0 0 0 0 0 1 0 0 0 4 0 2 mySum: 7
thread: 0, blockNoZero[29]: 1 0 0 0 4 0 2 
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.286604
thread: 2, sOPT: 10
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.348125
thread: 0, sOPT: 10
copy the latest feasible solution to instance takes time: 0.281133
thread: 1, sOPT: 10
BKID: 0, LB: 30, UB: 30, OPT: 10
Dynamic Programming Runtime: 3.62851
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 3
********************************************************
Total execution on UB and LB is: 4
OUT of Bk while loop  
UB    30
LB    30
T1    30
T2    30
OPT   10
nMachines   10
BkID	0
AllProbData.size()    2
ck :   1
AllProbData[ck].Ttable    30
ck :   0
AllProbData[ck].Ttable    32
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan32
Main Scheduling is Done
File 1-7 is Done.
******************************
Reading File...
File 1-8 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 49, LB: 30start at time: 1505276329
thread: 0, MlBk is called with LB: 30, UB: 35
thread: 3, MlBk is called with LB: 45, UB: 50
 thread: 0, LongJobs.size() 21
thread: 2, MlBk is called with LB: 40, UB: 45
 thread: 3, LongJobs.size() 17
 thread: 2, LongJobs.size() 19
thread: 1, MlBk is called with LB: 35, UB: 40
 thread: 1, LongJobs.size() 21
thread: 3, NSTable size: 27
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 6
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 6
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 7, maxN[i].idx: 0, blockDimSize[i]: 7
thread: 3, i: 1, maxN[i].weit: 7, maxN[i].idx: 1, blockDimSize[i]: 7
thread: 3, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 3, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 3, i: 0, divisor[i]: 7, blockDimSize[i]: 1
thread: 3, i: 1, divisor[i]: 7, blockDimSize[i]: 1
thread: 3, i: 2, divisor[i]: 1, blockDimSize[i]: 3
thread: 3, i: 3, divisor[i]: 2, blockDimSize[i]: 2
thread: 3, largestBlockVec.elm: 0 0 0 0 0 6 6 0 1 0 0 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 0 0 1 1 3 2 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 0 0 7 7 1 2 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 6 6 0 1 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 6 6 0 1 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 1 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 0 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 1 0 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 3 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 3 0 0 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 3 0 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 2 0 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 4 0 0 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 4 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 5 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 4 0 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 3 0 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 2 0 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 3 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 5 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 3 2 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 3 1 0 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 5 0 1 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 5 0 0 1 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 3 2 0 1 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 3 3 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 4 2 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 4 1 0 1 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 5 1 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 2 4 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 2 3 0 1 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 6 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 5 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 4 0 1 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 4 3 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 5 1 0 1 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 6 1 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 3 3 0 1 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 4 2 0 1 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 5 2 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 6 0 0 1 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 2 4 0 1 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 2 5 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 3 4 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 6 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 5 0 1 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 6 0 1 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 5 3 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 5 2 0 1 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 1 6 0 1 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 2 5 0 1 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 2 6 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 6 1 0 1 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 4 4 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 4 3 0 1 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 6 2 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 3 4 0 1 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 3 5 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 5 4 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 6 2 0 1 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 6 3 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 3 6 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 5 3 0 1 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 4 5 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 4 4 0 1 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 2 6 0 1 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 3 5 0 1 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 5 4 0 1 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 5 5 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 6 4 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 4 6 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 4 5 0 1 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 3 6 0 1 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 6 3 0 1 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 4 6 0 1 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 0 6 5 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 0 6 4 0 1 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 0 5 6 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 0 5 5 0 1 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 0 5 6 0 1 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 0 6 5 0 1 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 0 6 6 0 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 0 6 6 0 1 0 0 0 0 0 0 0 , mySum: 13
thread: 3, maxBlockLvlSize: 13
thread: 3, maxInBlockLvlSize: 2
thread: 3, AllTableSize: 588, maxSubsetsSize: 64
thread: 2, NSTable size: 39
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 6
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 6
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 2, i: 1, maxN[i].weit: 7, maxN[i].idx: 1, blockDimSize[i]: 7
thread: 2, i: 2, maxN[i].weit: 7, maxN[i].idx: 2, blockDimSize[i]: 7
thread: 2, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 2, i: 4, maxN[i].weit: 4, maxN[i].idx: 4, blockDimSize[i]: 4
thread: 2, i: 0, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 1, divisor[i]: 7, blockDimSize[i]: 1
thread: 2, i: 2, divisor[i]: 7, blockDimSize[i]: 1
thread: 2, i: 3, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 4, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, largestBlockVec.elm: 0 0 0 0 0 6 6 0 1 0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 0 3 1 1 3 2 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 1 7 7 1 2 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 6 6 0 1 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 6 6 0 1 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 1 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 0 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 1 0 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 3 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 3 0 0 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 3 0 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 2 0 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 4 0 0 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 4 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 5 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 4 0 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 3 0 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 2 0 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 3 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 5 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 3 2 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 3 1 0 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 5 0 1 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 5 0 0 1 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 3 2 0 1 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 3 3 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 4 2 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 4 1 0 1 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 5 1 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 2 4 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 2 3 0 1 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 6 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 5 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 4 0 1 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 4 3 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 5 1 0 1 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 6 1 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 3 3 0 1 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 4 2 0 1 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 5 2 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 6 0 0 1 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 2 4 0 1 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 2 5 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 3 4 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 6 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 5 0 1 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 6 0 1 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 5 3 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 5 2 0 1 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 1 6 0 1 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 2 5 0 1 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 2 6 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 6 1 0 1 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 4 4 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 4 3 0 1 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 6 2 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 3 4 0 1 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 3 5 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 5 4 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 6 2 0 1 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 6 3 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 3 6 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 5 3 0 1 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 4 5 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 4 4 0 1 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 2 6 0 1 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 3 5 0 1 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 5 4 0 1 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 5 5 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 6 4 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 4 6 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 4 5 0 1 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 3 6 0 1 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 6 3 0 1 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 4 6 0 1 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 0 6 5 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 0 6 4 0 1 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 0 5 6 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 0 5 5 0 1 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 0 5 6 0 1 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 0 6 5 0 1 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 0 6 6 0 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 0 6 6 0 1 0 0 0 0 0 0 0 , mySum: 13
thread: 2, maxBlockLvlSize: 13
thread: 2, maxInBlockLvlSize: 5
thread: 2, AllTableSize: 1764, maxSubsetsSize: 64
thread: 1, NSTable size: 27
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 6
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 6
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 5, maxN[i].idx: 0, blockDimSize[i]: 5
thread: 1, i: 1, maxN[i].weit: 7, maxN[i].idx: 1, blockDimSize[i]: 7
thread: 1, i: 2, maxN[i].weit: 7, maxN[i].idx: 2, blockDimSize[i]: 7
thread: 1, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 1, i: 4, maxN[i].weit: 4, maxN[i].idx: 4, blockDimSize[i]: 4
thread: 1, i: 0, divisor[i]: 5, blockDimSize[i]: 1
thread: 1, i: 1, divisor[i]: 7, blockDimSize[i]: 1
thread: 1, i: 2, divisor[i]: 7, blockDimSize[i]: 1
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 4
thread: 1, largestBlockVec.elm: 0 0 0 0 4 6 6 0 0 0 0 0 0 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 0 1 1 1 3 4 0 0 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 5 7 7 1 1 0 0 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 4 6 6 0 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 4 6 6 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 3 1 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 3 0 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 3 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 2 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 1 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 3 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 3 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 0 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 1 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 1 3 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 3 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 2 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 4 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 1 2 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 3 0 2 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 0 3 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 2 2 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 3 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 4 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 3 2 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 3 1 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 5 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 4 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 5 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 3 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 3 2 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 4 1 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 4 0 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 5 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 3 2 1 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 3 3 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 3 0 3 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 4 1 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 0 4 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 3 3 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 3 1 2 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 2 4 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 4 2 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 4 0 2 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 3 2 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 4 2 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 1 3 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 2 3 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 5 1 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 5 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 2 2 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 1 4 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 3 1 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 4 1 1 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 4 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 6 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 0 5 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 4 1 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 3 0 4 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 5 1 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 2 3 2 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 4 3 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 3 4 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 2 1 4 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 2 5 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 2 2 3 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 2 0 5 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 6 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 2 5 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 6 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 4 0 3 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 6 1 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 0 6 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 4 1 2 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 1 5 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 5 2 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 2 4 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 3 4 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 4 2 1 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 3 3 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 4 2 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 3 1 3 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 3 2 2 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 3 3 1 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 4 3 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 3 5 0 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 2 3 3 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 3 0 5 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 4thread:  00, NSTable size: 20 
4thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
 thread: 00, i:  40, alltableelemets[maxindex].elm[i]: 4 
0 thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 6
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 6
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
0 0 0 0 0 0 , mySum: 8
0 0 0 0 3 1 4 0 0 0 0 0 0 0 0 0 , mySum: thread: 80, i: 
0 0 0 0 4 3 1 0 0 0 0 00 0 0 , maxN[i].weit: 0 50 , maxN[i].idx: , mySum: 0, blockDimSize[i]: 85

0 0 0 0 2 4 2 0 0 0 thread: 0 0 0 0 0 0 , mySum: 8
0 0 0 0 4 1 3 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 3 2 3 0 0 0, i: 01 0 , maxN[i].weit: 07, maxN[i].idx:  1, blockDimSize[i]: 07 0 0
 thread: 0, i: 2, maxN[i].weit: 7, maxN[i].idx: 2, blockDimSize[i]: 7
thread: 0, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 0, i: 4, maxN[i].weit: 4, maxN[i].idx: 4, blockDimSize[i]: 04
 thread: , mySum: 0, i: 0, divisor[i]: 85, blockDimSize[i]: 1

thread: 0, i: 1, divisor[i]: 7, blockDimSize[i]: 1
thread: 0, i: 2, divisor[i]: 7, blockDimSize[i]: 1
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 4
thread: 0, largestBlockVec.elm: 0 0 0 00 2  5 01  0 00  0 0 0 0 0 0 04 0  6, mySum:  8
0 0 0 0 3 4 1 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 4 4 0 0 06 0  0 00  0 00 0 0  00  0 00 0  , mySum: 80
 0 0 0 0 4 2 2 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 3 3 2 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 2 6 0 0 0 0 0 
0 0thread: 0, blockDimSizeComp: 0 0 0 0 1 1 1 3 4  0 0 0 , mySum: 8
0 0 0 0 1 2 5 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 5 3 0 0 0 0 0 0 00 0 0  00 0  00 , mySum:  80 

thread: 0, divisorComp: 0 0 0 0 5 7 7 1 1 0 0 0 0 1 6 1 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 4 4 0 0 0 0 00 0  00  00  0
 0 thread: 0, largestBlockVec: 0 0 0 0 4 6 6 0 0 00 0  00 0  , mySum: 0 80 0
 0 0 0 0 0 1 5 2 0 0 0 0 0 0 
0 thread: 0, largestNoZeroBlockVec: 4 6 6 0 0 
0 0 , mySum: 8
0 0 0 0 0 6 2 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 2 0 6 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 3 5 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 2 6 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 1 4 3 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 2 1 5 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 1 3 4 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 2 2 4 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 1 1 6 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 4 0 5 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 3 4 2 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 1 2 6 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 3 0 6 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 5 4 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 1 5 3 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 3 5 1 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 3 1 5 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 3 2 4 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 3 3 3 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 6 3 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 1 4 4 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 1 3 5 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 3 6 0 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 4 1 4 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 2 3 4 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 2 2 5 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 2 4 3 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 4 5 0 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 4 4 1 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 2 1 6 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 2 5 2 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 4 3 2 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 2 6 1 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 1 6 2 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 4 2 3 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 4 5 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 3 6 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 4 4 2 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 2 3 5 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 4 6 0 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 4 5 1 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 4 1 5 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 3 5 2 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 4 6 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 5 5 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 4 0 6 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 3 6 1 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 6 4 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 4 3 3 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 4 2 4 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 1 5 4 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 3 1 6 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 2 2 6 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 2 4 4 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 3 3 4 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 1 4 5 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 3 2 5 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 2 5 3 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 1 3 6 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 thread: 00, allBlocks:  01  0 06 0  03  0 00  00 0  0 00  0 0 00  00  00  0 00  , mySum: , mySum: 0
100 0 0 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 2 6 2 0 0 0 0 0 00 0 0  0 , mySum: 100
 0 0 0 0 3 4 3 0 0 0 0 0 0 00 0  0, mySum:  1, mySum: 10

0 0 0 0 1 0 0 0 0 0 0 0 0 0 2 5 4 0 0 0 0 0 0 0 00 0  , mySum: 110 
00 0 0 0 0 5 6 0 0 0 0 0 0 0  0 00  , mySum: 011 0
 0 0 0 0 1 5 5 0 0 0 0 0 0 0 , mySum: 0 10 
, mySum: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 011 0 
, mySum: 0 0 0 0 4 1 6 0 0 0 0 0 0 0 01 0 
, mySum: 0 0 0 0 0 0 2 0 0 0 0 0 0 11
0 0 0 0 2 6 3 0 00  00  0 , mySum: 02 0
 00 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 11 
0 0 0 0 0 4 2 5 0 0 0 0 0 0 00 0 0  , mySum: 11, mySum: 
2
0 0 0 0 1 6 4 0 0 0 0 0 00 0 0 0 0 1 1 0 0 0 0 0  0 0 00  00 0  , mySum: 11, mySum: 
2
0 0 0 0 1 0 1 0 0 0 0 0 00 0 0 0 4 3 4 0 0 0 0 0 0 0 0 , mySum:  20 0 
00 0 0 0 1 1 0 0 0 0 0 0  0 , mySum: 11
0 0 0 0 2 4 5 0 0 0 0 0 0 0 00 0 , mySum:  11
0 0 0 0 4 4 3 0 0 0 0 0 0 0 00 0  , mySum: 11
0 0 0 0 4 6 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 4 5 2 0 0 0 0 0 0 00 0 0  , mySum: 110 
0 0 0 0 0 2 3 6 0 0 0 0 0 0 00 0  , mySum: 02 
, mySum: 11
0 0 0 0 3 2 6 0 0 0 0 0 0 0 0 0 0 2 0 1 0 0 0 0 0 00  00  0 0, mySum:  11
00 0 0 0 3 4 4 0 0 0 0 0 0 0 0  , mySum: 03 
, mySum: 11
0 0 0 0 3 3 5 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 00 0 0 , mySum: 11
0 0 0 0 3 5 3 0 0 0 0 0 0 0  0 0 0, mySum: 11 
00 0 0 0 1 4 6 0 0 0 0 0 0  0 0 00  , mySum: 11
00 0 0 0 3 6 2 0 0 0 0 0 0  0, mySum:  0 0 3, mySum: 
11
0 0 0 0 0 6 5 0 0 0 0 0 00 0 0 0 1 2 0 0 0 0 0 0  0 00  0 00  0, mySum: 11 
, mySum: 0 0 0 0 4 4 4 0 0 0 0 0 0 0 30 0 , mySum: 
12
0 0 0 0 0 6 6 0 0 0 0 0 0 0 00 0 0 0 2 1 0 0 0 0 0  0 0 00 0 , mySum:  12
0 , mySum: 0 0 0 0 3 5 4 0 0 0 0 0 0 0 0 30 , mySum: 12

0 0 0 0 2 4 6 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 00 0 0  00  0 , mySum: 03 
, mySum: 120 0 0 0 1 1 1 0 0 0 0 0 0
 0 0 0 0 4 6 2 0 0 0 0 0 00 0 0  0 , mySum: 012
0 0 0 0 4 3 5 0 0 0 0 0 0 0  0 00  , mySum: , mySum: 123

0 0 0 0 0 2 1 0 0 0 0 0 0 00 0 0 0 1 5 6 0 0 0 0 0 0  0 00  0 0, mySum: 3 
, mySum: 0 0 0 0 1 0 2 0 0 0 0 0 0 012
0 0 0 0 3 3 6 0 0 0 0 0  0 0 00  0 , mySum: 03
 0 0 0 0 0 1 2 0 0 0 0 0 0 0, mySum: 12
0 0 0 0 2 5 5 0 0 0 0 0 0  0 0 , mySum: 3
0 0 0 0 0 0 3 0 0 0 0 0 0 0 00 0  0, mySum:  30 
, mySum: 120 0 0 0 3 1 0 0 0 0 0 0 0
 0 0 0 0 1 6 5 0 0 0 0 00 0 0  0 0 0, mySum:  120
0 0 0 0 4 2 6 0 0 0 0 0 0  0 0, mySum:  0 , mySum: 412

0 0 0 0 3 0 1 0 0 0 0 0 0 0 0 0 0 0 0 3 6 3 0 0 0 00 0 0  0, mySum:  40
0 0 0 0 0 4 0 0 0 0 0 0 0 0 0  0 , mySum: 40
 0 0 0 0 1 3 0 0 0 0 0 0 0 0, mySum:  0 120 , mySum: 
4
0 0 0 0 1 2 1 0 0 0 0 0 00 0 0 0 3 4 5 0 0 0 0 0  0 00  0 00 0  , mySum: , mySum: 412
0 0 0 0 1 1 2 0 0 0 0 0 0 
0 0 0 0 0 2 6 4 0 0 0 0 0 0 00 0  0 , mySum: 012 , mySum: 
0 0 0 0 4 5 3 0 0 0 0 0 0 4
0 0 0 0 1 0 3 0 0 0 0 0 0 0 0 , mySum: 120
 00 0 0 0 3 4 6 0 0 0 0 0 0  0 0 0 0, mySum: 13
 0 0 0 0 4 4 5 0 0 0 0 0 00 0 0  0 , mySum: , mySum: 134
0 0 0 0 4 5 4 0 0 0 0 0 
0 0 0 0 0 4 0 0 0 0 0 0 0 0 00 0  0 , mySum: 0 40 
, mySum: 0 0 0 0 0 0 4 0 0 0 0 0 013
0 0 0 0 4 3 6 0 0 0 0 0  0 0 00  0 00  , mySum: , mySum: 413
0 0 0 0 3 5 5 0 0 0 0 0 0
 0 0 0 0 0 1 3 0 0 0 0 0 00 0  0 00 , mySum:  13
00 0 0 0 2 5 6 0 0 0 0 0 0 0 0  , mySum: 0 4, mySum: 13
0 0 0 0 3 6 4 0 0 0 0 0 
0 0 0 0 0 2 2 0 0 0 0 0 0 00 0  0 0 0, mySum:  40
 0 0 0 0 0 3 1 0 0 0 0 0 , mySum: 13
0 0 0 0 2 6 5 0 0 0 0 0 00 0 0 0  , mySum: 0 40
0 0 0 0 2 0 2 0 0 0 0 0 0  0 , mySum: 13
0 0 0 0 4 6 3 0 0 0 0 0 0 0 0 0 , mySum: 40
 00 0 0 0 0 2 2 0 0 0 0 0 0  0 0 00 , mySum: 4 
0 0 0 0 2 1 1 0 0 0 0 0 0 0, mySum:  0 130
0 0 0 0 1 6 6 0 0 0 0 0 0 0  0 , mySum: 04 , mySum: 
13
0 0 0 0 4 6 4 0 0 0 0 0 0 0 0 0 0 1 1 3 0 0 0 0 00 0  00  0 0, mySum:  140 , mySum: 
50 0 0 0 2 6 6 0 0 0 0 0 0 0
 0 0 0 0 0 2 3 0 0 0 0 0 0 00 0  0, mySum:  140
 , mySum: 50 0 0 0 4 5 5 0 0 0 0 0 0 0 0
 00 0 0 0 2 2 1 0 0 0 0 0 0  0, mySum:  0 0 14, mySum: 5

0 0 0 0 1 0 4 0 0 0 0 0 0 0 0 0 0 0 4 4 6 0 0 0 0 00 0 0  00  , mySum: 50
 0 0 0 0 2 1 2 0 0 0 0 0 0 0 , mySum: 0 0 14, mySum: 
5
0 0 0 0 3 6 5 0 0 0 0 0 0 0 0 0 0 3 0 2 0 0 0 0 00 0  00  0 00  , mySum: , mySum: 514

0 0 0 0 3 5 6 0 0 0 0 0 0 0 0 0 0 2 0 3 0 0 0 0 00 0 0  00  0 , mySum: 014
 0 0 0 0 4 5 6 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 2 2 0 0 0 0 0 00 0  0 0 0 , mySum: 0 5, mySum: 
15
0 0 0 0 1 3 1 0 0 0 0 0 0 0 0 0 0 3 6 6 0 00  00  00  , mySum: 05
 0 0 0 0 1 4 0 0 0 0 0 0 0 00 0  00  0, mySum:  50 , mySum: 
150 0 0 0 3 2 0 0 0 0 0 0 0 0
 0 0 0 0 4 6 5 0 0 0 0 0 0 00 0  00  , mySum: 5, mySum: 
15
0 0 0 0 3 1 1 0 0 0 0 0 0 0 0 0 0 4 6 6 0 0 0 0 00 0 0  0 00 0  , mySum: , mySum: 165

0 0 0 0 0 0 5 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 4 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 5 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 3 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 3 2 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 4 1 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 4 0 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 5 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 3 2 1 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 3 3 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 3 0 3 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 4 1 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 0 4 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 3 3 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 3 1 2 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 2 4 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 4 2 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 4 0 2 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 3 2 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 4 2 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 1 3 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 2 3 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 5 1 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 5 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 2 2 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 1 4 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 3 1 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 4 1 1 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 4 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 6 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 0 5 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 4 1 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 3 0 4 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 5 1 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 2 3 2 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 4 3 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 3 4 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 2 1 4 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 2 5 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 2 2 3 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 2 0 5 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 6 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 2 5 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 6 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 4 0 3 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 6 1 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 0 6 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 4 1 2 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 1 5 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 5 2 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 2 4 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 3 4 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 4 2 1 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 3 3 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 4 2 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 3 1 3 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 3 2 2 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 3 3 1 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 4 3 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 3 5 0 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 2 3 3 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 3 0 5 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 4 0 4 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 3 1 4 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 4 3 1 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 2 4 2 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 4 1 3 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 3 2 3 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 2 5 1 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 3 4 1 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 4 4 0 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 4 2 2 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 3 3 2 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 2 6 0 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 1 2 5 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 5 3 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 1 6 1 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 4 4 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 1 5 2 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 6 2 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 2 0 6 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 3 5 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 2 6 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 1 4 3 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 2 1 5 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 1 3 4 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 2 2 4 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 1 1 6 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 4 0 5 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 3 4 2 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 1 2 6 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 3 0 6 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 5 4 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 1 5 3 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 3 5 1 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 3 1 5 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 3 2 4 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 3 3 3 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 6 3 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 1 4 4 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 1 3 5 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 3 6 0 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 4 1 4 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 2 3 4 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 2 2 5 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 2 4 3 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 4 5 0 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 4 4 1 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 2 1 6 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 2 5 2 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 4 3 2 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 2 6 1 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 1 6 2 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 4 2 3 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 4 5 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 3 6 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 4 4 2 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 2 3 5 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 4 6 0 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 4 5 1 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 4 1 5 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 3 5 2 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 4 6 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 5 5 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 4 0 6 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 3 6 1 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 6 4 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 4 3 3 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 4 2 4 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 1 5 4 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 3 1 6 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 2 2 6 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 2 4 4 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 3 3 4 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 1 4 5 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 3 2 5 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 2 5 3 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 1 3 6 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 1 6 3 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 2 6 2 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 3 4 3 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 2 5 4 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 0 5 6 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 1 5 5 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 4 1 6 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 2 6 3 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 4 2 5 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 1 6 4 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 4 3 4 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 2 4 5 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 4 4 3 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 4 6 1 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 4 5 2 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 2 3 6 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 3 2 6 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 3 4 4 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 3 3 5 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 3 5 3 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 1 4 6 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 3 6 2 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 0 6 5 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 4 4 4 0 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 0 6 6 0 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 3 5 4 0 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 2 4 6 0 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 4 6 2 0 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 4 3 5 0 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 1 5 6 0 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 3 3 6 0 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 2 5 5 0 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 1 6 5 0 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 4 2 6 0 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 3 6 3 0 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 3 4 5 0 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 2 6 4 0 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 4 5 3 0 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 3 4 6 0 0 0 0 0 0 0 0 0 , mySum: 13
0 0 0 0 4 4 5 0 0 0 0 0 0 0 0 0 , mySum: 13
0 0 0 0 4 5 4 0 0 0 0 0 0 0 0 0 , mySum: 13
0 0 0 0 4 3 6 0 0 0 0 0 0 0 0 0 , mySum: 13
0 0 0 0 3 5 5 0 0 0 0 0 0 0 0 0 , mySum: 13
0 0 0 0 2 5 6 0 0 0 0 0 0 0 0 0 , mySum: 13
0 0 0 0 3 6 4 0 0 0 0 0 0 0 0 0 , mySum: 13
0 0 0 0 2 6 5 0 0 0 0 0 0 0 0 0 , mySum: 13
0 0 0 0 4 6 3 0 0 0 0 0 0 0 0 0 , mySum: 13
0 0 0 0 1 6 6 0 0 0 0 0 0 0 0 0 , mySum: 13
0 0 0 0 4 6 4 0 0 0 0 0 0 0 0 0 , mySum: 14
0 0 0 0 2 6 6 0 0 0 0 0 0 0 0 0 , mySum: 14
0 0 0 0 4 5 5 0 0 0 0 0 0 0 0 0 , mySum: 14
0 0 0 0 4 4 6 0 0 0 0 0 0 0 0 0 , mySum: 14
0 0 0 0 3 6 5 0 0 0 0 0 0 0 0 0 , mySum: 14
0 0 0 0 3 5 6 0 0 0 0 0 0 0 0 0 , mySum: 14
0 0 0 0 4 5 6 0 0 0 0 0 0 0 0 0 , mySum: 15
0 0 0 0 3 6 6 0 0 0 0 0 0 0 0 0 , mySum: 15
0 0 0 0 4 6 5 0 0 0 0 0 0 0 0 0 , mySum: 15
0 0 0 0 4 6 6 0 0 0 0 0 0 0 0 0 , mySum: 16
thread: 1, maxBlockLvlSize: 29
thread: 1, maxInBlockLvlSize: 3
thread: 1, AllTableSize: 2940, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 29
thread: 0, maxInBlockLvlSize: 3
thread: 0, AllTableSize: 2940, maxSubsetsSize: 64
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 6
copy the latest feasible solution to instance takes time: 0.039621
thread: 3, sOPT: 6
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 1 0 0 
thread: 0, allBlocks[2]: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 1 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 1 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 2 0 0 
thread: 0, allBlocks[5]: 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 2 0 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 1 1 0 0 
thread: 0, allBlocks[7]: 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 1 0 1 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[8]: 1 1 0 0 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[9]: 0 2 0 0 0 
thread: 0, allBlocks[10]: 0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 2 0 1 0 0 
thread: 0, allBlocks[11]: 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 0 3 0 0 0 
thread: 0, allBlocks[12]: 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[12]: 1 2 0 0 0 
thread: 0, allBlocks[13]: 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[13]: 2 1 0 0 0 
thread: 0, allBlocks[14]: 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[14]: 3 0 0 0 0 
thread: 0, allBlocks[15]: 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[15]: 1 1 1 0 0 
thread: 0, allBlocks[16]: 0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[16]: 0 2 1 0 0 
thread: 0, allBlocks[17]: 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[17]: 1 0 2 0 0 
thread: 0, allBlocks[18]: 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[18]: 0 1 2 0 0 
thread: 0, allBlocks[19]: 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[19]: 0 0 3 0 0 
thread: 0, allBlocks[20]: 0 0 0 0 3 1 0 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[20]: 3 1 0 0 0 
thread: 0, allBlocks[21]: 0 0 0 0 3 0 1 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[21]: 3 0 1 0 0 
thread: 0, allBlocks[22]: 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[22]: 0 4 0 0 0 
thread: 0, allBlocks[23]: 0 0 0 0 1 3 0 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[23]: 1 3 0 0 0 
thread: 0, allBlocks[24]: 0 0 0 0 1 2 1 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[24]: 1 2 1 0 0 
thread: 0, allBlocks[25]: 0 0 0 0 1 1 2 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[25]: 1 1 2 0 0 
thread: 0, allBlocks[26]: 0 0 0 0 1 0 3 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[26]: 1 0 3 0 0 
thread: 0, allBlocks[27]: 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[27]: 4 0 0 0 0 
thread: 0, allBlocks[28]: 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[28]: 0 0 4 0 0 
thread: 0, allBlocks[29]: 0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[29]: 0 1 3 0 0 
thread: 0, allBlocks[30]: 0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[30]: 2 2 0 0 0 
thread: 0, allBlocks[31]: 0 0 0 0 0 3 1 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[31]: 0 3 1 0 0 
thread: 0, allBlocks[32]: 0 0 0 0 2 0 2 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[32]: 2 0 2 0 0 
thread: 0, allBlocks[33]: 0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[33]: 0 2 2 0 0 
thread: 0, allBlocks[34]: 0 0 0 0 2 1 1 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[34]: 2 1 1 0 0 
thread: 0, allBlocks[35]: 0 0 0 0 1 1 3 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[35]: 1 1 3 0 0 
thread: 0, allBlocks[36]: 0 0 0 0 2 3 0 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[36]: 2 3 0 0 0 
thread: 0, allBlocks[37]: 0 0 0 0 2 2 1 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[37]: 2 2 1 0 0 
thread: 0, allBlocks[38]: 0 0 0 0 1 0 4 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[38]: 1 0 4 0 0 
thread: 0, allBlocks[39]: 0 0 0 0 2 1 2 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[39]: 2 1 2 0 0 
thread: 0, allBlocks[40]: 0 0 0 0 3 0 2 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[40]: 3 0 2 0 0 
thread: 0, allBlocks[41]: 0 0 0 0 2 0 3 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[41]: 2 0 3 0 0 
thread: 0, allBlocks[42]: 0 0 0 0 1 2 2 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[42]: 1 2 2 0 0 
thread: 0, allBlocks[43]: 0 0 0 0 1 3 1 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[43]: 1 3 1 0 0 
thread: 0, allBlocks[44]: 0 0 0 0 1 4 0 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[44]: 1 4 0 0 0 
thread: 0, allBlocks[45]: 0 0 0 0 3 2 0 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[45]: 3 2 0 0 0 
thread: 0, allBlocks[46]: 0 0 0 0 3 1 1 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[46]: 3 1 1 0 0 
thread: 0, allBlocks[47]: 0 0 0 0 0 0 5 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[47]: 0 0 5 0 0 
thread: 0, allBlocks[48]: 0 0 0 0 0 4 1 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[48]: 0 4 1 0 0 
thread: 0, allBlocks[49]: 0 0 0 0 0 5 0 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[49]: 0 5 0 0 0 
thread: 0, allBlocks[50]: 0 0 0 0 0 2 3 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[50]: 0 2 3 0 0 
thread: 0, allBlocks[51]: 0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[51]: 0 1 4 0 0 
thread: 0, allBlocks[52]: 0 0 0 0 0 3 2 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[52]: 0 3 2 0 0 
thread: 0, allBlocks[53]: 0 0 0 0 4 1 0 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[53]: 4 1 0 0 0 
thread: 0, allBlocks[54]: 0 0 0 0 4 0 1 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[54]: 4 0 1 0 0 
thread: 0, allBlocks[55]: 0 0 0 0 1 5 0 0 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[55]: 1 5 0 0 0 
thread: 0, allBlocks[56]: 0 0 0 0 3 2 1 0 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[56]: 3 2 1 0 0 
thread: 0, allBlocks[57]: 0 0 0 0 0 3 3 0 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[57]: 0 3 3 0 0 
thread: 0, allBlocks[58]: 0 0 0 0 3 0 3 0 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[58]: 3 0 3 0 0 
thread: 0, allBlocks[59]: 0 0 0 0 1 4 1 0 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[59]: 1 4 1 0 0 
thread: 0, allBlocks[60]: 0 0 0 0 2 0 4 0 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[60]: 2 0 4 0 0 
thread: 0, allBlocks[61]: 0 0 0 0 3 3 0 0 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[61]: 3 3 0 0 0 
thread: 0, allBlocks[62]: 0 0 0 0 3 1 2 0 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[62]: 3 1 2 0 0 
thread: 0, allBlocks[63]: 0 0 0 0 0 2 4 0 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[63]: 0 2 4 0 0 
thread: 0, allBlocks[64]: 0 0 0 0 0 4 2 0 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[64]: 0 4 2 0 0 
thread: 0, allBlocks[65]: 0 0 0 0 4 0 2 0 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[65]: 4 0 2 0 0 
thread: 0, allBlocks[66]: 0 0 0 0 1 3 2 0 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[66]: 1 3 2 0 0 
thread: 0, allBlocks[67]: 0 0 0 0 4 2 0 0 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[67]: 4 2 0 0 0 
thread: 0, allBlocks[68]: 0 0 0 0 2 1 3 0 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[68]: 2 1 3 0 0 
thread: 0, allBlocks[69]: 0 0 0 0 1 2 3 0 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[69]: 1 2 3 0 0 
thread: 0, allBlocks[70]: 0 0 0 0 0 5 1 0 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[70]: 0 5 1 0 0 
thread: 0, allBlocks[71]: 0 0 0 0 0 1 5 0 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[71]: 0 1 5 0 0 
thread: 0, allBlocks[72]: 0 0 0 0 2 2 2 0 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[72]: 2 2 2 0 0 
thread: 0, allBlocks[73]: 0 0 0 0 1 1 4 0 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[73]: 1 1 4 0 0 
thread: 0, allBlocks[74]: 0 0 0 0 2 3 1 0 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[74]: 2 3 1 0 0 
thread: 0, allBlocks[75]: 0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[75]: 0 0 6 0 0 
thread: 0, allBlocks[76]: 0 0 0 0 4 1 1 0 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[76]: 4 1 1 0 0 
thread: 0, allBlocks[77]: 0 0 0 0 2 4 0 0 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[77]: 2 4 0 0 0 
thread: 0, allBlocks[78]: 0 0 0 0 0 6 0 0 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[78]: 0 6 0 0 0 
thread: 0, allBlocks[79]: 0 0 0 0 1 0 5 0 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[79]: 1 0 5 0 0 
thread: 0, allBlocks[80]: 0 0 0 0 2 4 1 0 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[80]: 2 4 1 0 0 
thread: 0, allBlocks[81]: 0 0 0 0 3 0 4 0 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[81]: 3 0 4 0 0 
thread: 0, allBlocks[82]: 0 0 0 0 1 5 1 0 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[82]: 1 5 1 0 0 
thread: 0, allBlocks[83]: 0 0 0 0 2 3 2 0 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[83]: 2 3 2 0 0 
thread: 0, allBlocks[84]: 0 0 0 0 4 3 0 0 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[84]: 4 3 0 0 0 
thread: 0, allBlocks[85]: 0 0 0 0 0 3 4 0 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[85]: 0 3 4 0 0 
thread: 0, allBlocks[86]: 0 0 0 0 2 1 4 0 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[86]: 2 1 4 0 0 
thread: 0, allBlocks[87]: 0 0 0 0 0 2 5 0 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[87]: 0 2 5 0 0 
thread: 0, allBlocks[88]: 0 0 0 0 2 2 3 0 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[88]: 2 2 3 0 0 
thread: 0, allBlocks[89]: 0 0 0 0 2 0 5 0 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[89]: 2 0 5 0 0 
thread: 0, allBlocks[90]: 0 0 0 0 0 1 6 0 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[90]: 0 1 6 0 0 
thread: 0, allBlocks[91]: 0 0 0 0 2 5 0 0 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[91]: 2 5 0 0 0 
thread: 0, allBlocks[92]: 0 0 0 0 1 6 0 0 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[92]: 1 6 0 0 0 
thread: 0, allBlocks[93]: 0 0 0 0 4 0 3 0 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[93]: 4 0 3 0 0 
thread: 0, allBlocks[94]: 0 0 0 0 0 6 1 0 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[94]: 0 6 1 0 0 
thread: 0, allBlocks[95]: 0 0 0 0 1 0 6 0 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[95]: 1 0 6 0 0 
thread: 0, allBlocks[96]: 0 0 0 0 4 1 2 0 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[96]: 4 1 2 0 0 
thread: 0, allBlocks[97]: 0 0 0 0 1 1 5 0 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[97]: 1 1 5 0 0 
thread: 0, allBlocks[98]: 0 0 0 0 0 5 2 0 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[98]: 0 5 2 0 0 
thread: 0, allBlocks[99]: 0 0 0 0 1 2 4 0 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[99]: 1 2 4 0 0 
thread: 0, allBlocks[100]: 0 0 0 0 3 4 0 0 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[100]: 3 4 0 0 0 
thread: 0, allBlocks[101]: 0 0 0 0 4 2 1 0 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[101]: 4 2 1 0 0 
thread: 0, allBlocks[102]: 0 0 0 0 1 3 3 0 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[102]: 1 3 3 0 0 
thread: 0, allBlocks[103]: 0 0 0 0 1 4 2 0 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[103]: 1 4 2 0 0 
thread: 0, allBlocks[104]: 0 0 0 0 3 1 3 0 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[104]: 3 1 3 0 0 
thread: 0, allBlocks[105]: 0 0 0 0 3 2 2 0 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[105]: 3 2 2 0 0 
thread: 0, allBlocks[106]: 0 0 0 0 3 3 1 0 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[106]: 3 3 1 0 0 
thread: 0, allBlocks[107]: 0 0 0 0 0 4 3 0 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[107]: 0 4 3 0 0 
thread: 0, allBlocks[108]: 0 0 0 0 3 5 0 0 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[108]: 3 5 0 0 0 
thread: 0, allBlocks[109]: 0 0 0 0 2 3 3 0 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[109]: 2 3 3 0 0 
thread: 0, allBlocks[110]: 0 0 0 0 3 0 5 0 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[110]: 3 0 5 0 0 
thread: 0, allBlocks[111]: 0 0 0 0 4 0 4 0 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[111]: 4 0 4 0 0 
thread: 0, allBlocks[112]: 0 0 0 0 3 1 4 0 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[112]: 3 1 4 0 0 
thread: 0, allBlocks[113]: 0 0 0 0 4 3 1 0 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[113]: 4 3 1 0 0 
thread: 0, allBlocks[114]: 0 0 0 0 2 4 2 0 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[114]: 2 4 2 0 0 
thread: 0, allBlocks[115]: 0 0 0 0 4 1 3 0 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[115]: 4 1 3 0 0 
thread: 0, allBlocks[116]: 0 0 0 0 3 2 3 0 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[116]: 3 2 3 0 0 
thread: 0, allBlocks[117]: 0 0 0 0 2 5 1 0 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[117]: 2 5 1 0 0 
thread: 0, allBlocks[118]: 0 0 0 0 3 4 1 0 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[118]: 3 4 1 0 0 
thread: 0, allBlocks[119]: 0 0 0 0 4 4 0 0 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[119]: 4 4 0 0 0 
thread: 0, allBlocks[120]: 0 0 0 0 4 2 2 0 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[120]: 4 2 2 0 0 
thread: 0, allBlocks[121]: 0 0 0 0 3 3 2 0 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[121]: 3 3 2 0 0 
thread: 0, allBlocks[122]: 0 0 0 0 2 6 0 0 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[122]: 2 6 0 0 0 
thread: 0, allBlocks[123]: 0 0 0 0 1 2 5 0 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[123]: 1 2 5 0 0 
thread: 0, allBlocks[124]: 0 0 0 0 0 5 3 0 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[124]: 0 5 3 0 0 
thread: 0, allBlocks[125]: 0 0 0 0 1 6 1 0 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[125]: 1 6 1 0 0 
thread: 0, allBlocks[126]: 0 0 0 0 0 4 4 0 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[126]: 0 4 4 0 0 
thread: 0, allBlocks[127]: 0 0 0 0 1 5 2 0 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[127]: 1 5 2 0 0 
thread: 0, allBlocks[128]: 0 0 0 0 0 6 2 0 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[128]: 0 6 2 0 0 
thread: 0, allBlocks[129]: 0 0 0 0 2 0 6 0 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[129]: 2 0 6 0 0 
thread: 0, allBlocks[130]: 0 0 0 0 0 3 5 0 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[130]: 0 3 5 0 0 
thread: 0, allBlocks[131]: 0 0 0 0 0 2 6 0 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[131]: 0 2 6 0 0 
thread: 0, allBlocks[132]: 0 0 0 0 1 4 3 0 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[132]: 1 4 3 0 0 
thread: 0, allBlocks[133]: 0 0 0 0 2 1 5 0 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[133]: 2 1 5 0 0 
thread: 0, allBlocks[134]: 0 0 0 0 1 3 4 0 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[134]: 1 3 4 0 0 
thread: 0, allBlocks[135]: 0 0 0 0 2 2 4 0 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[135]: 2 2 4 0 0 
thread: 0, allBlocks[136]: 0 0 0 0 1 1 6 0 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[136]: 1 1 6 0 0 
thread: 0, allBlocks[137]: 0 0 0 0 4 0 5 0 0 0 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[137]: 4 0 5 0 0 
thread: 0, allBlocks[138]: 0 0 0 0 3 4 2 0 0 0 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[138]: 3 4 2 0 0 
thread: 0, allBlocks[139]: 0 0 0 0 1 2 6 0 0 0 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[139]: 1 2 6 0 0 
thread: 0, allBlocks[140]: 0 0 0 0 3 0 6 0 0 0 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[140]: 3 0 6 0 0 
thread: 0, allBlocks[141]: 0 0 0 0 0 5 4 0 0 0 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[141]: 0 5 4 0 0 
thread: 0, allBlocks[142]: 0 0 0 0 1 5 3 0 0 0 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[142]: 1 5 3 0 0 
thread: 0, allBlocks[143]: 0 0 0 0 3 5 1 0 0 0 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[143]: 3 5 1 0 0 
thread: 0, allBlocks[144]: 0 0 0 0 3 1 5 0 0 0 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[144]: 3 1 5 0 0 
thread: 0, allBlocks[145]: 0 0 0 0 3 2 4 0 0 0 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[145]: 3 2 4 0 0 
thread: 0, allBlocks[146]: 0 0 0 0 3 3 3 0 0 0 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[146]: 3 3 3 0 0 
thread: 0, allBlocks[147]: 0 0 0 0 0 6 3 0 0 0 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[147]: 0 6 3 0 0 
thread: 0, allBlocks[148]: 0 0 0 0 1 4 4 0 0 0 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[148]: 1 4 4 0 0 
thread: 0, allBlocks[149]: 0 0 0 0 1 3 5 0 0 0 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[149]: 1 3 5 0 0 
thread: 0, allBlocks[150]: 0 0 0 0 3 6 0 0 0 0 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[150]: 3 6 0 0 0 
thread: 0, allBlocks[151]: 0 0 0 0 4 1 4 0 0 0 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[151]: 4 1 4 0 0 
thread: 0, allBlocks[152]: 0 0 0 0 2 3 4 0 0 0 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[152]: 2 3 4 0 0 
thread: 0, allBlocks[153]: 0 0 0 0 2 2 5 0 0 0 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[153]: 2 2 5 0 0 
thread: 0, allBlocks[154]: 0 0 0 0 2 4 3 0 0 0 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[154]: 2 4 3 0 0 
thread: 0, allBlocks[155]: 0 0 0 0 4 5 0 0 0 0 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[155]: 4 5 0 0 0 
thread: 0, allBlocks[156]: 0 0 0 0 4 4 1 0 0 0 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[156]: 4 4 1 0 0 
thread: 0, allBlocks[157]: 0 0 0 0 2 1 6 0 0 0 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[157]: 2 1 6 0 0 
thread: 0, allBlocks[158]: 0 0 0 0 2 5 2 0 0 0 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[158]: 2 5 2 0 0 
thread: 0, allBlocks[159]: 0 0 0 0 4 3 2 0 0 0 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[159]: 4 3 2 0 0 
thread: 0, allBlocks[160]: 0 0 0 0 2 6 1 0 0 0 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[160]: 2 6 1 0 0 
thread: 0, allBlocks[161]: 0 0 0 0 1 6 2 0 0 0 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[161]: 1 6 2 0 0 
thread: 0, allBlocks[162]: 0 0 0 0 4 2 3 0 0 0 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[162]: 4 2 3 0 0 
thread: 0, allBlocks[163]: 0 0 0 0 0 4 5 0 0 0 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[163]: 0 4 5 0 0 
thread: 0, allBlocks[164]: 0 0 0 0 0 3 6 0 0 0 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[164]: 0 3 6 0 0 
thread: 0, allBlocks[165]: 0 0 0 0 4 4 2 0 0 0 0 0 0 0 0 0 mySum: 10
thread: 0, blockNoZero[165]: 4 4 2 0 0 
thread: 0, allBlocks[166]: 0 0 0 0 2 3 5 0 0 0 0 0 0 0 0 0 mySum: 10
thread: 0, blockNoZero[166]: 2 3 5 0 0 
thread: 0, allBlocks[167]: 0 0 0 0 4 6 0 0 0 0 0 0 0 0 0 0 mySum: 10
thread: 0, blockNoZero[167]: 4 6 0 0 0 
thread: 0, allBlocks[168]: 0 0 0 0 4 5 1 0 0 0 0 0 0 0 0 0 mySum: 10
thread: 0, blockNoZero[168]: 4 5 1 0 0 
thread: 0, allBlocks[169]: 0 0 0 0 4 1 5 0 0 0 0 0 0 0 0 0 mySum: 10
thread: 0, blockNoZero[169]: 4 1 5 0 0 
thread: 0, allBlocks[170]: 0 0 0 0 3 5 2 0 0 0 0 0 0 0 0 0 mySum: 10
thread: 0, blockNoZero[170]: 3 5 2 0 0 
thread: 0, allBlocks[171]: 0 0 0 0 0 4 6 0 0 0 0 0 0 0 0 0 mySum: 10
thread: 0, blockNoZero[171]: 0 4 6 0 0 
thread: 0, allBlocks[172]: 0 0 0 0 0 5 5 0 0 0 0 0 0 0 0 0 mySum: 10
thread: 0, blockNoZero[172]: 0 5 5 0 0 
thread: 0, allBlocks[173]: 0 0 0 0 4 0 6 0 0 0 0 0 0 0 0 0 mySum: 10
thread: 0, blockNoZero[173]: 4 0 6 0 0 
thread: 0, allBlocks[174]: 0 0 0 0 3 6 1 0 0 0 0 0 0 0 0 0 mySum: 10
thread: 0, blockNoZero[174]: 3 6 1 0 0 
thread: 0, allBlocks[175]: 0 0 0 0 0 6 4 0 0 0 0 0 0 0 0 0 mySum: 10
thread: 0, blockNoZero[175]: 0 6 4 0 0 
thread: 0, allBlocks[176]: 0 0 0 0 4 3 3 0 0 0 0 0 0 0 0 0 mySum: 10
thread: 0, blockNoZero[176]: 4 3 3 0 0 
thread: 0, allBlocks[177]: 0 0 0 0 4 2 4 0 0 0 0 0 0 0 0 0 mySum: 10
thread: 0, blockNoZero[177]: 4 2 4 0 0 
thread: 0, allBlocks[178]: 0 0 0 0 1 5 4 0 0 0 0 0 0 0 0 0 mySum: 10
thread: 0, blockNoZero[178]: 1 5 4 0 0 
thread: 0, allBlocks[179]: 0 0 0 0 3 1 6 0 0 0 0 0 0 0 0 0 mySum: 10
thread: 0, blockNoZero[179]: 3 1 6 0 0 
thread: 0, allBlocks[180]: 0 0 0 0 2 2 6 0 0 0 0 0 0 0 0 0 mySum: 10
thread: 0, blockNoZero[180]: 2 2 6 0 0 
thread: 0, allBlocks[181]: 0 0 0 0 2 4 4 0 0 0 0 0 0 0 0 0 mySum: 10
thread: 0, blockNoZero[181]: 2 4 4 0 0 
thread: 0, allBlocks[182]: 0 0 0 0 3 3 4 0 0 0 0 0 0 0 0 0 mySum: 10
thread: 0, blockNoZero[182]: 3 3 4 0 0 
thread: 0, allBlocks[183]: 0 0 0 0 1 4 5 0 0 0 0 0 0 0 0 0 mySum: 10
thread: 0, blockNoZero[183]: 1 4 5 0 0 
thread: 0, allBlocks[184]: 0 0 0 0 3 2 5 0 0 0 0 0 0 0 0 0 mySum: 10
thread: 0, blockNoZero[184]: 3 2 5 0 0 
thread: 0, allBlocks[185]: 0 0 0 0 2 5 3 0 0 0 0 0 0 0 0 0 mySum: 10
thread: 0, blockNoZero[185]: 2 5 3 0 0 
thread: 0, allBlocks[186]: 0 0 0 0 1 3 6 0 0 0 0 0 0 0 0 0 mySum: 10
thread: 0, blockNoZero[186]: 1 3 6 0 0 
thread: 0, allBlocks[187]: 0 0 0 0 1 6 3 0 0 0 0 0 0 0 0 0 mySum: 10
thread: 0, blockNoZero[187]: 1 6 3 0 0 
thread: 0, allBlocks[188]: 0 0 0 0 2 6 2 0 0 0 0 0 0 0 0 0 mySum: 10
thread: 0, blockNoZero[188]: 2 6 2 0 0 
thread: 0, allBlocks[189]: 0 0 0 0 3 4 3 0 0 0 0 0 0 0 0 0 mySum: 10
thread: 0, blockNoZero[189]: 3 4 3 0 0 
thread: 0, allBlocks[190]: 0 0 0 0 2 5 4 0 0 0 0 0 0 0 0 0 mySum: 11
thread: 0, blockNoZero[190]: 2 5 4 0 0 
thread: 0, allBlocks[191]: 0 0 0 0 0 5 6 0 0 0 0 0 0 0 0 0 mySum: 11
thread: 0, blockNoZero[191]: 0 5 6 0 0 
thread: 0, allBlocks[192]: 0 0 0 0 1 5 5 0 0 0 0 0 0 0 0 0 mySum: 11
thread: 0, blockNoZero[192]: 1 5 5 0 0 
thread: 0, allBlocks[193]: 0 0 0 0 4 1 6 0 0 0 0 0 0 0 0 0 mySum: 11
thread: 0, blockNoZero[193]: 4 1 6 0 0 
Thread: 2, gpu_BlockDP is done.
thread: 0, allBlocks[194]: 0 0 0 0 2 6 3 0 0 0 0 0 0 0 0 0 mySum: 11
thread: 0, blockNoZero[194]: 2 6 3 0 0 
thread: 0, allBlocks[195]: 0 0 0 0 4 2 5 0 0 0 0 0 0 0 0 0 mySum: 11
thread: 0, blockNoZero[195]: 4 2 5 0 0 
thread: 0, allBlocks[196]: 0 0 0 0 1 6 4 0 0 0 0 0 0 0 0 0 mySum: 11
thread: 0, blockNoZero[196]: 1 6 4 0 0 
thread: 0, allBlocks[197]: 0 0 0 0 4 3 4 0 0 0 0 0 0 0 0 0 mySum: 11
thread: 0, blockNoZero[197]: 4 3 4 0 0 
thread: 0, allBlocks[198]: 0 0 0 0 2 4 5 0 0 0 0 0 0 0 0 0 mySum: 11
thread: 0, blockNoZero[198]: 2 4 5 0 0 
thread: 0, allBlocks[199]: 0 0 0 0 4 4 3 0 0 0 0 0 0 0 0 0 mySum: 11
thread: 0, blockNoZero[199]: 4 4 3 0 0 
thread: 0, allBlocks[200]: 0 0 0 0 4 6 1 0 0 0 0 0 0 0 0 0 mySum: 11
thread: 0, blockNoZero[200]: 4 6 1 0 0 
thread: 0, allBlocks[201]: 0 0 0 0 4 5 2 0 0 0 0 0 0 0 0 0 mySum: 11
thread: 0, blockNoZero[201]: 4 5 2 0 0 
thread: 0, allBlocks[202]: 0 0 0 0 2 3 6 0 0 0 0 0 0 0 0 0 mySum: 11
thread: 0, blockNoZero[202]: 2 3 6 0 0 
thread: 0, allBlocks[203]: 0 0 0 0 3 2 6 0 0 0 0 0 0 0 0 0 mySum: 11
thread: 0, blockNoZero[203]: 3 2 6 0 0 
thread: 0, allBlocks[204]: 0 0 0 0 3 4 4 0 0 0 0 0 0 0 0 0 mySum: 11
thread: 0, blockNoZero[204]: 3 4 4 0 0 
thread: 0, allBlocks[205]: 0 0 0 0 3 3 5 0 0 0 0 0 0 0 0 0 mySum: 11
thread: 0, blockNoZero[205]: 3 3 5 0 0 
thread: 0, allBlocks[206]: 0 0 0 0 3 5 3 0 0 0 0 0 0 0 0 0 mySum: 11
thread: 0, blockNoZero[206]: 3 5 3 0 0 
thread: 0, allBlocks[207]: 0 0 0 0 1 4 6 0 0 0 0 0 0 0 0 0 mySum: 11
thread: 0, blockNoZero[207]: 1 4 6 0 0 
thread: 0, allBlocks[208]: 0 0 0 0 3 6 2 0 0 0 0 0 0 0 0 0 mySum: 11
thread: 0, blockNoZero[208]: 3 6 2 0 0 
thread: 0, allBlocks[209]: 0 0 0 0 0 6 5 0 0 0 0 0 0 0 0 0 mySum: 11
thread: 0, blockNoZero[209]: 0 6 5 0 0 
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 7
thread: 0, allBlocks[210]: 0 0 0 0 4 4 4 0 0 0 0 0 0 0 0 0 mySum: 12
thread: 0, blockNoZero[210]: 4 4 4 0 0 
thread: 0, allBlocks[211]: 0 0 0 0 0 6 6 0 0 0 0 0 0 0 0 0 mySum: 12
thread: 0, blockNoZero[211]: 0 6 6 0 0 
thread: 0, allBlocks[212]: 0 0 0 0 3 5 4 0 0 0 0 0 0 0 0 0 mySum: 12
thread: 0, blockNoZero[212]: 3 5 4 0 0 
thread: 0, allBlocks[213]: 0 0 0 0 2 4 6 0 0 0 0 0 0 0 0 0 mySum: 12
thread: 0, blockNoZero[213]: 2 4 6 0 0 
thread: 0, allBlocks[214]: 0 0 0 0 4 6 2 0 0 0 0 0 0 0 0 0 mySum: 12
thread: 0, blockNoZero[214]: 4 6 2 0 0 
thread: 0, allBlocks[215]: 0 0 0 0 4 3 5 0 0 0 0 0 0 0 0 0 mySum: 12
thread: 0, blockNoZero[215]: 4 3 5 0 0 
thread: 0, allBlocks[216]: 0 0 0 0 1 5 6 0 0 0 0 0 0 0 0 0 mySum: 12
thread: 0, blockNoZero[216]: 1 5 6 0 0 
thread: 0, allBlocks[217]: 0 0 0 0 3 3 6 0 0 0 0 0 0 0 0 0 mySum: 12
thread: 0, blockNoZero[217]: 3 3 6 0 0 
thread: 0, allBlocks[218]: 0 0 0 0 2 5 5 0 0 0 0 0 0 0 0 0 mySum: 12
thread: 0, blockNoZero[218]: 2 5 5 0 0 
thread: 0, allBlocks[219]: 0 0 0 0 1 6 5 0 0 0 0 0 0 0 0 0 mySum: 12
thread: 0, blockNoZero[219]: 1 6 5 0 0 
thread: 0, allBlocks[220]: 0 0 0 0 4 2 6 0 0 0 0 0 0 0 0 0 mySum: 12
thread: 0, blockNoZero[220]: 4 2 6 0 0 
thread: 0, allBlocks[221]: 0 0 0 0 3 6 3 0 0 0 0 0 0 0 0 0 mySum: 12
thread: 0, blockNoZero[221]: 3 6 3 0 0 
thread: 0, allBlocks[222]: 0 0 0 0 3 4 5 0 0 0 0 0 0 0 0 0 mySum: 12
thread: 0, blockNoZero[222]: 3 4 5 0 0 
thread: 0, allBlocks[223]: 0 0 0 0 2 6 4 0 0 0 0 0 0 0 0 0 mySum: 12
thread: 0, blockNoZero[223]: 2 6 4 0 0 
thread: 0, allBlocks[224]: 0 0 0 0 4 5 3 0 0 0 0 0 0 0 0 0 mySum: 12
thread: 0, blockNoZero[224]: 4 5 3 0 0 
thread: 0, allBlocks[225]: 0 0 0 0 3 4 6 0 0 0 0 0 0 0 0 0 mySum: 13
thread: 0, blockNoZero[225]: 3 4 6 0 0 
thread: 0, allBlocks[226]: 0 0 0 0 4 4 5 0 0 0 0 0 0 0 0 0 mySum: 13
thread: 0, blockNoZero[226]: 4 4 5 0 0 
thread: 0, allBlocks[227]: 0 0 0 0 4 5 4 0 0 0 0 0 0 0 0 0 mySum: 13
thread: 0, blockNoZero[227]: 4 5 4 0 0 
thread: 0, allBlocks[228]: 0 0 0 0 4 3 6 0 0 0 0 0 0 0 0 0 mySum: 13
thread: 0, blockNoZero[228]: 4 3 6 0 0 
thread: 0, allBlocks[229]: 0 0 0 0 3 5 5 0 0 0 0 0 0 0 0 0 mySum: 13
thread: 0, blockNoZero[229]: 3 5 5 0 0 
thread: 0, allBlocks[230]: 0 0 0 0 2 5 6 0 0 0 0 0 0 0 0 0 mySum: 13
thread: 0, blockNoZero[230]: 2 5 6 0 0 
thread: 0, allBlocks[231]: 0 0 0 0 3 6 4 0 0 0 0 0 0 0 0 0 mySum: 13
thread: 0, blockNoZero[231]: 3 6 4 0 0 
thread: 0, allBlocks[232]: 0 0 0 0 2 6 5 0 0 0 0 0 0 0 0 0 mySum: 13
thread: 0, blockNoZero[232]: 2 6 5 0 0 
thread: 0, allBlocks[233]: 0 0 0 0 4 6 3 0 0 0 0 0 0 0 0 0 mySum: 13
thread: 0, blockNoZero[233]: 4 6 3 0 0 
thread: 0, allBlocks[234]: 0 0 0 0 1 6 6 0 0 0 0 0 0 0 0 0 mySum: 13
thread: 0, blockNoZero[234]: 1 6 6 0 0 
copy the latest feasible solution to instance takes time: 0.101711
thread: 2, sOPT: 7
thread: 0, allBlocks[235]: 0 0 0 0 4 6 4 0 0 0 0 0 0 0 0 0 mySum: 14
thread: 0, blockNoZero[235]: 4 6 4 0 0 
thread: 0, allBlocks[236]: 0 0 0 0 2 6 6 0 0 0 0 0 0 0 0 0 mySum: 14
thread: 0, blockNoZero[236]: 2 6 6 0 0 
thread: 0, allBlocks[237]: 0 0 0 0 4 5 5 0 0 0 0 0 0 0 0 0 mySum: 14
thread: 0, blockNoZero[237]: 4 5 5 0 0 
thread: 0, allBlocks[238]: 0 0 0 0 4 4 6 0 0 0 0 0 0 0 0 0 mySum: 14
thread: 0, blockNoZero[238]: 4 4 6 0 0 
thread: 0, allBlocks[239]: 0 0 0 0 3 6 5 0 0 0 0 0 0 0 0 0 mySum: 14
thread: 0, blockNoZero[239]: 3 6 5 0 0 
thread: 0, allBlocks[240]: 0 0 0 0 3 5 6 0 0 0 0 0 0 0 0 0 mySum: 14
thread: 0, blockNoZero[240]: 3 5 6 0 0 
thread: 0, allBlocks[241]: 0 0 0 0 4 5 6 0 0 0 0 0 0 0 0 0 mySum: 15
thread: 0, blockNoZero[241]: 4 5 6 0 0 
thread: 0, allBlocks[242]: 0 0 0 0 3 6 6 0 0 0 0 0 0 0 0 0 mySum: 15
thread: 0, blockNoZero[242]: 3 6 6 0 0 
thread: 0, allBlocks[243]: 0 0 0 0 4 6 5 0 0 0 0 0 0 0 0 0 mySum: 15
thread: 0, blockNoZero[243]: 4 6 5 0 0 
thread: 0, allBlocks[244]: 0 0 0 0 4 6 6 0 0 0 0 0 0 0 0 0 mySum: 16
thread: 0, blockNoZero[244]: 4 6 6 0 0 
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 9
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.136768
thread: 1, sOPT: 9
copy the latest feasible solution to instance takes time: 0.06478
thread: 0, sOPT: 10
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: 3, MlBk function is done, and BkID for all processes are collected.
Thread: 1, MlBk function is done, and BkID for all processes are collected.Thread: 
2, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 30, UB: 33
BKID: 0, LB: 30, UB: 33, OPT: 10
Dynamic Programming Runtime: 1.48066
Execution time between LB and UB is: 0
By far, all LB UB calculation runtime: 0
Iteration: 2, UB: 33, LB: 30start at time: 1505276329
thread: 0, MlBk is called with LB: 30, UB: 31
 thread: 0, LongJobs.size() 21
thread: 1, MlBk is called with LB: 31, UB: thread: 32
2, MlBk is called with LB: 32, UB: 33
 thread: 1, LongJobs.size() 21
 thread: 2, LongJobs.size() 21
thread: 2, NSTable size: 20
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 6
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 6
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 5, maxN[i].idx: 0, blockDimSize[i]: 5
thread: 2, i: 1, maxN[i].weit: 7, maxN[i].idx: 1, blockDimSize[i]: 7
thread: 2, i: 2, maxN[i].weit: 7, maxN[i].idx: 2, blockDimSize[i]: 7
thread: 2, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 2, i: 4, maxN[i].weit: 4, maxN[i].idx: 4, blockDimSize[i]: 4
thread: 2, i: 0, divisor[i]: 5, blockDimSize[i]: 1
thread: 2, i: 1, divisor[i]: 7, blockDimSize[i]: 1
thread: 2, i: 2, divisor[i]: 7, blockDimSize[i]: 1
thread: 2, i: 3, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 4, divisor[i]: 1, blockDimSize[i]: 4
thread: 2, largestBlockVec.elm: 0 0 0 0 4 6 6 0 0 0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 0 1 1 1 3 4 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 5 7 7 1 1 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 4 6 6 0 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 4 6 6 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 3 1 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 3 0 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 3 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 2 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 1 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 3 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 3 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 0 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 1 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 1 3 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 3 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 2 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 4 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 1 2 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 3 0 2 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 0 3 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 2 2 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 3 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 4 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 3 2 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 3 1 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 5 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 4 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 5 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 3 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 3 2 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 4 1 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 4 0 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 5 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 3 2 1 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 3 3 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 3 0 3 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 4 1 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 0 4 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 3 3 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 3 1 2 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 2 4 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 4 2 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 4 0 2 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 3 2 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 4 2 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 1 3 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 2 3 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 5 1 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 5 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 2 2 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 1 4 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 3 1 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 4 1 1 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 4 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 6 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 0 5 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 4 1 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 3 0 4 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 5 1 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 2 3 2 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 4 3 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 3 4 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 2 1 4 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 2 5 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 2 2 3 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 2 0 5 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 6 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 2 5 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 6 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 4 0 3 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 6 1 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 0 6 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 4 1 2 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 1 5 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 5 2 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 2 4 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 3 4 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 4 2 1 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 3 3 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 4 2 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 3 1 3 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 3 2 2 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 3 3 1 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 4 3 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 3 5 0 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 2 3 3 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 3 0 5 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 4 0 4 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 3 1 4 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 4 3 1 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 2 4 2 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 4 1 3 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 3 2 3 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 2 5 1 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 3 4 1 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 4 4 0 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 4 2 2 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 3 3 2 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 2 6 0 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 1 2 5 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 5 3 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 1 6 1 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 4 4 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 1 5 2 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 6 2 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 2 0 6 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 3 5 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 2 6 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 1 4 3 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 2 1 5 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 1 3 4 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 2 2 4 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 1 1 6 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 4 0 5 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 3 4 2 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 1 2 6 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 3 0 6 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 5 4 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 1 5 3 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 3 5 1 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 3 1 5 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 3 2 4 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 3 3 3 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 6 3 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 1 4 4 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 1 3 5 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 3 6 0 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 4 1 4 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 2 3 4 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 2 2 5 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 2 4 3 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 4 5 0 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 4 4 1 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 2 1 6 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 2 5 2 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 4 3 2 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 2 6 1 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 1 6 2 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 4 2 3 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 4 5 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 3 6 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 4 4 2 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 2 3 5 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 4 6 0 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 4 5 1 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 4 1 5 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 3 5 2 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 4 6 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 5 5 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 4 0 6 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 3 6 1 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 6 4 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 4 3 3 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 4 2 4 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 1 5 4 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 3 1 6 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 2 2 6 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 2 4 4 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 3 3 4 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 1 4 5 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 3 2 5 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 2 5 3 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 1 3 6 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 1 6 3 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 2 6 2 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 3 4 3 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 2 5 4 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 0 5 6 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 1 5 5 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 4 1 6 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 2 6 3 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 4 2 5 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 1 6 4 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 4 3 4 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 2 4 5 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 4 4 3 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 4 6 1 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 4 5 2 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 2 3 6 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 3 2 6 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 3 4 4 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 3 3 5 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 3 5 3 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 1 4 6 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 3 6 2 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 0 6 5 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 4 4 4 0 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 0 6 6 0 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 3 5 4 0 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 2 4 6 0 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 4 6 2 0 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 4 3 5 0 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 1 5 6 0 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 3 3 6 0 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 2 5 5 0 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 1 6 5 0 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 4 2 6 0 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 3 6 3 0 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 3 4 5 0 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 2 6 4 0 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 4 5 3 0 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 3 4 6 0 0 0 0 0 0 0 0 0 , mySum: 13
0 0 0 0 4 4 5 0 0 0 0 0 0 0 0 0 , mySum: 13
0 0 0 0 4 5 4 0 0 0 0 0 0 0 0 0 , mySum: 13
0 0 0 0 4 3 6 0 0 0 0 0 0 0 0 0 , mySum: 13
0 0 0 0 3 5 5 0 0 0 0 0 0 0 0 0 , mySum: 13
0 0 0 0 2 5 6 0 0 0 0 0 0 0 0 0 , mySum: 13
0 0 0 0 3 6 4 0 0 0 0 0 0 0 0 0 , mySum: 13
0 0 0 0 2 6 5 0 0 0 0 0 0 0 0 0 , mySum: 13
0 0 0 0 4 6 3 0 0 0 0 0 0 0 0 0 , mySum: 13
0 0 0 0 1 6 6 0 0 0 0 0 0 0 0 0 , mySum: 13
0 0 0 0 4 6 4 0 0 0 0 0 0 0 0 0 , mySum: 14
0 0 0 0 2 6 6 0 0 0 0 0 0 0 0 0 , mySum: 14
0 0 0 0 4 5 5 0 0 0 0 0 0 0 0 0 , mySum: 14
0 0 0 0 4 4 6 0 0 0 0 0 0 0 0 0 , mySum: 14
0 0 0 0 3 6 5 0 0 0 0 0 0 0 0 0 , mySum: 14
0 0 0 0 3 5 6 0 0 0 0 0 0 0 0 0 , mySum: 14
0 0 0 0 4 5 6 0 0 0 0 0 0 0 0 0 , mySum: 15
0 0 0 0 3 6 6 0 0 0 0 0 0 0 0 0 , mySum: 15
0 0 0 0 4 6 5 0 0 0 0 0 0 0 0 0 , mySum: 15
0 0 0 0 4 6 6 0 0 0 0 0 0 0 0 0 , mySum: 16
thread: 2, maxBlockLvlSize: 29
thread: 2, maxInBlockLvlSize: 3
thread: 2, AllTableSize: 2940, maxSubsetsSize: 64
thread: 1, NSTable size: 35
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 5
thread: 1, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 1, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 1, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 1, i: 3, maxN[i].weit: 5, maxN[i].idx: 3, blockDimSize[i]: 5
thread: 1, i: 4, maxN[i].weit: 4, maxN[i].idx: 4, blockDimSize[i]: 4
thread: 1, i: 5, maxN[i].weit: 4, maxN[i].idx: 5, blockDimSize[i]: 4
thread: 1, i: 6, maxN[i].weit: 6, maxN[i].idx: 6, blockDimSize[i]: 6
thread: 1, i: 0, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 2, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 3, divisor[i]: 5, blockDimSize[i]: 1
thread: 1, i: 4, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, i: 5, divisor[i]: 1, blockDimSize[i]: 4
thread: 1, i: 6, divisor[i]: 2, blockDimSize[i]: 3
thread: 1, largestBlockVec.elm: 0 0 0 0 0 0 0 0 0 0 0 0 4 1 0 1 
thread: 1, blockDimSizeComp: 0 0 0 0 0 0 0 0 0 3 3 3 1 2 4 3 
thread: 1, divisorComp: 0 0 0 0 0 0 0 0 0 1 1 1 5 2 1 2 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 4 1 0 1 
thread: 1, largestNoZeroBlockVec: 0 0 0 4 1 0 1 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 2 1 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 2 1 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 3 1 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 3 1 0 1 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 1 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 4 1 0 0 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 4 1 0 1 , mySum: 6
thread: 0, NSTable size: 33
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 5
thread: 0, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 0, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 0, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 0, i: 3, maxN[i].weit: 5, maxN[i].idx: 3, blockDimSize[i]: 5
thread: 0, i: 4, maxN[i].weit: 4, maxN[i].idx: 4, blockDimSize[i]: 4
thread: 0, i: 5, maxN[i].weit: 4, maxN[i].idx: 5, blockDimSize[i]: 4
thread: 0, i: 6, maxN[i].weit: 6, maxN[i].idx: 6, blockDimSize[i]: 6
thread: 0, i: 0, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 2, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 3, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, i: 4, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 5, divisor[i]: 1, blockDimSize[i]: 4
thread: 0, i: 6, divisor[i]: 2, blockDimSize[i]: 3
thread: 0, largestBlockVec.elm: 0 0 0 0 0 0 0 0 0 0 0 0 4 1 0 1 
thread: 0, blockDimSizeComp: 0 0 0 0 0 0 0 0 0 3 3 3 1 2 4 3 
thread: 0, divisorComp: 0 0 0 0 0 0 0 0 0 1 1 1 5 2 1 2 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 4 1 0 1 
thread: 0, largestNoZeroBlockVec: 0 0 0 4 1 0 1 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 2 1 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 2 1 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 3 1 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 3 1 0 1 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 1 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 4 1 0 0 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 4 1 0 1 , mySum: 6
thread: 1, maxBlockLvlSize: 4
thread: 1, maxInBlockLvlSize: 122
thread: 1, AllTableSize: 12960, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 4
thread: 0, maxInBlockLvlSize: 122
thread: 0, AllTableSize: 12960, maxSubsetsSize: 64
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 
copy the latest feasible solution to instance takes time: 0.148772
thread: 2, sOPT: 10
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 0 0 1 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 0 1 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 mySum: 2
thread: 0, blockNoZero[4]: 0 0 0 0 1 0 1 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 mySum: 2
thread: 0, blockNoZero[5]: 0 0 0 1 0 0 1 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 0 0 1 1 0 0 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 0 0 0 2 0 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 0 0 0 0 0 2 1 0 0 mySum: 3
thread: 0, blockNoZero[8]: 0 0 0 2 1 0 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 mySum: 3
thread: 0, blockNoZero[9]: 0 0 0 3 0 0 0 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 1 mySum: 3
thread: 0, blockNoZero[10]: 0 0 0 2 0 0 1 
thread: 0, allBlocks[11]: 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 mySum: 3
thread: 0, blockNoZero[11]: 0 0 0 1 1 0 1 
thread: 0, allBlocks[12]: 0 0 0 0 0 0 0 0 0 0 0 0 2 1 0 1 mySum: 4
thread: 0, blockNoZero[12]: 0 0 0 2 1 0 1 
thread: 0, allBlocks[13]: 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 1 mySum: 4
thread: 0, blockNoZero[13]: 0 0 0 3 0 0 1 
thread: 0, allBlocks[14]: 0 0 0 0 0 0 0 0 0 0 0 0 3 1 0 0 mySum: 4
thread: 0, blockNoZero[14]: 0 0 0 3 1 0 0 
thread: 0, allBlocks[15]: 0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 mySum: 4
thread: 0, blockNoZero[15]: 0 0 0 4 0 0 0 
thread: 0, allBlocks[16]: 0 0 0 0 0 0 0 0 0 0 0 0 3 1 0 1 mySum: 5
thread: 0, blockNoZero[16]: 0 0 0 3 1 0 1 
thread: 0, allBlocks[17]: 0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 1 mySum: 5
thread: 0, blockNoZero[17]: 0 0 0 4 0 0 1 
thread: 0, allBlocks[18]: 0 0 0 0 0 0 0 0 0 0 0 0 4 1 0 0 mySum: 5
thread: 0, blockNoZero[18]: 0 0 0 4 1 0 0 
thread: 0, allBlocks[19]: 0 0 0 0 0 0 0 0 0 0 0 0 4 1 0 1 mySum: 6
thread: 0, blockNoZero[19]: 0 0 0 4 1 0 1 
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 3e-06
thread: 0, sOPT: 11
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.301133
thread: 1, sOPT: 10
BKID: 0, LB: 31, UB: 31, OPT: 10
Dynamic Programming Runtime: 8.00817
Execution time between LB and UB is: 5
By far, all LB UB calculation runtime: 5
********************************************************
Total execution on UB and LB is: 5
OUT of Bk while loop  
UB    31
LB    31
T1    31
T2    31
OPT   10
nMachines   10
BkID	0
AllProbData.size()    2
ck :   1
AllProbData[ck].Ttable    31
ck :   0
AllProbData[ck].Ttable    32
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan32
Main Scheduling is Done
File 1-8 is Done.
******************************
Reading File...
File 1-9 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 51, LB: 32start at time: 1505276334
thread: 0, MlBk is called with LB: 32, UB: 37
thread: 3, MlBk is called with LB: 47, UB: 52
 thread: 0, LongJobs.size() 21
thread: 2, MlBk is called with LB: 42, UB: 47
 thread: 3, LongJobs.size() 16
thread: 1, MlBk is called with LB: 37, UB: 42
 thread: 2, LongJobs.size() 17
 thread: 1, LongJobs.size() 21
thread: 3, NSTable size: 18
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 6
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 7
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 7, maxN[i].idx: 0, blockDimSize[i]: 7
thread: 3, i: 1, maxN[i].weit: 4, maxN[i].idx: 1, blockDimSize[i]: 4
thread: 3, i: 2, maxN[i].weit: 8, maxN[i].idx: 2, blockDimSize[i]: 8
thread: 3, i: 0, divisor[i]: 7, blockDimSize[i]: 1
thread: 3, i: 1, divisor[i]: 2, blockDimSize[i]: 2
thread: 3, i: 2, divisor[i]: 2, blockDimSize[i]: 4
thread: 3, largestBlockVec.elm: 0 0 0 6 1 1 0 0 0 0 0 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 1 2 4 0 0 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 7 2 2 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 6 1 1 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 6 1 1 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 3 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 3 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 2 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 3 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 4 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 4 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 5 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 4 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 5 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 5 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 6 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 5 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 6 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 6 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 6 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 8
thread: 3, maxBlockLvlSize: 4
thread: 3, maxInBlockLvlSize: 2
thread: 3, AllTableSize: 224, maxSubsetsSize: 64
thread: 2, NSTable size: 24
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 5
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 7
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 2, i: 1, maxN[i].weit: 6, maxN[i].idx: 1, blockDimSize[i]: 6
thread: 2, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 2, i: 3, maxN[i].weit: 8, maxN[i].idx: 3, blockDimSize[i]: 8
thread: 2, i: 0, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, i: 1, divisor[i]: 2, blockDimSize[i]: 3
thread: 2, i: 2, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 3, divisor[i]: 2, blockDimSize[i]: 4
thread: 2, largestBlockVec.elm: 0 0 0 0 0 1 1 0 1 0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 0 0 2 3 3 4 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 0 2 2 1 2 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 1 1 0 1 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 1 1 0 1 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 1 0 0 0 0 0 0 0 , mySum: 3
thread: 2, maxBlockLvlSize: 3
thread: 2, maxInBlockLvlSize: 16
thread: 2, AllTableSize: 576, maxSubsetsSize: 64
thread: 1, NSTable size: 31
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 5
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 7
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 5, maxN[i].idx: 0, blockDimSize[i]: 5
thread: 1, i: 1, maxN[i].weit: 4, maxN[i].idx: 1, blockDimSize[i]: 4
thread: 1, i: 2, maxN[i].weit: 6, maxN[i].idx: 2, blockDimSize[i]: 6
thread: 1, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 1, i: 4, maxN[i].weit: 8, maxN[i].idx: 4, blockDimSize[i]: 8
thread: 1, i: 0, divisor[i]: 5, blockDimSize[i]: 1
thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 4
thread: 1, i: 2, divisor[i]: 2, blockDimSize[i]: 3
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 4, divisor[i]: 2, blockDimSize[i]: 4
thread: 1, largestBlockVec.elm: 0 0 0 0 4 0 1 0 1 0 0 0 0 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 0 1 4 3 3 4 0 0 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 5 1 2 1 2 0 0 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 4 0 1 0 1 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 4 0 1 0 1 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 0 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 1 0 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 3 0 0 0 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 3 0 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 3 0 1 0 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 4 0 0 0 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 4 0 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 4 0 1 0 1 0 0 0 0 0 0 0 , mySum: 6
thread: 0, NSTable size: 23
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 5
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 7
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 0, maxN[i].weit: 5, maxN[i].idx: 0, blockDimSize[i]: 5
thread: 0, i: 1, maxN[i].weit: 4, maxN[i].idx: 1, blockDimSize[i]: 4
thread: 0, i: 2, maxN[i].weit: 6, maxN[i].idx: 2, blockDimSize[i]: 6
thread: 0, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 0, i: 4, maxN[i].weit: 8, maxN[i].idx: 4, blockDimSize[i]: 8
thread: 0, i: 0, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 4
thread: 0, i: 2, divisor[i]: 2, blockDimSize[i]: 3
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 4, divisor[i]: 2, blockDimSize[i]: 4
thread: 0, largestBlockVec.elm: 0 0 0 0 4 0 1 0 1 0 0 0 0 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 0 1 4 3 3 4 0 0 0 0 0 0 0 
thread: 0, divisorComp: 0 0 0 0 5 1 2 1 2 0 0 0 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 4 0 1 0 1 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 4 0 1 0 1 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 0 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 1 0 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 3 0 0 0 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 3 0 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 3 0 1 0 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 4 0 0 0 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 4 0 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 4 0 1 0 1 0 0 0 0 0 0 0 , mySum: 6
thread: 1, maxBlockLvlSize: 4
thread: 1, maxInBlockLvlSize: 28
thread: 1, AllTableSize: 2880, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 4
thread: 0, maxInBlockLvlSize: 28
thread: 0, AllTableSize: 2880, maxSubsetsSize: 64
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 6
copy the latest feasible solution to instance takes time: 0.01099
thread: 3, sOPT: 6
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 7
copy the latest feasible solution to instance takes time: 0.02318
thread: 2, sOPT: 7
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 1 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 1 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 1 0 1 
thread: 0, allBlocks[5]: 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 1 0 0 0 1 
thread: 0, allBlocks[6]: 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 1 0 1 0 0 
thread: 0, allBlocks[7]: 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 2 0 0 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[8]: 2 0 1 0 0 
thread: 0, allBlocks[9]: 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[9]: 3 0 0 0 0 
thread: 0, allBlocks[10]: 0 0 0 0 2 0 0 0 1 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 2 0 0 0 1 
thread: 0, allBlocks[11]: 0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 1 0 1 0 1 
thread: 0, allBlocks[12]: 0 0 0 0 2 0 1 0 1 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[12]: 2 0 1 0 1 
thread: 0, allBlocks[13]: 0 0 0 0 3 0 0 0 1 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[13]: 3 0 0 0 1 
thread: 0, allBlocks[14]: 0 0 0 0 3 0 1 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[14]: 3 0 1 0 0 
thread: 0, allBlocks[15]: 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[15]: 4 0 0 0 0 
thread: 0, allBlocks[16]: 0 0 0 0 3 0 1 0 1 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[16]: 3 0 1 0 1 
thread: 0, allBlocks[17]: 0 0 0 0 4 0 0 0 1 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[17]: 4 0 0 0 1 
thread: 0, allBlocks[18]: 0 0 0 0 4 0 1 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[18]: 4 0 1 0 0 
thread: 0, allBlocks[19]: 0 0 0 0 4 0 1 0 1 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[19]: 4 0 1 0 1 
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 9
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.125903
thread: 1, sOPT: 9
copy the latest feasible solution to instance takes time: 0.117273
thread: 0, sOPT: 10
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: Thread: 13, MlBk function is done, and BkID for all processes are collected., MlBk function is done, and BkID for all processes are collected.2

, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 32, UB: 35
BKID: 0, LB: 32, UB: 35, OPT: 10
Dynamic Programming Runtime: 1.05786
Execution time between LB and UB is: 0
By far, all LB UB calculation runtime: 0
Iteration: 2, UB: 35, LB: 32start at time: 1505276334
thread: 0, MlBk is called with LB: 32, UB: 33
 thread: 0, LongJobs.size() 21
thread: thread: 2, MlBk is called with LB: 34, UB: 351, MlBk is called with LB: 33, UB: 34

 thread: 2, LongJobs.size() 21
 thread: 1, LongJobs.size() 21
thread: 2, NSTable size: 23
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 5
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 7
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 5, maxN[i].idx: 0, blockDimSize[i]: 5
thread: 2, i: 1, maxN[i].weit: 4, maxN[i].idx: 1, blockDimSize[i]: 4
thread: 2, i: 2, maxN[i].weit: 6, maxN[i].idx: 2, blockDimSize[i]: 6
thread: 2, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 2, i: 4, maxN[i].weit: 8, maxN[i].idx: 4, blockDimSize[i]: 8
thread: 2, i: 0, divisor[i]: 5, blockDimSize[i]: 1
thread: 2, i: 1, divisor[i]: 1, blockDimSize[i]: 4
thread: 2, i: 2, divisor[i]: 2, blockDimSize[i]: 3
thread: 2, i: 3, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 4, divisor[i]: 2, blockDimSize[i]: 4
thread: 2, largestBlockVec.elm: 0 0 0 0 4 0 1 0 1 0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 0 1 4 3 3 4 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 5 1 2 1 2 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 4 0 1 0 1 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 4 0 1 0 1 
thread: 2, allBlocks: 0 0 0 0 0 0 0thread:  10, NSTable size:  200 0 0
 thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 5
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 2
0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0thread:  10 , i: 0 80, alltableelemets[maxindex].elm[i]:  0 70 , mySum: 1

0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 1 0 0 0 thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
0thread: 1, i:  100, alltableelemets[maxindex].elm[i]:  0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 5, maxN[i].idx: 00, blockDimSize[i]: 5
thread: 1, i: 1, maxN[i].weit: 4, maxN[i].idx:  0 , mySum: 2
0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 01, blockDimSize[i]: 4
thread: 1, i: 2, maxN[i].weit: 6, maxN[i].idx: 2 , blockDimSize[i]: 6
0thread: 1, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 1, i: 4, maxN[i].weit: 8, maxN[i].idx: 4, blockDimSize[i]: 8
 thread: 1, i: 0 00 , divisor[i]: 05 0, blockDimSize[i]:  , mySum: 21
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2

0 thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 4
thread: 1, i: 2, divisor[i]: 2, blockDimSize[i]: 3
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 4, divisor[i]: 2, blockDimSize[i]: 4
0 0 0 thread: 21, largestBlockVec.elm:  0 01  0 0 00  0 0 00  00 0  0 , mySum: 3
0 0 0 0 3 0 0 0 0 0 0 0 04 0 0  0 , mySum: 3
0 0 0 0 2 0 0 0 10  0 01  0 0 0 0 0 0 1, mySum:  30
 0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 0 1 4 3 3 4 0 0 0 0 0 , mySum: 03 0
 0 0 0 0 2 0 1 0 1 0 0 0 0 0 00 0  , mySum: 0 40 
0 0 0 0 0 3 0 0 0 1 0 0 0 00 0  0 0 
, mySum: 4
thread: 1, divisorComp: 0 0 0 0 5 1 0 0 0 0 3 0 1 0 0 0 0 0 0 02 1 2 0 0 0  0 00  , mySum: 04
0 0 0 0 4 0 0 0 0 0 0 0 0 0  0 0 0, mySum:  4
0 0 0 0 3 0 1 0 1 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 4 0 1 0 1 0 0 00 0  00  0 0, mySum: 5
 0 0 0 0 4 0 0 0 1 0 0 0 0 00 0 0  
, mySum: 5
0 0 0 0 4 0 1 0 0 0 0 0 0 thread: 1, largestNoZeroBlockVec: 4 0 1 0 1 
0 0 0 , mySum: 5
0 0 0 0 4 0 1 0 1 0 0 0 0 0 0 0 , mySum: 6
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 0 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 1 0 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 3 0 0 0 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 3 0 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 3 0 1 0 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 4 0 0 0 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 4 0 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 4 0 1 0 1 0 0 0 0 0 0 0 , mySum: 6
thread: 0, NSTable size: 20
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 5
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 7
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 0, maxN[i].weit: 5, maxN[i].idx: 0, blockDimSize[i]: 5
thread: 0, i: 1, maxN[i].weit: 4, maxN[i].idx: 1, blockDimSize[i]: 4
thread: 0, i: 2, maxN[i].weit: 6, maxN[i].idx: 2, blockDimSize[i]: 6
thread: 0, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 0, i: 4, maxN[i].weit: 8, maxN[i].idx: 4, blockDimSize[i]: 8
thread: 0, i: 0, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 4
thread: 0, i: 2, divisor[i]: 2, blockDimSize[i]: 3
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 4, divisor[i]: 2, blockDimSize[i]: 4
thread: 0, largestBlockVec.elm: 0 0 0 0 4 0 1 0 1 0 0 0 0 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 0 1 4 3 3 4 0 0 0 0 0 0 0 
thread: 0, divisorComp: 0 0 0 0 5 1 2 1 2 0 0 0 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 4 0 1 0 1 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 4 0 1 0 1 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 0 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 1 0 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 3 0 0 0 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 3 0 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 3 0 1 0 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 4 0 0 0 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 4 0 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 4 0 1 0 1 0 0 0 0 0 0 0 , mySum: 6
thread: 2, maxBlockLvlSize: 4
thread: 2, maxInBlockLvlSize: 28
thread: 2, AllTableSize: 2880, maxSubsetsSize: 64
thread: 1, maxBlockLvlSize: 4
thread: 1, maxInBlockLvlSize: 28
thread: 1, AllTableSize: 2880, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 4
thread: 0, maxInBlockLvlSize: 28
thread: 0, AllTableSize: 2880, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 1 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 1 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 1 0 1 
thread: 0, allBlocks[5]: 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 1 0 0 0 1 
thread: 0, allBlocks[6]: 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 1 0 1 0 0 
thread: 0, allBlocks[7]: 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 2 0 0 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[8]: 2 0 1 0 0 
thread: 0, allBlocks[9]: 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[9]: 3 0 0 0 0 
thread: 0, allBlocks[10]: 0 0 0 0 2 0 0 0 1 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 2 0 0 0 1 
thread: 0, allBlocks[11]: 0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 1 0 1 0 1 
thread: 0, allBlocks[12]: 0 0 0 0 2 0 1 0 1 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[12]: 2 0 1 0 1 
thread: 0, allBlocks[13]: 0 0 0 0 3 0 0 0 1 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[13]: 3 0 0 0 1 
thread: 0, allBlocks[14]: 0 0 0 0 3 0 1 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[14]: 3 0 1 0 0 
thread: 0, allBlocks[15]: 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[15]: 4 0 0 0 0 
thread: 0, allBlocks[16]: 0 0 0 0 3 0 1 0 1 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[16]: 3 0 1 0 1 
thread: 0, allBlocks[17]: 0 0 0 0 4 0 0 0 1 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[17]: 4 0 0 0 1 
thread: 0, allBlocks[18]: 0 0 0 0 4 0 1 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[18]: 4 0 1 0 0 
thread: 0, allBlocks[19]: 0 0 0 0 4 0 1 0 1 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[19]: 4 0 1 0 1 
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.157832
thread: 1, sOPT: 10
copy the latest feasible solution to instance takes time: 0.198113
thread: 2, sOPT: 10
copy the latest feasible solution to instance takes time: 0.197036
thread: 0, sOPT: 10
BKID: 0, LB: 32, UB: 32, OPT: 10
Dynamic Programming Runtime: 1.4482
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 1
********************************************************
Total execution on UB and LB is: 1
OUT of Bk while loop  
UB    32
LB    32
T1    32
T2    32
OPT   10
nMachines   10
BkID	0
AllProbData.size()    2
ck :   1
AllProbData[ck].Ttable    32
ck :   0
AllProbData[ck].Ttable    34
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan34
Main Scheduling is Done
File 1-9 is Done.
******************************
Reading File...
File 1-10 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 51, LB: 32start at time: 1505276335
thread: 0, MlBk is called with LB: 32, UB: 37
thread: 3, MlBk is called with LB: 47, UB: 52
thread: 2, MlBk is called with LB: 42, UB: thread: 47
1, MlBk is called with LB:  thread: 3, LongJobs.size() 18
 thread: 2, LongJobs.size() 18
37, UB: 42
 thread: 0, LongJobs.size() 21
 thread: 1, LongJobs.size() 21
thread: 3, NSTable size: 18
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 4
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 11
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 5, maxN[i].idx: 0, blockDimSize[i]: 5
thread: 3, i: 1, maxN[i].weit: 12, maxN[i].idx: 1, blockDimSize[i]: 12
thread: 3, i: 2, maxN[i].weit: 4, maxN[i].idx: 2, blockDimSize[i]: 4
thread: 3, i: 0, divisor[i]: 5, blockDimSize[i]: 1
thread: 3, i: 1, divisor[i]: 3, blockDimSize[i]: 4
thread: 3, i: 2, divisor[i]: 2, blockDimSize[i]: 2
thread: 3, largestBlockVec.elm: 0 0 0 4 2 1 0 0 0 0 0 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 1 4 2 0 0 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 5 3 2 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 4 2 1 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 4 2 1 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 3 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 3 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 2 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 2 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 1 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 2 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 3 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 3 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 4 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 4 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 3 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 4 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 4 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 4 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 7
thread: 3, maxBlockLvlSize: 6
thread: 3, maxInBlockLvlSize: 2
thread: 3, AllTableSize: 240, maxSubsetsSize: 64
thread: 2, NSTable size: 23
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 7
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 6
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 2, i: 1, maxN[i].weit: 8, maxN[i].idx: 1, blockDimSize[i]: 8
thread: 2, i: 2, maxN[i].weit: 7, maxN[i].idx: 2, blockDimSize[i]: 7
thread: 2, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 2, i: 0, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 1, divisor[i]: 2, blockDimSize[i]: 4
thread: 2, i: 2, divisor[i]: 7, blockDimSize[i]: 1
thread: 2, i: 3, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, largestBlockVec.elm: 0 0 0 0 0 0 1 6 1 0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 0 0 3 4 1 2 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 0 1 2 7 2 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 1 6 1 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 1 6 1 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 2 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 3 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 4 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 3 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 5 1 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 1 5 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 6 1 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 1 5 1 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 1 6 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 1 6 1 0 0 0 0 0 0 0 , mySum: 8
thread: 2, maxBlockLvlSize: 4
thread: 2, maxInBlockLvlSize: 6
thread: 2, AllTableSize: 672, maxSubsetsSize: 64
thread: 1, NSTable size: 30
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 7
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 6
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 1, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 1, i: 2, maxN[i].weit: 8, maxN[i].idx: 2, blockDimSize[i]: 8
thread: 1, i: 3, maxN[i].weit: 7, maxN[i].idx: 3, blockDimSize[i]: 7
thread: 1, i: 4, maxN[i].weit: 4, maxN[i].idx: 4, blockDimSize[i]: 4
thread: 1, i: 0, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 2, divisor[i]: 2, blockDimSize[i]: 4
thread: 1, i: 3, divisor[i]: 7, blockDimSize[i]: 1
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 4
thread: 1, largestBlockVec.elm: 0 0 0 0 1 0 1 6 0 0 0 0 0 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 0 2 3 4 1 4 0 0 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 2 1 2 7 1 0 0 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 1 0 1 6 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 1 0 1 6 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 1 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 3 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 1 3 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 4 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 5 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 1 5 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 0 1 4 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 0 0 6 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 1 6 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 0 1 5 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 0 1 6 0 0 0 0 0 0 0 0 , mySum: 8
thread: 0, NSTable size: 23
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 7
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 6
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 0, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 0, i: 2, maxN[i].weit: 8, maxN[i].idx: 2, blockDimSize[i]: 8
thread: 0, i: 3, maxN[i].weit: 7, maxN[i].idx: 3, blockDimSize[i]: 7
thread: 0, i: 4, maxN[i].weit: 4, maxN[i].idx: 4, blockDimSize[i]: 4
thread: 0, i: 0, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 2, divisor[i]: 2, blockDimSize[i]: 4
thread: 0, i: 3, divisor[i]: 7, blockDimSize[i]: 1
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 4
thread: 0, largestBlockVec.elm: 0 0 0 0 1 0 1 6 0 0 0 0 0 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 0 2 3 4 1 4 0 0 0 0 0 0 0 
thread: 0, divisorComp: 0 0 0 0 2 1 2 7 1 0 0 0 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 1 0 1 6 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 1 0 1 6 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 1 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 3 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 1 3 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 4 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 5 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 1 5 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 0 1 4 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 0 0 6 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 1 6 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 0 1 5 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 0 1 6 0 0 0 0 0 0 0 0 , mySum: 8
thread: 1, maxBlockLvlSize: 4
thread: 1, maxInBlockLvlSize: 19
thread: 1, AllTableSize: 2688, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 4
thread: 0, maxInBlockLvlSize: 19
thread: 0, AllTableSize: 2688, maxSubsetsSize: 64
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 6
copy the latest feasible solution to instance takes time: 0.014871
thread: 3, sOPT: 6
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 1 0 
thread: 0, allBlocks[2]: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 1 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 1 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 1 1 0 
thread: 0, allBlocks[5]: 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 1 0 1 0 0 
Thread: 2, gpu_BlockDP is done.
thread: 0, allBlocks[6]: 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 0 0 2 0 
thread: 0, allBlocks[7]: 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 1 0 0 1 0 
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 7
copy the latest feasible solution to instance takes time: 0.034983
thread: 2, sOPT: 7
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[8]: 0 0 0 3 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[9]: 0 0 1 2 0 
thread: 0, allBlocks[10]: 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 1 0 1 1 0 
thread: 0, allBlocks[11]: 0 0 0 0 1 0 0 2 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 1 0 0 2 0 
thread: 0, allBlocks[12]: 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[12]: 0 0 0 4 0 
thread: 0, allBlocks[13]: 0 0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[13]: 0 0 1 3 0 
thread: 0, allBlocks[14]: 0 0 0 0 1 0 1 2 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[14]: 1 0 1 2 0 
thread: 0, allBlocks[15]: 0 0 0 0 1 0 0 3 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[15]: 1 0 0 3 0 
thread: 0, allBlocks[16]: 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[16]: 0 0 0 5 0 
thread: 0, allBlocks[17]: 0 0 0 0 1 0 1 3 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[17]: 1 0 1 3 0 
thread: 0, allBlocks[18]: 0 0 0 0 1 0 0 4 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[18]: 1 0 0 4 0 
thread: 0, allBlocks[19]: 0 0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[19]: 0 0 1 4 0 
thread: 0, allBlocks[20]: 0 0 0 0 1 0 0 5 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[20]: 1 0 0 5 0 
thread: 0, allBlocks[21]: 0 0 0 0 0 0 1 5 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[21]: 0 0 1 5 0 
thread: 0, allBlocks[22]: 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[22]: 0 0 0 6 0 
thread: 0, allBlocks[23]: 0 0 0 0 1 0 1 4 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[23]: 1 0 1 4 0 
thread: 0, allBlocks[24]: 0 0 0 0 1 0 0 6 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[24]: 1 0 0 6 0 
thread: 0, allBlocks[25]: 0 0 0 0 0 0 1 6 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[25]: 0 0 1 6 0 
thread: 0, allBlocks[26]: 0 0 0 0 1 0 1 5 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[26]: 1 0 1 5 0 
thread: 0, allBlocks[27]: 0 0 0 0 1 0 1 6 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[27]: 1 0 1 6 0 
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.140222
thread: 0, sOPT: 10
copy the latest feasible solution to instance takes time: 0.105712
thread: 1, sOPT: 9
Thread: 1, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 2, MlBk function is done, and BkID for all processes are collected.
0, MlBk function is done, and BkID for all processes are collected.
Thread: 3, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 32, UB: 35
BKID: 0, LB: 32, UB: 35, OPT: 10
Dynamic Programming Runtime: 0.944109
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 1
Iteration: 2, UB: 35, LB: 32start at time: 1505276336
thread: 0, MlBk is called with LB: 32, UB: 33
 thread: 0, LongJobs.size() 21
thread: 2, MlBk is called with LB: thread: 34, UB: 351, MlBk is called with LB: 
33, UB: 34
 thread: 2, LongJobs.size() 21
 thread: 1, LongJobs.size() 21
thread: 2, NSTable size: 23
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 7
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 6
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 2, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 2, i: 2, maxN[i].weit: 8, maxN[i].idx: 2, blockDimSize[i]: 8
thread: 2, i: 3, maxN[i].weit: 7, maxN[i].idx: 3, blockDimSize[i]: 7
thread: 2, i: 4, maxN[i].weit: 4, maxN[i].idx: 4, blockDimSize[i]: 4
thread: 2, i: 0, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, i: 1, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 2, divisor[i]: 2, blockDimSize[i]: 4
thread: 2, i: 3, divisor[i]: 7, blockDimSize[i]: 1
thread: 2, i: 4, divisor[i]: 1, blockDimSize[i]: 4
thread: 2, largestBlockVec.elm: 0 0 0 0 1 0 1 6 0 0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 0 2 3 4 1 4 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 2 1 2 7 1 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 1 0 1 6 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 1 0 1 6 0 
thread: 1, NSTable size: 20
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 7
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 6
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: thread: 21, allBlocks: , i: 09 , alltableelemets[maxindex].elm[i]: 0 0 00 0 0
 thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
0thread:  10, i: 12 , alltableelemets[maxindex].elm[i]: 00
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread:  10 , i: 0 140, alltableelemets[maxindex].elm[i]:  00 0
 thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0thread:  10 , i: 0 , mySum: 01
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 1, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 1, i: 2, maxN[i].weit: 8, maxN[i].idx: 2, blockDimSize[i]: 8
thread: 1, i: 3, maxN[i].weit: 7, maxN[i].idx: 3, blockDimSize[i]: 7
thread:  1 0 0 0 0 0 10, i:  40 0, maxN[i].weit:  40, maxN[i].idx:  4, blockDimSize[i]: , mySum: 41

0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0thread: 1, i: 0 0 0 0 0 0 0 0 , mySum: 2
, divisor[i]: 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 2 0 0 0 02 0 0 0 0, blockDimSize[i]:  , mySum: 3
0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 2 0 0 0 0 02
thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 3
thread:  1, i: 2, divisor[i]: 2, blockDimSize[i]: 4
0thread: 1, i: 3, divisor[i]: 7, blockDimSize[i]: 1
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 4
thread: 1, largestBlockVec.elm: 0 0 0 0 1 0 1 6 0 0 0 0 0 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 0 2 3 4 1 4 0 0 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 2 1 2 7 1 0 0 0 0 0 0 0 
 thread: 01 0, largestBlockVec:  0, mySum:  30 0 0 
10 0 0 0 0 0 0 4 0 0  0 0 0 01  60  00  00 0  0, mySum:  4
0 0 0 0 0 0 0 1 3 0 00  00  0 00 
 thread: 1, largestNoZeroBlockVec: 1 0 1 6 0 
0 0 0 , mySum: 4
0 0 0 0 1 0 1 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 3 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 1 3 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 4 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 5 0 0 0 0 0 0 thread: 0 01 , allBlocks: , mySum: 06 0
 0 0 0 0 0 0 0 1 5 0 0 0 00 0  0 0 00  , mySum: 0 0 6
00 0 0 0 0 0 0 6 0 0 0 0  0 0 0 0 0 0 0 0 , mySum: 00 0
 0 0 0 0 0 0 0 1 0 0 00 0  00  , mySum: 6
00 0 0 0 1 0 1 4 0 0 0 0 0  0 00  00  , mySum: , mySum: 16
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 1 0 0 6 0 0 00 0  0, mySum:  10
 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 00  , mySum: 01 , mySum: 
7
0 0 0 0 0 0 1 1 0 0 0 0 0 00 0 0 0 0 0 1 6 0 0  0 0 00 0  00 , mySum:  20
0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 0 1 5 0 0 0 0  0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 00 0  0 0, mySum: 2
 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 0 1 6 0 0 0 0 0 0 0 0 , mySum: 08
 0 0 , mySum: 2
0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 1 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 3 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 1 3 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 4 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 5 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 1 5 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 0 1 4 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 0 0 6 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 1 6 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 0 1 5 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 0 1 6 0 0 0 0 0 0 0 0 , mySum: 8
thread: 0, NSTable size: 20
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 7
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 6
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 0, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 0, i: 2, maxN[i].weit: 8, maxN[i].idx: 2, blockDimSize[i]: 8
thread: 0, i: 3, maxN[i].weit: 7, maxN[i].idx: 3, blockDimSize[i]: 7
thread: 0, i: 4, maxN[i].weit: 4, maxN[i].idx: 4, blockDimSize[i]: 4
thread: 0, i: 0, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 2, divisor[i]: 2, blockDimSize[i]: 4
thread: 0, i: 3, divisor[i]: 7, blockDimSize[i]: 1
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 4
thread: 0, largestBlockVec.elm: 0 0 0 0 1 0 1 6 0 0 0 0 0 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 0 2 3 4 1 4 0 0 0 0 0 0 0 
thread: 0, divisorComp: 0 0 0 0 2 1 2 7 1 0 0 0 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 1 0 1 6 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 1 0 1 6 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 1 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 3 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 1 3 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 4 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 5 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 1 5 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 0 1 4 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 0 0 6 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 1 6 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 0 1 5 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 0 1 6 0 0 0 0 0 0 0 0 , mySum: 8
thread: 2, maxBlockLvlSize: 4
thread: 2, maxInBlockLvlSize: 19
thread: 2, AllTableSize: 2688, maxSubsetsSize: 64
thread: 1, maxBlockLvlSize: 4
thread: 1, maxInBlockLvlSize: 19
thread: 1, AllTableSize: 2688, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 4
thread: 0, maxInBlockLvlSize: 19
thread: 0, AllTableSize: 2688, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 1 0 
thread: 0, allBlocks[2]: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 1 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 1 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 1 1 0 
thread: 0, allBlocks[5]: 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 1 0 1 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 0 0 2 0 
thread: 0, allBlocks[7]: 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 1 0 0 1 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[8]: 0 0 0 3 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[9]: 0 0 1 2 0 
thread: 0, allBlocks[10]: 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 1 0 1 1 0 
thread: 0, allBlocks[11]: 0 0 0 0 1 0 0 2 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 1 0 0 2 0 
thread: 0, allBlocks[12]: 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[12]: 0 0 0 4 0 
thread: 0, allBlocks[13]: 0 0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[13]: 0 0 1 3 0 
thread: 0, allBlocks[14]: 0 0 0 0 1 0 1 2 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[14]: 1 0 1 2 0 
thread: 0, allBlocks[15]: 0 0 0 0 1 0 0 3 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[15]: 1 0 0 3 0 
thread: 0, allBlocks[16]: 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[16]: 0 0 0 5 0 
thread: 0, allBlocks[17]: 0 0 0 0 1 0 1 3 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[17]: 1 0 1 3 0 
thread: 0, allBlocks[18]: 0 0 0 0 1 0 0 4 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[18]: 1 0 0 4 0 
thread: 0, allBlocks[19]: 0 0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[19]: 0 0 1 4 0 
thread: 0, allBlocks[20]: 0 0 0 0 1 0 0 5 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[20]: 1 0 0 5 0 
thread: 0, allBlocks[21]: 0 0 0 0 0 0 1 5 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[21]: 0 0 1 5 0 
thread: 0, allBlocks[22]: 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[22]: 0 0 0 6 0 
thread: 0, allBlocks[23]: 0 0 0 0 1 0 1 4 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[23]: 1 0 1 4 0 
thread: 0, allBlocks[24]: 0 0 0 0 1 0 0 6 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[24]: 1 0 0 6 0 
thread: 0, allBlocks[25]: 0 0 0 0 0 0 1 6 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[25]: 0 0 1 6 0 
thread: 0, allBlocks[26]: 0 0 0 0 1 0 1 5 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[26]: 1 0 1 5 0 
thread: 0, allBlocks[27]: 0 0 0 0 1 0 1 6 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[27]: 1 0 1 6 0 
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.246402
thread: 0, sOPT: 10
copy the latest feasible solution to instance takes time: 0.138512
thread: 1, sOPT: 10
copy the latest feasible solution to instance takes time: 0.166628
thread: 2, sOPT: 10
BKID: 0, LB: 32, UB: 32, OPT: 10
Dynamic Programming Runtime: 1.21202
Execution time between LB and UB is: 0
By far, all LB UB calculation runtime: 1
********************************************************
Total execution on UB and LB is: 1
OUT of Bk while loop  
UB    32
LB    32
T1    32
T2    32
OPT   10
nMachines   10
BkID	0
AllProbData.size()    2
ck :   1
AllProbData[ck].Ttable    32
ck :   0
AllProbData[ck].Ttable    34
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan34
Main Scheduling is Done
File 1-10 is Done.
******************************
Reading File...
File 1-11 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 48, LB: 29start at time: 1505276336
thread: 0, MlBk is called with LB: 29, UB: 34
thread: 3, MlBk is called with LB: 44, UB: 49
 thread: 0, LongJobs.size() 21
thread: 1, MlBk is called with LB: 34, UB: 39
 thread: 3, LongJobs.size() 16
thread: 2, MlBk is called with LB: 39, UB: 44
 thread: 1, LongJobs.size() 21
 thread: 2, LongJobs.size() 18
thread: 3, NSTable size: 27
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 6
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 4
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 4
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 7, maxN[i].idx: 0, blockDimSize[i]: 7
thread: 3, i: 1, maxN[i].weit: 5, maxN[i].idx: 1, blockDimSize[i]: 5
thread: 3, i: 2, maxN[i].weit: 5, maxN[i].idx: 2, blockDimSize[i]: 5
thread: 3, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 3, i: 0, divisor[i]: 7, blockDimSize[i]: 1
thread: 3, i: 1, divisor[i]: 5, blockDimSize[i]: 1
thread: 3, i: 2, divisor[i]: 5, blockDimSize[i]: 1
thread: 3, i: 3, divisor[i]: 1, blockDimSize[i]: 3
thread: 3, largestBlockVec.elm: 0 0 0 0 0 6 4 4 0 0 0 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 0 0 1 1 1 3 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 0 0 7 5 5 1 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 6 4 4 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 6 4 4 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 3 0 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 2 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 1 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 0 3 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 3 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 3 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 0 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 1 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 2 2 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 5 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 0 3 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 4 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 4 0 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 1 2 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 3 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 3 0 2 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 3 2 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 1 3 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 2 3 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 0 4 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 3 1 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 2 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 4 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 3 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 3 2 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 3 1 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 4 1 1 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 4 2 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 2 4 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 4 0 2 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 3 0 3 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 3 1 2 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 3 3 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 3 2 1 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 2 2 2 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 6 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 1 4 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 2 3 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 4 2 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 3 2 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 5 1 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 3 3 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 5 0 1 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 2 0 4 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 2 1 3 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 2 4 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 6 1 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 3 3 1 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 4 2 1 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 6 0 1 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 3 2 2 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 3 4 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 5 2 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 5 1 1 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 5 0 2 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 4 0 3 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 4 1 2 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 4 3 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 4 3 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 4 2 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 3 1 3 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 3 3 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 2 3 2 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 3 0 4 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 2 4 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 2 2 3 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 3 4 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 2 4 1 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 2 1 4 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 5 3 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 2 2 4 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 4 2 2 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 0 4 4 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 4 3 1 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 1 3 4 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 4 4 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 5 2 1 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 5 1 2 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 1 4 3 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 5 0 3 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 2 3 3 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 6 0 2 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 4 0 4 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 4 1 3 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 2 4 2 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 3 2 3 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 3 1 4 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 6 1 1 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 3 3 2 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 6 2 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 3 4 1 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 3 2 4 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 6 3 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 6 2 1 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 5 1 3 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 6 1 2 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 5 2 2 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 5 3 1 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 6 0 3 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 5 4 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 1 4 4 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 3 3 3 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 3 4 2 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 2 4 3 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 2 3 4 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 4 1 4 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 4 2 3 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 4 3 2 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 4 4 1 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 5 0 4 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 6 1 3 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 3 4 3 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 3 3 4 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 2 4 4 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 6 0 4 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 6 2 2 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 5 1 4 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 4 4 2 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 6 3 1 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 5 4 1 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 4 2 4 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 6 4 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 5 3 2 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 4 3 3 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 5 2 3 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 6 2 3 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 0 6 3 2 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 0 6 4 1 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 0 5 2 4 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 0 6 1 4 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 0 3 4 4 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 0 4 4 3 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 0 5 4 2 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 0 5 3 3 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 0 4 3 4 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 0 4 4 4 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 0 6 2 4 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 0 5 4 3 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 0 5 3 4 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 0 6 3 3 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 0 6 4 2 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 0 5 4 4 0 0 0 0 0 0 0 0 , mySum: 13
0 0 0 0 0 6 3 4 0 0 0 0 0 0 0 0 , mySum: 13
0 0 0 0 0 6 4 3 0 0 0 0 0 0 0 0 , mySum: 13
0 0 0 0 0 6 4 4 0 0 0 0 0 0 0 0 , mySum: 14
thread: 3, maxBlockLvlSize: 23
thread: 3, maxInBlockLvlSize: 1
thread: 3, AllTableSize: 525, maxSubsetsSize: 64
thread: 2, NSTable size: 34
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 6
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 2, i: 1, maxN[i].weit: 7, maxN[i].idx: 1, blockDimSize[i]: 7
thread: 2, i: 2, maxN[i].weit: 5, maxN[i].idx: 2, blockDimSize[i]: 5
thread: 2, i: 3, maxN[i].weit: 5, maxN[i].idx: 3, blockDimSize[i]: 5
thread: 2, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 2, i: 0, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 1, divisor[i]: 7, blockDimSize[i]: 1
thread: 2, i: 2, divisor[i]: 5, blockDimSize[i]: 1
thread: 2, i: 3, divisor[i]: 5, blockDimSize[i]: 1
thread: 2, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, largestBlockVec.elm: 0 0 0 0 0 6 4 4 0 0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 0 3 1 1 1 3 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 1 7 5 5 1 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 6 4 4 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 6 4 4 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 3 0 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 2 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 1 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 0 3 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 3 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 3 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 0 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 1 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 2 2 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 5 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 0 3 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 4 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 4 0 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 1 2 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 3 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 3 0 2 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 3 2 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 1 3 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 2 3 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 0 4 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 3 1 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 2 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 4 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 3 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 3 2 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 3 1 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 4 1 1 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 4 2 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 2 4 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 4 0 2 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 3 0 3 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 3 1 2 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 3 3 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 3 2 1 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 2 2 2 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 6 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 1 4 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 2 3 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 4 2 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 3 2 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 5 1 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 3 3 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 5 0 1 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 2 0 4 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 2 1 3 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 2 4 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 6 1 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 3 3 1 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 4 2 1 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 6 0 1 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 3 2 2 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 3 4 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 5 2 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 5 1 1 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 5 0 2 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 4 0 3 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 4 1 2 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 4 3 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 4 3 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 4 2 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 3 1 3 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 3 3 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 2 3 2 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 3 0 4 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 2 4 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 2 2 3 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 3 4 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 2 4 1 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 2 1 4 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 5 3 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 2 2 4 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 4 2 2 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 0 4 4 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 4 3 1 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 1 3 4 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 4 4 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 5 2 1 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 5 1 2 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 1 4 3 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 5 0 3 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 2 3 3 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 6 0 2 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 4 0 4 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 4 1 3 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 2 4 2 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 3 2 3 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 3 1 4 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 6 1 1 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 3 3 2 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 6 2 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 3 4 1 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 3 2 4 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 6 3 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 6 2 1 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 5 1 3 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 6 1 2 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 5 2 2 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 5 3 1 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 6 0 3 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 5 4 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 1 4 4 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 3 3 3 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 3 4 2 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 2 4 3 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 2 3 4 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 4 1 4 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 4 2 3 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 4 3 2 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 4 4 1 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 5 0 4 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 6 1 3 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 3 4 3 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 3 3 4 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 2 4 4 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 6 0 4 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 6 2 2 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 5 1 4 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 4 4 2 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 6 3 1 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 5 4 1 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 4 2 4 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 6 4 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 5 3 2 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 4 3 3 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 5 2 3 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 6 2 3 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 0 6 3 2 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 0 6 4 1 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 0 5 2 4 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 0 6 1 4 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 0 3 4 4 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 0 4 4 3 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 0 5 4 2 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 0 5 3 3 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 0 4 3 4 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 0 4 4 4 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 0 6 2 4 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 0 5 4 3 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 0 5 3 4 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 0 6 3 3 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 0 6 4 2 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 0 5 4 4 0 0 0 0 0 0 0 0 , mySum: 13
0 0 0 0 0 6 3 4 0 0 0 0 0 0 0 0 , mySum: 13
0 0 0 0 0 6 4 3 0 0 0 0 0 0 0 0 , mySum: 13
0 0 0 0 0 6 4 4 0 0 0 0 0 0 0 0 , mySum: 14
thread: 2, maxBlockLvlSize: 23
thread: 2, maxInBlockLvlSize: 3
thread: 2, AllTableSize: 1575, maxSubsetsSize: 64
thread: 1, NSTable size: 27
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 5
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 6
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 6, maxN[i].idx: 0, blockDimSize[i]: 6
thread: 1, i: 1, maxN[i].weit: 7, maxN[i].idx: 1, blockDimSize[i]: 7
thread: 1, i: 2, maxN[i].weit: 5, maxN[i].idx: 2, blockDimSize[i]: 5
thread: 1, i: 3, maxN[i].weit: 5, maxN[i].idx: 3, blockDimSize[i]: 5
thread: 1, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 1, i: 0, divisor[i]: 2, blockDimSize[i]: 3
thread: 1, i: 1, divisor[i]: 7, blockDimSize[i]: 1
thread: 1, i: 2, divisor[i]: 5, blockDimSize[i]: 1
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 5
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, largestBlockVec.elm: 0 0 0 0 1 6 4 0 0 0 0 0 0 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 0 3 1 1 5 3 0 0 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 2 7 5 1 1 0 0 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 1 6 4 0 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 1 6 4 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 3 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 3 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 2 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 3 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 1 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 1 3 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 4 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 3 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 2 2 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 3 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 4 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 3 2 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 4 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 5 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 1 4 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 2 4 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 4 1 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 3 2 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 3 3 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 2 3 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 4 2 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 5 1 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 6 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 5 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 4 2 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 4 3 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 5 2 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 3 4 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 2 4 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 6 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 6 1 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 3 3 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 5 1 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 5 2 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 1 4 3 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 1 3 4 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 4 4 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 5 3 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 1 6 1 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 6 2 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 1 6 2 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 6 3 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 1 5 3 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 1 4 4 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 5 4 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 1 5 4 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 6 4 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 1 6 3 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 1 6 4 0 0 0 0 0 0 0 0 0 , mySum: 11
thread: 1, maxBlockLvlSize: 10
thread: 1, maxInBlockLvlSize: 9
thread: 1, AllTableSize: 3150, maxSubsetsSize: 64
thread: 0, NSTable size: 36
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 6
thread: 0, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 0, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 0, i: 2, maxN[i].weit: 5, maxN[i].idx: 2, blockDimSize[i]: 5
thread: 0, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 0, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 0, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 0, i: 6, maxN[i].weit: 7, maxN[i].idx: 6, blockDimSize[i]: 7
thread: 0, i: 0, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 2, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 5, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 6, divisor[i]: 7, blockDimSize[i]: 1
thread: 0, largestBlockVec.elm: 0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 6 
thread: 0, blockDimSizeComp: 0 0 0 0 0 0 0 0 0 2 3 1 3 3 3 1 
thread: 0, divisorComp: 0 0 0 0 0 0 0 0 0 2 1 5 1 1 1 7 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 6 
thread: 0, largestNoZeroBlockVec: 1 0 4 0 0 0 6 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 2 , mySum: 3
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 2 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 1 0 2 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 1 0 2 0 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 3 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 2 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 2 , mySum: 4
0 0 0 0 0 0 0 0 0 1 0 3 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 3 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 , mySum: 4
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 3 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5 , mySum: 5
0 0 0 0 0 0 0 0 0 1 0 2 0 0 0 2 , mySum: 5
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 4 , mySum: 5
0 0 0 0 0 0 0 0 0 1 0 3 0 0 0 1 , mySum: 5
0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 4 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 3 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 1 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 2 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 5 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 4 , mySum: 6
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 4 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 3 , mySum: 6
0 0 0 0 0 0 0 0 0 1 0 2 0 0 0 3 , mySum: 6
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 5 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6 , mySum: 6
0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 1 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 2 , mySum: 6
0 0 0 0 0 0 0 0 0 1 0 3 0 0 0 2 , mySum: 6
0 0 0 0 0 0 0 0 0 1 0 2 0 0 0 4 , mySum: 7
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 6 , mySum: 7
0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 3 , mySum: 7
0 0 0 0 0 0 0 0 0 1 0 3 0 0 0 3 , mySum: 7
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 5 , mySum: 7
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 5 , mySum: 7
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 6 , mySum: 7
0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 4 , mySum: 7
0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 2 , mySum: 7
0 0 0 0 0 0 0 0 0 1 0 3 0 0 0 4 , mySum: 8
0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 3 , mySum: 8
0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 4 , mySum: 8
0 0 0 0 0 0 0 0 0 1 0 2 0 0 0 5 , mySum: 8
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 6 , mySum: 8
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 6 , mySum: 8
0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 5 , mySum: 8
0 0 0 0 0 0 0 0 0 1 0 2 0 0 0 6 , mySum: 9
0 0 0 0 0 0 0 0 0 1 0 3 0 0 0 5 , mySum: 9
0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 6 , mySum: 9
0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 5 , mySum: 9
0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 4 , mySum: 9
0 0 0 0 0 0 0 0 0 1 0 3 0 0 0 6 , mySum: 10
0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 6 , mySum: 10
0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 5 , mySum: 10
0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 6 , mySum: 11
thread: 0, maxBlockLvlSize: 10
thread: 0, maxInBlockLvlSize: 35
thread: 0, AllTableSize: 11340, maxSubsetsSize: 64
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 6
copy the latest feasible solution to instance takes time: 0.034625
thread: 3, sOPT: 6
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 7
copy the latest feasible solution to instance takes time: 0.087098
thread: 2, sOPT: 7
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 1 0 0 0 0 0 0 
Thread: 1, gpu_BlockDP is done.
thread: 0, allBlocks[3]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 1 0 0 0 0 
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 8
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 mySum: 2
thread: 0, blockNoZero[4]: 0 0 0 0 0 0 2 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[5]: 1 0 0 0 0 0 1 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 mySum: 2
thread: 0, blockNoZero[6]: 0 0 1 0 0 0 1 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 1 0 1 0 0 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 mySum: 2
thread: 0, blockNoZero[8]: 0 0 2 0 0 0 0 
copy the latest feasible solution to instance takes time: 0.120596
thread: 1, sOPT: 8
thread: 0, allBlocks[9]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 mySum: 3
thread: 0, blockNoZero[9]: 0 0 0 0 0 0 3 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 2 mySum: 3
thread: 0, blockNoZero[10]: 0 0 1 0 0 0 2 
thread: 0, allBlocks[11]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 2 mySum: 3
thread: 0, blockNoZero[11]: 1 0 0 0 0 0 2 
thread: 0, allBlocks[12]: 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 1 mySum: 3
thread: 0, blockNoZero[12]: 0 0 2 0 0 0 1 
thread: 0, allBlocks[13]: 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 mySum: 3
thread: 0, blockNoZero[13]: 1 0 1 0 0 0 1 
thread: 0, allBlocks[14]: 0 0 0 0 0 0 0 0 0 1 0 2 0 0 0 0 mySum: 3
thread: 0, blockNoZero[14]: 1 0 2 0 0 0 0 
thread: 0, allBlocks[15]: 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 mySum: 3
thread: 0, blockNoZero[15]: 0 0 3 0 0 0 0 
thread: 0, allBlocks[16]: 0 0 0 0 0 0 0 0 0 1 0 2 0 0 0 1 mySum: 4
thread: 0, blockNoZero[16]: 1 0 2 0 0 0 1 
thread: 0, allBlocks[17]: 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 mySum: 4
thread: 0, blockNoZero[17]: 0 0 4 0 0 0 0 
thread: 0, allBlocks[18]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 3 mySum: 4
thread: 0, blockNoZero[18]: 1 0 0 0 0 0 3 
thread: 0, allBlocks[19]: 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 1 mySum: 4
thread: 0, blockNoZero[19]: 0 0 3 0 0 0 1 
thread: 0, allBlocks[20]: 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 2 mySum: 4
thread: 0, blockNoZero[20]: 1 0 1 0 0 0 2 
thread: 0, allBlocks[21]: 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 2 mySum: 4
thread: 0, blockNoZero[21]: 0 0 2 0 0 0 2 
thread: 0, allBlocks[22]: 0 0 0 0 0 0 0 0 0 1 0 3 0 0 0 0 mySum: 4
thread: 0, blockNoZero[22]: 1 0 3 0 0 0 0 
thread: 0, allBlocks[23]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 3 mySum: 4
thread: 0, blockNoZero[23]: 0 0 1 0 0 0 3 
thread: 0, allBlocks[24]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 mySum: 4
thread: 0, blockNoZero[24]: 0 0 0 0 0 0 4 
thread: 0, allBlocks[25]: 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 3 mySum: 5
thread: 0, blockNoZero[25]: 1 0 1 0 0 0 3 
thread: 0, allBlocks[26]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5 mySum: 5
thread: 0, blockNoZero[26]: 0 0 0 0 0 0 5 
thread: 0, allBlocks[27]: 0 0 0 0 0 0 0 0 0 1 0 2 0 0 0 2 mySum: 5
thread: 0, blockNoZero[27]: 1 0 2 0 0 0 2 
thread: 0, allBlocks[28]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 4 mySum: 5
thread: 0, blockNoZero[28]: 1 0 0 0 0 0 4 
thread: 0, allBlocks[29]: 0 0 0 0 0 0 0 0 0 1 0 3 0 0 0 1 mySum: 5
thread: 0, blockNoZero[29]: 1 0 3 0 0 0 1 
thread: 0, allBlocks[30]: 0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 0 mySum: 5
thread: 0, blockNoZero[30]: 1 0 4 0 0 0 0 
thread: 0, allBlocks[31]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 4 mySum: 5
thread: 0, blockNoZero[31]: 0 0 1 0 0 0 4 
thread: 0, allBlocks[32]: 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 3 mySum: 5
thread: 0, blockNoZero[32]: 0 0 2 0 0 0 3 
thread: 0, allBlocks[33]: 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 1 mySum: 5
thread: 0, blockNoZero[33]: 0 0 4 0 0 0 1 
thread: 0, allBlocks[34]: 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 2 mySum: 5
thread: 0, blockNoZero[34]: 0 0 3 0 0 0 2 
thread: 0, allBlocks[35]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 5 mySum: 6
thread: 0, blockNoZero[35]: 0 0 1 0 0 0 5 
thread: 0, allBlocks[36]: 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 4 mySum: 6
thread: 0, blockNoZero[36]: 0 0 2 0 0 0 4 
thread: 0, allBlocks[37]: 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 4 mySum: 6
thread: 0, blockNoZero[37]: 1 0 1 0 0 0 4 
thread: 0, allBlocks[38]: 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 3 mySum: 6
thread: 0, blockNoZero[38]: 0 0 3 0 0 0 3 
thread: 0, allBlocks[39]: 0 0 0 0 0 0 0 0 0 1 0 2 0 0 0 3 mySum: 6
thread: 0, blockNoZero[39]: 1 0 2 0 0 0 3 
thread: 0, allBlocks[40]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 5 mySum: 6
thread: 0, blockNoZero[40]: 1 0 0 0 0 0 5 
thread: 0, allBlocks[41]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6 mySum: 6
thread: 0, blockNoZero[41]: 0 0 0 0 0 0 6 
thread: 0, allBlocks[42]: 0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 1 mySum: 6
thread: 0, blockNoZero[42]: 1 0 4 0 0 0 1 
thread: 0, allBlocks[43]: 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 2 mySum: 6
thread: 0, blockNoZero[43]: 0 0 4 0 0 0 2 
thread: 0, allBlocks[44]: 0 0 0 0 0 0 0 0 0 1 0 3 0 0 0 2 mySum: 6
thread: 0, blockNoZero[44]: 1 0 3 0 0 0 2 
thread: 0, allBlocks[45]: 0 0 0 0 0 0 0 0 0 1 0 2 0 0 0 4 mySum: 7
thread: 0, blockNoZero[45]: 1 0 2 0 0 0 4 
thread: 0, allBlocks[46]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 6 mySum: 7
thread: 0, blockNoZero[46]: 0 0 1 0 0 0 6 
thread: 0, allBlocks[47]: 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 3 mySum: 7
thread: 0, blockNoZero[47]: 0 0 4 0 0 0 3 
thread: 0, allBlocks[48]: 0 0 0 0 0 0 0 0 0 1 0 3 0 0 0 3 mySum: 7
thread: 0, blockNoZero[48]: 1 0 3 0 0 0 3 
thread: 0, allBlocks[49]: 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 5 mySum: 7
thread: 0, blockNoZero[49]: 1 0 1 0 0 0 5 
thread: 0, allBlocks[50]: 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 5 mySum: 7
thread: 0, blockNoZero[50]: 0 0 2 0 0 0 5 
thread: 0, allBlocks[51]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 6 mySum: 7
thread: 0, blockNoZero[51]: 1 0 0 0 0 0 6 
thread: 0, allBlocks[52]: 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 4 mySum: 7
thread: 0, blockNoZero[52]: 0 0 3 0 0 0 4 
thread: 0, allBlocks[53]: 0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 2 mySum: 7
thread: 0, blockNoZero[53]: 1 0 4 0 0 0 2 
thread: 0, allBlocks[54]: 0 0 0 0 0 0 0 0 0 1 0 3 0 0 0 4 mySum: 8
thread: 0, blockNoZero[54]: 1 0 3 0 0 0 4 
thread: 0, allBlocks[55]: 0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 3 mySum: 8
thread: 0, blockNoZero[55]: 1 0 4 0 0 0 3 
thread: 0, allBlocks[56]: 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 4 mySum: 8
thread: 0, blockNoZero[56]: 0 0 4 0 0 0 4 
thread: 0, allBlocks[57]: 0 0 0 0 0 0 0 0 0 1 0 2 0 0 0 5 mySum: 8
thread: 0, blockNoZero[57]: 1 0 2 0 0 0 5 
thread: 0, allBlocks[58]: 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 6 mySum: 8
thread: 0, blockNoZero[58]: 1 0 1 0 0 0 6 
thread: 0, allBlocks[59]: 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 6 mySum: 8
thread: 0, blockNoZero[59]: 0 0 2 0 0 0 6 
thread: 0, allBlocks[60]: 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 5 mySum: 8
thread: 0, blockNoZero[60]: 0 0 3 0 0 0 5 
thread: 0, allBlocks[61]: 0 0 0 0 0 0 0 0 0 1 0 2 0 0 0 6 mySum: 9
thread: 0, blockNoZero[61]: 1 0 2 0 0 0 6 
thread: 0, allBlocks[62]: 0 0 0 0 0 0 0 0 0 1 0 3 0 0 0 5 mySum: 9
thread: 0, blockNoZero[62]: 1 0 3 0 0 0 5 
thread: 0, allBlocks[63]: 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 6 mySum: 9
thread: 0, blockNoZero[63]: 0 0 3 0 0 0 6 
thread: 0, allBlocks[64]: 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 5 mySum: 9
thread: 0, blockNoZero[64]: 0 0 4 0 0 0 5 
thread: 0, allBlocks[65]: 0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 4 mySum: 9
thread: 0, blockNoZero[65]: 1 0 4 0 0 0 4 
thread: 0, allBlocks[66]: 0 0 0 0 0 0 0 0 0 1 0 3 0 0 0 6 mySum: 10
thread: 0, blockNoZero[66]: 1 0 3 0 0 0 6 
thread: 0, allBlocks[67]: 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 6 mySum: 10
thread: 0, blockNoZero[67]: 0 0 4 0 0 0 6 
thread: 0, allBlocks[68]: 0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 5 mySum: 10
thread: 0, blockNoZero[68]: 1 0 4 0 0 0 5 
thread: 0, allBlocks[69]: 0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 6 mySum: 11
thread: 0, blockNoZero[69]: 1 0 4 0 0 0 6 
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.244731
thread: 0, sOPT: 10
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: 3Thread: , MlBk function is done, and BkID for all processes are collected.
1, MlBk function is done, and BkID for all processes are collected.
Thread: 2, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 29, UB: 32
BKID: 0, LB: 29, UB: 32, OPT: 10
Dynamic Programming Runtime: 2.37618
Execution time between LB and UB is: 2
By far, all LB UB calculation runtime: 2
Iteration: 2, UB: 32, LB: 29start at time: 1505276338
thread: 0, MlBk is called with LB: 29, UB: 30
 thread: 0, LongJobs.size() 21
thread: thread: 2, MlBk is called with LB: 31, UB: 321, MlBk is called with LB: 
30, UB: 31
 thread: 2, LongJobs.size() 21
 thread: 1, LongJobs.size() 21
thread: 1, NSTable size: 34
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 6
thread: 1, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
2thread: 1, i: 1, NSTable size: , maxN[i].weit: 3, maxN[i].idx: 136, blockDimSize[i]: 
3
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 6
thread: 2, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 41
thread: 2, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: , i: 2, maxN[i].weit: 5, maxN[i].idx: 2, blockDimSize[i]: 5
thread: 1, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
2thread: 1, i: 4, maxN[i].weit: 3, maxN[i].idx: , i: 4, blockDimSize[i]: 23
, maxN[i].weit: thread: 1, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 1, i: 6, maxN[i].weit: 7, maxN[i].idx: 6, blockDimSize[i]: 7
5, maxN[i].idx: thread: 2, blockDimSize[i]: 15
, i: thread: 2, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
0thread: 2, i: , divisor[i]: 42, maxN[i].weit: 3, blockDimSize[i]: , maxN[i].idx: 24
, blockDimSize[i]: thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 2, divisor[i]: 5, blockDimSize[i]: 1
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 5, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 6, divisor[i]: 7, blockDimSize[i]: 1
3
thread: 2, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 2, i: 6, maxN[i].weit: 7, maxN[i].idx: 6, blockDimSize[i]: 7
thread: thread: 2, i: 0, divisor[i]: 12, largestBlockVec.elm: , blockDimSize[i]: 2
thread: 2, i: 1, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 2, divisor[i]: 5, blockDimSize[i]: 1
thread: 2, i: 3, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 5, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 6, divisor[i]: 7, blockDimSize[i]: 1
thread: 20, largestBlockVec.elm:  0 0 0 00  0 0 0 0 0 00  0 00  0 1 00  1 4 00  4 00  0 00  6 6
 thread: 2, blockDimSizeComp: 0 0 0 0 0 0 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 0 0 0 02  03  1 03  3 23  3 11  
3thread: 2, divisorComp: 0 0 0 0 0 0 0 0 0 2  3 3 1 
thread: 1, divisorComp: 0 0 0 0 0 0 0 0 0 2 1 5 1 1 1 7 
thread: 1, largestBlockVec: 0 0 0 0 0 0 01 5 1 1  01  0 71  
0 4 thread: 2, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 6 1
 0 thread: 1, largestNoZeroBlockVec: 1 0 4 0 0 0 6 
4 0 0 0 6 
thread: 2, largestNoZeroBlockVec: 1 0 4 0 0 0 6 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0thread:  0 20, allBlocks: 0  0 00  0 00  00  00  00 0  00  0 00  0 00  00  0 1, mySum: 0 , mySum: 
10 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
10 0 0 0 0 0 0 0 0  1, mySum:  10
0 0 0 0 0 0 0 0 0 1 0 0 0  0 00  00 , mySum: 1 
0 0 0 0 0 0 0 0 0 0 0 1 0 00 0  00  0, mySum: 1 
, mySum: 10 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 1 00  02  , mySum: 02
 00 0 0 0 0 0 0 0 0 1 0 0 0 0 0  , mySum: 1 , mySum: 12
0 0 0 0 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 00 0  2 1, mySum:  2
0 0 0 0 0 0 0 0 0 1 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 1 0 00 0  0 01  , mySum: , mySum: 22

0 0 0 0 0 0 0 0 0 0 0 2 00 0 0 0 0 0 0 0 0 0 0 1  0 0 00  10  , mySum: 20
 , mySum: 0 0 0 0 0 0 0 0 0 1 0 12
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum:  20 
30 0 0 0 0 0 0 0 0 0 0 2 0 0  0 , mySum: 0 , mySum: 2
30 0 0 0 0 0 0 0 0 0 0 0 0 0 
00 0 0 0 0 0 0 0 0 0 0 1 0 0  0 32  , mySum: 3, mySum: 
0 0 0 0 0 0 0 0 0 0 0 1 0 0 30 2 , mySum: 
3
0 0 0 0 0 0 0 0 0 1 0 0 0 0 00 0 0 0 0 0 0 0 0 1 0 0  0 20 , mySum:  30
 0 0 0 0 0 0 0 0 0 0 0 2 0 0 2 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 2 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 01  , mySum: 3
0 0 0 0 0 0 0 0 0 1 0 2 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 1 0 1 0 0 00 1  0, mySum: 3 
0 , mySum: 0 0 0 0 0 0 0 0 0 1 0 2 0 0 30 0 
, mySum: 0 0 0 0 0 0 0 0 0 0 0 3 0 0 3
0 0 0 0 0 0 0 0 0 0 0 3 0 0 00 0  , mySum: 3
0 0 0 0 0 0 0 0 0 1 0 2 0 00 0  1, mySum:  3, mySum: 
4
0 0 0 0 0 0 0 0 0 1 0 2 0 0 00 0 0 0 0 0 0 0 0 0 0 4  0 0 10  0, mySum: 4 , mySum: 
4
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 00  00 3  , mySum: 04 
0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 10 , mySum: 4 
0 0 0 0 0 0 0 0 0 1 0 1, mySum: 4
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0  3 0, mySum:  0 40 2
 0 0 0 0 0 0 0 0 0 0 0 3 0 , mySum: 0 04 
0 0 0 0 0 0 0 0 0 0 0 2 0 10 0  , mySum: 2 4, mySum: 
40 0 0 0 0 0 0 0 0 1 0 1 0 0 
0 0 0 0 0 0 0 0 0 0 1 0 3 02 0  , mySum: 04 
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 1 0 0 2 , mySum: 4
00 0 0 0 0 0 0 0 0 1 0 3 0  0 3 , mySum: 4
00 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 1 0 0  0 30  , mySum: 40
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0  4 , mySum: 44 
, mySum: 0 0 0 0 0 0 0 0 0 1 0 1 0 04 0 3 , mySum: 
50 0 0 0 0 0 0 0 0 1 0 1 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 00 0  53 , mySum:  5
, mySum: 0 0 0 0 0 0 0 0 0 1 0 2 0 50 0 2 
, mySum: 50 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 1 0 0 5 , mySum: 5
0 0 0 0 0 0 0 0 0 1 0 2 0 00 0  20  0, mySum:  54 , mySum: 
5
0 0 0 0 0 0 0 0 0 1 0 3 0 0 0 0 0 0 0 0 0 0 0 1 0 0 00 0  10  , mySum: 45
 0 0 0 0 0 0 0 0 0 1 0 4 0 0 , mySum: 5
0 0 0 0 0 0 0 0 0 1 0 3 0 00 0  1 , mySum: 05 
, mySum: 0 0 0 0 0 0 0 0 0 1 0 4 50 0 
0 0 0 0 0 0 0 0 0 0 0 0 1 0 00 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 1 0 0  0 04  4 , mySum: , mySum: 5
5
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 20 0 3 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 4 0  0 0 0 3 , mySum: 05 0
 1 0 0 0 0 0 0 0 0 0 0 0 4 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 3 0 00 0  02  0 , mySum: 1 5, mySum: 
5
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 00 0  2 5, mySum:  , mySum: 56

0 0 0 0 0 0 0 0 0 0 0 2 0 0 00 0 0 0 0 0 0 0 0 0 0 1 0  0 40 , mySum:  65 , mySum: 
6
0 0 0 0 0 0 0 0 0 0 0 2 0 00 0 0 0 0 0 0 0 0 1 0  0 4 , mySum: 6
0 0 0 0 0 0 0 0 0 1 0 1 0 10 0  04  0 , mySum: 0 64 , mySum: 
6
0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 3 00 0  03  , mySum: 3 , mySum: 66

0 0 0 0 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 0 0 0 1 0 32 0  0, mySum:  60 
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 5 3, mySum: 6
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0  , mySum: 6
0 0 0 0 0 0 0 0 0 1 0 06 0 0  0, mySum:  6
50 0 0 0 0 0 0 0 0 1 0 4 0 0 0  1, mySum:  , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 4 0 0 60 2
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0, mySum: 6
0 0 0 0 0 0 0 0 0 1 0 3 0 6 , mySum: 6
0 0 0 0 0 0 0 0 0 1 0 4 0 0  0 10  0, mySum:  62
0 0 0 0 0 0 0 0 0 0 0 4 0 , mySum: 6
0 0 0 0 0 0 0 0 0 1 0 2 0 0  0 04  , mySum: 07
0 0 0 0 0 0 0 0 0 0 0 1 0  2 , mySum: 6
0 0 0 0 0 0 0 0 0 1 0 3 0 0 0 6 , mySum: 70
 00 0 0 0 0 0 0 0 0 0 0 4 0  2 , mySum: 6
0 0 0 0 0 0 0 0 0 1 0 2 0 00 0 4  , mySum: 0 73
 0 0 0 0 0 0 0 0 0 0 0 1 0 0, mySum: 7
0 0 0 0 0 0 0 0 0 1 0 3 0 0  0 30  , mySum: 76
 , mySum: 0 0 0 0 0 0 0 0 0 1 0 1 0 07 0 5
 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 3 , mySum: 7, mySum: 
0 0 0 0 0 0 0 0 0 1 0 3 0 07 0 3
 , mySum: 70 0 0 0 0 0 0 0 0 0 0 2 0 0
 0 0 0 0 0 0 0 0 0 1 0 01 0  05  0, mySum:  7
50 0 0 0 0 0 0 0 0 1 0 0 0 0 0  6 , mySum: , mySum: 77

0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 20 4 , mySum: 7
0 0 0 0 0 0 0 0 0 1 0 4  0 0 0 5 , mySum: 07 0 
00 0 0 0 0 0 0 0 0 1 0 0 0  2 , mySum: 7
0 0 0 0 0 0 0 0 0 1 0 3 0 00 0  40  , mySum: 86
 0 0 0 0 0 0 0 0 0 1 0 4 0, mySum: 7
0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 3 , mySum: 8
0 0 0 0 0 0 0 0 0 0 0 4 0 0  0 04  , mySum: 08
 0 0 0 0 0 0 0 0 0 1 0 2 40 0 0  , mySum: 57 
, mySum: 0 0 0 0 0 0 0 0 0 1 0 4 0 08
0 0 0 0 0 0 0 0 0 1 0 1 0 0  0 60  , mySum: 28
0 0 0 0 0 0 0 0 0 0 0 2 0  , mySum: 7
0 0 0 0 0 0 0 0 0 1 0 3 0 00 0 4  , mySum: 08 6
0 0 0 0 0 0 0 0 0 1 0 4 0  , mySum: 8
0 0 0 0 0 0 0 0 0 0 0 3 00 0 3 , mySum: 8
0 0 0 0 0 0 0 0 0 0 0 4 0  0 0 04  0, mySum:  5 8, mySum: 8

0 0 0 0 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 0 0 1 0 2 00 0  06 5 , mySum:  9
, mySum: 0 0 0 0 0 0 0 0 0 1 0 3 0 0 0 85 , mySum: 9

0 0 0 0 0 0 0 0 0 1 0 1 0 0 00 0 0 0 0 0 0 0 0 0 0  6 , mySum: 8
0 0 0 0 0 0 0 0 0 0 0 2 0 30 0  60  , mySum: 8
00 0 0 0 0 0 0 0 0 0 0 3 0  0 0 05  6, mySum:  , mySum: 89

0 0 0 0 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 0 0 0 40 0 0  00  65 , mySum:  9
, mySum: 0 0 0 0 0 0 0 0 0 1 0 4 90 0 0 
4 , mySum: 0 0 0 0 0 0 0 0 0 1 0 3 0 0 09 5 , mySum: 
90 0 0 0 0 0 0 0 0 1 0 3 0 
0 00 0 0 0 0 0 0 0 0 0 0 3 0  0 60  6 , mySum: , mySum: 9
100 0 0 0 0 0 0 0 0 0 0 4 0 
0 0 0 0 0 0 0 0 0 0 0 0 4 0 00 0  6 5, mySum:  10, mySum: 9

0 0 0 0 0 0 0 0 0 1 0 4 00 0 0 0 0 0 0 0 0 1 0  0 0 4 , mySum: 4 90 0
 0 0 0 0 0 0 0 0 0 1 0 3 0 00 0  56  , mySum: 10, mySum: 
10
0 0 0 0 0 0 0 0 0 1 0 4 0 0 00 0 0 0 0 0 0 0 0 0 0 4 0  0 60  6 , mySum: , mySum: 1110
0 0 0 0 0 0 0 0 0 1 0 4 0 0
 0 5 , mySum: 10
0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 6 , mySum: 11
thread: 0, NSTable size: 31
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 6
thread: 0, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 0, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 0, i: 2, maxN[i].weit: 5, maxN[i].idx: 2, blockDimSize[i]: 5
thread: 0, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 0, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 0, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 0, i: 6, maxN[i].weit: 7, maxN[i].idx: 6, blockDimSize[i]: 7
thread: 0, i: 0, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 2, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 5, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 6, divisor[i]: 7, blockDimSize[i]: 1
thread: 0, largestBlockVec.elm: 0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 6 
thread: 0, blockDimSizeComp: 0 0 0 0 0 0 0 0 0 2 3 1 3 3 3 1 
thread: 0, divisorComp: 0 0 0 0 0 0 0 0 0 2 1 5 1 1 1 7 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 6 
thread: 0, largestNoZeroBlockVec: 1 0 4 0 0 0 6 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 2 , mySum: 3
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 2 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 1 0 2 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 1 0 2 0 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 3 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 2 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 2 , mySum: 4
0 0 0 0 0 0 0 0 0 1 0 3 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 3 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 , mySum: 4
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 3 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5 , mySum: 5
0 0 0 0 0 0 0 0 0 1 0 2 0 0 0 2 , mySum: 5
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 4 , mySum: 5
0 0 0 0 0 0 0 0 0 1 0 3 0 0 0 1 , mySum: 5
0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 4 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 3 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 1 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 2 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 5 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 4 , mySum: 6
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 4 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 3 , mySum: 6
0 0 0 0 0 0 0 0 0 1 0 2 0 0 0 3 , mySum: 6
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 5 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6 , mySum: 6
0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 1 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 2 , mySum: 6
0 0 0 0 0 0 0 0 0 1 0 3 0 0 0 2 , mySum: 6
0 0 0 0 0 0 0 0 0 1 0 2 0 0 0 4 , mySum: 7
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 6 , mySum: 7
0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 3 , mySum: 7
0 0 0 0 0 0 0 0 0 1 0 3 0 0 0 3 , mySum: 7
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 5 , mySum: 7
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 5 , mySum: 7
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 6 , mySum: 7
0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 4 , mySum: 7
0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 2 , mySum: 7
0 0 0 0 0 0 0 0 0 1 0 3 0 0 0 4 , mySum: 8
0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 3 , mySum: 8
0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 4 , mySum: 8
0 0 0 0 0 0 0 0 0 1 0 2 0 0 0 5 , mySum: 8
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 6 , mySum: 8
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 6 , mySum: 8
0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 5 , mySum: 8
0 0 0 0 0 0 0 0 0 1 0 2 0 0 0 6 , mySum: 9
0 0 0 0 0 0 0 0 0 1 0 3 0 0 0 5 , mySum: 9
0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 6 , mySum: 9
0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 5 , mySum: 9
0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 4 , mySum: 9
0 0 0 0 0 0 0 0 0 1 0 3 0 0 0 6 , mySum: 10
0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 6 , mySum: 10
0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 5 , mySum: 10
0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 6 , mySum: 11
thread: 1, maxBlockLvlSize: 10
thread: 1, maxInBlockLvlSize: 35
thread: 1, AllTableSize: 11340, maxSubsetsSize: 64
thread: 2, maxBlockLvlSize: 10
thread: 2, maxInBlockLvlSize: 35
thread: 2, AllTableSize: 11340, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 10
thread: 0, maxInBlockLvlSize: 35
thread: 0, AllTableSize: 11340, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 1 0 0 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 1 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 mySum: 2
thread: 0, blockNoZero[4]: 0 0 0 0 0 0 2 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[5]: 1 0 0 0 0 0 1 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 mySum: 2
thread: 0, blockNoZero[6]: 0 0 1 0 0 0 1 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 1 0 1 0 0 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 mySum: 2
thread: 0, blockNoZero[8]: 0 0 2 0 0 0 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 mySum: 3
thread: 0, blockNoZero[9]: 0 0 0 0 0 0 3 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 2 mySum: 3
thread: 0, blockNoZero[10]: 0 0 1 0 0 0 2 
thread: 0, allBlocks[11]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 2 mySum: 3
thread: 0, blockNoZero[11]: 1 0 0 0 0 0 2 
thread: 0, allBlocks[12]: 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 1 mySum: 3
thread: 0, blockNoZero[12]: 0 0 2 0 0 0 1 
thread: 0, allBlocks[13]: 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 mySum: 3
thread: 0, blockNoZero[13]: 1 0 1 0 0 0 1 
thread: 0, allBlocks[14]: 0 0 0 0 0 0 0 0 0 1 0 2 0 0 0 0 mySum: 3
thread: 0, blockNoZero[14]: 1 0 2 0 0 0 0 
thread: 0, allBlocks[15]: 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 mySum: 3
thread: 0, blockNoZero[15]: 0 0 3 0 0 0 0 
thread: 0, allBlocks[16]: 0 0 0 0 0 0 0 0 0 1 0 2 0 0 0 1 mySum: 4
thread: 0, blockNoZero[16]: 1 0 2 0 0 0 1 
thread: 0, allBlocks[17]: 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 mySum: 4
thread: 0, blockNoZero[17]: 0 0 4 0 0 0 0 
thread: 0, allBlocks[18]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 3 mySum: 4
thread: 0, blockNoZero[18]: 1 0 0 0 0 0 3 
thread: 0, allBlocks[19]: 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 1 mySum: 4
thread: 0, blockNoZero[19]: 0 0 3 0 0 0 1 
thread: 0, allBlocks[20]: 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 2 mySum: 4
thread: 0, blockNoZero[20]: 1 0 1 0 0 0 2 
thread: 0, allBlocks[21]: 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 2 mySum: 4
thread: 0, blockNoZero[21]: 0 0 2 0 0 0 2 
thread: 0, allBlocks[22]: 0 0 0 0 0 0 0 0 0 1 0 3 0 0 0 0 mySum: 4
thread: 0, blockNoZero[22]: 1 0 3 0 0 0 0 
thread: 0, allBlocks[23]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 3 mySum: 4
thread: 0, blockNoZero[23]: 0 0 1 0 0 0 3 
thread: 0, allBlocks[24]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 mySum: 4
thread: 0, blockNoZero[24]: 0 0 0 0 0 0 4 
thread: 0, allBlocks[25]: 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 3 mySum: 5
thread: 0, blockNoZero[25]: 1 0 1 0 0 0 3 
thread: 0, allBlocks[26]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5 mySum: 5
thread: 0, blockNoZero[26]: 0 0 0 0 0 0 5 
thread: 0, allBlocks[27]: 0 0 0 0 0 0 0 0 0 1 0 2 0 0 0 2 mySum: 5
thread: 0, blockNoZero[27]: 1 0 2 0 0 0 2 
thread: 0, allBlocks[28]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 4 mySum: 5
thread: 0, blockNoZero[28]: 1 0 0 0 0 0 4 
thread: 0, allBlocks[29]: 0 0 0 0 0 0 0 0 0 1 0 3 0 0 0 1 mySum: 5
thread: 0, blockNoZero[29]: 1 0 3 0 0 0 1 
thread: 0, allBlocks[30]: 0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 0 mySum: 5
thread: 0, blockNoZero[30]: 1 0 4 0 0 0 0 
thread: 0, allBlocks[31]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 4 mySum: 5
thread: 0, blockNoZero[31]: 0 0 1 0 0 0 4 
thread: 0, allBlocks[32]: 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 3 mySum: 5
thread: 0, blockNoZero[32]: 0 0 2 0 0 0 3 
thread: 0, allBlocks[33]: 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 1 mySum: 5
thread: 0, blockNoZero[33]: 0 0 4 0 0 0 1 
thread: 0, allBlocks[34]: 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 2 mySum: 5
thread: 0, blockNoZero[34]: 0 0 3 0 0 0 2 
thread: 0, allBlocks[35]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 5 mySum: 6
thread: 0, blockNoZero[35]: 0 0 1 0 0 0 5 
thread: 0, allBlocks[36]: 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 4 mySum: 6
thread: 0, blockNoZero[36]: 0 0 2 0 0 0 4 
thread: 0, allBlocks[37]: 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 4 mySum: 6
thread: 0, blockNoZero[37]: 1 0 1 0 0 0 4 
thread: 0, allBlocks[38]: 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 3 mySum: 6
thread: 0, blockNoZero[38]: 0 0 3 0 0 0 3 
thread: 0, allBlocks[39]: 0 0 0 0 0 0 0 0 0 1 0 2 0 0 0 3 mySum: 6
thread: 0, blockNoZero[39]: 1 0 2 0 0 0 3 
thread: 0, allBlocks[40]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 5 mySum: 6
thread: 0, blockNoZero[40]: 1 0 0 0 0 0 5 
thread: 0, allBlocks[41]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6 mySum: 6
thread: 0, blockNoZero[41]: 0 0 0 0 0 0 6 
thread: 0, allBlocks[42]: 0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 1 mySum: 6
thread: 0, blockNoZero[42]: 1 0 4 0 0 0 1 
thread: 0, allBlocks[43]: 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 2 mySum: 6
thread: 0, blockNoZero[43]: 0 0 4 0 0 0 2 
thread: 0, allBlocks[44]: 0 0 0 0 0 0 0 0 0 1 0 3 0 0 0 2 mySum: 6
thread: 0, blockNoZero[44]: 1 0 3 0 0 0 2 
thread: 0, allBlocks[45]: 0 0 0 0 0 0 0 0 0 1 0 2 0 0 0 4 mySum: 7
thread: 0, blockNoZero[45]: 1 0 2 0 0 0 4 
thread: 0, allBlocks[46]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 6 mySum: 7
thread: 0, blockNoZero[46]: 0 0 1 0 0 0 6 
thread: 0, allBlocks[47]: 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 3 mySum: 7
thread: 0, blockNoZero[47]: 0 0 4 0 0 0 3 
thread: 0, allBlocks[48]: 0 0 0 0 0 0 0 0 0 1 0 3 0 0 0 3 mySum: 7
thread: 0, blockNoZero[48]: 1 0 3 0 0 0 3 
thread: 0, allBlocks[49]: 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 5 mySum: 7
thread: 0, blockNoZero[49]: 1 0 1 0 0 0 5 
thread: 0, allBlocks[50]: 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 5 mySum: 7
thread: 0, blockNoZero[50]: 0 0 2 0 0 0 5 
thread: 0, allBlocks[51]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 6 mySum: 7
thread: 0, blockNoZero[51]: 1 0 0 0 0 0 6 
thread: 0, allBlocks[52]: 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 4 mySum: 7
thread: 0, blockNoZero[52]: 0 0 3 0 0 0 4 
thread: 0, allBlocks[53]: 0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 2 mySum: 7
thread: 0, blockNoZero[53]: 1 0 4 0 0 0 2 
thread: 0, allBlocks[54]: 0 0 0 0 0 0 0 0 0 1 0 3 0 0 0 4 mySum: 8
thread: 0, blockNoZero[54]: 1 0 3 0 0 0 4 
thread: 0, allBlocks[55]: 0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 3 mySum: 8
thread: 0, blockNoZero[55]: 1 0 4 0 0 0 3 
thread: 0, allBlocks[56]: 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 4 mySum: 8
thread: 0, blockNoZero[56]: 0 0 4 0 0 0 4 
thread: 0, allBlocks[57]: 0 0 0 0 0 0 0 0 0 1 0 2 0 0 0 5 mySum: 8
thread: 0, blockNoZero[57]: 1 0 2 0 0 0 5 
thread: 0, allBlocks[58]: 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 6 mySum: 8
thread: 0, blockNoZero[58]: 1 0 1 0 0 0 6 
thread: 0, allBlocks[59]: 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 6 mySum: 8
thread: 0, blockNoZero[59]: 0 0 2 0 0 0 6 
thread: 0, allBlocks[60]: 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 5 mySum: 8
thread: 0, blockNoZero[60]: 0 0 3 0 0 0 5 
thread: 0, allBlocks[61]: 0 0 0 0 0 0 0 0 0 1 0 2 0 0 0 6 mySum: 9
thread: 0, blockNoZero[61]: 1 0 2 0 0 0 6 
thread: 0, allBlocks[62]: 0 0 0 0 0 0 0 0 0 1 0 3 0 0 0 5 mySum: 9
thread: 0, blockNoZero[62]: 1 0 3 0 0 0 5 
thread: 0, allBlocks[63]: 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 6 mySum: 9
thread: 0, blockNoZero[63]: 0 0 3 0 0 0 6 
thread: 0, allBlocks[64]: 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 5 mySum: 9
thread: 0, blockNoZero[64]: 0 0 4 0 0 0 5 
thread: 0, allBlocks[65]: 0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 4 mySum: 9
thread: 0, blockNoZero[65]: 1 0 4 0 0 0 4 
thread: 0, allBlocks[66]: 0 0 0 0 0 0 0 0 0 1 0 3 0 0 0 6 mySum: 10
thread: 0, blockNoZero[66]: 1 0 3 0 0 0 6 
thread: 0, allBlocks[67]: 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 6 mySum: 10
thread: 0, blockNoZero[67]: 0 0 4 0 0 0 6 
thread: 0, allBlocks[68]: 0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 5 mySum: 10
thread: 0, blockNoZero[68]: 1 0 4 0 0 0 5 
thread: 0, allBlocks[69]: 0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 6 mySum: 11
thread: 0, blockNoZero[69]: 1 0 4 0 0 0 6 
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 3e-06
thread: 0, sOPT: 11
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 11
copy the latest feasible solution to instance takes time: 4e-06
thread: 2, sOPT: 11
copy the latest feasible solution to instance takes time: 0.857095
thread: 1, sOPT: 10
BKID: 0, LB: 32, UB: 32, OPT: 11
Dynamic Programming Runtime: 5.92807
Execution time between LB and UB is: 2
By far, all LB UB calculation runtime: 4
********************************************************
Total execution on UB and LB is: 4
OUT of Bk while loop  
UB    32
LB    32
T1    32
T2    32
OPT   11
nMachines   10
BkID	0
AllProbData.size()    1
ck :   0
AllProbData[ck].Ttable    31
No Problem until here 1
No Problem until here 2
