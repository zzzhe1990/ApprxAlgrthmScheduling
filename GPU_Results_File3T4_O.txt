Reading File...
File 3-1 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 203, LB: 111start at time: 1504901484
thread: 0, MlBk is called with LB: 111, UB: 134thread: 
thread: 2, MlBk is called with LB: 157, UB: 180
 thread: 0, LongJobs.size() 14
3, MlBk is called with LB: 180, UB: 203
 thread: 2, LongJobs.size() 13
thread: 1, MlBk is called with LB: 134, UB: 157
 thread: 3, LongJobs.size() 12
 thread: 1, LongJobs.size() 13
thread: 3, NSTable size: 14
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 6
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 0 2 7 3 2 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 0 1 1 1 2 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 0 0 1 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
thread: 1, NSTable size: 13
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 5
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 0 2 0 3 2 3 3 0 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 1 0 2 2 1 1 0 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 1 1 0 0 
thread: 2, NSTable size: 18
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: thread: 2, i: 11, allBlocks: , alltableelemets[maxindex].elm[i]: 00 0
 thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 20, i:  40, alltableelemets[maxindex].elm[i]:  00
 0thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 3
 0 0 0 0 0 thread: 02, i:  60 , alltableelemets[maxindex].elm[i]: 04 
0thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 3
 thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 2
0thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 thread: 2, i: 100, alltableelemets[maxindex].elm[i]:  00 
0thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
 0 0 0 , mySum: 1
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2

thread: 2, blockDimSizeComp: 0 0 0 2 0 2 5 2 3 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 1 0 2 1 2 1 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 1 0 1 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
thread: 0, NSTable size: 16
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 2 0 2 0 0 2 5 2 2 2 0 0 0 
thread: 0, divisorComp: 0 0 0 1 0 1 0 0 2 1 1 2 1 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 1 0 0 1 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 , mySum: 2
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 6
copy the latest feasible solution to instance takes time: 0.034761
thread: 3, sOPT: 6
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 7
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 6
copy the latest feasible solution to instance takes time: 0.07622
thread: 1, sOPT: 7
copy the latest feasible solution to instance takes time: 0.101074
thread: 2, sOPT: 6
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 12
copy the latest feasible solution to instance takes time: 1e-06
thread: 0, sOPT: 12
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: Thread: 21, MlBk function is done, and BkID for all processes are collected.3, MlBk function is done, and BkID for all processes are collected.

, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: 1 -1 -1 -1
Pick seg 1 for next iteration where LB: 123, UB: 146
BKID: 0, LB: 123, UB: 146, OPT: 7
Dynamic Programming Runtime: 2.16758
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 1
Iteration: 2, UB: 146, LB: 123start at time: 1504901485
thread: 0, MlBk is called with LB: 123, UB: 129
thread: thread: 3, MlBk is called with LB: 1411, UB: , MlBk is called with LB: 147129, UB: 135

thread: 2, MlBk is called with LB: 135, UB: 141
 thread: 0, LongJobs.size() 13
 thread: 3, LongJobs.size() 13
 thread: 2, LongJobs.size() 13
 thread: 1, LongJobs.size() 13
thread: 3, NSTable size: 13
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 5
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 0 2 0 3 2 3 3 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 0 1 0 2 2 1 1 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 1 1 0 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
thread: 0, NSTable size: 11
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 0 0 2 0 0 2 5 2 2 2 0 0 0 
thread: 0, divisorComp: 0 0 0 0 0 1 0 0 2 1 1 2 1 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 1 0 0 1 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 , mySum: 2
thread: 2, NSTable size: 16
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 0 2 0 2 5 3 3 2 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 1 0 1 1 1 1 2 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 0 0 0 1 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
thread: 1, NSTable size: 14
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 0 2 0 2 5 3 3 2 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 1 0 1 1 1 1 2 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 0 0 0 1 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 7
copy the latest feasible solution to instance takes time: 0.101529
thread: 3, sOPT: 7
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 5e-06
thread: 0, sOPT: 11
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 8
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.073419
thread: 2, sOPT: 8
copy the latest feasible solution to instance takes time: 0.079321
thread: 1, sOPT: 9
Thread: 1, MlBk function is done, and BkID for all processes are collected.
Thread: 2, MlBk function is done, and BkID for all processes are collected.
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: 3, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: 1 -1 -1 -1
Pick seg 1 for next iteration where LB: 127, UB: 133
BKID: 0, LB: 127, UB: 133, OPT: 9
Dynamic Programming Runtime: 1.73052
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 2
Iteration: 3, UB: 133, LB: 127start at time: 1504901486
thread: 0, MlBk is called with LB: 127, UB: 128
thread: 2, MlBk is called with LB: 129, UB: 130
thread: 1, MlBk is called with LB: 128, UB: 129
 thread: 0, LongJobs.size() 13
 thread: 2, LongJobs.size() 13
 thread: 1, LongJobs.size() 13
thread: 3, MlBk is called with LB: 130, UB: 133
 thread: 3, LongJobs.size() 13
thread: 0, NSTable size: 11
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 0 0 2 0 0 2 5 2 2 2 0 0 0 
thread: 0, divisorComp: 0 0 0 0 0 1 0 0 2 1 1 2 1 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 1 0 0 1 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 , mySum: 2
thread: 1, NSTable size: 14
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 0 2 0 2 5 3 3 2 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 1 0 1 1 1 1 2 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 0 0 0 1 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
thread: 2, NSTable size: 14
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 0 2 0 2 5 3 3 2 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 1 0 1 1 1 1 2 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 0 0 0 1 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
thread: 3, NSTable size: 14
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 4
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 0 2 0 2 5 3 3 2 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 0 1 0 1 1 1 1 2 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 0 0 0 0 1 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 5e-06
thread: 0, sOPT: 11
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 9
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 9
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.104052
thread: 2, sOPT: 9
copy the latest feasible solution to instance takes time: 0.130375
thread: 3, sOPT: 9
copy the latest feasible solution to instance takes time: 0.084755
thread: 1, sOPT: 9
Thread: 1, MlBk function is done, and BkID for all processes are collected.
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: 3, MlBk function is done, and BkID for all processes are collected.
Thread: 2, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: 1 -1 -1 -1
Pick seg 1 for next iteration where LB: 128, UB: 129
BKID: 0, LB: 128, UB: 128, OPT: 9
Dynamic Programming Runtime: 1.80901
Execution time between LB and UB is: 0
By far, all LB UB calculation runtime: 2
********************************************************
Total execution on UB and LB is: 2
OUT of Bk while loop  
UB    128
LB    128
T1    127
T2    128
OPT   9
nMachines   10
BkID	0
AllProbData.size()    3
ck :   2
AllProbData[ck].Ttable    128
ck :   1
AllProbData[ck].Ttable    132
ck :   0
AllProbData[ck].Ttable    145
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan138
Main Scheduling is Done
File 3-1 is Done.
******************************
Reading File...
File 3-2 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 215, LB: 115start at time: 1504901486
thread: 0, MlBk is called with LB: 115, UB: 140
thread: 3, MlBk is called with LB: 190, UB: 215
 thread: 0, LongJobs.size() 14
thread: 2, MlBk is called with LB: 165, UB: 190
 thread: 2, LongJobs.size() 11
thread: 1 thread: 3, MlBk is called with LB: , LongJobs.size() 140, UB: 10165

 thread: 1, LongJobs.size() 12
thread: 3, NSTable size: 14
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 5
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 2 0 3 3 3 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 1 0 1 2 1 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 0 1 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
thread: 2, NSTable size: 17
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 2 2 0 2 5 3 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 1 1 0 2 1 1 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 1 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
thread: 1, NSTable size: 18
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 5
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 2 2 2 0 0 3 3 3 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 1 1 1 0 0 2 1 1 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 0 1 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
thread: 0, NSTable size: 19
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 0 2 2 0 2 0 0 3 5 2 3 0 0 
thread: 0, divisorComp: 0 0 0 0 2 1 0 1 0 0 1 1 1 1 0 0 
thread: 0, largestBlockVec: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 1 0 0 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 5
copy the latest feasible solution to instance takes time: 0.017901
thread: 3, sOPT: 5
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 5
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.039525
thread: 2, sOPT: 5
copy the latest feasible solution to instance takes time: 0.055443
thread: 1, sOPT: 9
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.082426
thread: 0, sOPT: 10
Thread: Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: 2, MlBk function is done, and BkID for all processes are collected.
3, MlBk function is done, and BkID for all processes are collected.
Thread: 1, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 115, UB: 128
BKID: 0, LB: 115, UB: 128, OPT: 10
Dynamic Programming Runtime: 2.66587
Execution time between LB and UB is: 2
By far, all LB UB calculation runtime: 2
Iteration: 2, UB: 128, LB: 115start at time: 1504901488
thread: 0, MlBk is called with LB: 115, UB: 118
 thread: 0, LongJobs.size() 15
thread: thread: thread: 3, MlBk is called with LB: 2124, UB: , MlBk is called with LB: 1128, MlBk is called with LB: 121118, UB: , UB: 
124121 thread: 3, LongJobs.size() 14


 thread: 2, LongJobs.size() 14
 thread: 1, LongJobs.size() 15
thread: 3, NSTable size: 19
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 4
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 0 2 2 0 2 0 0 3 5 2 3 0 0 
thread: 3, divisorComp: 0 0 0 0 2 1 0 1 0 0 1 1 1 1 0 0 
thread: 3, largestBlockVec: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 1 0 0 0 0 0 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
thread: 2, NSTable size: 16
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 0 2 2 0 2 0 0 3 5 2 3 0 0 
thread: 2, divisorComp: 0 0 0 0 2 1 0 1 0 0 1 1 1 1 0 0 
thread: 2, largestBlockVec: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 1 0 0 0 0 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
thread: 0, NSTable size: 22
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 2 2 2 0 2 0 0 3 5 2 3 0 0 
thread: 0, divisorComp: 0 0 0 1 2 1 0 1 0 0 1 1 1 1 0 0 
thread: 0, largestBlockVec: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 1 0 0 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
thread: 1, NSTable size: 26
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 2 2 2 0 2 0 0 3 5 2 3 0 0 
thread: 1, divisorComp: 0 0 0 1 2 1 0 1 0 0 1 1 1 1 0 0 
thread: 1, largestBlockVec: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 1 0 0 0 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 4e-06
thread: 0, sOPT: 11
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.228237
thread: 2, sOPT: 10
copy the latest feasible solution to instance takes time: 0.227562
thread: 3, sOPT: 10
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.159793
thread: 1, sOPT: 10
Thread: 1, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 3, MlBk function is done, and BkID for all processes are collected.0, MlBk function is done, and BkID for all processes are collected.

Thread: 2, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: 1 -1 -1 -1
Pick seg 1 for next iteration where LB: 117, UB: 120
BKID: 0, LB: 117, UB: 120, OPT: 10
Dynamic Programming Runtime: 9.98248
Execution time between LB and UB is: 4
By far, all LB UB calculation runtime: 6
Iteration: 3, UB: 120, LB: 117start at time: 1504901492
thread: 0, MlBk is called with LB: 117, UB: 118
 thread: 0, LongJobs.size() 15
thread: 1, MlBk is called with LB: 118, UB: 119
thread: 2, MlBk is called with LB: 119, UB: 120
 thread: 1, LongJobs.size() 15
 thread: 2, LongJobs.size() 15
thread: 1, NSTable size: 22
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 2 2 2 0 2 0 0 3 5 2 3 0 0 
thread: 1, divisorComp: 0 0 0 1 2 1 0 1 0 0 1 1 1 1 0 0 
thread: 1, largestBlockVec: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 1 0 0 0 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
thread: 2, NSTable size: 26
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 2 2 2 0 2 0 0 3 5 2 3 0 0 
thread: 2, divisorComp: 0 0 0 1 2 1 0 1 0 0 1 1 1 1 0 0 
thread: 2, largestBlockVec: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 1 0 0 0 0 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
thread: 0, NSTable size: 22
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 2 2 2 0 2 0 0 3 5 2 3 0 0 
thread: 0, divisorComp: 0 0 0 1 2 1 0 1 0 0 1 1 1 1 0 0 
thread: 0, largestBlockVec: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 1 0 0 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
Thread: 0, gpu_BlockDP is done.
Thread: 1, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 4e-06
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 11
copy the latest feasible solution to instance takes time: 3e-06
thread: 0, sOPT: 11
thread: 1, sOPT: 11
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.16077
thread: 2, sOPT: 10
BKID: 0, LB: 119, UB: 119, OPT: 10
Dynamic Programming Runtime: 7.65165
Execution time between LB and UB is: 3
By far, all LB UB calculation runtime: 9
********************************************************
Total execution on UB and LB is: 9
OUT of Bk while loop  
UB    119
LB    119
T1    119
T2    119
OPT   10
nMachines   10
BkID	0
AllProbData.size()    3
ck :   2
AllProbData[ck].Ttable    119
ck :   1
AllProbData[ck].Ttable    119
ck :   0
AllProbData[ck].Ttable    127
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan130
Main Scheduling is Done
File 3-2 is Done.
******************************
Reading File...
File 3-3 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 213, LB: 114start at time: 1504901495
thread: 0, MlBk is called with LB: 114, UB: 139
thread: 3, MlBk is called with LB: 189, UB: 214
 thread: 0, LongJobs.size() 15
thread: 1, MlBk is called with LB: 139, UB: 164
thread:  thread: 3, LongJobs.size() 11
2, MlBk is called with LB: 164, UB: 189
 thread: 1, LongJobs.size() 15
 thread: 2, LongJobs.size() 14
thread: 3, NSTable size: 15
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 5
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 4
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 2 3 0 5 2 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 1 2 0 1 1 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 1 0 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
thread: 2, NSTable size: 34
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 2 3 5 2 2 2 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 2 1 1 1 2 1 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 1 0 0 0 1 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 2
thread: 0, NSTable size: 17
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 0 0 5 0 3 2 2 0 3 3 2 0 0 
thread: 0, divisorComp: 0 0 0 0 0 1 0 1 2 1 0 1 1 1 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 1 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
thread: 1, NSTable size: 31
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 2 2 3 5 0 3 3 2 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 1 2 1 1 0 1 1 1 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 1 0 0 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 5
copy the latest feasible solution to instance takes time: 0.021111
thread: 3, sOPT: 5
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 6
copy the latest feasible solution to instance takes time: 0.157545
thread: 2, sOPT: 6
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 9
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 7
copy the latest feasible solution to instance takes time: 0.231937
thread: 0, sOPT: 9
copy the latest feasible solution to instance takes time: 0.219641
thread: 1, sOPT: 7
Thread: 1, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 0, MlBk function is done, and BkID for all processes are collected.3
, MlBk function is done, and BkID for all processes are collected.Thread: 2, MlBk function is done, and BkID for all processes are collected.

sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 114, UB: 127
BKID: 0, LB: 114, UB: 127, OPT: 9
Dynamic Programming Runtime: 6.48513
Execution time between LB and UB is: 2
By far, all LB UB calculation runtime: 2
Iteration: 2, UB: 127, LB: 114start at time: 1504901497
thread: 0, MlBk is called with LB: 114, UB: 117
 thread: 0, LongJobs.size() 16
thread: thread: thread: 21, MlBk is called with LB: , MlBk is called with LB: 1203117, UB: 120
, MlBk is called with LB: 123, UB: 127
, UB: 123
 thread: 3, LongJobs.size() 15
 thread: 1, LongJobs.size() 16
 thread: 2, LongJobs.size() 15
thread: 2, NSTable size: 13
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 0 0 5 0 3 2 2 0 3 3 2 0 0 
thread: 2, divisorComp: 0 0 0 0 0 1 0 1 2 1 0 1 1 1 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 1 0 0 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
thread: 3, NSTable size: 13
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 4
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 0 0 5 0 3 2 2 0 3 3 2 0 0 
thread: 3, divisorComp: 0 0 0 0 0 1 0 1 2 1 0 1 1 1 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 0 1 0 0 0 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
thread: 1, NSTable size: 19
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 2 0 5 0 3 2 2 0 3 3 2 0 0 
thread: 1, divisorComp: 0 0 0 1 0 1 0 1 2 1 0 1 1 1 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 0 1 0 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
thread: 0, NSTable size: 19
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 2 0 5 0 3 2 2 0 3 3 2 0 0 
thread: 0, divisorComp: 0 0 0 1 0 1 0 1 2 1 0 1 1 1 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 0 1 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
Thread: 2, gpu_BlockDP is done.
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
Thread: 2, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 10
cpuId: 2, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.462758
thread: 3, sOPT: 10
copy the latest feasible solution to instance takes time: 0.639911
thread: 2, sOPT: 10
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.473952
thread: 1, sOPT: 10
copy the latest feasible solution to instance takes time: 0.450181
thread: 0, sOPT: 10
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: 2, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 3, MlBk function is done, and BkID for all processes are collected.
1, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 114, UB: 116
BKID: 0, LB: 114, UB: 116, OPT: 10
Dynamic Programming Runtime: 12.3122
Execution time between LB and UB is: 4
By far, all LB UB calculation runtime: 6
Iteration: 3, UB: 116, LB: 114start at time: 1504901502
thread: 0, MlBk is called with LB: 114, UB: 115
 thread: 0, LongJobs.size() 16
thread: 1, MlBk is called with LB: 115, UB: 116
 thread: 1, LongJobs.size() 16
thread: 1, NSTable size: 19
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 2 0 5 0 3 2 2 0 3 3 2 0 0 
thread: 1, divisorComp: 0 0 0 1 0 1 0 1 2 1 0 1 1 1 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 0 1 0 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
thread: 0, NSTable size: 19
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 2 0 5 0 3 2 2 0 3 3 2 0 0 
thread: 0, divisorComp: 0 0 0 1 0 1 0 1 2 1 0 1 1 1 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 0 1 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.39682
thread: 1, sOPT: 10
copy the latest feasible solution to instance takes time: 0.472901
thread: 0, sOPT: 10
BKID: 0, LB: 114, UB: 114, OPT: 10
Dynamic Programming Runtime: 7.51441
Execution time between LB and UB is: 4
By far, all LB UB calculation runtime: 11
********************************************************
Total execution on UB and LB is: 11
OUT of Bk while loop  
UB    114
LB    114
T1    114
T2    114
OPT   10
nMachines   10
BkID	0
AllProbData.size()    3
ck :   2
AllProbData[ck].Ttable    114
ck :   1
AllProbData[ck].Ttable    115
ck :   0
AllProbData[ck].Ttable    126
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan120
Main Scheduling is Done
File 3-3 is Done.
******************************
Reading File...
File 3-4 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 189, LB: 98start at time: 1504901506
thread: 0, MlBk is called with LB: 98, UB: 121
thread: thread: 2, MlBk is called with LB: 1443, UB: 167, MlBk is called with LB: 
167, UB: 190thread: 
 thread: 2, LongJobs.size() 11
1, MlBk is called with LB: 121, UB: 144
 thread: 3, LongJobs.size() 9
 thread: 0, LongJobs.size() 13
 thread: 1, LongJobs.size() 12
thread: 3, NSTable size: 24
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 2 3 3 3 3 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 1 1 1 1 1 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 0 0 0 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
thread: 2, NSTable size: 40
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 3 2 3 3 2 2 3 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 1 1 1 1 1 1 1 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 0 0 0 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
thread: 1, NSTable size: 36
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 2 3 2 3 3 2 2 2 2 0 0 0 0 
thread: 1, divisorComp: 0 0 0 1 1 1 1 1 1 1 1 1 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
thread: 0, NSTable size: 28
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 1

thread: 0, blockDimSizeComp: 0 0 0 0 2 3 2 2 3 0 3 0 2 2 2 2 
thread: 0, divisorComp: 0 0 0 0 1 1 1 1 1 0 1 0 1 1 1 1 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 4
copy the latest feasible solution to instance takes time: 0.035676
thread: 3, sOPT: 4
Thread: 1, gpu_BlockDP is done.
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 5
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 6
copy the latest feasible solution to instance takes time: 0.108621
thread: 2, sOPT: 5
copy the latest feasible solution to instance takes time: 0.243521
thread: 1, sOPT: 6
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 8
copy the latest feasible solution to instance takes time: 0.184066
thread: 0, sOPT: 8
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 1, MlBk function is done, and BkID for all processes are collected.
3, MlBk function is done, and BkID for all processes are collected.
Thread: 2, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 98, UB: 110
BKID: 0, LB: 98, UB: 110, OPT: 8
Dynamic Programming Runtime: 9.36213
Execution time between LB and UB is: 4
By far, all LB UB calculation runtime: 4
Iteration: 2, UB: 110, LB: 98start at time: 1504901510
thread: 0, MlBk is called with LB: 98, UB: 101
thread: 3, MlBk is called with LB: 107, UB: 110
thread: 2, MlBk is called with LB: 104, UB: 107
 thread: 0, LongJobs.size() 14
 thread: 3, LongJobs.size() 13
 thread: 2, LongJobs.size() 13
thread: 1, MlBk is called with LB: 101, UB: 104
 thread: 1, LongJobs.size() 13
thread: 2, NSTable size: 24
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 1

thread: 2, blockDimSizeComp: 0 0 0 0 2 3 2 2 3 0 3 0 2 2 2 2 
thread: 2, divisorComp: 0 0 0 0 1 1 1 1 1 0 1 0 1 1 1 1 
thread: 2, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
thread: 3, NSTable size: 28
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 1

thread: 3, blockDimSizeComp: 0 0 0 0 2 3 2 2 3 0 3 0 2 2 2 2 
thread: 3, divisorComp: 0 0 0 0 1 1 1 1 1 0 1 0 1 1 1 1 
thread: 3, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 0 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
thread: 1, NSTable size: 24
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 1

thread: 1, blockDimSizeComp: 0 0 0 0 2 3 2 2 3 0 3 0 2 2 2 2 
thread: 1, divisorComp: 0 0 0 0 1 1 1 1 1 0 1 0 1 1 1 1 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
thread: 0, NSTable size: 31
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 1

thread: 0, blockDimSizeComp: 0 0 0 2 2 3 2 2 3 0 3 0 2 2 2 2 
thread: 0, divisorComp: 0 0 0 1 1 1 1 1 1 0 1 0 1 1 1 1 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
Thread: 1, gpu_BlockDP is done.
Thread: 2, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 9
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.757126
thread: 1, sOPT: 9
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 8
copy the latest feasible solution to instance takes time: 1.02741
thread: 2, sOPT: 9
copy the latest feasible solution to instance takes time: 0.468983
thread: 3, sOPT: 8
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.379686
thread: 0, sOPT: 9
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: 1, MlBk function is done, and BkID for all processes are collected.
Thread: 3, MlBk function is done, and BkID for all processes are collected.
Thread: 2, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 98, UB: 100
BKID: 0, LB: 98, UB: 100, OPT: 9
Dynamic Programming Runtime: 19.4171
Execution time between LB and UB is: 8
By far, all LB UB calculation runtime: 12
Iteration: 3, UB: 100, LB: 98start at time: 1504901518
thread: 0, MlBk is called with LB: 98, UB: 99
thread: 1, MlBk is called with LB: 99, UB: 100
 thread: 0, LongJobs.size() 14
 thread: 1, LongJobs.size() 14
thread: 1, NSTable size: 31
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 1

thread: 1, blockDimSizeComp: 0 0 0 2 2 3 2 2 3 0 3 0 2 2 2 2 
thread: 1, divisorComp: 0 0 0 1 1 1 1 1 1 0 1 0 1 1 1 1 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
thread: 0, NSTable size: 31
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 1

thread: 0, blockDimSizeComp: 0 0 0 2 2 3 2 2 3 0 3 0 2 2 2 2 
thread: 0, divisorComp: 0 0 0 1 1 1 1 1 1 0 1 0 1 1 1 1 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 9
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.704449
thread: 0, sOPT: 9
copy the latest feasible solution to instance takes time: 0.726847
thread: 1, sOPT: 9
BKID: 0, LB: 98, UB: 98, OPT: 9
Dynamic Programming Runtime: 13.8449
Execution time between LB and UB is: 7
By far, all LB UB calculation runtime: 19
********************************************************
Total execution on UB and LB is: 19
OUT of Bk while loop  
UB    98
LB    98
T1    98
T2    98
OPT   9
nMachines   10
BkID	0
AllProbData.size()    3
ck :   2
AllProbData[ck].Ttable    98
ck :   1
AllProbData[ck].Ttable    99
ck :   0
AllProbData[ck].Ttable    109
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan101
Main Scheduling is Done
File 3-4 is Done.
******************************
Reading File...
File 3-5 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 202, LB: 107start at time: 1504901525
thread: 0, MlBk is called with LB: 107, UB: 131
thread: 1, MlBk is called with LB: 131, UB: 155
 thread: 0, LongJobs.size() 15
thread: 2, MlBk is called with LB: 155, UB: 179
thread: 3, MlBk is called with LB: 179, UB: 203
 thread: 1, LongJobs.size() 14
 thread: 2, LongJobs.size() 14
 thread: 3, LongJobs.size() 11
thread: 3, NSTable size: 28
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 4
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 2 3 5 3 3 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 1 1 1 1 1 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 0 0 0 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
thread: 2, NSTable size: 29
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 2 2 2 4 0 3 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 2 2 2 1 0 1 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 1 1 1 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
thread: 1, NSTable size: 25
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 0 2 3 2 2 2 0 3 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 2 1 1 2 2 0 1 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 1 0 0 1 1 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 , mySum: 3
thread: 0, NSTable size: 28
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 2 0 2 3 2 2 2 3 0 3 0 0 0 
thread: 0, divisorComp: 0 0 0 1 0 2 1 1 2 1 1 0 1 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 1 0 0 1 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 2
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 5
copy the latest feasible solution to instance takes time: 0.057644
thread: 3, sOPT: 5
Thread: 2, gpu_BlockDP is done.
Thread: 1, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 6
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 7
copy the latest feasible solution to instance takes time: 0.121648
thread: 2, sOPT: 6
copy the latest feasible solution to instance takes time: 0.178228
thread: 1, sOPT: 7
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 8
copy the latest feasible solution to instance takes time: 0.170436
thread: 0, sOPT: 8
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: Thread: 2, MlBk function is done, and BkID for all processes are collected.13, MlBk function is done, and BkID for all processes are collected., MlBk function is done, and BkID for all processes are collected.


sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 107, UB: 120
BKID: 0, LB: 107, UB: 120, OPT: 8
Dynamic Programming Runtime: 6.788
Execution time between LB and UB is: 4
By far, all LB UB calculation runtime: 4
Iteration: 2, UB: 120, LB: 107start at time: 1504901529
thread: 0, MlBk is called with LB: 107, UB: 110
thread: 2, MlBk is called with LB: 113, UB: 116
thread: thread: 1, MlBk is called with LB: 110, UB: 3113, MlBk is called with LB: 
 thread: 0, LongJobs.size() 16
116, UB: 120
 thread: 2, LongJobs.size() 16
 thread: 1, LongJobs.size() 16
 thread: 3, LongJobs.size() 15
thread: 3, NSTable size: 23
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 2 0 2 3 2 2 2 3 0 3 0 0 0 
thread: 3, divisorComp: 0 0 0 1 0 2 1 1 2 1 1 0 1 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 1 0 0 1 0 0 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 2
thread: 0, NSTable size: 29
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 2 2 0 2 2 3 0 2 2 0 0 3 0 
thread: 0, divisorComp: 0 0 0 1 1 0 2 1 1 0 2 2 0 0 1 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 1 0 0 0 1 1 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 1 0 0 1 1 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 1 1 0 0 0 0 , mySum: 3
thread: 1, NSTable size: 29
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 2 2 0 2 2 3 0 2 2 0 0 3 0 
thread: 1, divisorComp: 0 0 0 1 1 0 2 1 1 0 2 2 0 0 1 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 1 0 0 0 1 1 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 1 0 0 1 1 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 1 1 0 0 0 0 , mySum: 3
thread: 2, NSTable size: 27
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 3 0 2 3 2 2 2 3 0 3 0 0 0 
thread: 2, divisorComp: 0 0 0 1 0 2 1 1 2 1 1 0 1 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 1 0 0 1 0 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 2
Thread: 0, gpu_BlockDP is done.
Thread: 3, gpu_BlockDP is done.
Thread: 1, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 9
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.684792
thread: 3, sOPT: 9
copy the latest feasible solution to instance takes time: 0.960338
thread: 1, sOPT: 10
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 9
copy the latest feasible solution to instance takes time: 1.19182
thread: 0, sOPT: 10
copy the latest feasible solution to instance takes time: 0.345735
thread: 2, sOPT: 9
Thread: 2, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 3Thread: 1, MlBk function is done, and BkID for all processes are collected.
0, MlBk function is done, and BkID for all processes are collected.
, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 107, UB: 109
BKID: 0, LB: 107, UB: 109, OPT: 10
Dynamic Programming Runtime: 13.5013
Execution time between LB and UB is: 4
By far, all LB UB calculation runtime: 8
Iteration: 3, UB: 109, LB: 107start at time: 1504901533
thread: 0, MlBk is called with LB: 107, UB: 108
thread: 1, MlBk is called with LB: 108, UB: 109
 thread: 0, LongJobs.size() 16
 thread: 1, LongJobs.size() 16
thread: 0, NSTable size: 25
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 2 2 0 2 2 3 0 2 2 0 0 3 0 
thread: 0, divisorComp: 0 0 0 1 1 0 2 1 1 0 2 2 0 0 1 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 1 0 0 0 1 1 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 1 0 0 1 1 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 1 1 0 0 0 0 , mySum: 3
thread: 1, NSTable size: 29
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 2 2 0 2 2 3 0 2 2 0 0 3 0 
thread: 1, divisorComp: 0 0 0 1 1 0 2 1 1 0 2 2 0 0 1 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 1 0 0 0 1 1 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 1 0 0 1 1 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 1 1 0 0 0 0 , mySum: 3
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 3e-06
thread: 0, sOPT: 11
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.246052
thread: 1, sOPT: 10
BKID: 0, LB: 108, UB: 108, OPT: 10
Dynamic Programming Runtime: 5.2316
Execution time between LB and UB is: 3
By far, all LB UB calculation runtime: 11
********************************************************
Total execution on UB and LB is: 11
OUT of Bk while loop  
UB    108
LB    108
T1    108
T2    108
OPT   10
nMachines   10
BkID	0
AllProbData.size()    3
ck :   2
AllProbData[ck].Ttable    108
ck :   1
AllProbData[ck].Ttable    108
ck :   0
AllProbData[ck].Ttable    119
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan115
Main Scheduling is Done
File 3-5 is Done.
******************************
Reading File...
File 3-6 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 166, LB: 86start at time: 1504901536
thread: 0, MlBk is called with LB: 86, UB: 106
thread: thread: 2, MlBk is called with LB: 126, UB: 1463, MlBk is called with LB: 
146, UB: 166
thread: 1, MlBk is called with LB: 106, UB: 126
 thread:  thread: 3, LongJobs.size() 120
, LongJobs.size() 14
 thread: 2, LongJobs.size() 13
 thread: 1, LongJobs.size() 13
thread: 3, NSTable size: 24
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 6
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 2 2 7 3 3 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 1 1 1 1 1 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 0 0 0 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
thread: 1, NSTable size: 21
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 0 2 2 2 5 2 2 3 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 1 1 2 1 1 1 1 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 1 0 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
thread: 2, NSTable size: 35
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 2 2 2 5 3 2 2 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 1 1 2 1 1 1 1 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 1 0 0 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
thread: 0, NSTable size: 22
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 6
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 2 0 2 2 2 7 2 2 2 2 0 0 0 
thread: 0, divisorComp: 0 0 0 1 0 1 1 1 1 1 1 1 1 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 4e-06
thread: 0, sOPT: 11
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 5
copy the latest feasible solution to instance takes time: 0.039941
thread: 3, sOPT: 5
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 7
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 6
copy the latest feasible solution to instance takes time: 0.093662
thread: 1, sOPT: 7
copy the latest feasible solution to instance takes time: 0.087407
thread: 2, sOPT: 6
Thread: 2, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: Thread: 3, MlBk function is done, and BkID for all processes are collected.10, MlBk function is done, and BkID for all processes are collected., MlBk function is done, and BkID for all processes are collected.


sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: 1 -1 -1 -1
Pick seg 1 for next iteration where LB: 97, UB: 117
BKID: 0, LB: 97, UB: 117, OPT: 7
Dynamic Programming Runtime: 4.8729
Execution time between LB and UB is: 2
By far, all LB UB calculation runtime: 2
Iteration: 2, UB: 117, LB: 97start at time: 1504901538
thread: 0, MlBk is called with LB: 97, UB: 102
 thread: 0, LongJobs.size() 14
thread: thread: 1, MlBk is called with LB: 102, UB: 107
2, MlBk is called with LB: 107, UB: 112
thread: 3, MlBk is called with LB: 112, UB: 117
 thread: 1, LongJobs.size() 13
 thread: 2, LongJobs.size() 13
 thread: 3, LongJobs.size() 13
thread: 1, NSTable size: 17
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 6
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, NSTable size: 21
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 1

thread: 1, blockDimSizeComp: 0 0 0 0 0 2 2 2thread:  27, i:  7, alltableelemets[maxindex].elm[i]: 21 2
 thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 6
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 211 , alltableelemets[maxindex].elm[i]: 21
 0thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 1
thread:  2, i: 13, alltableelemets[maxindex].elm[i]: 0
0thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
 0 
thread: 1, divisorComp: 0 0 0 0 0 1 1 1 1 1 1 1 1 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0

thread: 2, blockDimSizeComp: 0 0 0 0 0 2 2 2 7 2 2 2 2 0 0 0 
thread: 2, divisorComp: 0 0 0 0 0 1 1 1 1 1 1 1 1 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
thread: 3, NSTable size: 21
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 4
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 0 2 2 2 5 2 2 3 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 0 1 1 2 1 1 1 1 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 0 1 0 0 0 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
thread: 0, NSTable size: 22
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 6
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 2 0 2 2 2 7 2 2 2 2 0 0 0 
thread: 0, divisorComp: 0 0 0 1 0 1 1 1 1 1 1 1 1 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 7
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 7
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 9e-06
thread: 0, sOPT: 11
copy the latest feasible solution to instance takes time: 0.398266
thread: 1, sOPT: 10
copy the latest feasible solution to instance takes time: 0.467484
thread: 3, sOPT: 7
copy the latest feasible solution to instance takes time: 0.217784
thread: 2, sOPT: 7
Thread: 2, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 01, MlBk function is done, and BkID for all processes are collected., MlBk function is done, and BkID for all processes are collected.

Thread: 3, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: 1 -1 -1 -1
Pick seg 1 for next iteration where LB: 100, UB: 105
BKID: 0, LB: 100, UB: 105, OPT: 10
Dynamic Programming Runtime: 4.71639
Execution time between LB and UB is: 2
By far, all LB UB calculation runtime: 4
Iteration: 3, UB: 105, LB: 100start at time: 1504901540
thread: 0, MlBk is called with LB: 100, UB: 101
 thread: 0, LongJobs.size() 13
thread: thread: 12, MlBk is called with LB: 101, MlBk is called with LB: , UB: 102102, UB: 103

 thread: 2, LongJobs.size() 13 thread: 
1, LongJobs.size() 13
thread: 0, NSTable size: 14
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 6
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 0 0 2 2 2 7 2 2 2 2 0 0 0 
thread: 0, divisorComp: 0 0 0 0 0 1 1 1 1 1 1 1 1 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
thread: 1, NSTable size: 14
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 6
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 0 0 2 2 2 7 2 2 2 2 0 0 0 
thread: 1, divisorComp: 0 0 0 0 0 1 1 1 1 1 1 1 1 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
thread: 2, NSTable size: 17
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 6
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 0 0 2 2 2 7 2 2 2 2 0 0 0 
thread: 2, divisorComp: 0 0 0 0 0 1 1 1 1 1 1 1 1 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
thread: 3, MlBk is called with LB: 103, UB: 105
 thread: 3, LongJobs.size() 13
thread: 3, NSTable size: 17
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 6
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 0 0 2 2 2 7 2 2 2 2 0 0 0 
thread: 3, divisorComp: 0 0 0 0 0 1 1 1 1 1 1 1 1 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 11
copy the latest feasible solution to instance takes time: 6e-06
thread: 1, sOPT: 11
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 4e-06
thread: 0, sOPT: 11
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.116861
thread: 2, sOPT: 10
copy the latest feasible solution to instance takes time: 0.114967
thread: 3, sOPT: 10
Thread: 3, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: Thread: 210, MlBk function is done, and BkID for all processes are collected., MlBk function is done, and BkID for all processes are collected., MlBk function is done, and BkID for all processes are collected.


sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: 1 1 -1 -1
Pick seg 2 for next iteration where LB: 102, UB: 103
BKID: 0, LB: 102, UB: 102, OPT: 10
Dynamic Programming Runtime: 2.79331
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 5
********************************************************
Total execution on UB and LB is: 5
OUT of Bk while loop  
UB    102
LB    102
T1    101
T2    102
OPT   10
nMachines   10
BkID	0
AllProbData.size()    3
ck :   2
AllProbData[ck].Ttable    102
ck :   1
AllProbData[ck].Ttable    104
ck :   0
AllProbData[ck].Ttable    116
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan108
Main Scheduling is Done
File 3-6 is Done.
******************************
Reading File...
File 3-7 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 224, LB: 124start at time: 1504901541
thread: 0, MlBk is called with LB: 124, UB: 149
 thread: 0, LongJobs.size() 14
thread: thread: 1, MlBk is called with LB: 149, UB: 174
3, MlBk is called with LB: 199, UB: 224
thread: 2, MlBk is called with LB: 174, UB: 199
 thread: 1, LongJobs.size() 14
 thread: 3, LongJobs.size() 12
 thread: 2, LongJobs.size() 13
thread: 3, NSTable size: 22
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 5
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 3 3 3 2 0 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 1 1 2 2 0 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 0 1 1 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
thread: 2, NSTable size: 29
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 2 3 3 2 5 2 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 1 1 1 2 1 1 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 0 1 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
thread: 1, NSTable size: 33
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 3 2 2 2 3 5 2 0 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 1 1 1 2 1 1 1 0 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 0 1 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
thread: 0, NSTable size: 20
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 0 3 0 3 2 3 3 2 3 0 0 0 0 
thread: 0, divisorComp: 0 0 0 0 1 0 1 1 1 1 2 1 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 0 0 0 1 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 5
copy the latest feasible solution to instance takes time: 0.052539
thread: 3, sOPT: 5
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 6
copy the latest feasible solution to instance takes time: 0.125274
thread: 2, sOPT: 6
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 7
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.177678
thread: 1, sOPT: 7
copy the latest feasible solution to instance takes time: 0.162767
thread: 0, sOPT: 9
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: Thread: 2, MlBk function is done, and BkID for all processes are collected.3, MlBk function is done, and BkID for all processes are collected.

1, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 124, UB: 137
BKID: 0, LB: 124, UB: 137, OPT: 9
Dynamic Programming Runtime: 5.01496
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 1
Iteration: 2, UB: 137, LB: 124start at time: 1504901542
thread: 0, MlBk is called with LB: 124, UB: 127
thread: 3, MlBk is called with LB: 133, UB: 137
 thread: 0, LongJobs.size() 16
thread: thread: 1, MlBk is called with LB: 127, UB: 2130, MlBk is called with LB: 
130, UB: 133
 thread: 2, LongJobs.size() 15
 thread: 1, LongJobs.size() 15
 thread: 3, LongJobs.size() 15
thread: 1, NSTable size: 26
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 2 3 0 3 2 3 3 2 3 0 0 0 0 
thread: 1, divisorComp: 0 0 0 1 1 0 1 1 1 1 2 1 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 0 0 0 0 1 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
thread: 2, NSTable size: 26
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 2 3 0 3 2 3 3 2 3 0 0 0 0 
thread: 2, divisorComp: 0 0 0 1 1 0 1 1 1 1 2 1 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 0 0 0 0 1 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
thread: 3, NSTable size: 26
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 2 3 0 3 2 3 3 2 3 0 0 0 0 
thread: 3, divisorComp: 0 0 0 1 1 0 1 1 1 1 2 1 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 0 0 0 0 0 1 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
thread: 0, NSTable size: 27
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 3 0 3 0 2 2 3 2 3 3 2 0 0 
thread: 0, divisorComp: 0 0 0 1 0 1 0 1 1 1 2 1 1 1 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 0 0 0 1 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
Thread: 2, gpu_BlockDP is done.
Thread: 1, gpu_BlockDP is done.
Thread: 3, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 10
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.923306
thread: 2, sOPT: 10
copy the latest feasible solution to instance takes time: 1.14958
thread: 3, sOPT: 10
copy the latest feasible solution to instance takes time: 1.35089
thread: 1, sOPT: 10
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 1e-06
thread: 0, sOPT: 11
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 13, MlBk function is done, and BkID for all processes are collected., MlBk function is done, and BkID for all processes are collected.
Thread: 2, MlBk function is done, and BkID for all processes are collected.

sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: 1 -1 -1 -1
Pick seg 1 for next iteration where LB: 126, UB: 129
BKID: 0, LB: 126, UB: 129, OPT: 10
Dynamic Programming Runtime: 22.1818
Execution time between LB and UB is: 8
By far, all LB UB calculation runtime: 9
Iteration: 3, UB: 129, LB: 126start at time: 1504901550
thread: 0, MlBk is called with LB: 126, UB: 127
 thread: 0, LongJobs.size() 16
thread: thread: 2, MlBk is called with LB: 1128, UB: , MlBk is called with LB: 129127, UB: 128

 thread: 2, LongJobs.size() 15
 thread: 1, LongJobs.size() 16
thread: 2, NSTable size: 26
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 2 3 0 3 2 3 3 2 3 0 0 0 0 
thread: 2, divisorComp: 0 0 0 1 1 0 1 1 1 1 2 1 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 0 0 0 0 1 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
thread: 1, NSTable size: 32
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 3 0 3 0 2 2 3 2 3 3 2 0 0 
thread: 1, divisorComp: 0 0 0 1 0 1 0 1 1 1 2 1 1 1 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 0 0 0 1 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
thread: 0, NSTable size: 32
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 3 0 3 0 2 2 3 2 3 3 2 0 0 
thread: 0, divisorComp: 0 0 0 1 0 1 0 1 1 1 2 1 1 1 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 0 0 0 1 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
copy the latest feasible solution to instance takes time: 1.20404
thread: 2, sOPT: 10
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 2e-06
thread: 0, sOPT: 11
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 11
copy the latest feasible solution to instance takes time: 1e-06
thread: 1, sOPT: 11
BKID: 0, LB: 128, UB: 128, OPT: 10
Dynamic Programming Runtime: 25.6108
Execution time between LB and UB is: 9
By far, all LB UB calculation runtime: 18
********************************************************
Total execution on UB and LB is: 18
OUT of Bk while loop  
UB    128
LB    128
T1    128
T2    128
OPT   10
nMachines   10
BkID	0
AllProbData.size()    3
ck :   2
AllProbData[ck].Ttable    128
ck :   1
AllProbData[ck].Ttable    128
ck :   0
AllProbData[ck].Ttable    136
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan138
Main Scheduling is Done
File 3-7 is Done.
******************************
Reading File...
File 3-8 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 204, LB: 104start at time: 1504901559
thread: 0, MlBk is called with LB: 104, UB: 129
thread: 3, MlBk is called with LB: 179, UB: 204
 thread: 0, LongJobs.size() 12
thread: thread: 1, MlBk is called with LB: 129, UB: 2154, MlBk is called with LB: 154, UB: 
179 thread: 3, LongJobs.size() 11

 thread: 1, LongJobs.size() 12
 thread: 2, LongJobs.size() 11
thread: 2, NSTable size: 21
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 0 3 2 2 3 3 2 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 1 1 2 1 1 1 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 1 0 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
thread: 3, NSTable size: 36
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 3 2 3 3 3 3 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 0 0 0 0 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
thread: 0, NSTable size: 13
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 0 2 0 3 2 0 3 3 2 0 2 0 0 
thread: 0, divisorComp: 0 0 0 0 1 0 1 1 0 1 1 1 0 2 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 0 0 0 0 1 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 , mySum: 1
thread: 1, NSTable size: 27
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 2 0 3 2 2 3 2 2 2 0 0 0 0 
thread: 1, divisorComp: 0 0 0 1 0 1 1 1 1 1 1 2 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 0 0 0 0 0 1 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 6
copy the latest feasible solution to instance takes time: 0.099714
thread: 2, sOPT: 6
Thread: 0, gpu_BlockDP is done.
Thread: 3, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 5
copy the latest feasible solution to instance takes time: 0.100532
thread: 3, sOPT: 5
copy the latest feasible solution to instance takes time: 0.164701
thread: 0, sOPT: 10
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 7
copy the latest feasible solution to instance takes time: 0.066486
thread: 1, sOPT: 7
Thread: 1, MlBk function is done, and BkID for all processes are collected.
Thread: 3, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 2, MlBk function is done, and BkID for all processes are collected.0, MlBk function is done, and BkID for all processes are collected.

sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 104, UB: 117
BKID: 0, LB: 104, UB: 117, OPT: 10
Dynamic Programming Runtime: 2.51762
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 1
Iteration: 2, UB: 117, LB: 104start at time: 1504901560
thread: 0, MlBk is called with LB: 104, UB: 107
 thread: 0, LongJobs.size() 14
thread: 1, MlBk is called with LB: 107, UB: 110
thread: 3, MlBk is called with LB: 113, UB: 117
thread: 2, MlBk is called with LB: 110, UB: 113
 thread: 1, LongJobs.size() 12
 thread: 3, LongJobs.size() 12
 thread: 2, LongJobs.size() 12
thread: 3, NSTable size: 13
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 0 2 0 3 2 0 3 3 2 0 2 0 0 
thread: 3, divisorComp: 0 0 0 0 1 0 1 1 0 1 1 1 0 2 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
thread: 3, largestNoZeroBlockVec: 0 0 0 0 0 0 1 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 , mySum: 1
thread: 1, NSTable size: 13
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 3

thread: 1, blockDimSizeComp: 0 0 0 0 0 2 0 0 3 2 2 3 2 2 0 2 
thread: 1, divisorComp: 0 0 0 0 0 1 0 0 1 1 1 1 1 1 0 2 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
thread: 1, largestNoZeroBlockVec: 0 0 0 0 0 0 0 1 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
thread: 2, NSTable size: 13
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 3

thread: 2, blockDimSizeComp: 0 0 0 0 0 2 0 0 3 2 2 3 2 2 0 2 
thread: 2, divisorComp: 0 0 0 0 0 1 0 0 1 1 1 1 1 1 0 2 
thread: 2, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
thread: 2, largestNoZeroBlockVec: 0 0 0 0 0 0 0 1 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
thread: 0, NSTable size: 21
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 3

thread: 0, blockDimSizeComp: 0 0 0 3 0 2 0 0 3 2 2 3 2 2 0 2 
thread: 0, divisorComp: 0 0 0 1 0 1 0 0 1 1 1 1 1 1 0 2 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
thread: 0, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 1 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.218538
thread: 3, sOPT: 10
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.22033
thread: 2, sOPT: 10
copy the latest feasible solution to instance takes time: 0.246328
thread: 1, sOPT: 10
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 1e-06
thread: 0, sOPT: 11
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: 1, MlBk function is done, and BkID for all processes are collected.
Thread: 3, MlBk function is done, and BkID for all processes are collected.Thread: 
2, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: 1 -1 -1 -1
Pick seg 1 for next iteration where LB: 106, UB: 109
BKID: 0, LB: 106, UB: 109, OPT: 10
Dynamic Programming Runtime: 6.07751
Execution time between LB and UB is: 3
By far, all LB UB calculation runtime: 4
Iteration: 3, UB: 109, LB: 106start at time: 1504901563
thread: 0, MlBk is called with LB: 106, UB: 107
 thread: 0, LongJobs.size() 14
thread: thread: 2, MlBk is called with LB: 1108, UB: , MlBk is called with LB: 109107, UB: 108

 thread: 2, LongJobs.size() 12
 thread: 1, LongJobs.size() 14
thread: 2, NSTable size: 13
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 3

thread: 2, blockDimSizeComp: 0 0 0 0 0 2 0 0 3 2 2 3 2 2 0 2 
thread: 2, divisorComp: 0 0 0 0 0 1 0 0 1 1 1 1 1 1 0 2 
thread: 2, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
thread: 2, largestNoZeroBlockVec: 0 0 0 0 0 0 0 1 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
thread: 0, NSTable size: 21
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 3

thread: 0, blockDimSizeComp: 0 0 0 3 0 2 0 0 3 2 2 3 2 2 0 2 
thread: 0, divisorComp: 0 0 0 1 0 1 0 0 1 1 1 1 1 1 0 2 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
thread: 0, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 1 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
thread: 1, NSTable size: 21
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 3

thread: 1, blockDimSizeComp: 0 0 0 3 0 2 0 0 3 2 2 3 2 2 0 2 
thread: 1, divisorComp: 0 0 0 1 0 1 0 0 1 1 1 1 1 1 0 2 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
thread: 1, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 1 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.492609
thread: 2, sOPT: 10
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 5e-06
thread: 0, sOPT: 11
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 11
copy the latest feasible solution to instance takes time: 3e-06
thread: 1, sOPT: 11
BKID: 0, LB: 108, UB: 108, OPT: 10
Dynamic Programming Runtime: 8.05782
Execution time between LB and UB is: 3
By far, all LB UB calculation runtime: 7
********************************************************
Total execution on UB and LB is: 7
OUT of Bk while loop  
UB    108
LB    108
T1    108
T2    108
OPT   10
nMachines   10
BkID	0
AllProbData.size()    3
ck :   2
AllProbData[ck].Ttable    108
ck :   1
AllProbData[ck].Ttable    108
ck :   0
AllProbData[ck].Ttable    116
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan108
Main Scheduling is Done
File 3-8 is Done.
******************************
Reading File...
File 3-9 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 196, LB: 104start at time: 1504901566
thread: 0, MlBk is called with LB: 104, UB: 127
thread: 3, MlBk is called with LB: 173, UB: 196
thread: 1 thread: , MlBk is called with LB: 0127, LongJobs.size() , UB: 16
thread: 2, MlBk is called with LB: 150, UB: 173
 thread: 3, LongJobs.size() 11
 thread: 2, LongJobs.size() 15
thread: 3, NSTable size: 19
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 5
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 3 3 0 2 2 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 1 2 0 2 1 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 1 1 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
150
 thread: 1, LongJobs.size() 16
thread: 2, NSTable size: 36
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 5 2 5 2 3 2 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 1 2 1 1 1 1 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 1 0 0 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
thread: 0, NSTable size: 21
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 0 2 5 2 3 3 0 3 2 2 0 0 0 
thread: 0, divisorComp: 0 0 0 0 1 1 2 1 1 0 1 1 1 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 1 0 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
thread: 1, NSTable size: 43
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 2 5 2 2 2 2 3 2 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 1 1 2 2 1 1 1 1 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 1 1 0 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 4
copy the latest feasible solution to instance takes time: 0.032527
thread: 3, sOPT: 4
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 6
copy the latest feasible solution to instance takes time: 0.355408
thread: 2, sOPT: 6
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 7
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.49285
thread: 1, sOPT: 7
copy the latest feasible solution to instance takes time: 0.596199
thread: 0, sOPT: 10
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: 2, MlBk function is done, and BkID for all processes are collected.Thread: 
Thread: 3, MlBk function is done, and BkID for all processes are collected.
1, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 104, UB: 116
BKID: 0, LB: 104, UB: 116, OPT: 10
Dynamic Programming Runtime: 16.0582
Execution time between LB and UB is: 7
By far, all LB UB calculation runtime: 7
Iteration: 2, UB: 116, LB: 104start at time: 1504901573
thread: 0, MlBk is called with LB: 104, UB: 107
thread: 3, MlBk is called with LB: 113, UB: 116thread: 
1, MlBk is called with LB: 107, UB: 110
 thread: 0, LongJobs.size() thread: 16
2, MlBk is called with LB: 110, UB: 113
 thread: 3, LongJobs.size() 16
 thread: 2, LongJobs.size() 16
 thread: 1, LongJobs.size() 16
thread: 1, NSTable size: 19
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 0 0 2 5 3 2 5 0 0 3 2 2 0 
thread: 1, divisorComp: 0 0 0 0 0 1 1 1 1 1 0 0 1 1 1 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
thread: 2, NSTable size: 19
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 0 0 2 5 3 2 5 0 0 3 2 2 0 
thread: 2, divisorComp: 0 0 0 0 0 1 1 1 1 1 0 0 1 1 1 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
thread: 0, NSTable size: 18
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 0 0 2 5 3 2 5 0 0 3 2 2 0 
thread: 0, divisorComp: 0 0 0 0 0 1 1 1 1 1 0 0 1 1 1 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
thread: 3, NSTable size: 21
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 4
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 0 2 5 2 3 3 0 3 2 2 0 0 0 
thread: 3, divisorComp: 0 0 0 0 1 1 2 1 1 0 1 1 1 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 0 1 0 0 0 0 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
Thread: 1, gpu_BlockDP is done.
Thread: 2, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
copy the latest feasible solution to instance takes time: 1.48774
thread: 0, sOPT: 10
copy the latest feasible solution to instance takes time: 1.22253
Thread: 3, gpu_BlockDP is done.
thread: 2, sOPT: 10
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 10
copy the latest feasible solution to instance takes time: 1.54991
thread: 1, sOPT: 10
copy the latest feasible solution to instance takes time: 0.454635
thread: 3, sOPT: 10
Thread: 3, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 1, MlBk function is done, and BkID for all processes are collected.
2, MlBk function is done, and BkID for all processes are collected.
Thread: 0, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 104, UB: 106
BKID: 0, LB: 104, UB: 106, OPT: 10
Dynamic Programming Runtime: 16.683
Execution time between LB and UB is: 4
By far, all LB UB calculation runtime: 11
Iteration: 3, UB: 106, LB: 104start at time: 1504901578
thread: 0, MlBk is called with LB: 104, UB: 105
 thread: 0, LongJobs.size() 16
thread: 1, MlBk is called with LB: 105, UB: 106
 thread: 1, LongJobs.size() 16
thread: 1, NSTable size: 18
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 0 0 2 5 3 2 5 0 0 3 2 2 0 
thread: 1, divisorComp: 0 0 0 0 0 1 1 1 1 1 0 0 1 1 1 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
thread: 0, NSTable size: 18
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 0 0 2 5 3 2 5 0 0 3 2 2 0 
thread: 0, divisorComp: 0 0 0 0 0 1 1 1 1 1 0 0 1 1 1 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.422262
thread: 0, sOPT: 10
copy the latest feasible solution to instance takes time: 0.456429
thread: 1, sOPT: 10
BKID: 0, LB: 104, UB: 104, OPT: 10
Dynamic Programming Runtime: 7.25343
Execution time between LB and UB is: 3
By far, all LB UB calculation runtime: 15
********************************************************
Total execution on UB and LB is: 15
OUT of Bk while loop  
UB    104
LB    104
T1    104
T2    104
OPT   10
nMachines   10
BkID	0
AllProbData.size()    3
ck :   2
AllProbData[ck].Ttable    104
ck :   1
AllProbData[ck].Ttable    105
ck :   0
AllProbData[ck].Ttable    115
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan108
Main Scheduling is Done
File 3-9 is Done.
******************************
Reading File...
File 3-10 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 173, LB: 96start at time: 1504901582
thread: 0, MlBk is called with LB: 96, UB: 115
thread: thread: 23, MlBk is called with LB: , MlBk is called with LB: 134153, UB: , UB: 173thread: 153
 thread: 0, LongJobs.size() 15

 thread: 3, LongJobs.size() 14
1, MlBk is called with LB: 115, UB: 134
 thread: 2, LongJobs.size() 15
 thread: 1, LongJobs.size() 15
thread: 3, NSTable size: 23
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 6
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 3 2 7 2 0 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 1 2 1 2 0 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 1 0 1 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
thread: 2, NSTable size: 23
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 5
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 0 2 3 3 3 2 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 2 1 2 1 2 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 1 0 1 0 1 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 , mySum: 3
thread: 0, NSTable size: 18
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 5
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 0 0 2 3 3 2 3 2 2 0 0 0 0 
thread: 0, divisorComp: 0 0 0 0 0 1 1 1 1 2 1 2 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 0 0 1 0 1 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 , mySum: 2
thread: 1, NSTable size: 26
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 5
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 0 2 3 3 3 3 2 3 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 1 1 1 2 1 1 1 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 0 1 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
Thread: 2, gpu_BlockDP is done.
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 6
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 7
copy the latest feasible solution to instance takes time: 0.112507
thread: 3, sOPT: 6
copy the latest feasible solution to instance takes time: 0.239966
thread: 2, sOPT: 7
Thread: 1, gpu_BlockDP is done.
Thread: 0, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 8
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 2e-06
thread: 0, sOPT: 11
copy the latest feasible solution to instance takes time: 0.11706
thread: 1, sOPT: 8
Thread: 1, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 0, MlBk function is done, and BkID for all processes are collected.2, MlBk function is done, and BkID for all processes are collected.

Thread: 3, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: 1 -1 -1 -1
Pick seg 1 for next iteration where LB: 106, UB: 125
BKID: 0, LB: 106, UB: 125, OPT: 8
Dynamic Programming Runtime: 5.79559
Execution time between LB and UB is: 2
By far, all LB UB calculation runtime: 2
Iteration: 2, UB: 125, LB: 106start at time: 1504901584
thread: 0, MlBk is called with LB: 106, UB: 111
 thread: 0, LongJobs.size() 15
thread: thread: 2, MlBk is called with LB: 116, UB: 121
3, MlBk is called with LB: 121, UB: 126
 thread: 2, LongJobs.size() 15
thread: 1, MlBk is called with LB: 111, UB: 116
 thread: 3, LongJobs.size() 15
 thread: 1, LongJobs.size() 15
thread: 0, NSTable size: 21
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 5
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 0 0 2 3 3 2 3 2 2 0 0 0 0 
thread: 0, divisorComp: 0 0 0 0 0 1 1 1 1 2 1 2 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 0 0 1 0 1 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 , mySum: 2
thread: 2, NSTable size: 22
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 5
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 0 2 3 3 3 3 2 3 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 1 1 1 2 1 1 1 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 0 1 0 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
thread: 1, NSTable size: 22
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 5
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 0 2 3 3 3 3 2 3 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 1 1 1 2 1 1 1 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 0 1 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
thread: 3, NSTable size: 26
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 5
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 0 2 3 3 3 3 2 3 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 0 1 1 1 2 1 1 1 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 0 0 1 0 0 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.624137
thread: 0, sOPT: 10
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 8
Thread: 2, gpu_BlockDP is done.
Thread: 3, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 8
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 8
copy the latest feasible solution to instance takes time: 0.401755
thread: 1, sOPT: 8
copy the latest feasible solution to instance takes time: 0.489994
thread: 2, sOPT: 8
copy the latest feasible solution to instance takes time: 0.539126
thread: 3, sOPT: 8
Thread: 3, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: Thread: 210, MlBk function is done, and BkID for all processes are collected., MlBk function is done, and BkID for all processes are collected., MlBk function is done, and BkID for all processes are collected.


sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 106, UB: 109
BKID: 0, LB: 106, UB: 109, OPT: 10
Dynamic Programming Runtime: 7.59993
Execution time between LB and UB is: 3
By far, all LB UB calculation runtime: 5
Iteration: 3, UB: 109, LB: 106start at time: 1504901587
thread: 0, MlBk is called with LB: 106, UB: 107
 thread: 0, LongJobs.size() 15
thread: thread: 1, MlBk is called with LB: 2107, UB: , MlBk is called with LB: 108, UB: 108109

 thread: 2, LongJobs.size() 15
 thread: 1, LongJobs.size() 15
thread: 0, NSTable size: 18
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 5
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 0 0 2 3 3 2 3 2 2 0 0 0 0 
thread: 0, divisorComp: 0 0 0 0 0 1 1 1 1 2 1 2 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 0 0 1 0 1 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 , mySum: 2
thread: 1, NSTable size: 18
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 2, NSTable size: thread: 21
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 0
1thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 1
, i: thread: 2, i: 86, alltableelemets[maxindex].elm[i]: , alltableelemets[maxindex].elm[i]: 12
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 5
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 5
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 0 0 2 3 3 2 3 2 2 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 0 1 1 1 1 2 1 2 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 0 0 1 0 1 

thread: 1, blockDimSizeComp: 0 thread: 02, allBlocks:  0 0 00  00 0  20  30  3 20  30  20 2  00  00  0 00  00  0 
0 thread: 1, divisorComp: 0 0 0 0 0 1 1 1 1 2 1 2 0 , mySum: 00 
00 0 0 0 0 0 0 0 0 0 0 1 0  00  0 
0thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 0 0 1 0 1 
 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 , mySum: 2
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 , mySum: 2
Thread: 0, gpu_BlockDP is done.
Thread: 1, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 4e-06
thread: 0, sOPT: 11
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 11
copy the latest feasible solution to instance takes time: 3e-06
thread: 1, sOPT: 11
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.111836
thread: 2, sOPT: 10
BKID: 0, LB: 108, UB: 108, OPT: 10
Dynamic Programming Runtime: 3.4748
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 6
********************************************************
Total execution on UB and LB is: 6
OUT of Bk while loop  
UB    108
LB    108
T1    108
T2    108
OPT   10
nMachines   10
BkID	0
AllProbData.size()    3
ck :   2
AllProbData[ck].Ttable    108
ck :   1
AllProbData[ck].Ttable    108
ck :   0
AllProbData[ck].Ttable    124
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan112
Main Scheduling is Done
File 3-10 is Done.
******************************
Reading File...
File 3-11 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 243, LB: 143start at time: 1504901588
thread: 0, MlBk is called with LB: 143, UB: 168
thread: 3, MlBk is called with LB: 218, UB: 243
 thread: 0, LongJobs.size() 18
thread: 1, MlBk is called with LB: 168, UB: 193thread: 
2, MlBk is called with LB: 193, UB: 218
 thread: 3, LongJobs.size() 16
 thread: 2, LongJobs.size() 16
 thread: 1, LongJobs.size() 17
thread: 2, NSTable size: 18
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 7
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 0 4 3 5 2 0 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 2 1 1 2 0 0 0 0 0 0 0 0thread:  3
, NSTable size: 24
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: thread: 23, largestBlockVec: , i: 0 10 0, alltableelemets[maxindex].elm[i]: 0 0
 thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 7
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 21
 thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 4
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 4 3 5 2 0 00  0 0 01  00  00  0 00  00 0  0 00  
thread: 3, divisorComp: 0 0 0 2 1 1 2 
0 0thread: 2, largestNoZeroBlockVec: 1 0 0 1 
 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 1 0 0 1 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0thread:  , mySum: 2
3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
thread: 1, NSTable size: 30
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 5
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 2 3 2 2 3 4 0 0 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 1 2 2 2 1 1 0 0 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 1 1 1 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 , mySum: 3
thread: 0, NSTable size: 25
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 7
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 2 2 0 4 2 5 2 2 0 0 0 0 0 
thread: 0, divisorComp: 0 0 0 1 1 0 2 1 1 1 2 0 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 1 0 0 0 1 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 , mySum: 2
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 6
copy the latest feasible solution to instance takes time: 0.081583
thread: 2, sOPT: 6
Thread: 3, gpu_BlockDP is done.
Thread: 0, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 6
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.093654
thread: 3, sOPT: 6
copy the latest feasible solution to instance takes time: 0.379356
thread: 0, sOPT: 10
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 7
copy the latest feasible solution to instance takes time: 0.125109
thread: 1, sOPT: 7
Thread: 1, MlBk function is done, and BkID for all processes are collected.
Thread: 3, MlBk function is done, and BkID for all processes are collected.Thread: Thread: 2, MlBk function is done, and BkID for all processes are collected.

0, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 143, UB: 156
BKID: 0, LB: 143, UB: 156, OPT: 10
Dynamic Programming Runtime: 6.59579
Execution time between LB and UB is: 3
By far, all LB UB calculation runtime: 3
Iteration: 2, UB: 156, LB: 143start at time: 1504901591
thread: 0, MlBk is called with LB: 143, UB: 146
thread: 2, MlBk is called with LB: 149, UB: 152
thread: thread: 1, MlBk is called with LB: 3 thread: 0, MlBk is called with LB: 152, UB: 156
, LongJobs.size() 18
 thread: 2, LongJobs.size() 18
146, UB: 149
 thread: 1, LongJobs.size() 18
 thread: 3, LongJobs.size() 18
thread: 0, NSTable size: 22
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 7
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 2 2 0 4 2 5 2 2 0 0 0 0 0 
thread: 0, divisorComp: 0 0 0 1 1 0 2 1 1 1 2 0 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 1 0 0 0 1 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 , mySum: 2
thread: 1, NSTable size: 22
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 7
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 2 2 0 4 2 5 2 2 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 1 1 0 2 1 1 1 2 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 1 0 0 0 1 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 , mySum: 2
thread: 3, NSTable size: 25
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 7
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 2 2 0 4 2 5 2 2 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 1 1 0 2 1 1 1 2 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 0 1 0 0 0 1 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 , mySum: 2
thread: 2, NSTable size: 22
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 7
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 2 2 0 4 2 5 2 2 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 1 1 0 2 1 1 1 2 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 1 0 0 0 1 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 , mySum: 2
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
Thread: 1, gpu_BlockDP is done.
Thread: 2, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.849081
thread: 0, sOPT: 10
copy the latest feasible solution to instance takes time: 0.828998
thread: 1, sOPT: 10
copy the latest feasible solution to instance takes time: 0.943561
thread: 2, sOPT: 10
copy the latest feasible solution to instance takes time: 0.88461
thread: 3, sOPT: 10
Thread: 3, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 21, MlBk function is done, and BkID for all processes are collected., MlBk function is done, and BkID for all processes are collected.

Thread: 0, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 143, UB: 145
BKID: 0, LB: 143, UB: 145, OPT: 10
Dynamic Programming Runtime: 9.53014
Execution time between LB and UB is: 3
By far, all LB UB calculation runtime: 6
Iteration: 3, UB: 145, LB: 143start at time: 1504901594
thread: 0, MlBk is called with LB: 143, UB: 144
 thread: 0, LongJobs.size() 19
thread: 1, MlBk is called with LB: 144, UB: 145
 thread: 1, LongJobs.size() 18
thread: 1, NSTable size: 22
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 7
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 2 2 0 4 2 5 2 2 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 1 1 0 2 1 1 1 2 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 1 0 0 0 1 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 , mySum: 2
thread: 0, NSTable size: 32
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 5
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 2 3 0 3 3 2 2 3 2 0 0 0 0 
thread: 0, divisorComp: 0 0 0 1 1 0 1 2 1 2 1 2 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 1 0 1 0 1 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 0 1 0 1 0 1 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 0 1 0 1 0 0 0 0 , mySum: 3
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.294515
thread: 1, sOPT: 10
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 1e-06
thread: 0, sOPT: 11
BKID: 0, LB: 144, UB: 144, OPT: 10
Dynamic Programming Runtime: 11.2384
Execution time between LB and UB is: 7
By far, all LB UB calculation runtime: 13
********************************************************
Total execution on UB and LB is: 13
OUT of Bk while loop  
UB    144
LB    144
T1    144
T2    144
OPT   10
nMachines   10
BkID	0
AllProbData.size()    3
ck :   2
AllProbData[ck].Ttable    144
ck :   1
AllProbData[ck].Ttable    144
ck :   0
AllProbData[ck].Ttable    155
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan155
Main Scheduling is Done
File 3-11 is Done.
******************************
Reading File...
File 3-12 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 191, LB: 99start at time: 1504901601
thread: 0, MlBk is called with LB: 99, UB: 122
thread: thread: 3, MlBk is called with LB: 168, UB: 1912, MlBk is called with LB: 
145, UB: 168 thread: 3, LongJobs.size() 10
thread: 1, MlBk is called with LB: 122, UB: 145
 thread: 0, LongJobs.size() 16

 thread: 1, LongJobs.size() 13
 thread: 2, LongJobs.size() 11
thread: 3, NSTable size: 19
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 2 0 2 3 3 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 2 0 2 1 1 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 1 1 0 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
thread: 2, NSTable size: 26
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 2 2 0 2 3 3 3 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 1 2 0 1 1 1 1 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 1 0 0 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
thread: 1, NSTable size: 28
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 3 2 2 0 2 3 3 3 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 1 1 2 0 1 1 1 1 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 1 0 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
thread: 0, NSTable size: 26
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 0 5 2 2 2 0 0 2 3 0 3 3 0 
thread: 0, divisorComp: 0 0 0 0 1 1 1 2 0 0 1 1 0 1 1 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 0 1 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 4
copy the latest feasible solution to instance takes time: 0.031727
thread: 3, sOPT: 4
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 5
copy the latest feasible solution to instance takes time: 0.065809
thread: 2, sOPT: 5
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 7
copy the latest feasible solution to instance takes time: 0.150118
thread: 1, sOPT: 7
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.229989
thread: 0, sOPT: 10
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: Thread: 213, MlBk function is done, and BkID for all processes are collected., MlBk function is done, and BkID for all processes are collected., MlBk function is done, and BkID for all processes are collected.


sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 99, UB: 111
BKID: 0, LB: 99, UB: 111, OPT: 10
Dynamic Programming Runtime: 10.3705
Execution time between LB and UB is: 5
By far, all LB UB calculation runtime: 5
Iteration: 2, UB: 111, LB: 99start at time: 1504901606
thread: 0, MlBk is called with LB: 99, UB: 102
thread:  thread: 0, LongJobs.size() 2, MlBk is called with LB: 10516
thread: 1, MlBk is called with LB: 102, UB: 105
, UB: 108
thread: 3, MlBk is called with LB: 108, UB: 111
 thread: 1, LongJobs.size() 16
 thread: 2, LongJobs.size() 16
 thread: 3, LongJobs.size() 16
thread: 1, NSTable size: 22
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
0, NSTable size: thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
19thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 4

thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: thread: 10, i: , i: 60, alltableelemets[maxindex].elm[i]: , alltableelemets[maxindex].elm[i]: 01

thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0thread: , i: 1, i: 76, alltableelemets[maxindex].elm[i]: , alltableelemets[maxindex].elm[i]: 31

thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 0 5 2 2 2 0 0 2 3 0 3 3 0 
thread: 1, divisorComp: 0 0 0 0 1 1 1 2 0 0 1 1 0 1 1 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 0 1 0 0 0 0 

thread: 0, blockDimSizeComp: 0 0 thread: 01 0 , allBlocks: 5 02  02  20 0  0 2 03  00  30 3  00  
0thread: 0, divisorComp: 0 0 0 0 1 1 1 2 0 0 1 1 0 1 1  00  
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 0 1 0 00 0 0  
0 0 0 0 0 0 , mySum: 0
thread: 00 0, allBlocks:  00  0 0 00  00  00  0 01 0  00  0 00  00 0  0 00  0 00 0  0, mySum:  , mySum: 01

0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
thread: 2, NSTable size: 22
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 0 5 2 2 2 0 0 2 3 0 3 3 0 
thread: 2, divisorComp: 0 0 0 0 1 1 1 2 0 0 1 1 0 1 1 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 0 1 0 0 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
thread: 3, NSTable size: 26
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 4
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 0 5 2 2 2 0 0 2 3 0 3 3 0 
thread: 3, divisorComp: 0 0 0 0 1 1 1 2 0 0 1 1 0 1 1 0 
thread: 3, largestBlockVec: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 0 0 1 0 0 0 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 8e-06
thread: 0, sOPT: 11
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
copy the latest feasible solution to instance takes time: 1.09754
thread: 1, sOPT: 10
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 10
copy the latest feasible solution to instance takes time: 1.29117
thread: 2, sOPT: 10
copy the latest feasible solution to instance takes time: 0.433036
thread: 3, sOPT: 10
Thread: 3, MlBk function is done, and BkID for all processes are collected.
Thread: 1, MlBk function is done, and BkID for all processes are collected.
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: 2, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: 1 -1 -1 -1
Pick seg 1 for next iteration where LB: 101, UB: 104
BKID: 0, LB: 101, UB: 104, OPT: 10
Dynamic Programming Runtime: 17.2918
Execution time between LB and UB is: 5
By far, all LB UB calculation runtime: 10
Iteration: 3, UB: 104, LB: 101start at time: 1504901611
thread: 0, MlBk is called with LB: 101, UB: 102
 thread: 0, LongJobs.size() 16
thread: thread: 1, MlBk is called with LB: 1022, MlBk is called with LB: , UB: 103, UB: 103104

 thread: 2, LongJobs.size() 16
 thread: 1, LongJobs.size() 16
thread: 0, NSTable size: 19
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 0 5 2 2 2 0 0 2 3 0 3 3 0 
thread: 0, divisorComp: 0 0 0 0 1 1 1 2 0 0 1 1 0 1 1 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 0 1 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
thread: 1, NSTable size: 22
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, NSTable size: 22
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0

thread: 2, i: thread: 1, blockDimSizeComp: 0 0 0 0 5 2 2 2 0 0 2 3 0 3 3 0 
thread: 1, divisorComp: 0 0 0 0 1 1 1 2 0 0 1 1 03 , alltableelemets[maxindex].elm[i]: 1 0
1 thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 4
0 thread: 2
, i: thread: 1, largestBlockVec: 0 0 0 0 0 0 0 1 5, alltableelemets[maxindex].elm[i]: 1
thread: 02, i: 6, alltableelemets[maxindex].elm[i]: 1 
0thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0  0 0 00  05  2 02 2  00  0 2
 thread: 1, largestNoZeroBlockVec: 0 0 0 1 0 0 0 0 
3 0 3 3 0 
thread: 2, divisorComp: 0 0 0 0 1 1 1 2 0 0 1 1 0 1 1thread:  0 
1, allBlocks: thread: 2, largestBlockVec: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 0 1 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0thread: 
20 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 5e-06
thread: 0, sOPT: 11
Thread: 2, gpu_BlockDP is done.
Thread: 1, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.610701
thread: 2, sOPT: 10
copy the latest feasible solution to instance takes time: 0.764549
thread: 1, sOPT: 10
BKID: 0, LB: 102, UB: 102, OPT: 10
Dynamic Programming Runtime: 12.0808
Execution time between LB and UB is: 5
By far, all LB UB calculation runtime: 15
********************************************************
Total execution on UB and LB is: 15
OUT of Bk while loop  
UB    102
LB    102
T1    102
T2    102
OPT   10
nMachines   10
BkID	0
AllProbData.size()    3
ck :   2
AllProbData[ck].Ttable    102
ck :   1
AllProbData[ck].Ttable    103
ck :   0
AllProbData[ck].Ttable    110
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan107
Main Scheduling is Done
File 3-12 is Done.
******************************
Reading File...
File 3-13 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 190, LB: 97start at time: 1504901616
thread: 0, MlBk is called with LB: 97, UB: 120
thread: 3, MlBk is called with LB: 166, UB: 190
 thread: 0, LongJobs.size() 13thread: 
1, MlBk is called with LB: 120, UB: 143
 thread: 3, LongJobs.size() 12
thread: 2, MlBk is called with LB: 143, UB: 166
 thread: 1, LongJobs.size() 13
 thread: 2, LongJobs.size() 12
thread: 3, NSTable size: 20
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 5
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 3 3 0 2 3 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 1 2 0 2 1 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 1 1 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
thread: 2, NSTable size: 24
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 0 3 5 2 2 2 2 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 1 1 1 1 2 1 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 0 0 1 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
thread: 1, NSTable size: 22
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 2 0 3 5 2 2 3 3 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 1 0 1 1 1 1 1 1 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 0 0 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
thread: 0, NSTable size: 17
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 0 2 0 0 3 5 2 0 2 3 2 2 0 
thread: 0, divisorComp: 0 0 0 0 1 0 0 1 1 1 0 1 1 1 1 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 5
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.058198
thread: 3, sOPT: 5
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 6
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 7
copy the latest feasible solution to instance takes time: 0.291411
thread: 0, sOPT: 9
copy the latest feasible solution to instance takes time: 0.172861
thread: 2, sOPT: 6
copy the latest feasible solution to instance takes time: 0.121225
thread: 1, sOPT: 7
Thread: 1, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 3, MlBk function is done, and BkID for all processes are collected.
2, MlBk function is done, and BkID for all processes are collected.
Thread: 0, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 97, UB: 109
BKID: 0, LB: 97, UB: 109, OPT: 9
Dynamic Programming Runtime: 3.55739
Execution time between LB and UB is: 2
By far, all LB UB calculation runtime: 2
Iteration: 2, UB: 109, LB: 97start at time: 1504901618
thread: 0, MlBk is called with LB: 97, UB: 100
 thread: 0, LongJobs.size() 13
thread: thread: 32, MlBk is called with LB: , MlBk is called with LB: 103, UB: 106106, UB: 109

thread: 1, MlBk is called with LB: 100, UB: 103
 thread: 2, LongJobs.size() 13
 thread: 3, LongJobs.size() 13
 thread: 1, LongJobs.size() 13
thread: 0, NSTable size: 12
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 0 2 0 0 3 5 2 0 2 3 2 2 0 
thread: 0, divisorComp: 0 0 0 0 1 0 0 1 1 1 0 1 1 1 1 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
thread: 1, NSTable size: 12
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 0 2 0 0 3 5 2 0 2 3 2 2 0 
thread: 1, divisorComp: 0 0 0 0 1 0 0 1 1 1 0 1 1 1 1 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
thread: 2, NSTable size: 14
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 0 2 0 0 3 5 2 0 2 3 2 2 0 
thread: 2, divisorComp: 0 0 0 0 1 0 0 1 1 1 0 1 1 1 1 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
thread: 3, NSTable size: 14
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 0 2 0 0 3 5 2 0 2 3 2 2 0 
thread: 3, divisorComp: 0 0 0 0 1 0 0 1 1 1 0 1 1 1 1 0 
thread: 3, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 8e-06
thread: 0, sOPT: 11
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 11
copy the latest feasible solution to instance takes time: 4e-06
thread: 1, sOPT: 11
Thread: 3, gpu_BlockDP is done.
Thread: 2, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 10
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.189698
thread: 3, sOPT: 10
copy the latest feasible solution to instance takes time: 0.233965
thread: 2, sOPT: 10
Thread: 2, MlBk function is done, and BkID for all processes are collected.
Thread: 3, MlBk function is done, and BkID for all processes are collected.Thread: 
1Thread: 0, MlBk function is done, and BkID for all processes are collected.
, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: 1 1 -1 -1
Pick seg 2 for next iteration where LB: 102, UB: 105
BKID: 0, LB: 102, UB: 105, OPT: 10
Dynamic Programming Runtime: 4.08995
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 3
Iteration: 3, UB: 105, LB: 102start at time: 1504901619
thread: 0, MlBk is called with LB: 102, UB: 103
 thread: 0, LongJobs.size() 13
thread: thread: 21, MlBk is called with LB: , MlBk is called with LB: 104, UB: 105103, UB: 
104
 thread: 2, LongJobs.size() 13
 thread: 1, LongJobs.size() 13
thread: 0, NSTable size: 14
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 0 2 0 0 3 5 2 0 2 3 2 2 0 
thread: 0, divisorComp: 0 0 0 0 1 0 0 1 1 1 0 1 1 1 1 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
thread: 2, NSTable size: 14
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 2
1thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 1, NSTable size: 
14thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 
thread: 2, blockDimSizeComp: 0 0 0 0 2 0 0 3 5 22
 0 2 3 2 2 0 
thread: 2, divisorComp: 0 0 0 0 1 0 0 1 1 1 0 1 1thread:  1 1 10, i: 8, alltableelemets[maxindex].elm[i]:  4

thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1thread: 2, largestBlockVec: 0 0 0 0 0 0 0 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 1
thread:  1, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0

thread: 1, blockDimSizeComp: 0 0 0 0 2 0 0 3 5 2 0 2 3 2 2 0 
thread: 1, divisorComp: 0 0 0 0 1 0 0 1 1 1 0 1 1 1 1 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.350314
thread: 1, sOPT: 10
copy the latest feasible solution to instance takes time: 0.378243
thread: 2, sOPT: 10
copy the latest feasible solution to instance takes time: 0.416807
thread: 0, sOPT: 10
BKID: 0, LB: 102, UB: 102, OPT: 10
Dynamic Programming Runtime: 3.38653
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 4
********************************************************
Total execution on UB and LB is: 4
OUT of Bk while loop  
UB    102
LB    102
T1    102
T2    102
OPT   10
nMachines   10
BkID	0
AllProbData.size()    3
ck :   2
AllProbData[ck].Ttable    102
ck :   1
AllProbData[ck].Ttable    104
ck :   0
AllProbData[ck].Ttable    108
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan109
Main Scheduling is Done
File 3-13 is Done.
******************************
Reading File...
File 3-14 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 200, LB: 101start at time: 1504901620
thread: 0, MlBk is called with LB: 101, UB: 126
thread: 3, MlBk is called with LB: 176, UB: 201
 thread: 0, LongJobs.size() 13
thread: thread: 2, MlBk is called with LB: 1511, UB: , MlBk is called with LB: 176126, UB: 151

 thread: 2, LongJobs.size() 11
 thread: 3, LongJobs.size() 11
 thread: 1, LongJobs.size() 13
thread: 2, NSTable size: 24
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 2 2 2 2 2 3 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 1 1 1 2 2 1 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 0 1 1 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
thread: 3, NSTable size: 36
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 3 2 2 3 3 2 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 1 1 2 1 1 1 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 0 1 0 0 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
thread: 1, NSTable size: 26
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 3 0 3 2 0 2 3 3 2 0 0 0 0 
thread: 1, divisorComp: 0 0 0 1 0 1 1 0 2 1 1 1 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 0 1 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
thread: 0, NSTable size: 19
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 0 3 2 2 2 0 2 3 3 0 2 0 0 
thread: 0, divisorComp: 0 0 0 0 1 1 1 1 0 2 1 1 0 1 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 0 0 1 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
Thread: 0, gpu_BlockDP is done.
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 5
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 5
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.259023
thread: 2, sOPT: 5
copy the latest feasible solution to instance takes time: 0.298702
thread: 3, sOPT: 5
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 8
copy the latest feasible solution to instance takes time: 0.579815
thread: 0, sOPT: 9
copy the latest feasible solution to instance takes time: 0.216048
thread: 1, sOPT: 8
Thread: 1, MlBk function is done, and BkID for all processes are collected.
Thread: 3, MlBk function is done, and BkID for all processes are collected.
Thread: 2, MlBk function is done, and BkID for all processes are collected.
Thread: 0, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 101, UB: 114
BKID: 0, LB: 101, UB: 114, OPT: 9
Dynamic Programming Runtime: 4.9414
Execution time between LB and UB is: 2
By far, all LB UB calculation runtime: 2
Iteration: 2, UB: 114, LB: 101start at time: 1504901622
thread: 0, MlBk is called with LB: 101, UB: 104
 thread: 0, LongJobs.size() 13
thread: thread: 32, MlBk is called with LB: 110, MlBk is called with LB: , UB: 107114, UB: 110

 thread: 3, LongJobs.size() 13
 thread: 2, LongJobs.size() 13
thread: 1, MlBk is called with LB: 104, UB: 107
 thread: 1, LongJobs.size() 13
thread: 0, NSTable size: 12
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 1

thread: 0, blockDimSizeComp: 0 0 0 0 0 3 0 3 0 2 0 2 3 2 2 2 
thread: 0, divisorComp: 0 0 0 0 0 1 0 1 0 1 0 2 1 1 1 1 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 0 1 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
thread: 3, NSTable size: 19
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 0 3 2 2 2 0 2 3 3 0 2 0 0 
thread: 3, divisorComp: 0 0 0 0 1 1 1 1 0 2 1 1 0 1 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 0 0 0 1 0 0 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
thread: 2, NSTable size: 14
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 1

thread: 2, blockDimSizeComp: 0 0 0 0 0 3 0 3 0 2 0 2 3 2 2 2 
thread: 2, divisorComp: 0 0 0 0 0 1 0 1 0 1 0 2 1 1 1 1 
thread: 2, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 0 1 0 0 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
thread: 1, NSTable size: 12
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 1

thread: 1, blockDimSizeComp: 0 0 0 0 0 3 0 3 0 2 0 2 3 2 2 2 
thread: 1, divisorComp: 0 0 0 0 0 1 0 1 0 1 0 2 1 1 1 1 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 0 1 0 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 8e-06
thread: 0, sOPT: 11
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 11
copy the latest feasible solution to instance takes time: 4e-06
thread: 1, sOPT: 11
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.291283
thread: 2, sOPT: 10
copy the latest feasible solution to instance takes time: 0.262858
thread: 3, sOPT: 9
Thread: 3, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 2, MlBk function is done, and BkID for all processes are collected.
1, MlBk function is done, and BkID for all processes are collected.
Thread: 0, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: 1 1 -1 -1
Pick seg 2 for next iteration where LB: 106, UB: 109
BKID: 0, LB: 106, UB: 109, OPT: 10
Dynamic Programming Runtime: 4.87487
Execution time between LB and UB is: 2
By far, all LB UB calculation runtime: 4
Iteration: 3, UB: 109, LB: 106start at time: 1504901624
thread: 0, MlBk is called with LB: 106, UB: 107
 thread: 0, LongJobs.size() 13
thread: thread: 21, MlBk is called with LB: , MlBk is called with LB: 107108, UB: , UB: 109108

 thread: 2, LongJobs.size() 13
 thread: 1, LongJobs.size() 13
thread: 0, NSTable size: 12
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 1

thread: 0, blockDimSizeComp: 0 0 0 0 0 3 0 3 0 2 0 2 3 2 2 2 
thread: 0, divisorComp: 0 0 0 0 0 1 0 1 0 1 0 2 1 1 1 1 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 0 1 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
thread: 1, NSTable size: 12
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 1

thread: 1, blockDimSizeComp: 0 0 0 0 0 3 0 3 0 2 0 2 3 2 2 2 
thread: 1, divisorComp: 0 0 0 0 0 1 0 1 0 1 0 2 1 1 1 1 
thread: thread: 1, largestBlockVec: 0 20, NSTable size:  140 0 0
 thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 2
thread:  2, i: 6, alltableelemets[maxindex].elm[i]: 00 
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0 0 0 0 1 0 0 0 20 , i: 
8thread: 1, largestNoZeroBlockVec: 0 0 0 1 0 0 0 0 
, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: thread: 2, i: 113, alltableelemets[maxindex].elm[i]: 1
, allBlocks: thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1

thread: 2, blockDimSizeComp: 0 0 0 0 0 3 0 3 0 2 0 2 3 2 2 2 
thread: 2, divisorComp: 0 0 0 0 0 1 0 1 0 1 0 2 1 1 1 1 
thread: 2, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 0 1 0 0 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
Thread: 1, gpu_BlockDP is done.
Thread: 0, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 11
copy the latest feasible solution to instance takes time: 5e-06
thread: 1, sOPT: 11
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 6e-06
thread: 0, sOPT: 11
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.1151
thread: 2, sOPT: 10
BKID: 0, LB: 108, UB: 108, OPT: 10
Dynamic Programming Runtime: 3.32567
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 5
********************************************************
Total execution on UB and LB is: 5
OUT of Bk while loop  
UB    108
LB    108
T1    108
T2    108
OPT   10
nMachines   10
BkID	0
AllProbData.size()    3
ck :   2
AllProbData[ck].Ttable    108
ck :   1
AllProbData[ck].Ttable    108
ck :   0
AllProbData[ck].Ttable    113
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan110
Main Scheduling is Done
File 3-14 is Done.
******************************
Reading File...
File 3-15 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 192, LB: 98start at time: 1504901625
thread: 0, MlBk is called with LB: 98, UB: 121
thread: 3, MlBk is called with LB: 167, UB: 192
 thread: thread: 0, LongJobs.size() 214, MlBk is called with LB: 144, UB: 
167thread: 1, MlBk is called with LB: 121, UB: 144
 thread: 3, LongJobs.size() 10
 thread: 1, LongJobs.size() 11

 thread: 2, LongJobs.size() 10
thread: 3, NSTable size: 24
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 2 3 3 2 3 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 1 1 1 2 1 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 0 0 1 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
thread: 2, NSTable size: 22
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 0 2 3 3 2 3 3 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 0 0 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
thread: 1, NSTable size: 25
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 2 2 2 2 3 0 2 3 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 1 1 1 1 1 0 2 1 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 0 0 0 1 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
thread: 0, NSTable size: 24
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 0 2 2 2 0 3 0 3 0 3 2 3 0 
thread: 0, divisorComp: 0 0 0 0 2 1 1 0 1 0 1 0 1 1 1 0 
thread: 0, largestBlockVec: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 1 0 0 0 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 5
copy the latest feasible solution to instance takes time: 0.083878
thread: 3, sOPT: 5
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 5
copy the latest feasible solution to instance takes time: 0.091246
thread: 2, sOPT: 5
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 7
copy the latest feasible solution to instance takes time: 0.109982
thread: 1, sOPT: 7
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.171228
thread: 0, sOPT: 9
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 1, MlBk function is done, and BkID for all processes are collected.
3, MlBk function is done, and BkID for all processes are collected.
Thread: 2, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 98, UB: 110
BKID: 0, LB: 98, UB: 110, OPT: 9
Dynamic Programming Runtime: 5.40455
Execution time between LB and UB is: 3
By far, all LB UB calculation runtime: 3
Iteration: 2, UB: 110, LB: 98start at time: 1504901628
thread: 0, MlBk is called with LB: 98, UB: 101
 thread: 0, LongJobs.size() 14
thread: thread: 1, MlBk is called with LB: 3thread: , MlBk is called with LB: 2, MlBk is called with LB: 104, UB: 107
 thread: 2, LongJobs.size() 14
107, UB: 110
101, UB: 104
 thread: 3, LongJobs.size() 14
 thread: 1, LongJobs.size() 14
thread: 0, NSTable size: 18
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 0 2 2 2 0 3 0 3 0 3 2 3 0 
thread: 0, divisorComp: 0 0 0 0 2 1 1 0 1 0 1 0 1 1 1 0 
thread: 0, largestBlockVec: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 1 0 0 0 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
thread: 1, NSTable size: 20
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 0 2 2 2 0 3 0 3 0 3 2 3 0 
thread: 1, divisorComp: 0 0 0 0 2 1 1 0 1 0 1 0 1 1 1 0 
thread: 1, largestBlockVec: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 1 0 0 0 0 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
thread: 3, NSTable size: 24
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 0 2 2 2 0 3 0 3 0 3 2 3 0 
thread: 3, divisorComp: 0 0 0 0 2 1 1 0 1 0 1 0 1 1 1 0 
thread: 3, largestBlockVec: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 1 0 0 0 0 0 0 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
thread: 2, NSTable size: 20
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 0 2 2 2 0 3 0 3 0 3 2 3 0 
thread: 2, divisorComp: 0 0 0 0 2 1 1 0 1 0 1 0 1 1 1 0 
thread: 2, largestBlockVec: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 1 0 0 0 0 0 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
copy the latest feasible solution to instance takes time: 1.09355
thread: 0, sOPT: 10
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.97397
thread: 1, sOPT: 10
copy the latest feasible solution to instance takes time: 1.13873
thread: 2, sOPT: 10
copy the latest feasible solution to instance takes time: 0.455032
thread: 3, sOPT: 9
Thread: 3, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 1, MlBk function is done, and BkID for all processes are collected.
0, MlBk function is done, and BkID for all processes are collected.
Thread: 2, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 98, UB: 100
BKID: 0, LB: 98, UB: 100, OPT: 10
Dynamic Programming Runtime: 9.99063
Execution time between LB and UB is: 3
By far, all LB UB calculation runtime: 6
Iteration: 3, UB: 100, LB: 98start at time: 1504901631
thread: 0, MlBk is called with LB: 98, UB: 99
thread: 1, MlBk is called with LB: 99, UB: 100 thread: 0
, LongJobs.size() 14
 thread: 1, LongJobs.size() 14
thread: 0, NSTable size: 18
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 0 2 2 2 0 3 0 3 0 3 2 3 0 
thread: 0, divisorComp: 0 0 0 0 2 1 1 0 1 0 1 0 1 1 1 0 
thread: 0, largestBlockVec: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 1 0 0 0 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
thread: 1, NSTable size: 18
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 0 2 2 2 0 3 0 3 0 3 2 3 0 
thread: 1, divisorComp: 0 0 0 0 2 1 1 0 1 0 1 0 1 1 1 0 
thread: 1, largestBlockVec: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 1 0 0 0 0 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.355992
thread: 0, sOPT: 10
copy the latest feasible solution to instance takes time: 0.367865
thread: 1, sOPT: 10
BKID: 0, LB: 98, UB: 98, OPT: 10
Dynamic Programming Runtime: 4.25432
Execution time between LB and UB is: 2
By far, all LB UB calculation runtime: 8
********************************************************
Total execution on UB and LB is: 8
OUT of Bk while loop  
UB    98
LB    98
T1    98
T2    98
OPT   10
nMachines   10
BkID	0
AllProbData.size()    3
ck :   2
AllProbData[ck].Ttable    98
ck :   1
AllProbData[ck].Ttable    99
ck :   0
AllProbData[ck].Ttable    109
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan106
Main Scheduling is Done
File 3-15 is Done.
******************************
Reading File...
File 3-16 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 195, LB: 99start at time: 1504901633
thread: 0, MlBk is called with LB: 99, UB: 123
thread: thread: 3, MlBk is called with LB: 1712, UB: , MlBk is called with LB: 195147, UB: 171

 thread: 0, LongJobs.size() 15
thread: 1, MlBk is called with LB: 123, UB: 147
 thread: 3, LongJobs.size() 9
 thread: 2, LongJobs.size() 10
 thread: 1, LongJobs.size() 13
thread: 3, NSTable size: 21
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 4
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 2 3 2 2 5 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 1 1 1 1 1 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 0 0 0 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
thread: 2, NSTable size: 30
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 2 2 2 2 2 2 3 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 1 1 1 1 1 2 1 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 0 0 0 1 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
thread: 1, NSTable size: 30
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 2 3 0 2 2 2 2 2 2 0 0 0 0 
thread: 1, divisorComp: 0 0 0 2 1 0 1 1 1 1 2 1 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 1 0 0 0 0 0 1 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 2
thread: 0, NSTable size: 39
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 1

thread: 0, blockDimSizeComp: 0 0 0 2 3 3 3 0 0 3 0 2 2 3 2 2 
thread: 0, divisorComp: 0 0 0 1 1 1 1 0 0 1 0 1 1 1 1 1 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 4
copy the latest feasible solution to instance takes time: 0.023598
thread: 3, sOPT: 4
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 5
copy the latest feasible solution to instance takes time: 0.061678
thread: 2, sOPT: 5
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 7
copy the latest feasible solution to instance takes time: 0.316269
thread: 1, sOPT: 7
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.447853
thread: 0, sOPT: 9
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: 2, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 3, MlBk function is done, and BkID for all processes are collected.
1, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 99, UB: 112
BKID: 0, LB: 99, UB: 112, OPT: 9
Dynamic Programming Runtime: 20.339
Execution time between LB and UB is: 11
By far, all LB UB calculation runtime: 11
Iteration: 2, UB: 112, LB: 99start at time: 1504901644
thread: 0, MlBk is called with LB: 99, UB: 102
 thread: 0, LongJobs.size() 16
thread: thread: 2, MlBk is called with LB: 105, UB: 108
1, MlBk is called with LB: 102, UB: 105
thread: 3, MlBk is called with LB: 108, UB: 112
 thread: 3, LongJobs.size() 15
 thread: 1, LongJobs.size() 16
 thread: 2, LongJobs.size() 16
thread: 3, NSTable size: 39
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 1

thread: 3, blockDimSizeComp: 0 0 0 2 3 3 3 0 0 3 0 2 2 3 2 2 
thread: 3, divisorComp: 0 0 0 1 1 1 1 0 0 1 0 1 1 1 1 1 
thread: 3, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 0 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
thread: 0, NSTable size: 32
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 1

thread: 0, blockDimSizeComp: 0 0 0 3 3 3 3 0 0 3 0 2 2 3 2 2 
thread: 0, divisorComp: 0 0 0 1 1 1 1 0 0 1 0 1 1 1 1 1 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
thread: 1, NSTable size: 38
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 1

thread: 1, blockDimSizeComp: 0 0 0 3 3 3 3 0 0 3 0 2 2 3 2 2 
thread: 1, divisorComp: 0 0 0 1 1 1 1 0 0 1 0 1 1 1 1 1 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
thread: 2, NSTable size: 38
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 1

thread: 2, blockDimSizeComp: 0 0 0 3 3 3 3 0 0 3 0 2 2 3 2 2 
thread: 2, divisorComp: 0 0 0 1 1 1 1 0 0 1 0 1 1 1 1 1 
thread: 2, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 9
copy the latest feasible solution to instance takes time: 2.93813
thread: 3, sOPT: 9
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 2.39415
thread: 1, sOPT: 10
copy the latest feasible solution to instance takes time: 2.49302
thread: 2, sOPT: 10
copy the latest feasible solution to instance takes time: 2.48801
thread: 0, sOPT: 10
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: 2, MlBk function is done, and BkID for all processes are collected.
Thread: 3, MlBk function is done, and BkID for all processes are collected.
Thread: 1, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 99, UB: 101
BKID: 0, LB: 99, UB: 101, OPT: 10
Dynamic Programming Runtime: 60.9588
Execution time between LB and UB is: 18
By far, all LB UB calculation runtime: 29
Iteration: 3, UB: 101, LB: 99start at time: 1504901662
thread: 0, MlBk is called with LB: 99, UB: 100
 thread: 0, LongJobs.size() thread: 16
1, MlBk is called with LB: 100, UB: 101
 thread: 1, LongJobs.size() 16
thread: 1, NSTable size: 32
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 1

thread: 1, blockDimSizeComp: 0 0 0 3 3 3 3 0 0 3 0 2 2 3 2 2 
thread: 1, divisorComp: 0 0 0 1 1 1 1 0 0 1 0 1 1 1 1 1 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
thread: 0, NSTable size: 32
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 1

thread: 0, blockDimSizeComp: 0 0 0 3 3 3 3 0 0 3 0 2 2 3 2 2 
thread: 0, divisorComp: 0 0 0 1 1 1 1 0 0 1 0 1 1 1 1 1 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 1.34666
thread: 1, sOPT: 10
copy the latest feasible solution to instance takes time: 1.48348
thread: 0, sOPT: 10
BKID: 0, LB: 99, UB: 99, OPT: 10
Dynamic Programming Runtime: 26.4814
Execution time between LB and UB is: 14
By far, all LB UB calculation runtime: 43
********************************************************
Total execution on UB and LB is: 43
OUT of Bk while loop  
UB    99
LB    99
T1    99
T2    99
OPT   10
nMachines   10
BkID	0
AllProbData.size()    3
ck :   2
AllProbData[ck].Ttable    99
ck :   1
AllProbData[ck].Ttable    100
ck :   0
AllProbData[ck].Ttable    111
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan109
Main Scheduling is Done
File 3-16 is Done.
******************************
Reading File...
File 3-17 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 209, LB: 109start at time: 1504901676
thread: 0, MlBk is called with LB: 109, UB: 134
thread: thread: 3, MlBk is called with LB: 2184, UB: , MlBk is called with LB: 159, UB: 209184

thread: 1, MlBk is called with LB: 134, UB: 159
 thread: 0, LongJobs.size() 15
 thread: 3, LongJobs.size() 11
 thread: 2, LongJobs.size() 12
 thread: 1, LongJobs.size() 13
thread: 3, NSTable size: 20
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 4
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 2 2 0 5 2 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 2 2 0 1 1 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 1 1 0 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
thread: 2, NSTable size: 31
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 2 2 3 2 0 5 2 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 1 2 1 1 0 1 1 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 1 0 0 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
thread: 1, NSTable size: 29
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 3 3 3 3 0 0 5 2 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 0 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
thread: 0, NSTable size: 41
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 2 2 3 3 3 2 2 0 2 2 2 0 0 
thread: 0, divisorComp: 0 0 0 1 1 1 1 1 1 1 0 1 2 1 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 1 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 , mySum: 1
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 4
Thread: 1, gpu_BlockDP is done.
copy the latest feasible solution to instance takes time: 0.027931
thread: 3, sOPT: 4
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 7
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 6
copy the latest feasible solution to instance takes time: 0.165557
thread: 1, sOPT: 7
copy the latest feasible solution to instance takes time: 0.099961
thread: 2, sOPT: 6
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.366703
thread: 0, sOPT: 9
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: 1, MlBk function is done, and BkID for all processes are collected.
Thread: 3, MlBk function is done, and BkID for all processes are collected.
Thread: 2, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 109, UB: 122
BKID: 0, LB: 109, UB: 122, OPT: 9
Dynamic Programming Runtime: 9.90097
Execution time between LB and UB is: 9
By far, all LB UB calculation runtime: 9
Iteration: 2, UB: 122, LB: 109start at time: 1504901685
thread: 0, MlBk is called with LB: 109, UB: 112
 thread: 0, LongJobs.size() 16
thread: thread: 2, MlBk is called with LB: 115, UB: 118
3, MlBk is called with LB: 118, UB: 122
thread: 1, MlBk is called with LB: 112, UB: 115
 thread: 3, LongJobs.size() 15
 thread: 1, LongJobs.size() 16
 thread: 2, LongJobs.size() 16
thread: 0, NSTable size: 33
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 1

thread: 0, blockDimSizeComp: 0 0 0 0 3 2 3 3 2 2 3 0 0 0 5 2 
thread: 0, divisorComp: 0 0 0 0 1 1 1 1 1 1 1 0 0 0 1 1 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
thread: 3, NSTable size: 41
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 2 2 3 3 3 2 2 0 2 2 2 0 0 
thread: 3, divisorComp: 0 0 0 1 1 1 1 1 1 1 0 1 2 1 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 1 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 , mySum: 1
thread: 1, NSTable size: 39
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 3 2 3 3 3 2 2 0 2 2 2 0 0 
thread: 1, divisorComp: 0 0 0 1 1 1 1 1 1 1 0 1 2 1 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 1 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 , mySum: 1
thread: 2, NSTable size: 39
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 3 2 3 3 3 2 2 0 2 2 2 0 0 
thread: 2, divisorComp: 0 0 0 1 1 1 1 1 1 1 0 1 2 1 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 1 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 , mySum: 1
Thread: 0, gpu_BlockDP is done.
Thread: 3, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 9
copy the latest feasible solution to instance takes time: 2.54623
thread: 3, sOPT: 9
copy the latest feasible solution to instance takes time: 3.49574
thread: 0, sOPT: 10
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
copy the latest feasible solution to instance takes time: 1.27136
thread: 1, sOPT: 10
copy the latest feasible solution to instance takes time: 1.39909
thread: 2, sOPT: 10
Thread: 2, MlBk function is done, and BkID for all processes are collected.
Thread: 0, MlBk function is done, and BkID for all processes are collected.Thread: Thread: 3, MlBk function is done, and BkID for all processes are collected.
1, MlBk function is done, and BkID for all processes are collected.

sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 109, UB: 111
BKID: 0, LB: 109, UB: 111, OPT: 10
Dynamic Programming Runtime: 45.9032
Execution time between LB and UB is: 13
By far, all LB UB calculation runtime: 22
Iteration: 3, UB: 111, LB: 109start at time: 1504901699
thread: 0, MlBk is called with LB: 109, UB: 110
thread:  thread: 01, LongJobs.size() , MlBk is called with LB: 16
110, UB: 111
 thread: 1, LongJobs.size() 16
thread: 1, NSTable size: 33
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 1

thread: 1, blockDimSizeComp: 0 0 0 0 3 2 3 3 2 2 3 0 0 0 5 2 
thread: 1, divisorComp: 0 0 0 0 1 1 1 1 1 1 1 0 0 0 1 1 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
thread: 0, NSTable size: 33
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 1

thread: 0, blockDimSizeComp: 0 0 0 0 3 2 3 3 2 2 3 0 0 0 5 2 
thread: 0, divisorComp: 0 0 0 0 1 1 1 1 1 1 1 0 0 0 1 1 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.777189
thread: 0, sOPT: 10
copy the latest feasible solution to instance takes time: 0.915027
thread: 1, sOPT: 10
BKID: 0, LB: 109, UB: 109, OPT: 10
Dynamic Programming Runtime: 17.4585
Execution time between LB and UB is: 9
By far, all LB UB calculation runtime: 32
********************************************************
Total execution on UB and LB is: 32
OUT of Bk while loop  
UB    109
LB    109
T1    109
T2    109
OPT   10
nMachines   10
BkID	0
AllProbData.size()    3
ck :   2
AllProbData[ck].Ttable    109
ck :   1
AllProbData[ck].Ttable    110
ck :   0
AllProbData[ck].Ttable    121
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan113
Main Scheduling is Done
File 3-17 is Done.
******************************
Reading File...
File 3-18 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 224, LB: 125start at time: 1504901708
thread: 0, MlBk is called with LB: 125, UB: 150
thread: thread: 23, MlBk is called with LB: , MlBk is called with LB: 175, UB: 200200, UB: 225
thread: 1, MlBk is called with LB: 150, UB: 175
 thread: 0, LongJobs.size() 
16
 thread: 2, LongJobs.size() 14
 thread: 3, LongJobs.size() 12
 thread: 1, LongJobs.size() 14
thread: 3, NSTable size: 17
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 5
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 5
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 2 3 2 3 0 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 1 2 1 2 0 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 1 0 1 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
thread: 1, NSTable size: 19
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 5
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 0 2 3 2 2 3 0 0 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 2 1 2 1 2 0 0 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 1 0 1 0 1 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 , mySum: 3
thread: 2, NSTable size: 35
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 5
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 3 2 3 2 5 2 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 1 1 2 1 1 1 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 1 0 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
thread: 0, NSTable size: 41
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 2 2 3 2 5 2 2 5 2 0 0 0 0 
thread: 0, divisorComp: 0 0 0 1 1 1 1 1 1 1 1 1 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 5
copy the latest feasible solution to instance takes time: 0.030973
thread: 3, sOPT: 5
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 6
copy the latest feasible solution to instance takes time: 0.125939
thread: 2, sOPT: 6
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 7
copy the latest feasible solution to instance takes time: 0.068899
thread: 1, sOPT: 7
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.247168
thread: 0, sOPT: 9
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: 2, MlBk function is done, and BkID for all processes are collected.
Thread: 1, MlBk function is done, and BkID for all processes are collected.
Thread: 3, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 125, UB: 138
BKID: 0, LB: 125, UB: 138, OPT: 9
Dynamic Programming Runtime: 14.4737
Execution time between LB and UB is: 8
By far, all LB UB calculation runtime: 8
Iteration: 2, UB: 138, LB: 125start at time: 1504901716
thread: 0, MlBk is called with LB: 125, UB: 128
 thread: 0, LongJobs.size() 18
thread: 1, MlBk is called with LB: 128, UB: 131
thread: 3, MlBk is called with LB: 134, UB: 138
 thread: 1, LongJobs.size() 17
thread:  thread: 3, LongJobs.size() 16
2, MlBk is called with LB: 131, UB: 134
 thread: 2, LongJobs.size() 16
thread: 2, NSTable size: 34
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 2 2 3 2 5 2 2 5 2 0 0 0 0 
thread: 2, divisorComp: 0 0 0 1 1 1 1 1 1 1 1 1 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
thread: 3, NSTable size: 41
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 4
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 4
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 2 2 3 2 5 2 2 5 2 0 0 0 0 
thread: 3, divisorComp: 0 0 0 1 1 1 1 1 1 1 1 1 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
thread: 1, NSTable size: 39
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 3 2 3 2 5 2 2 5 2 0 0 0 0 
thread: 1, divisorComp: 0 0 0 1 1 1 1 1 1 1 1 1 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
thread: 0, NSTable size: 46
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 3 3 0 3 2 3 2 2 0 5 2 0 0 
thread: 0, divisorComp: 0 0 0 1 1 0 1 1 1 2 1 0 1 1 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 0 0 0 1 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
Thread: 2, gpu_BlockDP is done.
Thread: 1, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
copy the latest feasible solution to instance takes time: 1.996
thread: 2, sOPT: 10
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 9
copy the latest feasible solution to instance takes time: 2.97369
thread: 1, sOPT: 10
copy the latest feasible solution to instance takes time: 1.16739
thread: 3, sOPT: 9
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.716349
thread: 0, sOPT: 10
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: 2, MlBk function is done, and BkID for all processes are collected.
Thread: 3, MlBk function is done, and BkID for all processes are collected.
Thread: 1, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 125, UB: 127
BKID: 0, LB: 125, UB: 127, OPT: 10
Dynamic Programming Runtime: 59.1885
Execution time between LB and UB is: 22
By far, all LB UB calculation runtime: 30
Iteration: 3, UB: 127, LB: 125start at time: 1504901738
thread: 0, MlBk is called with LB: 125, UB: 126
thread: 1, MlBk is called with LB: 126, UB: 127 thread: 0
, LongJobs.size() 18
 thread: 1, LongJobs.size() 18
thread: 1, NSTable size: 46
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 3 3 0 3 2 3 2 2 0 5 2 0 0 
thread: 1, divisorComp: 0 0 0 1 1 0 1 1 1 2 1 0 1 1 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 0 0 0 1 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
thread: 0, NSTable size: 36
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 3 3 0 3 2 3 2 2 0 5 2 0 0 
thread: 0, divisorComp: 0 0 0 1 1 0 1 1 1 2 1 0 1 1 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 0 0 0 1 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 4e-06
thread: 0, sOPT: 11
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.763288
thread: 1, sOPT: 10
BKID: 0, LB: 126, UB: 126, OPT: 10
Dynamic Programming Runtime: 40.13
Execution time between LB and UB is: 21
By far, all LB UB calculation runtime: 51
********************************************************
Total execution on UB and LB is: 51
OUT of Bk while loop  
UB    126
LB    126
T1    126
T2    126
OPT   10
nMachines   10
BkID	0
AllProbData.size()    3
ck :   2
AllProbData[ck].Ttable    126
ck :   1
AllProbData[ck].Ttable    126
ck :   0
AllProbData[ck].Ttable    137
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan140
Main Scheduling is Done
File 3-18 is Done.
******************************
Reading File...
File 3-19 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 194, LB: 101start at time: 1504901760
thread: 0, MlBk is called with LB: 101, UB: thread: 124
thread: 1, MlBk is called with LB: 124, UB: 147
2, MlBk is called with LB: 147, UB: 170
 thread: 0, LongJobs.size() 14
 thread: 2, LongJobs.size() 13
 thread: 1, LongJobs.size() 13
thread: 3, MlBk is called with LB: 170, UB: 194
 thread: 3, LongJobs.size() 12
thread: 3, NSTable size: 26
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 5
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 2 2 3 2 3 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 2 1 2 1 1 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 1 0 1 0 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
thread: 2, NSTable size: 25
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 0 5 2 3 2 3 2 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 1 1 1 2 1 1 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 0 1 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
thread: 1, NSTable size: 23
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 0 3 3 2 3 2 2 3 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 1 1 1 1 2 1 1 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 0 0 1 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
thread: 0, NSTable size: 25
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 2 0 3 3 2 3 2 2 2 2 0 0 0 
thread: 0, divisorComp: 0 0 0 1 0 1 1 1 1 2 1 1 1 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 0 0 0 1 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 5
copy the latest feasible solution to instance takes time: 0.121304
thread: 3, sOPT: 5
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 6
copy the latest feasible solution to instance takes time: 0.212818
thread: 2, sOPT: 6
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 7
copy the latest feasible solution to instance takes time: 0.258557
thread: 1, sOPT: 7
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.224701
thread: 0, sOPT: 9
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: Thread: 12, MlBk function is done, and BkID for all processes are collected.3, MlBk function is done, and BkID for all processes are collected., MlBk function is done, and BkID for all processes are collected.


sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 101, UB: 113
BKID: 0, LB: 101, UB: 113, OPT: 9
Dynamic Programming Runtime: 7.95473
Execution time between LB and UB is: 3
By far, all LB UB calculation runtime: 3
Iteration: 2, UB: 113, LB: 101start at time: 1504901763
thread: 0, MlBk is called with LB: 101, UB: 104
thread: 2, MlBk is called with LB: 107, UB: 110
thread: 1, MlBk is called with LB: 104, UB: 107
 thread: 0, LongJobs.size() 16
 thread: 2, LongJobs.size() 14
thread: 3, MlBk is called with LB: 110, UB: 113
 thread: 1, LongJobs.size() 15
 thread: 3, LongJobs.size() 14
thread: 3, NSTable size: 21
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 0 2 0 3 3 0 2 3 2 2 2 2 0 
thread: 3, divisorComp: 0 0 0 0 1 0 1 1 0 1 1 2 1 1 1 0 
thread: 3, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 0 0 0 0 1 0 0 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
thread: 2, NSTable size: 21
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 0 2 0 3 3 0 2 3 2 2 2 2 0 
thread: 2, divisorComp: 0 0 0 0 1 0 1 1 0 1 1 2 1 1 1 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 0 0 0 1 0 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
thread: 1, NSTable size: 28
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 2 2 0 3 3 0 2 3 2 2 2 2 0 
thread: 1, divisorComp: 0 0 0 1 1 0 1 1 0 1 1 2 1 1 1 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 0 0 0 0 1 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
thread: 0, NSTable size: 32
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 3 2 0 3 3 0 2 3 2 2 2 2 0 
thread: 0, divisorComp: 0 0 0 1 1 0 1 1 0 1 1 2 1 1 1 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 0 0 0 0 1 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
Thread: 2, gpu_BlockDP is done.
Thread: 3, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 10
copy the latest feasible solution to instance takes time: 1.18879
thread: 2, sOPT: 10
copy the latest feasible solution to instance takes time: 1.59317
thread: 3, sOPT: 10
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 11
copy the latest feasible solution to instance takes time: 3e-06
thread: 1, sOPT: 11
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 1e-06
thread: 0, sOPT: 11
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 2, MlBk function is done, and BkID for all processes are collected.1, MlBk function is done, and BkID for all processes are collected.Thread: 
3, MlBk function is done, and BkID for all processes are collected.

sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: 1 1 -1 -1
Pick seg 2 for next iteration where LB: 106, UB: 109
BKID: 0, LB: 106, UB: 109, OPT: 10
Dynamic Programming Runtime: 31.5329
Execution time between LB and UB is: 13
By far, all LB UB calculation runtime: 16
Iteration: 3, UB: 109, LB: 106start at time: 1504901776
thread: 0, MlBk is called with LB: 106, UB: 107
 thread: 0, LongJobs.size() 15
thread: thread: 2, MlBk is called with LB: 108, UB: 1091
, MlBk is called with LB: 107, UB: 108
 thread: 2, LongJobs.size() 14
 thread: 1, LongJobs.size() 15
thread: 2, NSTable size: 21
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 0 2 0 3 3 0 2 3 2 2 2 2 0 
thread: 2, divisorComp: 0 0 0 0 1 0 1 1 0 1 1 2 1 1 1 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 0 0 0 1 0 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
thread: 0, NSTable size: 28
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 2 2 0 3 3 0 2 3 2 2 2 2 0 
thread: 0, divisorComp: 0 0 0 1 1 0 1 1 0 1 1 2 1 1 1 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 0 0 0 0 1 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
thread: 1, NSTable size: 28
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 2 2 0 3 3 0 2 3 2 2 2 2 0 
thread: 1, divisorComp: 0 0 0 1 1 0 1 1 0 1 1 2 1 1 1 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 0 0 0 0 1 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
copy the latest feasible solution to instance takes time: 1.01984
thread: 2, sOPT: 10
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 2e-06
thread: 0, sOPT: 11
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 11
copy the latest feasible solution to instance takes time: 1e-06
thread: 1, sOPT: 11
BKID: 0, LB: 108, UB: 108, OPT: 10
Dynamic Programming Runtime: 20.2992
Execution time between LB and UB is: 6
By far, all LB UB calculation runtime: 22
********************************************************
Total execution on UB and LB is: 22
OUT of Bk while loop  
UB    108
LB    108
T1    108
T2    108
OPT   10
nMachines   10
BkID	0
AllProbData.size()    3
ck :   2
AllProbData[ck].Ttable    108
ck :   1
AllProbData[ck].Ttable    108
ck :   0
AllProbData[ck].Ttable    112
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan116
Main Scheduling is Done
File 3-19 is Done.
******************************
Reading File...
File 3-20 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 190, LB: 97start at time: 1504901783
thread: 0, MlBk is called with LB: 97, UB: 120
thread: 3, MlBk is called with LB: 166, UB: 190
thread: 2, MlBk is called with LB: 143, UB: 166 thread: 
 thread: 03, LongJobs.size() , LongJobs.size() 913

 thread: 2, LongJobs.size() 12
thread: 1, MlBk is called with LB: 120, UB: 143
 thread: 1, LongJobs.size() 12
thread: 3, NSTable size: 16
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 4
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 2 0 2 5 2 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 2 0 1 1 1 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 1 0 0 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
thread: 1, NSTable size: 17
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 0 2 2 0 2 3 3 0 2 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 2 2 0 1 1 1 0 1 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 1 1 0 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
thread: 2, NSTable size: 43
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 2 3 2 2 3 3 2 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 2 1 1 1 1 1 1 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 1 0 0 0 0 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
thread: 0, NSTable size: 26
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 1

thread: 0, blockDimSizeComp: 0 0 0 2 0 2 0 3 2 0 2 2 3 2 0 2 
thread: 0, divisorComp: 0 0 0 1 0 2 0 1 1 0 1 1 1 1 0 1 
thread: 0, largestBlockVec: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 1 0 0 0 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
Thread: 2, gpu_BlockDP is done.
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 4
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 5
copy the latest feasible solution to instance takes time: 0.022373
thread: 3, sOPT: 4
copy the latest feasible solution to instance takes time: 0.210241
thread: 2, sOPT: 5
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 7
copy the latest feasible solution to instance takes time: 0.067302
thread: 1, sOPT: 7
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 8
copy the latest feasible solution to instance takes time: 0.125564
thread: 0, sOPT: 8
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 3, MlBk function is done, and BkID for all processes are collected.Thread: 1, MlBk function is done, and BkID for all processes are collected.2, MlBk function is done, and BkID for all processes are collected.


sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 97, UB: 109
BKID: 0, LB: 97, UB: 109, OPT: 8
Dynamic Programming Runtime: 5.56201
Execution time between LB and UB is: 2
By far, all LB UB calculation runtime: 2
Iteration: 2, UB: 109, LB: 97start at time: 1504901785
thread: 0, MlBk is called with LB: 97, UB: 100
 thread: 0, LongJobs.size() 14
thread: 3, MlBk is called with LB: 106, UB: 109thread: 
 thread: 3, LongJobs.size() 14
2, MlBk is called with LB: 103, UB: 106
thread: 1, MlBk is called with LB: 100, UB: 103
 thread: 2, LongJobs.size() 14
 thread: 1, LongJobs.size() 14
thread: 0, NSTable size: 22
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 1

thread: 0, blockDimSizeComp: 0 0 0 3 0 2 0 3 2 0 2 2 3 2 0 2 
thread: 0, divisorComp: 0 0 0 1 0 2 0 1 1 0 1 1 1 1 0 1 
thread: 0, largestBlockVec: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 1 0 0 0 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
thread: 2, NSTable size: 26
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 14thread: 1, NSTable size: 22
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 2
, alltableelemets[maxindex].elm[i]: thread: 1, i: 04, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 1

thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 1

thread: 2, blockDimSizeComp: 0 0 0 3 0 2 0 3 2 0 2 2 3 2 0 2 
thread: 2, divisorComp: 0 0 0 1 0 2 0 1 1 0 1 1 1 1 0 1 
thread: 2, largestBlockVec: 0 0 0 0 0 1 0 
0thread: 1, blockDimSizeComp: 0 0 0 3 0 2 0 3 2 0 2 2 3 2 0 2 
thread: 1, divisorComp: 0 0 0 1 0 2 0 1 0 0 0 0 0 0 0 0  
thread: 2, largestNoZeroBlockVec: 0 1 0 0 0 0 0 0 0 
1 0 1 1 1 1 0 1 
thread: 1, largestBlockVec: 0 0 0 0 0 1 0 0 0thread:  2, allBlocks: 00  00  00 0  0 00 0  00  0 0
 thread: 1, largestNoZeroBlockVec: 0 1 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 thread: 01, allBlocks:  0 10  00  00  00  0 00  00 0  00  00 0  00  0 00  00  , mySum: 1, mySum: 
0
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
thread: 3, NSTable size: 26
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 1

thread: 3, blockDimSizeComp: 0 0 0 3 0 2 0 3 2 0 2 2 3 2 0 2 
thread: 3, divisorComp: 0 0 0 1 0 2 0 1 1 0 1 1 1 1 0 1 
thread: 3, largestBlockVec: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 1 0 0 0 0 0 0 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 9
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 9
copy the latest feasible solution to instance takes time: 1.31887
thread: 1, sOPT: 9
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 9
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 9
copy the latest feasible solution to instance takes time: 1.58509
thread: 0, sOPT: 9
copy the latest feasible solution to instance takes time: 0.637138
thread: 3, sOPT: 9
copy the latest feasible solution to instance takes time: 0.703826
thread: 2, sOPT: 9
Thread: 2, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 1, MlBk function is done, and BkID for all processes are collected.0
, MlBk function is done, and BkID for all processes are collected.Thread: 3, MlBk function is done, and BkID for all processes are collected.

sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 97, UB: 99
BKID: 0, LB: 97, UB: 99, OPT: 9
Dynamic Programming Runtime: 13.1483
Execution time between LB and UB is: 4
By far, all LB UB calculation runtime: 6
Iteration: 3, UB: 99, LB: 97start at time: 1504901789
thread: 0, MlBk is called with LB: 97, UB: 98
 thread: 0, LongJobs.size() 14
thread: 1, MlBk is called with LB: 98, UB: 99
 thread: 1, LongJobs.size() 14
thread: 0, NSTable size: 22
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 1

thread: 0, blockDimSizeComp: 0 0 0 3 0 2 0 3 2 0 2 2 3 2 0 2 
thread: 0, divisorComp: 0 0 0 1 0 2 0 1 1 0 1 1 1 1 0 1 
thread: 0, largestBlockVec: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 1 0 0 0 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
thread: 1, NSTable size: 22
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 1

thread: 1, blockDimSizeComp: 0 0 0 3 0 2 0 3 2 0 2 2 3 2 0 2 
thread: 1, divisorComp: 0 0 0 1 0 2 0 1 1 0 1 1 1 1 0 1 
thread: 1, largestBlockVec: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 1 0 0 0 0 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
Thread: 0, gpu_BlockDP is done.
Thread: 1, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 9
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.362408
thread: 0, sOPT: 9
copy the latest feasible solution to instance takes time: 0.443641
thread: 1, sOPT: 9
BKID: 0, LB: 97, UB: 97, OPT: 9
Dynamic Programming Runtime: 5.74421
Execution time between LB and UB is: 4
By far, all LB UB calculation runtime: 10
********************************************************
Total execution on UB and LB is: 10
OUT of Bk while loop  
UB    97
LB    97
T1    97
T2    97
OPT   9
nMachines   10
BkID	0
AllProbData.size()    3
ck :   2
AllProbData[ck].Ttable    97
ck :   1
AllProbData[ck].Ttable    98
ck :   0
AllProbData[ck].Ttable    108
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan109
Main Scheduling is Done
File 3-20 is Done.
******************************
Total running time is: 309
