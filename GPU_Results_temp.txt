Reading File...
File 1-1 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 50, LB: 31start at time: 1505254705
thread: 0, MlBk is called with LB: 31, UB: thread: thread: thread: 2, MlBk is called with LB: 141, MlBk is called with LB: , UB: 3646, UB: 41

 thread: 2, LongJobs.size() 19
3 thread: 1, LongJobs.size() , MlBk is called with LB: 21
36
46, UB: 51
 thread: 3, LongJobs.size() 15
 thread: 0, LongJobs.size() 21
thread: 3, NSTable size: 18
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 4
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 5
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 6
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 5, maxN[i].idx: 0, blockDimSize[i]: 5
thread: 3, i: 1, maxN[i].weit: 6, maxN[i].idx: 1, blockDimSize[i]: 6
thread: 3, i: 2, maxN[i].weit: 7, maxN[i].idx: 2, blockDimSize[i]: 7
thread: 3, i: 0, divisor[i]: 5, blockDimSize[i]: 1
thread: 3, i: 1, divisor[i]: 2, blockDimSize[i]: 3
thread: 3, i: 2, divisor[i]: 7, blockDimSize[i]: 1
thread: 3, largestBlockVec.elm: 0 0 0 4 1 6 0 0 0 0 0 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 1 3 1 0 0 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 5 2 7 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 4 1 6 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 4 1 6 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 2 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 3 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 2 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 1 1 2 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 3 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 3 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 1 0 3 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 1 1 3 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 4 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 4 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 2 1 2 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 3 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 5 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 1 0 4 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 2 0 3 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 4 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 3 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 3 1 2 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 3 0 3 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 5 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 4 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 4 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 1 0 5 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 2 1 3 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 2 0 4 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 6 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 1 1 4 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 2 1 4 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 6 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 2 0 5 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 3 0 4 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 4 0 3 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 1 0 6 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 3 1 3 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 4 1 2 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 1 1 5 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 1 1 6 0 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 4 0 4 0 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 2 1 5 0 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 3 1 4 0 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 4 1 3 0 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 3 0 5 0 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 2 0 6 0 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 3 1 5 0 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 4 1 4 0 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 4 0 5 0 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 3 0 6 0 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 2 1 6 0 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 4 1 5 0 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 3 1 6 0 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 4 0 6 0 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 4 1 6 0 0 0 0 0 0 0 0 0 0 , mySum: 11
thread: 2, NSTable size: 41
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 5
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 6
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 2, i: 1, maxN[i].weit: 6, maxN[i].idx: 1, blockDimSize[i]: 6
thread: 2, i: 2, maxN[i].weit: 4, maxN[i].idx: 2, blockDimSize[i]: 4
thread: 2, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 2, i: 4, maxN[i].weit: 7, maxN[i].idx: 4, blockDimSize[i]: 7
thread: 2, i: 0, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, i: 1, divisor[i]: 2, blockDimSize[i]: 3
thread: 2, i: 2, divisor[i]: 1, blockDimSize[i]: 4
thread: 2, i: 3, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 4, divisor[i]: 7, blockDimSize[i]: 1
thread: 2, largestBlockVec.elm: 0 0 0 0 1 1 0 0 6 0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 0 2 3 4 3 1 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 2 2 1 1 7 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 1 1 0 0 6 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 1 1 0 0 6 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 0 0 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 1 0 0 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 0 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 1 0 0 3 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 0 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 0 0 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 0 5 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 0 0 5 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 1 0 0 4 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 0 0 0 6 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 0 0 6 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 1 0 0 5 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 1 0 0 6 0 0 0 0 0 0 0 , mySum: 8
thread: 1, NSTable size: 31
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 5
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 5
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 6
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 6, maxN[i].idx: 0, blockDimSize[i]: 6
thread: 1, i: 1, maxN[i].weit: 6, maxN[i].idx: 1, blockDimSize[i]: 6
thread: 1, i: 2, maxN[i].weit: 4, maxN[i].idx: 2, blockDimSize[i]: 4
thread: 1, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 1, i: 4, maxN[i].weit: 7, maxN[i].idx: 4, blockDimSize[i]: 7
thread: 1, i: 0, divisor[i]: 2, blockDimSize[i]: 3
thread: 1, i: 1, divisor[i]: 2, blockDimSize[i]: 3
thread: 1, i: 2, divisor[i]: 1, blockDimSize[i]: 4
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 4, divisor[i]: 7, blockDimSize[i]: 1
thread: 1, largestBlockVec.elm: 0 0 0 0 1 1 0 0 6 0 0 0 0 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 0 3 3 4 3 1 0 0 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 2 2 1 1 7 0 0 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 1 1 0 0 6 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 1 1 0 0 6 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 0 0 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 1 0 0 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 0 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 1 0 0 3 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 0 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 0 0 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 0 5 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 0 0 5 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 1 0 0 4 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 0 0 0 6 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 0 0 6 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 1 0 0 5 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 1 0 0 6 0 0 0 0 0 0 0 , mySum: 8
thread: 0, NSTable size: 20
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 5
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 5
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 6
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 0, maxN[i].weit: 6, maxN[i].idx: 0, blockDimSize[i]: 6
thread: 0, i: 1, maxN[i].weit: 6, maxN[i].idx: 1, blockDimSize[i]: 6
thread: 0, i: 2, maxN[i].weit: 4, maxN[i].idx: 2, blockDimSize[i]: 4
thread: 0, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 0, i: 4, maxN[i].weit: 7, maxN[i].idx: 4, blockDimSize[i]: 7
thread: 0, i: 0, divisor[i]: 2, blockDimSize[i]: 3
thread: 0, i: 1, divisor[i]: 2, blockDimSize[i]: 3
thread: 0, i: 2, divisor[i]: 1, blockDimSize[i]: 4
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 4, divisor[i]: 7, blockDimSize[i]: 1
thread: 0, largestBlockVec.elm: 0 0 0 0 1 1 0 0 6 0 0 0 0 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 0 3 3 4 3 1 0 0 0 0 0 0 0 
thread: 0, divisorComp: 0 0 0 0 2 2 1 1 7 0 0 0 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 1 1 0 0 6 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 1 1 0 0 6 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 0 0 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 1 0 0 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 0 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 1 0 0 3 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 0 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 0 0 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 0 5 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 0 0 5 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 1 0 0 4 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 0 0 0 6 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 0 0 6 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 1 0 0 5 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 1 0 0 6 0 0 0 0 0 0 0 , mySum: 8
thread: 3, maxBlockLvlSize: 10
thread: 3, maxInBlockLvlSize: 1
thread: 3, AllTableSize: 210, maxSubsetsSize: 64
thread: 1, maxBlockLvlSize: 4
thread: 1, maxInBlockLvlSize: 22
thread: 1, AllTableSize: 3024, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 4
thread: 0, maxInBlockLvlSize: 22
thread: 0, AllTableSize: 3024, maxSubsetsSize: 64
thread: 2, maxBlockLvlSize: 4
thread: 2, maxInBlockLvlSize: 16
thread: 2, AllTableSize: 2016, maxSubsetsSize: 64
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 5
copy the latest feasible solution to instance takes time: 0.011387
thread: 3, sOPT: 5
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 1 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 1 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 1 0 0 1 
thread: 0, allBlocks[5]: 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 1 1 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 0 0 0 2 
thread: 0, allBlocks[7]: 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 1 0 0 0 1 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[8]: 0 0 0 0 3 
thread: 0, allBlocks[9]: 0 0 0 0 0 1 0 0 2 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[9]: 0 1 0 0 2 
thread: 0, allBlocks[10]: 0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 1 1 0 0 1 
thread: 0, allBlocks[11]: 0 0 0 0 1 0 0 0 2 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 1 0 0 0 2 
thread: 0, allBlocks[12]: 0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[12]: 0 0 0 0 4 
thread: 0, allBlocks[13]: 0 0 0 0 0 1 0 0 3 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[13]: 0 1 0 0 3 
thread: 0, allBlocks[14]: 0 0 0 0 1 1 0 0 2 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[14]: 1 1 0 0 2 
thread: 0, allBlocks[15]: 0 0 0 0 1 0 0 0 3 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[15]: 1 0 0 0 3 
thread: 0, allBlocks[16]: 0 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[16]: 0 0 0 0 5 
thread: 0, allBlocks[17]: 0 0 0 0 1 1 0 0 3 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[17]: 1 1 0 0 3 
thread: 0, allBlocks[18]: 0 0 0 0 1 0 0 0 4 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[18]: 1 0 0 0 4 
thread: 0, allBlocks[19]: 0 0 0 0 0 1 0 0 4 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[19]: 0 1 0 0 4 
thread: 0, allBlocks[20]: 0 0 0 0 1 0 0 0 5 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[20]: 1 0 0 0 5 
thread: 0, allBlocks[21]: 0 0 0 0 0 1 0 0 5 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[21]: 0 1 0 0 5 
thread: 0, allBlocks[22]: 0 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[22]: 0 0 0 0 6 
thread: 0, allBlocks[23]: 0 0 0 0 1 1 0 0 4 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[23]: 1 1 0 0 4 
thread: 0, allBlocks[24]: 0 0 0 0 1 0 0 0 6 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[24]: 1 0 0 0 6 
thread: 0, allBlocks[25]: 0 0 0 0 0 1 0 0 6 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[25]: 0 1 0 0 6 
thread: 0, allBlocks[26]: 0 0 0 0 1 1 0 0 5 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[26]: 1 1 0 0 5 
thread: 0, allBlocks[27]: 0 0 0 0 1 1 0 0 6 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[27]: 1 1 0 0 6 
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 7
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 8
copy the latest feasible solution to instance takes time: 0.198052
thread: 2, sOPT: 7
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.189178
thread: 1, sOPT: 8
copy the latest feasible solution to instance takes time: 0.121108
thread: 0, sOPT: 10
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: 3, MlBk function is done, and BkID for all processes are collected.
Thread: 1, MlBk function is done, and BkID for all processes are collected.
Thread: 2, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 31, UB: 34
BKID: 0, LB: 31, UB: 34, OPT: 10
Dynamic Programming Runtime: 1.51912
Execution time between LB and UB is: 0
By far, all LB UB calculation runtime: 0
Iteration: 2, UB: 34, LB: 31start at time: 1505254705
thread: 0, MlBk is called with LB: 31, UB: 32
 thread: 0, LongJobs.size() 21
thread: thread: 1, MlBk is called with LB: 32, UB: 332
, MlBk is called with LB: 33, UB: 34
 thread: 1, LongJobs.size() 21
 thread: 2, LongJobs.size() 21
thread: 1, NSTable size: 20
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 5
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 5
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 2
2, NSTable size: thread: 201, i: 8, alltableelemets[maxindex].elm[i]: 
6thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 
1thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
, alltableelemets[maxindex].elm[i]: thread: 1, i: 0, maxN[i].weit: 6, maxN[i].idx: 00
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 5
thread: 2, i: 5, blockDimSize[i]: 6
, alltableelemets[maxindex].elm[i]: thread: 1, i: 1, maxN[i].weit: 6, maxN[i].idx: 1, blockDimSize[i]: 6
thread: 1, i: 2, maxN[i].weit: 4, maxN[i].idx: 2, blockDimSize[i]: 4
5thread: 1, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 1, i: 4, maxN[i].weit: 7, maxN[i].idx: 4, blockDimSize[i]: 7
thread: 1, i: 0, divisor[i]: 2, blockDimSize[i]: 3
thread: 1, i: 1, divisor[i]: 2, blockDimSize[i]: 3
thread: 1, i: 2, divisor[i]: 1, blockDimSize[i]: 4
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 4, divisor[i]: 7, blockDimSize[i]: 1
thread: 1, largestBlockVec.elm: 0 0 0 0 1 
1 0 0 thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 62
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 6
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
 thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
0thread: 2, i: 0, maxN[i].weit:  6, maxN[i].idx: 00, blockDimSize[i]:  06 
0thread: 2, i:  1, maxN[i].weit: 60, maxN[i].idx:  10, blockDimSize[i]:  60
 thread: 2, i: 2, maxN[i].weit: 4
, maxN[i].idx: 2, blockDimSize[i]: thread: 1, blockDimSizeComp: 0 0 0 0 3 3 4 3 1 0 0 0 0 0 0 40 
thread: 2, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 
2thread: 1, divisorComp: 0 0 0 0 2 2 1 1 7 0 0 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 , i: 4, maxN[i].weit: 7, maxN[i].idx: 4, blockDimSize[i]: 7
1thread: 2, i: 0 , divisor[i]: 12, blockDimSize[i]:  3
0thread: 2, i: 1, divisor[i]: 2, blockDimSize[i]: 3
thread: 2, i: 2, divisor[i]: 1, blockDimSize[i]: 4
thread: 2, i: 3, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 4, divisor[i]: 7, blockDimSize[i]: 1
thread:  2, largestBlockVec.elm: 0 6 0 0 00  0 0 00  0 
0thread: 1, largestNoZeroBlockVec: 1 1 0 0 6 
 0 1 1 0 0 6 0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 0 3 3 4 3 1 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 2 2 1 1 7 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 1 1 0 0 6 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 1 1 0 0 6 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 0 0 0 0thread:  2, allBlocks: 0 00  0 00  00  00 0  0 , mySum: 02
0 0 0 0 0 0 0 0 2 0 0 0  0 00  00  00 0  0 , mySum: 0 02 
0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 , mySum: 02
0 0 0 0 0 0 0 0 3 0 0 0 0 0 0  , mySum: 00 , mySum: 
3
0 0 0 0 0 1 0 0 2 0 0 0 0 0 00 0 0 0 0 0 0 0 1 0 0  00  , mySum: 30
 0 0 0 0 1 1 0 0 1 0 0 0 0 00 0 0 , mySum: 1 
0 0 0 0 0 1 0 0 0 0 0 0 0 00 0  0, mySum:  03 , mySum: 
10 0 0 0 1 0 0 0 2 0 0 0 0 0 
0 0 0 0 0 0 1 0 0 0 0 0 0 00  0 , mySum: 03
0 0 0 0 0 0 0 0 4 0 0 0 0 0  0 , mySum: 1
0 0 0 0 0 1 0 0 1 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 0 0 3 0 0 0 0 0 0 0 0 , mySum: 02 0 
0 , mySum: 4
0 0 0 0 1 1 0 0 0 0 0 00 0 0 0 1 1 0 0 2 0 0 0  0 00 0  0 00  0 , mySum: , mySum: 24
0 0 0 0 0 0 0 0 2 0 0 0 0 0
 0 0 0 0 1 0 0 0 3 0 0 0 00 0  0 0 0, mySum:  4
0 0 0 0 0 0 0 0 5 0 0 0 0 0 0, mySum:  0 , mySum: 25
0 0 0 0 1 1 0 0 3 0 0 0 0 
0 0 0 0 0 1 0 0 0 1 0 00 0 , mySum: 5
0 0 0 0 1 0 0 0 4 0 0 0 0 0 0 0 0 0  00  0, mySum: 2 
0 0 0 0 0 0 0 0 3 0 0 0 0 0, mySum:  0 50 , mySum: 
3
0 0 0 0 0 1 0 0 2 0 0 0 00 0 0 0 0 1 0 0 4 0 0  0 0 0 , mySum: 30
 0 0 0 0 0 1 1 0 0 1 0 0 0 0 00  00  00 , mySum:  3, mySum: 5

0 0 0 0 1 0 0 0 2 0 0 0 0 0 0 0 1 0 0 0 5 0 0 0 0 00 0  00  , mySum: 6
0 0 0 0 0 0 1 0 0 5 0 0 0 0 0 00  , mySum: 03 
, mySum: 0 0 0 0 0 0 0 0 4 0 0 0 0 06 0 
0 , mySum: 0 0 0 0 0 0 0 0 6 0 0 0 0 0 40 
00 0 0 0 0 1 0 0 3 0 0 0  , mySum: 6
0 0 0 0 1 1 0 0 4 0 0 0 0 00 0  0 , mySum: 06 
0 0 0 0 1 0 0 0 6 0 0 0 0 0 0 , mySum: 4
00 0 0 0 1 1 0 0 2 0 0 0  0 0 , mySum: 7
00 0 0 0 0 1 0 0 6 0 0 0 0 0  0 0 0, mySum:  07
 0 0 0 0 1 1 0 0 5 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 0 3 0 0 0 0 0 0 , mySum: 70
 0 0 0 0 1 1 0 0 6 0 0 0 0 00 0  0 00  , mySum: , mySum: 4
80 0 0 0 0 0 0 0 5 0 0 0 
0 0 0 0 , mySum: 5
0 0 0 0 1 1 0 0 3 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 0 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 0 0 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 0 5 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 0 0 5 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 1 0 0 4 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 0 0 0 6 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 0 0 6 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 1 0 0 5 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 1 0 0 6 0 0 0 0 0 0 0 , mySum: 8
thread: 1, maxBlockLvlSize: 4
thread: 1, maxInBlockLvlSize: 22
thread: 1, AllTableSize: 3024, maxSubsetsSize: 64
thread: 2, maxBlockLvlSize: 4
thread: 2, maxInBlockLvlSize: 22
thread: 2, AllTableSize: 3024, maxSubsetsSize: 64
thread: 0, NSTable size: 26
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 8
thread: 0, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 0, i: 1, maxN[i].weit: 4, maxN[i].idx: 1, blockDimSize[i]: 4
thread: 0, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 0, i: 3, maxN[i].weit: 5, maxN[i].idx: 3, blockDimSize[i]: 5
thread: 0, i: 4, maxN[i].weit: 4, maxN[i].idx: 4, blockDimSize[i]: 4
thread: 0, i: 5, maxN[i].weit: 9, maxN[i].idx: 5, blockDimSize[i]: 9
thread: 0, i: 0, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 1, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 3, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 4
thread: 0, i: 5, divisor[i]: 3, blockDimSize[i]: 3
thread: 0, largestBlockVec.elm: 0 0 0 0 0 0 0 0 0 0 1 0 4 0 0 2 
thread: 0, blockDimSizeComp: 0 0 0 0 0 0 0 0 0 3 2 2 1 0 4 3 
thread: 0, divisorComp: 0 0 0 0 0 0 0 0 0 1 2 1 5 0 1 3 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 1 0 4 0 0 2 
thread: 0, largestNoZeroBlockVec: 0 1 0 4 0 2 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 1 0 2 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 2 , mySum: 3
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 2 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 2 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 2 , mySum: 4
0 0 0 0 0 0 0 0 0 0 1 0 2 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 1 0 3 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 1 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 2 , mySum: 5
0 0 0 0 0 0 0 0 0 0 1 0 2 0 0 2 , mySum: 5
0 0 0 0 0 0 0 0 0 0 1 0 3 0 0 1 , mySum: 5
0 0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 2 , mySum: 6
0 0 0 0 0 0 0 0 0 0 1 0 3 0 0 2 , mySum: 6
0 0 0 0 0 0 0 0 0 0 1 0 4 0 0 1 , mySum: 6
0 0 0 0 0 0 0 0 0 0 1 0 4 0 0 2 , mySum: 7
thread: 0, maxBlockLvlSize: 6
thread: 0, maxInBlockLvlSize: 30
thread: 0, AllTableSize: 4320, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 1 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 0 1 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 mySum: 2
thread: 0, blockNoZero[4]: 0 0 0 1 0 1 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 1 0 1 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[6]: 0 1 0 0 0 1 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 mySum: 2
thread: 0, blockNoZero[7]: 0 0 0 0 0 2 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 mySum: 2
thread: 0, blockNoZero[8]: 0 0 0 2 0 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 mySum: 3
thread: 0, blockNoZero[9]: 0 0 0 3 0 0 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 0 0 0 0 1 0 2 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 0 1 0 2 0 0 
thread: 0, allBlocks[11]: 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 1 mySum: 3
thread: 0, blockNoZero[11]: 0 1 0 1 0 1 
thread: 0, allBlocks[12]: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 2 mySum: 3
thread: 0, blockNoZero[12]: 0 0 0 1 0 2 
thread: 0, allBlocks[13]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 2 mySum: 3
thread: 0, blockNoZero[13]: 0 1 0 0 0 2 
thread: 0, allBlocks[14]: 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 1 mySum: 3
thread: 0, blockNoZero[14]: 0 0 0 2 0 1 
thread: 0, allBlocks[15]: 0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 mySum: 4
thread: 0, blockNoZero[15]: 0 0 0 4 0 0 
thread: 0, allBlocks[16]: 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 1 mySum: 4
thread: 0, blockNoZero[16]: 0 0 0 3 0 1 
thread: 0, allBlocks[17]: 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 2 mySum: 4
thread: 0, blockNoZero[17]: 0 1 0 1 0 2 
thread: 0, allBlocks[18]: 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 2 mySum: 4
thread: 0, blockNoZero[18]: 0 0 0 2 0 2 
thread: 0, allBlocks[19]: 0 0 0 0 0 0 0 0 0 0 1 0 2 0 0 1 mySum: 4
thread: 0, blockNoZero[19]: 0 1 0 2 0 1 
thread: 0, allBlocks[20]: 0 0 0 0 0 0 0 0 0 0 1 0 3 0 0 0 mySum: 4
thread: 0, blockNoZero[20]: 0 1 0 3 0 0 
thread: 0, allBlocks[21]: 0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 1 mySum: 5
thread: 0, blockNoZero[21]: 0 0 0 4 0 1 
thread: 0, allBlocks[22]: 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 2 mySum: 5
thread: 0, blockNoZero[22]: 0 0 0 3 0 2 
thread: 0, allBlocks[23]: 0 0 0 0 0 0 0 0 0 0 1 0 2 0 0 2 mySum: 5
thread: 0, blockNoZero[23]: 0 1 0 2 0 2 
thread: 0, allBlocks[24]: 0 0 0 0 0 0 0 0 0 0 1 0 3 0 0 1 mySum: 5
thread: 0, blockNoZero[24]: 0 1 0 3 0 1 
thread: 0, allBlocks[25]: 0 0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 mySum: 5
thread: 0, blockNoZero[25]: 0 1 0 4 0 0 
thread: 0, allBlocks[26]: 0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 2 mySum: 6
thread: 0, blockNoZero[26]: 0 0 0 4 0 2 
thread: 0, allBlocks[27]: 0 0 0 0 0 0 0 0 0 0 1 0 3 0 0 2 mySum: 6
thread: 0, blockNoZero[27]: 0 1 0 3 0 2 
Thread: 2, gpu_BlockDP is done.
thread: 0, allBlocks[28]: 0 0 0 0 0 0 0 0 0 0 1 0 4 0 0 1 mySum: 6
thread: 0, blockNoZero[28]: 0 1 0 4 0 1 
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
thread: 0, allBlocks[29]: 0 0 0 0 0 0 0 0 0 0 1 0 4 0 0 2 mySum: 7
thread: 0, blockNoZero[29]: 0 1 0 4 0 2 
copy the latest feasible solution to instance takes time: 0.200435
thread: 2, sOPT: 10
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.136539
thread: 1, sOPT: 10
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.086929
thread: 0, sOPT: 10
BKID: 0, LB: 31, UB: 31, OPT: 10
Dynamic Programming Runtime: 1.70049
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 1
********************************************************
Total execution on UB and LB is: 1
OUT of Bk while loop  
UB    31
LB    31
T1    31
T2    31
OPT   10
nMachines   10
BkID	0
AllProbData.size()    2
ck :   1
AllProbData[ck].Ttable    31
ck :   0
AllProbData[ck].Ttable    33
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan34
Main Scheduling is Done
File 1-1 is Done.
******************************
Reading File...
File 1-2 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 52, LB: 33start at time: 1505254706
thread: 0, MlBk is called with LB: 33, UB: 38
thread: 3, MlBk is called with LB: 48, UB: 53
 thread: 0, LongJobs.size() 21
thread: 2, MlBk is called with LB: 43, UB: 48
 thread: 2, LongJobs.size() 18
thread: 1, MlBk is called with LB: 38, UB: 43
 thread: 3, LongJobs.size() 16
 thread: 1, LongJobs.size() 19
thread: 3, NSTable size: 13
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 8
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 7
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 3, i: 1, maxN[i].weit: 9, maxN[i].idx: 1, blockDimSize[i]: 9
thread: 3, i: 2, maxN[i].weit: 8, maxN[i].idx: 2, blockDimSize[i]: 8
thread: 3, i: 0, divisor[i]: 2, blockDimSize[i]: 1
thread: 3, i: 1, divisor[i]: 3, blockDimSize[i]: 3
thread: 3, i: 2, divisor[i]: 2, blockDimSize[i]: 4
thread: 3, largestBlockVec.elm: 0 0 0 1 2 1 0 0 0 0 0 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 1 3 4 0 0 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 2 3 2 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 1 2 1 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 1 2 1 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 4
thread: 3, maxBlockLvlSize: 4
thread: 3, maxInBlockLvlSize: 3
thread: 3, AllTableSize: 144, maxSubsetsSize: 64
thread: 2, NSTable size: 23
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 5
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 7
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 2, i: 1, maxN[i].weit: 6, maxN[i].idx: 1, blockDimSize[i]: 6
thread: 2, i: 2, maxN[i].weit: 5, maxN[i].idx: 2, blockDimSize[i]: 5
thread: 2, i: 3, maxN[i].weit: 8, maxN[i].idx: 3, blockDimSize[i]: 8
thread: 2, i: 0, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 1, divisor[i]: 2, blockDimSize[i]: 3
thread: 2, i: 2, divisor[i]: 5, blockDimSize[i]: 1
thread: 2, i: 3, divisor[i]: 2, blockDimSize[i]: 4
thread: 2, largestBlockVec.elm: 0 0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 0 0 3 3 1 4 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 0 1 2 5 2 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 1 4 1 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 3 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 2 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 4 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 3 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 , mySum: 6
thread: 2, maxBlockLvlSize: 4
thread: 2, maxInBlockLvlSize: 8
thread: 2, AllTableSize: 720, maxSubsetsSize: 64
thread: 1, NSTable size: 28
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 5
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 7
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 1, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 1, i: 2, maxN[i].weit: 6, maxN[i].idx: 2, blockDimSize[i]: 6
thread: 1, i: 3, maxN[i].weit: 5, maxN[i].idx: 3, blockDimSize[i]: 5
thread: 1, i: 4, maxN[i].weit: 8, maxN[i].idx: 4, blockDimSize[i]: 8
thread: 1, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 2, divisor[i]: 2, blockDimSize[i]: 3
thread: 1, i: 3, divisor[i]: 5, blockDimSize[i]: 1
thread: 1, i: 4, divisor[i]: 2, blockDimSize[i]: 4
thread: 1, largestBlockVec.elm: 0 0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 0 2 3 3 1 4 0 0 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 1 1 2 5 2 0 0 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 1 4 1 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 3 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 2 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 4 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 3 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 , mySum: 6
thread: 1, maxBlockLvlSize: 4
thread: 1, maxInBlockLvlSize: 16
thread: 1, AllTableSize: 1440, maxSubsetsSize: 64
thread: 0, NSTable size: 23
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 5
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 7
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 0, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 0, i: 2, maxN[i].weit: 6, maxN[i].idx: 2, blockDimSize[i]: 6
thread: 0, i: 3, maxN[i].weit: 5, maxN[i].idx: 3, blockDimSize[i]: 5
thread: 0, i: 4, maxN[i].weit: 8, maxN[i].idx: 4, blockDimSize[i]: 8
thread: 0, i: 0, divisor[i]: 1, blockDimSize[i]: 4
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 2, divisor[i]: 2, blockDimSize[i]: 3
thread: 0, i: 3, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, i: 4, divisor[i]: 2, blockDimSize[i]: 4
thread: 0, largestBlockVec.elm: 0 0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 0 4 3 3 1 4 0 0 0 0 0 0 0 
thread: 0, divisorComp: 0 0 0 0 1 1 2 5 2 0 0 0 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 1 4 1 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 3 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 2 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 4 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 3 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 , mySum: 6
thread: 0, maxBlockLvlSize: 4
thread: 0, maxInBlockLvlSize: 28
thread: 0, AllTableSize: 2880, maxSubsetsSize: 64
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 6
copy the latest feasible solution to instance takes time: 0.007475
thread: 3, sOPT: 6
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 1 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 0 1 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 0 2 0 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 0 1 1 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 0 1 0 1 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 0 0 0 1 1 
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 8
copy the latest feasible solution to instance takes time: 0.037945
thread: 2, sOPT: 8
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[8]: 0 0 0 3 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[9]: 0 0 0 2 1 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 0 0 1 1 1 
thread: 0, allBlocks[11]: 0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 0 0 1 2 0 
thread: 0, allBlocks[12]: 0 0 0 0 0 0 0 3 1 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[12]: 0 0 0 3 1 
Thread: 1, gpu_BlockDP is done.
thread: 0, allBlocks[13]: 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[13]: 0 0 0 4 0 
thread: 0, allBlocks[14]: 0 0 0 0 0 0 1 2 1 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[14]: 0 0 1 2 1 
thread: 0, allBlocks[15]: 0 0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[15]: 0 0 1 3 0 
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.048966
thread: 1, sOPT: 9
thread: 0, allBlocks[16]: 0 0 0 0 0 0 0 4 1 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[16]: 0 0 0 4 1 
thread: 0, allBlocks[17]: 0 0 0 0 0 0 1 3 1 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[17]: 0 0 1 3 1 
thread: 0, allBlocks[18]: 0 0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[18]: 0 0 1 4 0 
thread: 0, allBlocks[19]: 0 0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[19]: 0 0 1 4 1 
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.058273
thread: 0, sOPT: 10
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: Thread: 32, MlBk function is done, and BkID for all processes are collected.
, MlBk function is done, and BkID for all processes are collected.
1, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 33, UB: 36
BKID: 0, LB: 33, UB: 36, OPT: 10
Dynamic Programming Runtime: 0.796339
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 1
Iteration: 2, UB: 36, LB: 33start at time: 1505254707
thread: 0, MlBk is called with LB: 33, UB: 34
 thread: 0, LongJobs.size() 21
thread: thread: 1, MlBk is called with LB: 234, MlBk is called with LB: 35, UB: , UB: 3635

 thread: 2, LongJobs.size() 21
 thread: 1, LongJobs.size() 21
thread: 2, NSTable size: 23
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 5
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 4thread: 
1, NSTable size: 23
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 5
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 7
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4thread: 
thread: 1, i: 1, maxN[i].weit: 23, maxN[i].idx: 1, i: , blockDimSize[i]: 83, alltableelemets[maxindex].elm[i]: 
7
thread: 1, i: 2, maxN[i].weit: 6, maxN[i].idx: 2, blockDimSize[i]: 6
thread: 1, i: 3, maxN[i].weit: 5, maxN[i].idx: 3, blockDimSize[i]: 5
thread: 1, i: 4, maxN[i].weit: 8, maxN[i].idx: 4, blockDimSize[i]: 8
thread: 1, i: 0, divisor[i]: 1, blockDimSize[i]: 4
thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 2, divisor[i]: 2, blockDimSize[i]: 3
thread: 1, i: 3, divisor[i]: 5, blockDimSize[i]: 1
thread: thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 10
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: , i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
4thread: 2, i: 0, maxN[i].weit: , divisor[i]: 4, maxN[i].idx: 20, blockDimSize[i]: , blockDimSize[i]: 44
thread: 2, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 
2, i: 2, maxN[i].weit: 6, maxN[i].idx: 2thread: , blockDimSize[i]: 16, largestBlockVec.elm: 
thread: 2, i: 3, maxN[i].weit: 5, maxN[i].idx: 3, blockDimSize[i]: 5
0thread: 2, i: 4, maxN[i].weit:  8, maxN[i].idx: 4, blockDimSize[i]: 8
0 thread: 2, i: 0, divisor[i]: 1, blockDimSize[i]: 40
thread: 2, i: 1, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 2, divisor[i]: 2, blockDimSize[i]: 3
thread: 2, i: 3, divisor[i]: 5, blockDimSize[i]: 1
thread: 2, i: 4, divisor[i]: 2, blockDimSize[i]: 4
 thread: 2, largestBlockVec.elm: 0 0 0 0 00  10  4 0 1 00  01  04  0 0 0 0 1
 thread: 1, blockDimSizeComp: 0 0 0 0 4 3 3 1 4 0 0 0 0 0 0 0 
0thread: 1, divisorComp: 0  0 0 0 1 10  02  0 50  2 00  00  0
thread: 2, blockDimSizeComp: 0 0 0 0 4 3 3 1 4 0 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 1  0 0 0 0 40 1  
0thread: 2, divisorComp: 0 0 0 0 1 1 2 5 2 0  0 00  00 0  0 00  0 
0thread: 2, largestBlockVec: 0 0 0 0 0 0 1 4 1 0 
thread: 1, largestNoZeroBlockVec: 0 0 1 4 1 
 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 1 4 1 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0thread:  20, allBlocks:  0 00  00  00  0 , mySum: 01
0 0 0 0 0 0 0 1 0 0 0 0 0 0  0 00 , mySum:  1
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 00
0 0 0 0 0 0 0 0 1 0 0 0  0 0 , mySum: 20
 00 0 0 0 0 0 1 1 0 0 0 0 0  0 0 00  , mySum: 20 
, mySum: 10 0 0 0 0 0 1 0 1 0 0 0 0 
00 0 0 0 0 0 1 0 0 0 0 0  0 0 00  0 0, mySum:  2, mySum: 1

0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 2 0 0 0 0 00 0  00  0 00 0  , mySum: , mySum: 22
0 0 0 0 0 0 1 1 0 0 0 0 
0 0 0 0 0 0 0 0 3 0 0 0 00 0 0  00  0 0, mySum:  2, mySum: 3

0 0 0 0 0 0 0 2 1 0 0 0 00 0 0 0 0 0 1 0 1 0 0 0  0 00  0 00  0 , mySum: , mySum: 2
0 0 0 0 0 0 0 1 1 0 0 0 03 0 
00 0 0 0 0 0 1 1 1 0 0 0 0  0 , mySum: 2
0 0 0 0 0 0 0 3 0 0 0 0 00 0 0  0 , mySum: 03 
0 0 0 0 0 0 0 2 1 0 0 00 0 0  0 , mySum: 0 3, mySum: 3

0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 1 2 0 0 0 0 00 0  0 00  0, mySum: 3 
0 0 0 0 0 0 0 0 3 1 0 0 00 , mySum: 3
0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 , mySum:  40 0 
, mySum: 0 0 0 0 0 0 0 4 0 0 0 0 0 03 0 0 , mySum: 
4
0 0 0 0 0 0 1 2 1 0 0 0 0 0 0 0 0 0 0 0 3 1 0 00 0 0  0 00 0  0 , mySum: , mySum: 44
0 0 0 0 0 0 0 4 0 0 0 0
 0 0 0 0 0 0 1 3 0 0 0 0 00 0  00  0 0, mySum:  4
00 0 0 0 0 0 0 4 1 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 2 1 0 0 0 0  0 00  00  0, mySum: 4 
0 0 0 0 0 0 1 3 0 0 0 0, mySum: 5
0 0 0 0 0 0 1 3 1 0 0 0 0  0 0 0 0 , mySum: 04 0
 0 0 0 0 0 0 0 4 1 0 0 0 0 00  0, mySum:  50
0 0 0 0 0 0 1 4 0 0 0 0 0 0  0 , mySum: 0 , mySum: 55
0 0 0 0 0 0 1 4 1 0 0 0 0 0
 0 0 0 0 0 0 1 3 1 0 0 00 0  00  0 , mySum: 06
 , mySum: 5
0 0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 , mySum: 6
thread: 0, NSTable size: 20
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 5
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 7
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 0, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 0, i: 2, maxN[i].weit: 6, maxN[i].idx: 2, blockDimSize[i]: 6
thread: 0, i: 3, maxN[i].weit: 5, maxN[i].idx: 3, blockDimSize[i]: 5
thread: 0, i: 4, maxN[i].weit: 8, maxN[i].idx: 4, blockDimSize[i]: 8
thread: 0, i: 0, divisor[i]: 1, blockDimSize[i]: 4
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 2, divisor[i]: 2, blockDimSize[i]: 3
thread: 0, i: 3, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, i: 4, divisor[i]: 2, blockDimSize[i]: 4
thread: 0, largestBlockVec.elm: 0 0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 0 4 3 3 1 4 0 0 0 0 0 0 0 
thread: 0, divisorComp: 0 0 0 0 1 1 2 5 2 0 0 0 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 1 4 1 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 3 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 2 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 4 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 3 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 , mySum: 6
thread: 1, maxBlockLvlSize: 4
thread: 1, maxInBlockLvlSize: 28
thread: 1, AllTableSize: 2880, maxSubsetsSize: 64
thread: 2, maxBlockLvlSize: 4
thread: 2, maxInBlockLvlSize: 28
thread: 2, AllTableSize: 2880, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 4
thread: 0, maxInBlockLvlSize: 28
thread: 0, AllTableSize: 2880, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 1 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 0 1 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 0 2 0 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 0 1 1 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 0 1 0 1 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 0 0 0 1 1 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[8]: 0 0 0 3 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[9]: 0 0 0 2 1 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 0 0 1 1 1 
thread: 0, allBlocks[11]: 0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 0 0 1 2 0 
thread: 0, allBlocks[12]: 0 0 0 0 0 0 0 3 1 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[12]: 0 0 0 3 1 
thread: 0, allBlocks[13]: 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[13]: 0 0 0 4 0 
thread: 0, allBlocks[14]: 0 0 0 0 0 0 1 2 1 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[14]: 0 0 1 2 1 
thread: 0, allBlocks[15]: 0 0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[15]: 0 0 1 3 0 
thread: 0, allBlocks[16]: 0 0 0 0 0 0 0 4 1 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[16]: 0 0 0 4 1 
thread: 0, allBlocks[17]: 0 0 0 0 0 0 1 3 1 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[17]: 0 0 1 3 1 
thread: 0, allBlocks[18]: 0 0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[18]: 0 0 1 4 0 
thread: 0, allBlocks[19]: 0 0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[19]: 0 0 1 4 1 
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.220777
thread: 1, sOPT: 10
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.189867
thread: 2, sOPT: 10
copy the latest feasible solution to instance takes time: 0.110166
thread: 0, sOPT: 10
BKID: 0, LB: 33, UB: 33, OPT: 10
Dynamic Programming Runtime: 1.40196
Execution time between LB and UB is: 0
By far, all LB UB calculation runtime: 1
********************************************************
Total execution on UB and LB is: 1
OUT of Bk while loop  
UB    33
LB    33
T1    33
T2    33
OPT   10
nMachines   10
BkID	0
AllProbData.size()    2
ck :   1
AllProbData[ck].Ttable    33
ck :   0
AllProbData[ck].Ttable    35
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan34
Main Scheduling is Done
File 1-2 is Done.
******************************
Reading File...
File 1-3 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 50, LB: 31start at time: 1505254707
thread: 0, MlBk is called with LB: 31, UB: 36
thread: 3, MlBk is called with LB: 46, UB: 51
 thread: 0, LongJobs.size() 21
thread: 1, MlBk is called with LB: 36, UB: 41
 thread: 1, LongJobs.size() 21
thread: 2, MlBk is called with LB: 41, UB: 46
 thread: 3, LongJobs.size() 15
 thread: 2, LongJobs.size() 18
thread: 3, NSTable size: 18
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 5
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 4
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 6
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 6, maxN[i].idx: 0, blockDimSize[i]: 6
thread: 3, i: 1, maxN[i].weit: 5, maxN[i].idx: 1, blockDimSize[i]: 5
thread: 3, i: 2, maxN[i].weit: 7, maxN[i].idx: 2, blockDimSize[i]: 7
thread: 3, i: 0, divisor[i]: 2, blockDimSize[i]: 3
thread: 3, i: 1, divisor[i]: 5, blockDimSize[i]: 1
thread: 3, i: 2, divisor[i]: 7, blockDimSize[i]: 1
thread: 3, largestBlockVec.elm: 0 0 0 1 4 6 0 0 0 0 0 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 3 1 1 0 0 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 2 5 7 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 1 4 6 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 1 4 6 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 1 0 3 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 3 1 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 1 1 2 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 1 3 0 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 3 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 1 1 3 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 5 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 1 2 2 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 1 0 4 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 1 3 1 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 1 4 0 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 4 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 3 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 4 1 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 3 2 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 5 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 4 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 1 1 4 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 3 3 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 1 2 3 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 1 0 5 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 6 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 1 4 1 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 4 2 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 1 3 2 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 1 2 4 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 6 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 4 3 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 1 3 3 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 1 1 5 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 2 5 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 1 0 6 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 3 4 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 1 4 2 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 1 3 4 0 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 1 4 3 0 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 4 4 0 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 1 2 5 0 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 1 1 6 0 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 2 6 0 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 3 5 0 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 1 2 6 0 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 1 3 5 0 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 3 6 0 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 4 5 0 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 1 4 4 0 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 1 3 6 0 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 4 6 0 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 1 4 5 0 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 1 4 6 0 0 0 0 0 0 0 0 0 0 , mySum: 11
thread: 3, maxBlockLvlSize: 10
thread: 3, maxInBlockLvlSize: 1
thread: 3, AllTableSize: 210, maxSubsetsSize: 64
thread: 2, NSTable size: 38
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 5
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 6
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 2, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 2, i: 2, maxN[i].weit: 6, maxN[i].idx: 2, blockDimSize[i]: 6
thread: 2, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 2, i: 4, maxN[i].weit: 7, maxN[i].idx: 4, blockDimSize[i]: 7
thread: 2, i: 0, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 1, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 2, divisor[i]: 2, blockDimSize[i]: 3
thread: 2, i: 3, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, i: 4, divisor[i]: 7, blockDimSize[i]: 1
thread: 2, largestBlockVec.elm: 0 0 0 0 0 0 1 1 6 0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 0 3 3 3 2 1 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 1 1 2 2 7 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 1 1 6 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 1 1 6 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 1 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 1 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 0 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 1 3 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 0 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 1 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 0 5 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 1 5 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 1 1 4 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 1 0 6 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 0 1 6 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 1 1 5 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 1 1 6 0 0 0 0 0 0 0 , mySum: 8
thread: 2, maxBlockLvlSize: 4
thread: 2, maxInBlockLvlSize: 13
thread: 2, AllTableSize: 1512, maxSubsetsSize: 64
thread: 1, NSTable size: 30
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 5
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 5
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 6
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 6, maxN[i].idx: 0, blockDimSize[i]: 6
thread: 1, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 1, i: 2, maxN[i].weit: 6, maxN[i].idx: 2, blockDimSize[i]: 6
thread: 1, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 1, i: 4, maxN[i].weit: 7, maxN[i].idx: 4, blockDimSize[i]: 7
thread: 1, i: 0, divisor[i]: 2, blockDimSize[i]: 3
thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 2, divisor[i]: 2, blockDimSize[i]: 3
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 4
thread: 1, i: 4, divisor[i]: 7, blockDimSize[i]: 1
thread: 1, largestBlockVec.elm: 0 0 0 0 1 0 1 0 6 0 0 0 0 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 0 3 3 3 4 1 0 0 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 2 1 2 1 7 0 0 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 1 0 1 0 6 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 1 0 1 0 6 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 0 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 1 0 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 0 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 1 0 3 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 0 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 0 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 0 5 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 1 0 5 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 0 1 0 4 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 0 0 0 6 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 1 0 6 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 0 1 0 5 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 0 1 0 6 0 0 0 0 0 0 0 , mySum: 8
thread: 0, NSTable size: 20
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 5
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 5
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 6
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 0, maxN[i].weit: 6, maxN[i].idx: 0, blockDimSize[i]: 6
thread: 0, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 0, i: 2, maxN[i].weit: 6, maxN[i].idx: 2, blockDimSize[i]: 6
thread: 0, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 0, i: 4, maxN[i].weit: 7, maxN[i].idx: 4, blockDimSize[i]: 7
thread: 0, i: 0, divisor[i]: 2, blockDimSize[i]: 3
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 2, divisor[i]: 2, blockDimSize[i]: 3
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 4
thread: 0, i: 4, divisor[i]: 7, blockDimSize[i]: 1
thread: 0, largestBlockVec.elm: 0 0 0 0 1 0 1 0 6 0 0 0 0 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 0 3 3 3 4 1 0 0 0 0 0 0 0 
thread: 0, divisorComp: 0 0 0 0 2 1 2 1 7 0 0 0 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 1 0 1 0 6 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 1 0 1 0 6 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 0 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 1 0 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 0 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 1 0 3 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 0 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 0 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 0 5 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 1 0 5 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 0 1 0 4 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 0 0 0 6 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 1 0 6 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 0 1 0 5 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 0 1 0 6 0 0 0 0 0 0 0 , mySum: 8
thread: 1, maxBlockLvlSize: 4
thread: 1, maxInBlockLvlSize: 22
thread: 1, AllTableSize: 3024, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 4
thread: 0, maxInBlockLvlSize: 22
thread: 0, AllTableSize: 3024, maxSubsetsSize: 64
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 6
copy the latest feasible solution to instance takes time: 0.009554
thread: 3, sOPT: 6
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 1 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 1 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 1 0 1 
thread: 0, allBlocks[5]: 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 1 0 1 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 0 0 0 2 
thread: 0, allBlocks[7]: 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 1 0 0 0 1 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[8]: 0 0 0 0 3 
thread: 0, allBlocks[9]: 0 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[9]: 0 0 1 0 2 
thread: 0, allBlocks[10]: 0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 1 0 1 0 1 
thread: 0, allBlocks[11]: 0 0 0 0 1 0 0 0 2 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 1 0 0 0 2 
thread: 0, allBlocks[12]: 0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[12]: 0 0 0 0 4 
thread: 0, allBlocks[13]: 0 0 0 0 0 0 1 0 3 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[13]: 0 0 1 0 3 
thread: 0, allBlocks[14]: 0 0 0 0 1 0 1 0 2 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[14]: 1 0 1 0 2 
thread: 0, allBlocks[15]: 0 0 0 0 1 0 0 0 3 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[15]: 1 0 0 0 3 
thread: 0, allBlocks[16]: 0 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[16]: 0 0 0 0 5 
thread: 0, allBlocks[17]: 0 0 0 0 1 0 1 0 3 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[17]: 1 0 1 0 3 
thread: 0, allBlocks[18]: 0 0 0 0 1 0 0 0 4 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[18]: 1 0 0 0 4 
thread: 0, allBlocks[19]: 0 0 0 0 0 0 1 0 4 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[19]: 0 0 1 0 4 
thread: 0, allBlocks[20]: 0 0 0 0 1 0 0 0 5 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[20]: 1 0 0 0 5 
thread: 0, allBlocks[21]: 0 0 0 0 0 0 1 0 5 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[21]: 0 0 1 0 5 
Thread: 2, gpu_BlockDP is done.
thread: 0, allBlocks[22]: 0 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[22]: 0 0 0 0 6 
thread: 0, allBlocks[23]: 0 0 0 0 1 0 1 0 4 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[23]: 1 0 1 0 4 
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 7
thread: 0, allBlocks[24]: 0 0 0 0 1 0 0 0 6 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[24]: 1 0 0 0 6 
thread: 0, allBlocks[25]: 0 0 0 0 0 0 1 0 6 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[25]: 0 0 1 0 6 
thread: 0, allBlocks[26]: 0 0 0 0 1 0 1 0 5 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[26]: 1 0 1 0 5 
copy the latest feasible solution to instance takes time: 0.0828
thread: 2, sOPT: 7
thread: 0, allBlocks[27]: 0 0 0 0 1 0 1 0 6 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[27]: 1 0 1 0 6 
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 9
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.148781
thread: 1, sOPT: 9
copy the latest feasible solution to instance takes time: 0.099674
thread: 0, sOPT: 10
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 1, MlBk function is done, and BkID for all processes are collected.Thread: 2
3, MlBk function is done, and BkID for all processes are collected., MlBk function is done, and BkID for all processes are collected.

sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 31, UB: 34
BKID: 0, LB: 31, UB: 34, OPT: 10
Dynamic Programming Runtime: 1.1725
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 1
Iteration: 2, UB: 34, LB: 31start at time: 1505254708
thread: 0, MlBk is called with LB: 31, UB: 32
 thread: 0, LongJobs.size() 21
thread: thread: 2, MlBk is called with LB: 33, UB: 1, MlBk is called with LB: 3432, UB: 33

 thread: 2, LongJobs.size() 21
 thread: 1, LongJobs.size() 21
thread: 2, NSTable size: 20
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 5
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 5
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 6
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: thread: 12, NSTable size: , i: 2010, alltableelemets[maxindex].elm[i]: 
0thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 5
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 5
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 6
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1
, i: 0, maxN[i].weit: 6, maxN[i].idx: thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
0thread: , blockDimSize[i]: 62
, i: thread: 1, i: 01, maxN[i].weit: 6, maxN[i].weit: , maxN[i].idx: 30, blockDimSize[i]: , maxN[i].idx: 61
, blockDimSize[i]: 3thread: 2, i: 1, maxN[i].weit: 
3, maxN[i].idx: thread: 1, i: 12, maxN[i].weit: , blockDimSize[i]: 63, maxN[i].idx: 
2thread: 2, i: 2, maxN[i].weit: 6, maxN[i].idx: , blockDimSize[i]: 2, blockDimSize[i]: 6
thread: 2, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 2, i: 64, maxN[i].weit: 7, maxN[i].idx: 
4, blockDimSize[i]: 7
thread: thread: 12, i: , i: 30, maxN[i].weit: , divisor[i]: 4, maxN[i].idx: 23, blockDimSize[i]: , blockDimSize[i]: 43

thread: 1, i: 4, maxN[i].weit: 7, maxN[i].idx: thread: 2, i: 1, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 2, divisor[i]: 2, blockDimSize[i]: 3
thread: 2, i: 3, divisor[i]: 1, blockDimSize[i]: 4
thread: 2, i: 4, divisor[i]: 7, blockDimSize[i]: 1
4, blockDimSize[i]: 7
thread: thread: 1, i: 20, divisor[i]: 2, largestBlockVec.elm: , blockDimSize[i]: 3
thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 2, divisor[i]: 2, blockDimSize[i]: 3
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 4
thread: 1, i: 4, divisor[i]: 7, blockDimSize[i]: 1
0thread: 1, largestBlockVec.elm:  0 00  00  0 0 1 10  0 11  0 0 6 0 60  00 0  00  0 00 
 thread: 2, blockDimSizeComp: 0 0 0 0 3 3 3 4 01  00  0 00 0  0
 thread: 1, blockDimSizeComp: 0 0 0 0 3 3 3 4 1 0 00  00  0 00  
0thread: 2, divisorComp: 0 0 0 0 2 1 2 1 7 0 0 0 
thread: 1, divisorComp: 0 0 0 0 2 1 2 1 7 0 0 0 0 0 0  
thread: 2, largestBlockVec: 0 0 0 0 1 0 1 0 6 00 0 0  00  0 00  00 0  
thread: 1, largestBlockVec: 0 0 0 0 1 0 1 0 6 0 00 0  0
 thread: 2, largestNoZeroBlockVec: 1 0 1 0 6 
0 0 0 
thread: 1, largestNoZeroBlockVec: 1 0 1 0 6 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 thread: 01, allBlocks:  00 0  0 00 0  0 00  , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 00  , mySum: 01 
0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 00 , mySum:  10
 0 0 0 0 1 0 0 0 0 0 0 0 0 0 00 0  , mySum: , mySum: 21

0 0 0 0 0 0 1 0 0 0 0 0 0 0 00 0 0 0 1 0 1 0 0 0 0 0  0 00 , mySum: 1 
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 00 0  , mySum: 02 
0 0 0 0 1 0 0 0 1 0 0 0 0 , mySum: 0 0 20
 0 0 0 0 1 0 1 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 3 00  00 0  , mySum: 0 20 0 
0 0 , mySum: 0 0 0 0 0 0 0 0 2 0 0 0 0 0 3
0 0 0 0 0 0 1 0 2 0 0 0 00 0 , mySum: 2
 0 0 0 0 1 0 0 0 1 0 0 0 0 00 0 0 , mySum: 3
 0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 3 0 0 0 0 0 00  00  0, mySum:  3, mySum: 
30 0 0 0 0 0 1 0 2 0 0 0 0 
0 00 0 0 0 1 0 0 0 2 0 0 0  0 , mySum: 3
0 0 0 0 1 0 1 0 1 0 0 0 00 0 0 0 , mySum: 3 
00 0 0 0 0 0 0 0 4 0 0 0 0 0  0 0 0, mySum:  0 4, mySum: 
30 0 0 0 0 0 1 0 3 0 0 0 0 0
 0 0 0 0 1 0 0 0 2 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 1 0 2 0 0 0 0 0 00 0  , mySum: 4
0 0 0 0 1 0 0 0 3 0 0 0 00 0 0 , mySum: 3 
0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 5 0 0 0 0 0 00 0  , mySum: 0 05 
, mySum: 40 0 0 0 1 0 1 0 3 0 0 0 0 0
 00 0 0 0 0 0 1 0 3 0 0 0  0 , mySum: 5
0 0 0 0 1 0 0 0 4 0 0 0 0 0 0 0 0 , mySum: 04 0
0 0 0 0 1 0 1 0 2 0 0 0 0  0 , mySum: 5
0 0 0 0 0 0 1 0 4 0 0 0 0 00  00  0 , mySum: 05
0 0 0 0 1 0 0 0 5 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 0 3 0 0 0 0 0 0  00  0 , mySum: 04
0 0 0 0 0 0 0 0 5 0 0 0 0  0, mySum:  0 0 6, mySum: 
0 0 0 0 0 0 1 0 5 0 0 0 0 05
0 0 0 0 1 0 1 0 3 0 0 0 0  0 00 0  , mySum: 50
 , mySum: 0 0 0 0 1 0 0 0 4 0 0 0 0 60 
0 0 0 0 0 0 0 0 0 6 0 0 0 0 0 00 0  , mySum: , mySum: 65

0 0 0 0 1 0 1 0 4 0 0 0 0 0 0 0 0 0 0 1 0 4 0 0 00 0  0 0 00  0 , mySum: , mySum: 56

0 0 0 0 1 0 0 0 5 0 0 0 00 0 0 0 1 0 0 0 6 0 0  0 0 0 , mySum: 60
 00 0 0 0 0 0 1 0 5 0 0 0 0  0 0 0 , mySum: 7
0 0 0 0 0 0 1 0 6 0 0 0 0 00 0  0 0, mySum: 7
 0 0 0 0 1 0 1 0 5 0 0 0 00 , mySum: 6
0 0 0 0 0 0 0 0 6 0 0 0 0 0  0 00  , mySum: 6
0 0 0 0 0 1 0 1 0 4 0 0 0 0 0 , mySum: 7
0 0 0 0 1 0 1 0 6 0 0 0 0 00 0 0 , mySum: 6
0 0 0 0 1 0 0 0 6 0 0 0 0  0 0 00  0 , mySum: , mySum: 8
7
0 0 0 0 0 0 1 0 6 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 0 1 0 5 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 0 1 0 6 0 0 0 0 0 0 0 , mySum: 8
thread: 2, maxBlockLvlSize: 4
thread: 2, maxInBlockLvlSize: 22
thread: 2, AllTableSize: 3024, maxSubsetsSize: 64
thread: 1, maxBlockLvlSize: 4
thread: 1, maxInBlockLvlSize: 22
thread: 1, AllTableSize: 3024, maxSubsetsSize: 64
thread: 0, NSTable size: 33
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 9
thread: 0, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 0, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 0, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 0, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 0, i: 4, maxN[i].weit: 5, maxN[i].idx: 4, blockDimSize[i]: 5
thread: 0, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 0, i: 6, maxN[i].weit: 10, maxN[i].idx: 6, blockDimSize[i]: 10
thread: 0, i: 0, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 6, divisor[i]: 2, blockDimSize[i]: 5
thread: 0, largestBlockVec.elm: 0 0 0 0 0 0 0 0 0 1 0 0 0 4 0 1 
thread: 0, blockDimSizeComp: 0 0 0 0 0 0 0 0 0 2 3 2 2 1 2 5 
thread: 0, divisorComp: 0 0 0 0 0 0 0 0 0 2 1 1 1 5 1 2 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 1 0 0 0 4 0 1 
thread: 0, largestNoZeroBlockVec: 1 0 0 0 4 0 1 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 1 0 0 0 2 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 1 0 0 0 2 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 1 0 0 0 3 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 4 0 1 , mySum: 5
0 0 0 0 0 0 0 0 0 1 0 0 0 3 0 1 , mySum: 5
0 0 0 0 0 0 0 0 0 1 0 0 0 4 0 0 , mySum: 5
0 0 0 0 0 0 0 0 0 1 0 0 0 4 0 1 , mySum: 6
thread: 0, maxBlockLvlSize: 4
thread: 0, maxInBlockLvlSize: 46
thread: 0, AllTableSize: 4800, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 1 0 0 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 0 0 1 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 0 0 2 0 0 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 mySum: 2
thread: 0, blockNoZero[5]: 1 0 0 0 1 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[6]: 1 0 0 0 0 0 1 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 mySum: 2
thread: 0, blockNoZero[7]: 0 0 0 0 1 0 1 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 mySum: 3
thread: 0, blockNoZero[8]: 0 0 0 0 3 0 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 1 mySum: 3
thread: 0, blockNoZero[9]: 0 0 0 0 2 0 1 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 1 mySum: 3
thread: 0, blockNoZero[10]: 1 0 0 0 1 0 1 
thread: 0, allBlocks[11]: 0 0 0 0 0 0 0 0 0 1 0 0 0 2 0 0 mySum: 3
thread: 0, blockNoZero[11]: 1 0 0 0 2 0 0 
thread: 0, allBlocks[12]: 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 1 mySum: 4
thread: 0, blockNoZero[12]: 0 0 0 0 3 0 1 
thread: 0, allBlocks[13]: 0 0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 mySum: 4
thread: 0, blockNoZero[13]: 0 0 0 0 4 0 0 
thread: 0, allBlocks[14]: 0 0 0 0 0 0 0 0 0 1 0 0 0 2 0 1 mySum: 4
thread: 0, blockNoZero[14]: 1 0 0 0 2 0 1 
thread: 0, allBlocks[15]: 0 0 0 0 0 0 0 0 0 1 0 0 0 3 0 0 mySum: 4
thread: 0, blockNoZero[15]: 1 0 0 0 3 0 0 
thread: 0, allBlocks[16]: 0 0 0 0 0 0 0 0 0 0 0 0 0 4 0 1 mySum: 5
thread: 0, blockNoZero[16]: 0 0 0 0 4 0 1 
thread: 0, allBlocks[17]: 0 0 0 0 0 0 0 0 0 1 0 0 0 3 0 1 mySum: 5
thread: 0, blockNoZero[17]: 1 0 0 0 3 0 1 
Thread: 1, gpu_BlockDP is done.
thread: 0, allBlocks[18]: 0 0 0 0 0 0 0 0 0 1 0 0 0 4 0 0 mySum: 5
thread: 0, blockNoZero[18]: 1 0 0 0 4 0 0 
Thread: 2, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.170728
thread: 1, sOPT: 10
copy the latest feasible solution to instance takes time: 0.221807
thread: 2, sOPT: 10
thread: 0, allBlocks[19]: 0 0 0 0 0 0 0 0 0 1 0 0 0 4 0 1 mySum: 6
thread: 0, blockNoZero[19]: 1 0 0 0 4 0 1 
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.099657
thread: 0, sOPT: 10
BKID: 0, LB: 31, UB: 31, OPT: 10
Dynamic Programming Runtime: 2.19087
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 2
********************************************************
Total execution on UB and LB is: 2
OUT of Bk while loop  
UB    31
LB    31
T1    31
T2    31
OPT   10
nMachines   10
BkID	0
AllProbData.size()    2
ck :   1
AllProbData[ck].Ttable    31
ck :   0
AllProbData[ck].Ttable    33
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan32
Main Scheduling is Done
File 1-3 is Done.
******************************
Reading File...
File 1-4 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 50, LB: 31start at time: 1505254709
thread: 0, MlBk is called with LB: 31, UB: 36
thread: 3, MlBk is called with LB: 46, UB: 51
 thread: 0, LongJobs.size() 21
thread: 1, MlBk is called with LB: 36, UB: 41 thread: 3
, LongJobs.size() 16
 thread: 1, LongJobs.size() 21
thread: 2, MlBk is called with LB: 41, UB: 46
 thread: 2, LongJobs.size() 20
thread: 3, NSTable size: 18
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 5
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 7
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 4
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 6, maxN[i].idx: 0, blockDimSize[i]: 6
thread: 3, i: 1, maxN[i].weit: 8, maxN[i].idx: 1, blockDimSize[i]: 8
thread: 3, i: 2, maxN[i].weit: 5, maxN[i].idx: 2, blockDimSize[i]: 5
thread: 3, i: 0, divisor[i]: 2, blockDimSize[i]: 3
thread: 3, i: 1, divisor[i]: 2, blockDimSize[i]: 4
thread: 3, i: 2, divisor[i]: 5, blockDimSize[i]: 1
thread: 3, largestBlockVec.elm: 0 0 0 1 1 4 0 0 0 0 0 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 3 4 1 0 0 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 2 2 5 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 1 1 4 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 1 1 4 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 3 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 1 0 3 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 1 1 2 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 4 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 1 0 4 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 1 1 3 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 1 1 4 0 0 0 0 0 0 0 0 0 0 , mySum: 6
thread: 3, maxBlockLvlSize: 4
thread: 3, maxInBlockLvlSize: 3
thread: 3, AllTableSize: 240, maxSubsetsSize: 64
thread: 2, NSTable size: 39
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 8
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 2, i: 1, maxN[i].weit: 4, maxN[i].idx: 1, blockDimSize[i]: 4
thread: 2, i: 2, maxN[i].weit: 9, maxN[i].idx: 2, blockDimSize[i]: 9
thread: 2, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 2, i: 4, maxN[i].weit: 5, maxN[i].idx: 4, blockDimSize[i]: 5
thread: 2, i: 0, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 1, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, i: 2, divisor[i]: 3, blockDimSize[i]: 3
thread: 2, i: 3, divisor[i]: 1, blockDimSize[i]: 4
thread: 2, i: 4, divisor[i]: 5, blockDimSize[i]: 1
thread: 2, largestBlockVec.elm: 0 0 0 0 0 1 2 0 4 0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 0 3 2 3 4 1 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 1 2 3 1 5 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 1 2 0 4 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 1 2 0 4 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 1 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 0 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 0 0 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 0 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 1 0 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 2 0 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 2 0 3 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 0 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 0 0 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 1 0 3 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 2 0 2 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 2 0 4 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 2 0 3 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 1 0 4 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 2 0 4 0 0 0 0 0 0 0 , mySum: 7
thread: 1, NSTable size: 31
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 8
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 1, i: 1, maxN[i].weit: 4, maxN[i].idx: 1, blockDimSize[i]: 4
thread: 1, i: 2, maxN[i].weit: 9, maxN[i].idx: 2, blockDimSize[i]: 9
thread: 1, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 1, i: 4, maxN[i].weit: 5, maxN[i].idx: 4, blockDimSize[i]: 5
thread: 1, i: 0, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 4
thread: 1, i: 2, divisor[i]: 3, blockDimSize[i]: 3
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 4
thread: 1, i: 4, divisor[i]: 5, blockDimSize[i]: 1
thread: 1, largestBlockVec.elm: 0 0 0 0 1 0 2 0 4 0 0 0 0 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 0 2 4 3 4 1 0 0 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 2 1 3 1 5 0 0 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 1 0 2 0 4 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 1 0 2 0 4 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 0 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 0 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 0 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 1 0 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 2 0 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 2 0 3 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 0 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 0 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 1 0 3 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 2 0 2 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 2 0 4 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 0 2 0 3 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 0 1 0 4 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 0 2 0 4 0 0 0 0 0 0 0 , mySum: 7
thread: 0, NSTable size: 20
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 8
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 0, i: 1, maxN[i].weit: 4, maxN[i].idx: 1, blockDimSize[i]: 4
thread: 0, i: 2, maxN[i].weit: 9, maxN[i].idx: 2, blockDimSize[i]: 9
thread: 0, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 0, i: 4, maxN[i].weit: 5, maxN[i].idx: 4, blockDimSize[i]: 5
thread: 0, i: 0, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 4
thread: 0, i: 2, divisor[i]: 3, blockDimSize[i]: 3
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 4
thread: thread: 0, i: 24, maxBlockLvlSize: 6, divisor[i]: 
thread: 2, maxInBlockLvlSize: 16
5thread: 2, AllTableSize: , blockDimSize[i]: 12160, maxSubsetsSize: 64

thread: 0, largestBlockVec.elm: 0 0 0 0 1 0 2 0 4 0 0 0 0 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 0 2 4 3 4 1 0 0 0 0 0 0 0 
thread: 0, divisorComp: 0 0 0 0 2 1 3 1 5 0 0 0 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 1 0 2 0 4 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 1 0 2 0 4 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 0 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 0 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 0 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 1 0 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 2 0 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 2 0 3 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 0 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 0 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 1 0 3 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 2 0 2 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 2 0 4 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 0 2 0 3 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 0 1 0 4 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 0 2 0 4 0 0 0 0 0 0 0 , mySum: 7
thread: 1, maxBlockLvlSize: 6
thread: 1, maxInBlockLvlSize: 19
thread: 1, AllTableSize: 2880, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 6
thread: 0, maxInBlockLvlSize: 19
thread: 0, AllTableSize: 2880, maxSubsetsSize: 64
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 6
copy the latest feasible solution to instance takes time: 0.012366
thread: 3, sOPT: 6
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 1 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 1 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 1 0 1 
thread: 0, allBlocks[5]: 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 1 0 1 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 0 2 0 0 
thread: 0, allBlocks[7]: 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 1 0 0 0 1 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[8]: 0 0 0 0 2 
thread: 0, allBlocks[9]: 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[9]: 0 0 0 0 3 
thread: 0, allBlocks[10]: 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 1 0 2 0 0 
thread: 0, allBlocks[11]: 0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 1 0 1 0 1 
thread: 0, allBlocks[12]: 0 0 0 0 1 0 0 0 2 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[12]: 1 0 0 0 2 
thread: 0, allBlocks[13]: 0 0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[13]: 0 0 2 0 1 
thread: 0, allBlocks[14]: 0 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[14]: 0 0 1 0 2 
thread: 0, allBlocks[15]: 0 0 0 0 0 0 2 0 2 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[15]: 0 0 2 0 2 
thread: 0, allBlocks[16]: 0 0 0 0 1 0 0 0 3 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[16]: 1 0 0 0 3 
thread: 0, allBlocks[17]: 0 0 0 0 0 0 1 0 3 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[17]: 0 0 1 0 3 
thread: 0, allBlocks[18]: 0 0 0 0 1 0 1 0 2 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[18]: 1 0 1 0 2 
thread: 0, allBlocks[19]: 0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[19]: 0 0 0 0 4 
thread: 0, allBlocks[20]: 0 0 0 0 1 0 2 0 1 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[20]: 1 0 2 0 1 
thread: 0, allBlocks[21]: 0 0 0 0 0 0 2 0 3 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[21]: 0 0 2 0 3 
thread: 0, allBlocks[22]: 0 0 0 0 0 0 1 0 4 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[22]: 0 0 1 0 4 
thread: 0, allBlocks[23]: 0 0 0 0 1 0 0 0 4 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[23]: 1 0 0 0 4 
thread: 0, allBlocks[24]: 0 0 0 0 1 0 1 0 3 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[24]: 1 0 1 0 3 
thread: 0, allBlocks[25]: 0 0 0 0 1 0 2 0 2 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[25]: 1 0 2 0 2 
thread: 0, allBlocks[26]: 0 0 0 0 0 0 2 0 4 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[26]: 0 0 2 0 4 
thread: 0, allBlocks[27]: 0 0 0 0 1 0 2 0 3 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[27]: 1 0 2 0 3 
thread: 0, allBlocks[28]: 0 0 0 0 1 0 1 0 4 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[28]: 1 0 1 0 4 
thread: 0, allBlocks[29]: 0 0 0 0 1 0 2 0 4 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[29]: 1 0 2 0 4 
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 7
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.171592
thread: 2, sOPT: 7
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.181352
thread: 0, sOPT: 10
copy the latest feasible solution to instance takes time: 0.090215
thread: 1, sOPT: 9
Thread: 1, MlBk function is done, and BkID for all processes are collected.
Thread: 2, MlBk function is done, and BkID for all processes are collected.
Thread: 3, MlBk function is done, and BkID for all processes are collected.
Thread: 0, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 31, UB: 34
BKID: 0, LB: 31, UB: 34, OPT: 10
Dynamic Programming Runtime: 1.2903
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 1
Iteration: 2, UB: 34, LB: 31start at time: 1505254710
thread: 0, MlBk is called with LB: 31, UB: 32
 thread: 0, LongJobs.size() 21
thread: thread: 2, MlBk is called with LB: 331, MlBk is called with LB: , UB: 3234, UB: 
33
 thread: 2, LongJobs.size() 21
 thread: 1, LongJobs.size() 21
thread: 1, NSTable size: 20
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, NSTable size: 20thread: 
1, i: thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 35, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 8
, alltableelemets[maxindex].elm[i]: thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 3
0thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0

thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 8
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 4
0thread: 1, i: 9, alltableelemets[maxindex].elm[i]: , maxN[i].weit: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 44, maxN[i].idx: , maxN[i].idx: 00, blockDimSize[i]: 4, blockDimSize[i]: 
thread: 2, i: 14, maxN[i].weit: 4, maxN[i].idx: 1
, blockDimSize[i]: 4
thread: 1, i: 1, maxN[i].weit: 4, maxN[i].idx: thread: 2, i: 2, maxN[i].weit: 1, blockDimSize[i]: 4
thread: 1, i: 2, maxN[i].weit: 9, maxN[i].idx: 29, blockDimSize[i]: 9
, maxN[i].idx: thread: 1, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 1, i: 4, maxN[i].weit: 5, maxN[i].idx: 4, blockDimSize[i]: 52
, blockDimSize[i]: thread: 1, i: 09, divisor[i]: 2
, blockDimSize[i]: 2thread: 2, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 2, i: 4, maxN[i].weit: 5, maxN[i].idx: 4, blockDimSize[i]: 
5
thread: thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 4
thread: 1, i: 2, divisor[i]: 3, blockDimSize[i]: 3
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 4
thread: 1, i: 4, divisor[i]: 5, blockDimSize[i]: 1
2, i: 0, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, i: 1, divisor[i]: 1, blockDimSize[i]: 4
thread: 2, i: 2, divisor[i]: 3, blockDimSize[i]: 3
thread: 2, i: 3, divisor[i]: 1, blockDimSize[i]: 4
thread: 2, i: 4, divisor[i]: 5, blockDimSize[i]: 1
thread: thread: 2, largestBlockVec.elm: 1, largestBlockVec.elm: 0 0 0 0 0 0 0 0 1 1 0 02  02  0 4 0 0 4 0 0 00  00  00  0 0
thread: 2, blockDimSizeComp: 0 0 0 0 2 4 3 4 1  0 0 
thread: 1, blockDimSizeComp: 0 0 0 0 2 4 3 4 1 00 0  0 0 00  00  0 0
 thread: 1, divisorComp: 0 0 0 0 2 1 3 1 5 00 0  00  0 00  
0thread: 2, divisorComp: 0 0 0 0 2 1 3 1 5 0 0  0 0 00  
0thread: 1, largestBlockVec: 0 0 0 0 1 0 2 0 4 0 0  0 00  0
thread: 2, largestBlockVec: 0 0 0 0 1 0 2 0 4 0  0 0 00 0  00  
thread: 1, largestNoZeroBlockVec: 1 0 2 0 4 
0 
thread: 2, largestNoZeroBlockVec: 1 0 2 0 4 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0thread:  20, allBlocks:  00  0 00  00  0 0, mySum: 1 
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 00  00  00  0, mySum:  1
00 0 0 0 0 0 1 0 1 0 0 0 0  0 , mySum: 0
00 0 0 0 0 0 0 0 1 0 0 0 0 0  0 0 0, mySum:  01 
, mySum: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 2
0 0 0 0 1 0 1 0 0 0 0 0 0 00 0  0 , mySum: 0 2, mySum: 1

0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 1 0 0 0 0 00 0  0 0, mySum:  2
0 0 0 0 0 0 0 0 2 0 0 0 00 , mySum: 2
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0  0 , mySum: 02 
0 0 0 0 0 0 2 0 0 0 0 0 0 00 0  00 , mySum:  2
, mySum: 0 0 0 0 0 0 0 0 3 0 0 0 0 02
0 0 0 0 1 0 0 0 1 0 0 0 0  0 0 , mySum: 3
00 0 0 0 1 0 2 0 0 0 0 0 0 0  0 00  0, mySum:  3
0 0 0 0 1 0 1 0 1 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 00 0 , mySum:  2
0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 , mySum: 30
 00 0 0 0 1 0 0 0 2 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 2 0 0 0 0 0 0  0 0 0 , mySum: 3
0 0 0 0 0 0 2 0 1 0 0 0 00 0  0 0 0, mySum: 3
 0 0 0 0 0 0 1 0 2 0 0 0 0 00  0, mySum: 3 
0 0 0 0 1 0 1 0 1 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 0 2 0 0 0 0 00 0 0  , mySum: 4
00 0 0 0 1 0 0 0 3 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 0 2 0 0 0 0 0 0 0 , mySum: 4 
00 0 0 0 0 0 1 0 3 0 0 0 0  0 0 00 0  , mySum: 4
, mySum: 0 0 0 0 1 0 1 0 2 0 0 0 03 0 
00 0 0 0 0 0 2 0 1 0 0 0 0  0 , mySum: 4
0 0 0 0 0 0 0 0 4 0 0 0 00 0  00  0 0, mySum:  4
, mySum: 0 0 0 0 1 0 2 0 1 0 0 0 30 0 0 
0 , mySum: 0 0 0 0 0 0 1 0 2 0 0 0 0 04
0 0 0 0 0 0 2 0 3 0 0 0 0  0 00  00  , mySum: 5
, mySum: 0 0 0 0 0 0 1 0 4 0 0 0 30 0 0
 0 0 0 0 0 0 2 0 2 0 0 0 0 0 0 00  , mySum: 4, mySum: 
50 0 0 0 1 0 0 0 3 0 0 0 0 
0 0 0 0 0 1 0 0 0 4 0 0 0 0 00  00  , mySum: 0 4, mySum: 
50 0 0 0 0 0 1 0 3 0 0 0 0 0
 00 0 0 0 1 0 1 0 3 0 0 0 0  0 00 , mySum: 4
 0 0 0 0 1 0 1 0 2 0 0 0 0 00 0 0  , mySum: , mySum: 45

0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 1 0 2 0 2 0 0 0 00  00 0  00  , mySum: 4
, mySum: 0 0 0 0 1 0 2 0 1 0 0 0 0 0 50 0 
, mySum: 4
0 0 0 0 0 0 2 0 4 0 0 0 00 0 0 0 0 0 2 0 3 0 0  0 0 00 0 0  00  , mySum: 5, mySum: 
6
0 0 0 0 0 0 1 0 4 0 0 0 0 0 0 0 0 1 0 2 0 3 0 0 0 0 0 , mySum: 50
 00 0 0 0 1 0 0 0 4 0 0 0 0  0 0 0 , mySum: 6
0 0 0 0 1 0 1 0 4 0 0 0 0 0 00  00  , mySum: 60
0 0 0 0 1 0 2 0 4 0 0 0  0, mySum:  50
 0 0 0 0 1 0 1 0 3 0 0 0 0 00 0 0  0, mySum:  5
, mySum: 0 0 0 0 1 0 2 0 2 0 0 0 07
 0 0 0 , mySum: 5
0 0 0 0 0 0 2 0 4 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 0 2 0 3 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 0 1 0 4 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 0 2 0 4 0 0 0 0 0 0 0 , mySum: 7
thread: 1, maxBlockLvlSize: 6
thread: 1, maxInBlockLvlSize: 19
thread: 1, AllTableSize: 2880, maxSubsetsSize: 64
thread: 2, maxBlockLvlSize: 6
thread: 2, maxInBlockLvlSize: 19
thread: 2, AllTableSize: 2880, maxSubsetsSize: 64
thread: 0, NSTable size: 32
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 7
thread: 0, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 0, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 0, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 0, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 0, i: 4, maxN[i].weit: 5, maxN[i].idx: 4, blockDimSize[i]: 5
thread: 0, i: 5, maxN[i].weit: 5, maxN[i].idx: 5, blockDimSize[i]: 5
thread: 0, i: 6, maxN[i].weit: 8, maxN[i].idx: 6, blockDimSize[i]: 8
thread: 0, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 2, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, i: 5, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, i: 6, divisor[i]: 2, blockDimSize[i]: 4
thread: 0, largestBlockVec.elm: 0 0 0 0 0 0 0 0 0 0 0 0 0 4 4 1 
thread: 0, blockDimSizeComp: 0 0 0 0 0 0 0 0 0 2 3 3 2 1 1 4 
thread: 0, divisorComp: 0 0 0 0 0 0 0 0 0 1 1 1 1 5 5 2 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 4 4 1 
thread: 0, largestNoZeroBlockVec: 0 0 0 0 4 4 1 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 2 1 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 1 2 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 1 2 1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 1 3 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 3 1 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 2 1 1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 2 2 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 2 2 1 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 0 3 1 1 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 0 3 2 0 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 0 4 0 1 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 0 4 1 0 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 0 2 3 0 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 1 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 0 1 3 1 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 0 1 4 0 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 0 2 4 0 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 0 0 4 2 0 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 0 0 4 1 1 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 0 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 0 0 3 2 1 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 0 0 1 4 1 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 0 0 2 3 1 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 1 , mySum: 7
0 0 0 0 0 0 0 0 0 0 0 0 0 3 4 0 , mySum: 7
0 0 0 0 0 0 0 0 0 0 0 0 0 2 4 1 , mySum: 7
0 0 0 0 0 0 0 0 0 0 0 0 0 4 2 1 , mySum: 7
0 0 0 0 0 0 0 0 0 0 0 0 0 4 3 0 , mySum: 7
0 0 0 0 0 0 0 0 0 0 0 0 0 3 4 1 , mySum: 8
0 0 0 0 0 0 0 0 0 0 0 0 0 4 3 1 , mySum: 8
0 0 0 0 0 0 0 0 0 0 0 0 0 4 4 0 , mySum: 8
0 0 0 0 0 0 0 0 0 0 0 0 0 4 4 1 , mySum: 9
thread: 0, maxBlockLvlSize: 9
thread: 0, maxInBlockLvlSize: 30
thread: 0, AllTableSize: 7200, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 0 0 0 1 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 0 0 1 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 mySum: 2
thread: 0, blockNoZero[4]: 0 0 0 0 0 1 1 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 mySum: 2
thread: 0, blockNoZero[5]: 0 0 0 0 0 2 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 0 0 0 2 0 0 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 mySum: 2
thread: 0, blockNoZero[7]: 0 0 0 0 1 0 1 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 mySum: 2
thread: 0, blockNoZero[8]: 0 0 0 0 1 1 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 mySum: 3
thread: 0, blockNoZero[9]: 0 0 0 0 3 0 0 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 0 0 0 0 0 0 0 2 1 0 mySum: 3
thread: 0, blockNoZero[10]: 0 0 0 0 2 1 0 
thread: 0, allBlocks[11]: 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 1 mySum: 3
thread: 0, blockNoZero[11]: 0 0 0 0 2 0 1 
thread: 0, allBlocks[12]: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 2 0 mySum: 3
thread: 0, blockNoZero[12]: 0 0 0 0 1 2 0 
thread: 0, allBlocks[13]: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 mySum: 3
thread: 0, blockNoZero[13]: 0 0 0 0 1 1 1 
thread: 0, allBlocks[14]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 mySum: 3
thread: 0, blockNoZero[14]: 0 0 0 0 0 3 0 
thread: 0, allBlocks[15]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 1 mySum: 3
thread: 0, blockNoZero[15]: 0 0 0 0 0 2 1 
thread: 0, allBlocks[16]: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 2 1 mySum: 4
thread: 0, blockNoZero[16]: 0 0 0 0 1 2 1 
thread: 0, allBlocks[17]: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 3 0 mySum: 4
thread: 0, blockNoZero[17]: 0 0 0 0 1 3 0 
thread: 0, allBlocks[18]: 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 1 mySum: 4
thread: 0, blockNoZero[18]: 0 0 0 0 3 0 1 
thread: 0, allBlocks[19]: 0 0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 mySum: 4
thread: 0, blockNoZero[19]: 0 0 0 0 4 0 0 
Thread: 1, gpu_BlockDP is done.
thread: 0, allBlocks[20]: 0 0 0 0 0 0 0 0 0 0 0 0 0 3 1 0 mySum: 4
thread: 0, blockNoZero[20]: 0 0 0 0 3 1 0 
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
Thread: 2, gpu_BlockDP is done.
thread: 0, allBlocks[21]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 0 mySum: 4
thread: 0, blockNoZero[21]: 0 0 0 0 0 4 0 
thread: 0, allBlocks[22]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 1 mySum: 4
thread: 0, blockNoZero[22]: 0 0 0 0 0 3 1 
thread: 0, allBlocks[23]: 0 0 0 0 0 0 0 0 0 0 0 0 0 2 1 1 mySum: 4
thread: 0, blockNoZero[23]: 0 0 0 0 2 1 1 
thread: 0, allBlocks[24]: 0 0 0 0 0 0 0 0 0 0 0 0 0 2 2 0 mySum: 4
thread: 0, blockNoZero[24]: 0 0 0 0 2 2 0 
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.151696
thread: 1, sOPT: 10
thread: 0, allBlocks[25]: 0 0 0 0 0 0 0 0 0 0 0 0 0 2 2 1 mySum: 5
thread: 0, blockNoZero[25]: 0 0 0 0 2 2 1 
thread: 0, allBlocks[26]: 0 0 0 0 0 0 0 0 0 0 0 0 0 3 1 1 mySum: 5
thread: 0, blockNoZero[26]: 0 0 0 0 3 1 1 
thread: 0, allBlocks[27]: 0 0 0 0 0 0 0 0 0 0 0 0 0 3 2 0 mySum: 5
thread: 0, blockNoZero[27]: 0 0 0 0 3 2 0 
thread: 0, allBlocks[28]: 0 0 0 0 0 0 0 0 0 0 0 0 0 4 0 1 mySum: 5
thread: 0, blockNoZero[28]: 0 0 0 0 4 0 1 
thread: 0, allBlocks[29]: 0 0 0 0 0 0 0 0 0 0 0 0 0 4 1 0 mySum: 5
thread: 0, blockNoZero[29]: 0 0 0 0 4 1 0 
thread: 0, allBlocks[30]: 0 0 0 0 0 0 0 0 0 0 0 0 0 2 3 0 mySum: 5
thread: 0, blockNoZero[30]: 0 0 0 0 2 3 0 
thread: 0, allBlocks[31]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 1 mySum: 5
thread: 0, blockNoZero[31]: 0 0 0 0 0 4 1 
thread: 0, allBlocks[32]: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 3 1 mySum: 5
thread: 0, blockNoZero[32]: 0 0 0 0 1 3 1 
thread: 0, allBlocks[33]: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 4 0 mySum: 5
thread: 0, blockNoZero[33]: 0 0 0 0 1 4 0 
copy the latest feasible solution to instance takes time: 0.160581
thread: 2, sOPT: 10
thread: 0, allBlocks[34]: 0 0 0 0 0 0 0 0 0 0 0 0 0 2 4 0 mySum: 6
thread: 0, blockNoZero[34]: 0 0 0 0 2 4 0 
thread: 0, allBlocks[35]: 0 0 0 0 0 0 0 0 0 0 0 0 0 4 2 0 mySum: 6
thread: 0, blockNoZero[35]: 0 0 0 0 4 2 0 
thread: 0, allBlocks[36]: 0 0 0 0 0 0 0 0 0 0 0 0 0 4 1 1 mySum: 6
thread: 0, blockNoZero[36]: 0 0 0 0 4 1 1 
thread: 0, allBlocks[37]: 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 0 mySum: 6
thread: 0, blockNoZero[37]: 0 0 0 0 3 3 0 
thread: 0, allBlocks[38]: 0 0 0 0 0 0 0 0 0 0 0 0 0 3 2 1 mySum: 6
thread: 0, blockNoZero[38]: 0 0 0 0 3 2 1 
thread: 0, allBlocks[39]: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 4 1 mySum: 6
thread: 0, blockNoZero[39]: 0 0 0 0 1 4 1 
thread: 0, allBlocks[40]: 0 0 0 0 0 0 0 0 0 0 0 0 0 2 3 1 mySum: 6
thread: 0, blockNoZero[40]: 0 0 0 0 2 3 1 
thread: 0, allBlocks[41]: 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 1 mySum: 7
thread: 0, blockNoZero[41]: 0 0 0 0 3 3 1 
thread: 0, allBlocks[42]: 0 0 0 0 0 0 0 0 0 0 0 0 0 3 4 0 mySum: 7
thread: 0, blockNoZero[42]: 0 0 0 0 3 4 0 
thread: 0, allBlocks[43]: 0 0 0 0 0 0 0 0 0 0 0 0 0 2 4 1 mySum: 7
thread: 0, blockNoZero[43]: 0 0 0 0 2 4 1 
thread: 0, allBlocks[44]: 0 0 0 0 0 0 0 0 0 0 0 0 0 4 2 1 mySum: 7
thread: 0, blockNoZero[44]: 0 0 0 0 4 2 1 
thread: 0, allBlocks[45]: 0 0 0 0 0 0 0 0 0 0 0 0 0 4 3 0 mySum: 7
thread: 0, blockNoZero[45]: 0 0 0 0 4 3 0 
thread: 0, allBlocks[46]: 0 0 0 0 0 0 0 0 0 0 0 0 0 3 4 1 mySum: 8
thread: 0, blockNoZero[46]: 0 0 0 0 3 4 1 
thread: 0, allBlocks[47]: 0 0 0 0 0 0 0 0 0 0 0 0 0 4 3 1 mySum: 8
thread: 0, blockNoZero[47]: 0 0 0 0 4 3 1 
thread: 0, allBlocks[48]: 0 0 0 0 0 0 0 0 0 0 0 0 0 4 4 0 mySum: 8
thread: 0, blockNoZero[48]: 0 0 0 0 4 4 0 
thread: 0, allBlocks[49]: 0 0 0 0 0 0 0 0 0 0 0 0 0 4 4 1 mySum: 9
thread: 0, blockNoZero[49]: 0 0 0 0 4 4 1 
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 2e-06
thread: 0, sOPT: 11
BKID: 0, LB: 32, UB: 32, OPT: 10
Dynamic Programming Runtime: 1.7287
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 2
********************************************************
Total execution on UB and LB is: 2
OUT of Bk while loop  
UB    32
LB    32
T1    32
T2    32
OPT   10
nMachines   10
BkID	0
AllProbData.size()    2
ck :   1
AllProbData[ck].Ttable    32
ck :   0
AllProbData[ck].Ttable    33
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan34
Main Scheduling is Done
File 1-4 is Done.
******************************
Reading File...
File 1-5 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 48, LB: 30start at time: 1505254711
thread: 0, MlBk is called with LB: 30, UB: 34
thread: 3, MlBk is called with LB: 42, UB: 48
 thread: 0, LongJobs.size() 21
thread: thread: 1, MlBk is called with LB: 34, UB: 382, MlBk is called with LB: 38, UB: 42

 thread: 2, LongJobs.size() 20
 thread: 3, LongJobs.size() 18
 thread: 1, LongJobs.size() 21
thread: 3, NSTable size: 23
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 7
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 7
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 8, maxN[i].idx: 0, blockDimSize[i]: 8
thread: 3, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 3, i: 2, maxN[i].weit: 8, maxN[i].idx: 2, blockDimSize[i]: 8
thread: 3, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 3, i: 0, divisor[i]: 2, blockDimSize[i]: 4
thread: 3, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, i: 2, divisor[i]: 2, blockDimSize[i]: 4
thread: 3, i: 3, divisor[i]: 1, blockDimSize[i]: 3
thread: 3, largestBlockVec.elm: 0 0 0 0 0 1 2 1 0 0 0 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 0 0 4 1 4 3 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 0 0 2 3 2 1 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 1 2 1 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 1 2 1 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 2 1 0 0 0 0 0 0 0 0 , mySum: 4
thread: 3, maxBlockLvlSize: 4
thread: 3, maxInBlockLvlSize: 10
thread: 3, AllTableSize: 576, maxSubsetsSize: 64
thread: 2, NSTable size: 34
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 7
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 7
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 2, i: 1, maxN[i].weit: 8, maxN[i].idx: 1, blockDimSize[i]: 8
thread: 2, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 2, i: 3, maxN[i].weit: 8, maxN[i].idx: 3, blockDimSize[i]: 8
thread: 2, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 2, i: 0, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 1, divisor[i]: 2, blockDimSize[i]: 4
thread: 2, i: 2, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 3, divisor[i]: 2, blockDimSize[i]: 4
thread: 2, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, largestBlockVec.elm: 0 0 0 0 2 1 0 1 0 0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 0 1 4 3 4 3 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 3 2 1 2 1 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 2 1 0 1 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 2 1 0 1 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 1 0 1 0 0 0 0 0 0 0 0 , mySum: 4
thread: 1, NSTable size: 27
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 7
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 7
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 1, i: 1, maxN[i].weit: 8, maxN[i].idx: 1, blockDimSize[i]: 8
thread: 1, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 1, i: 3, maxN[i].weit: 8, maxN[i].idx: 3, blockDimSize[i]: 8
thread: 1, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 1, i: 0, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, i: 1, divisor[i]: 2, blockDimSize[i]: 4
thread: 1, i: 2, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 3, divisor[i]: 2, blockDimSize[i]: 4
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, largestBlockVec.elm: 0 0 0 0 1 1 0 1 0 0 0 0 0 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 0 2 4 3 4 3 0 0 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 2 2 1 2 1 0 0 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 1 1 0 1 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 1 1 0 1 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 1 0 0 0 0 0 0 0 0 , mySum: 3
thread: 2, maxBlockLvlSize: 4
thread: 2, maxInBlockLvlSize: 28
thread: 2, AllTableSize: 1728, maxSubsetsSize: 64
thread: 0, NSTable size: 20
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 7
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 7
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 0, i: 1, maxN[i].weit: 8, maxN[i].idx: 1, blockDimSize[i]: 8
thread: 0, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 0, i: 3, maxN[i].weit: 8, maxN[i].idx: 3, blockDimSize[i]: 8
thread: 0, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 0, i: 0, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 1, divisor[i]: 2, blockDimSize[i]: 4
thread: 0, i: 2, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 3, divisor[i]: 2, blockDimSize[i]: 4
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, largestBlockVec.elm: 0 0 0 0 1 1 0 1 0 0 0 0 0 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 0 2 4 3 4 3 0 0 0 0 0 0 0 
thread: 0, divisorComp: 0 0 0 0 2 2 1 2 1 0 0 0 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 1 1 0 1 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 1 1 0 1 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 1 0 0 0 0 0 0 0 0 , mySum: 3
thread: 1, maxBlockLvlSize: 3
thread: 1, maxInBlockLvlSize: 53
thread: 1, AllTableSize: 2304, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 3
thread: 0, maxInBlockLvlSize: 53
thread: 0, AllTableSize: 2304, maxSubsetsSize: 64
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 6
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 
copy the latest feasible solution to instance takes time: 0.051247
thread: 3, sOPT: 6
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 1 0 
thread: 0, allBlocks[2]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 1 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 1 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 1 0 1 0 
thread: 0, allBlocks[5]: 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 1 0 0 1 0 
thread: 0, allBlocks[6]: 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 1 1 0 0 0 
thread: 0, allBlocks[7]: 0 0 0 0 1 1 0 1 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[7]: 1 1 0 1 0 
Thread: 1, gpu_BlockDP is done.
Thread: 2, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 9
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 8
copy the latest feasible solution to instance takes time: 0.117811
thread: 2, sOPT: 8
copy the latest feasible solution to instance takes time: 0.160728
thread: 1, sOPT: 9
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.041682
thread: 0, sOPT: 10
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 1Thread: 3, MlBk function is done, and BkID for all processes are collected.2, MlBk function is done, and BkID for all processes are collected., MlBk function is done, and BkID for all processes are collected.


sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 30, UB: 33
BKID: 0, LB: 30, UB: 33, OPT: 10
Dynamic Programming Runtime: 1.59286
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 1
Iteration: 2, UB: 33, LB: 30start at time: 1505254712
thread: 0, MlBk is called with LB: 30, UB: 31
 thread: 0, LongJobs.size() 21
thread: thread: 2, MlBk is called with LB: 1, MlBk is called with LB: 3231, UB: , UB: 3233

 thread: 1, LongJobs.size() 21
 thread: 2, LongJobs.size() 21
thread: 2, NSTable size: 20
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 7
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 7
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 2, i: 1, maxN[i].weit: 8, maxN[i].idx: 1, blockDimSize[i]: 8
thread: 2, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 2, i: 3, maxN[i].weit: 8, maxN[i].idx: 3, blockDimSize[i]: 8
thread: 2, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 2, i: 0, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, i: 1, divisor[i]: 2, blockDimSize[i]: 4
thread: 2, i: 2, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 3, divisor[i]: 2, blockDimSize[i]: 4
thread: 2, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, largestBlockVec.elm: 0 0 0 0 1 1 0 1 0 0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 0 2 4 3 4 3 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 2 2 1 2 1 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 1 1 0 1 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 1 1 0 1 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 1 0 0 0 0 0 0 0 0 , mySum: 3
thread: 1, NSTable size: 30
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 6
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 9
thread: 1, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 1, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 1, i: 2, maxN[i].weit: 7, maxN[i].idx: 2, blockDimSize[i]: 7
thread: 1, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 1, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 1, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 1, i: 6, maxN[i].weit: 10, maxN[i].idx: 6, blockDimSize[i]: 10
thread: 1, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 2, divisor[i]: 7, blockDimSize[i]: 1
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 6, divisor[i]: 2, blockDimSize[i]: 5
thread: 1, largestBlockVec.elm: 0 0 0 0 0 0 0 0 0 0 2 6 0 0 0 1 
thread: 1, blockDimSizeComp: 0 0 0 0 0 0 0 0 0 2 1 1 2 2 2 5 
thread: 1, divisorComp: 0 0 0 0 0 0 0 0 0 1 3 7 1 1 1 2 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 2 6 0 0 0 1 
thread: 1, largestNoZeroBlockVec: 0 2 6 0 0 0 1 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 1 2 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 1 3 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 1 2 0 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 2 1 0 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 2 2 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 2 2 0 0 0 1 , mySum: 5
0 0 0 0 0 0 0 0 0 0 2 3 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 0 0 0 1 3 0 0 0 1 , mySum: 5
0 0 0 0 0 0 0 0 0 0 1 4 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 5 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 1 , mySum: 5
0 0 0 0 0 0 0 0 0 0 1 5 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 0 0 0 1 4 0 0 0 1 , mySum: 6
0 0 0 0 0 0 0 0 0 0 2 4 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 6 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 5 0 0 0 1 , mySum: 6
0 0 0 0 0 0 0 0 0 0 2 3 0 0 0 1 , mySum: 6
0 0 0 0 0 0 0 0 0 0 1 5 0 0 0 1 , mySum: 7
0 0 0 0 0 0 0 0 0 0 2 5 0 0 0 0 , mySum: 7
0 0 0 0 0 0 0 0 0 0 2 4 0 0 0 1 , mySum: 7
0 0 0 0 0 0 0 0 0 0 0 6 0 0 0 1 , mySum: 7
0 0 0 0 0 0 0 0 0 0 1 6 0 0 0 0 , mySum: 7
0 0 0 0 0 0 0 0 0 0 1 6 0 0 0 1 , mySum: 8
0 0 0 0 0 0 0 0 0 0 2 5 0 0 0 1 , mySum: 8
0 0 0 0 0 0 0 0 0 0 2 6 0 0 0 0 , mySum: 8
0 0 0 0 0 0 0 0 0 0 2 6 0 0 0 1 , mySum: 9
thread: 2, maxBlockLvlSize: 3
thread: 2, maxInBlockLvlSize: 53
thread: 2, AllTableSize: 2304, maxSubsetsSize: 64
thread: 0, NSTable size: 29
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 6
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 9
thread: 0, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 0, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 0, i: 2, maxN[i].weit: 7, maxN[i].idx: 2, blockDimSize[i]: 7
thread: 0, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 0, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 0, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 0, i: 6, maxN[i].weit: 10, maxN[i].idx: 6, blockDimSize[i]: 10
thread: 0, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 2, divisor[i]: 7, blockDimSize[i]: 1
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 6, divisor[i]: 2, blockDimSize[i]: 5
thread: 0, largestBlockVec.elm: 0 0 0 0 0 0 0 0 0 0 2 6 0 0 0 1 
thread: 0, blockDimSizeComp: 0 0 0 0 0 0 0 0 0 2 1 1 2 2 2 5 
thread: 0, divisorComp: 0 0 0 0 0 0 0 0 0 1 3 7 1 1 1 2 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 2 6 0 0 0 1 
thread: 0, largestNoZeroBlockVec: 0 2 6 0 0 0 1 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 1 2 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 1 3 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 1 2 0 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 2 1 0 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 2 2 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 2 2 0 0 0 1 , mySum: 5
0 0 0 0 0 0 0 0 0 0 2 3 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 0 0 0 1 3 0 0 0 1 , mySum: 5
0 0 0 0 0 0 0 0 0 0 1 4 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 5 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 1 , mySum: 5
0 0 0 0 0 0 0 0 0 0 1 5 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 0 0 0 1 4 0 0 0 1 , mySum: 6
0 0 0 0 0 0 0 0 0 0 2 4 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 6 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 5 0 0 0 1 , mySum: 6
0 0 0 0 0 0 0 0 0 0 2 3 0 0 0 1 , mySum: 6
0 0 0 0 0 0 0 0 0 0 1 5 0 0 0 1 , mySum: 7
0 0 0 0 0 0 0 0 0 0 2 5 0 0 0 0 , mySum: 7
0 0 0 0 0 0 0 0 0 0 2 4 0 0 0 1 , mySum: 7
0 0 0 0 0 0 0 0 0 0 0 6 0 0 0 1 , mySum: 7
0 0 0 0 0 0 0 0 0 0 1 6 0 0 0 0 , mySum: 7
0 0 0 0 0 0 0 0 0 0 1 6 0 0 0 1 , mySum: 8
0 0 0 0 0 0 0 0 0 0 2 5 0 0 0 1 , mySum: 8
0 0 0 0 0 0 0 0 0 0 2 6 0 0 0 0 , mySum: 8
0 0 0 0 0 0 0 0 0 0 2 6 0 0 0 1 , mySum: 9
thread: 1, maxBlockLvlSize: 6
thread: 1, maxInBlockLvlSize: 16
thread: 1, AllTableSize: 3360, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 6
thread: 0, maxInBlockLvlSize: 16
thread: 0, AllTableSize: 3360, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 1 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 1 0 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 2 0 0 0 0 0 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 1 1 0 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[6]: 0 1 0 0 0 0 1 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 mySum: 2
thread: 0, blockNoZero[7]: 0 0 1 0 0 0 1 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 mySum: 2
thread: 0, blockNoZero[8]: 0 0 2 0 0 0 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 1 mySum: 3
thread: 0, blockNoZero[9]: 0 2 0 0 0 0 1 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 0 0 0 0 1 2 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 0 1 2 0 0 0 0 
thread: 0, allBlocks[11]: 0 0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 0 2 1 0 0 0 0 
thread: 0, allBlocks[12]: 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 mySum: 3
thread: 0, blockNoZero[12]: 0 0 3 0 0 0 0 
thread: 0, allBlocks[13]: 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 1 mySum: 3
thread: 0, blockNoZero[13]: 0 0 2 0 0 0 1 
thread: 0, allBlocks[14]: 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 1 mySum: 3
thread: 0, blockNoZero[14]: 0 1 1 0 0 0 1 
thread: 0, allBlocks[15]: 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 mySum: 4
thread: 0, blockNoZero[15]: 0 0 4 0 0 0 0 
thread: 0, allBlocks[16]: 0 0 0 0 0 0 0 0 0 0 1 3 0 0 0 0 mySum: 4
thread: 0, blockNoZero[16]: 0 1 3 0 0 0 0 
thread: 0, allBlocks[17]: 0 0 0 0 0 0 0 0 0 0 1 2 0 0 0 1 mySum: 4
thread: 0, blockNoZero[17]: 0 1 2 0 0 0 1 
thread: 0, allBlocks[18]: 0 0 0 0 0 0 0 0 0 0 2 1 0 0 0 1 mySum: 4
thread: 0, blockNoZero[18]: 0 2 1 0 0 0 1 
thread: 0, allBlocks[19]: 0 0 0 0 0 0 0 0 0 0 2 2 0 0 0 0 mySum: 4
thread: 0, blockNoZero[19]: 0 2 2 0 0 0 0 
thread: 0, allBlocks[20]: 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 1 mySum: 4
thread: 0, blockNoZero[20]: 0 0 3 0 0 0 1 
thread: 0, allBlocks[21]: 0 0 0 0 0 0 0 0 0 0 2 2 0 0 0 1 mySum: 5
thread: 0, blockNoZero[21]: 0 2 2 0 0 0 1 
thread: 0, allBlocks[22]: 0 0 0 0 0 0 0 0 0 0 2 3 0 0 0 0 mySum: 5
thread: 0, blockNoZero[22]: 0 2 3 0 0 0 0 
thread: 0, allBlocks[23]: 0 0 0 0 0 0 0 0 0 0 1 3 0 0 0 1 mySum: 5
thread: 0, blockNoZero[23]: 0 1 3 0 0 0 1 
thread: 0, allBlocks[24]: 0 0 0 0 0 0 0 0 0 0 1 4 0 0 0 0 mySum: 5
thread: 0, blockNoZero[24]: 0 1 4 0 0 0 0 
thread: 0, allBlocks[25]: 0 0 0 0 0 0 0 0 0 0 0 5 0 0 0 0 mySum: 5
thread: 0, blockNoZero[25]: 0 0 5 0 0 0 0 
thread: 0, allBlocks[26]: 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 1 mySum: 5
thread: 0, blockNoZero[26]: 0 0 4 0 0 0 1 
thread: 0, allBlocks[27]: 0 0 0 0 0 0 0 0 0 0 1 5 0 0 0 0 mySum: 6
thread: 0, blockNoZero[27]: 0 1 5 0 0 0 0 
thread: 0, allBlocks[28]: 0 0 0 0 0 0 0 0 0 0 1 4 0 0 0 1 mySum: 6
thread: 0, blockNoZero[28]: 0 1 4 0 0 0 1 
thread: 0, allBlocks[29]: 0 0 0 0 0 0 0 0 0 0 2 4 0 0 0 0 mySum: 6
thread: 0, blockNoZero[29]: 0 2 4 0 0 0 0 
thread: 0, allBlocks[30]: 0 0 0 0 0 0 0 0 0 0 0 6 0 0 0 0 mySum: 6
thread: 0, blockNoZero[30]: 0 0 6 0 0 0 0 
thread: 0, allBlocks[31]: 0 0 0 0 0 0 0 0 0 0 0 5 0 0 0 1 mySum: 6
thread: 0, blockNoZero[31]: 0 0 5 0 0 0 1 
thread: 0, allBlocks[32]: 0 0 0 0 0 0 0 0 0 0 2 3 0 0 0 1 mySum: 6
thread: 0, blockNoZero[32]: 0 2 3 0 0 0 1 
thread: 0, allBlocks[33]: 0 0 0 0 0 0 0 0 0 0 1 5 0 0 0 1 mySum: 7
thread: 0, blockNoZero[33]: 0 1 5 0 0 0 1 
thread: 0, allBlocks[34]: 0 0 0 0 0 0 0 0 0 0 2 5 0 0 0 0 mySum: 7
thread: 0, blockNoZero[34]: 0 2 5 0 0 0 0 
thread: 0, allBlocks[35]: 0 0 0 0 0 0 0 0 0 0 2 4 0 0 0 1 mySum: 7
thread: 0, blockNoZero[35]: 0 2 4 0 0 0 1 
thread: 0, allBlocks[36]: 0 0 0 0 0 0 0 0 0 0 0 6 0 0 0 1 mySum: 7
thread: 0, blockNoZero[36]: 0 0 6 0 0 0 1 
thread: 0, allBlocks[37]: 0 0 0 0 0 0 0 0 0 0 1 6 0 0 0 0 mySum: 7
thread: 0, blockNoZero[37]: 0 1 6 0 0 0 0 
thread: 0, allBlocks[38]: 0 0 0 0 0 0 0 0 0 0 1 6 0 0 0 1 mySum: 8
thread: 0, blockNoZero[38]: 0 1 6 0 0 0 1 
thread: 0, allBlocks[39]: 0 0 0 0 0 0 0 0 0 0 2 5 0 0 0 1 mySum: 8
thread: 0, blockNoZero[39]: 0 2 5 0 0 0 1 
thread: 0, allBlocks[40]: 0 0 0 0 0 0 0 0 0 0 2 6 0 0 0 0 mySum: 8
thread: 0, blockNoZero[40]: 0 2 6 0 0 0 0 
thread: 0, allBlocks[41]: 0 0 0 0 0 0 0 0 0 0 2 6 0 0 0 1 mySum: 9
thread: 0, blockNoZero[41]: 0 2 6 0 0 0 1 
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 11
copy the latest feasible solution to instance takes time: 3e-06
thread: 1, sOPT: 11
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 1e-06
thread: 0, sOPT: 11
copy the latest feasible solution to instance takes time: 0.082315
thread: 2, sOPT: 10
BKID: 0, LB: 32, UB: 32, OPT: 10
Dynamic Programming Runtime: 1.42049
Execution time between LB and UB is: 0
By far, all LB UB calculation runtime: 1
********************************************************
Total execution on UB and LB is: 1
OUT of Bk while loop  
UB    32
LB    32
T1    32
T2    32
OPT   10
nMachines   10
BkID	0
AllProbData.size()    2
ck :   1
AllProbData[ck].Ttable    32
ck :   0
AllProbData[ck].Ttable    32
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan34
Main Scheduling is Done
File 1-5 is Done.
******************************
Reading File...
File 1-6 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 50, LB: 31start at time: 1505254712
thread: 0, MlBk is called with LB: 31, UB: 36
thread: 3thread: , MlBk is called with LB: 46, UB: 51
1thread: 2, MlBk is called with LB: 41, UB: 46
, MlBk is called with LB: 36, UB: 41
 thread: 2, LongJobs.size() 18
 thread: 0, LongJobs.size() 21
 thread: 1, LongJobs.size() 21
 thread: 3, LongJobs.size() 15
thread: 3, NSTable size: 17
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 8
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 4
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 3, i: 1, maxN[i].weit: 9, maxN[i].idx: 1, blockDimSize[i]: 9
thread: 3, i: 2, maxN[i].weit: 5, maxN[i].idx: 2, blockDimSize[i]: 5
thread: 3, i: 0, divisor[i]: 2, blockDimSize[i]: 2
thread: 3, i: 1, divisor[i]: 3, blockDimSize[i]: 3
thread: 3, i: 2, divisor[i]: 5, blockDimSize[i]: 1
thread: 3, largestBlockVec.elm: 0 0 0 1 2 4 0 0 0 0 0 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 2 3 1 0 0 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 2 3 5 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 1 2 4 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 1 2 4 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 1 0 3 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 3 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 1 1 2 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 1 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 3 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 4 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 1 0 4 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 1 1 3 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 1 2 2 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 4 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 1 2 3 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 1 1 4 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 1 2 4 0 0 0 0 0 0 0 0 0 0 , mySum: 7
thread: 3, maxBlockLvlSize: 6
thread: 3, maxInBlockLvlSize: 2
thread: 3, AllTableSize: 180, maxSubsetsSize: 64
thread: 2, NSTable size: 21
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 5
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 5
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 6, maxN[i].idx: 0, blockDimSize[i]: 6
thread: 2, i: 1, maxN[i].weit: 5, maxN[i].idx: 1, blockDimSize[i]: 5
thread: 2, i: 2, maxN[i].weit: 6, maxN[i].idx: 2, blockDimSize[i]: 6
thread: 2, i: 3, maxN[i].weit: 5, maxN[i].idx: 3, blockDimSize[i]: 5
thread: 2, i: 0, divisor[i]: 2, blockDimSize[i]: 3
thread: 2, i: 1, divisor[i]: 5, blockDimSize[i]: 1
thread: 2, i: 2, divisor[i]: 2, blockDimSize[i]: 3
thread: 2, i: 3, divisor[i]: 1, blockDimSize[i]: 5
thread: 2, largestBlockVec.elm: 0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 0 0 3 1 3 5 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 0 2 5 2 1 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 1 4 1 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 3 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 2 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 4 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 3 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 0 , mySum: 6
thread: 2, maxBlockLvlSize: 4
thread: 2, maxInBlockLvlSize: 9
thread: 2, AllTableSize: 900, maxSubsetsSize: 64
thread: 1, NSTable size: 31
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 5
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 5
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 1, i: 1, maxN[i].weit: 6, maxN[i].idx: 1, blockDimSize[i]: 6
thread: 1, i: 2, maxN[i].weit: 5, maxN[i].idx: 2, blockDimSize[i]: 5
thread: 1, i: 3, maxN[i].weit: 6, maxN[i].idx: 3, blockDimSize[i]: 6
thread: 1, i: 4, maxN[i].weit: 5, maxN[i].idx: 4, blockDimSize[i]: 5
thread: 1, i: 0, divisor[i]: 1, blockDimSize[i]: 4
thread: 1, i: 1, divisor[i]: 2, blockDimSize[i]: 3
thread: 1, i: 2, divisor[i]: 5, blockDimSize[i]: 1
thread: 1, i: 3, divisor[i]: 2, blockDimSize[i]: 3
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 5
thread: 1, largestBlockVec.elm: 0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 0 4 3 1 3 5 0 0 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 1 2 5 2 1 0 0 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 1 4 1 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 3 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 2 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 4 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 3 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 0 , mySum: 6
thread: 0, NSTable size: 20
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 5
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 5
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 0, i: 1, maxN[i].weit: 6, maxN[i].idx: 1, blockDimSize[i]: 6
thread: 0, i: 2, maxN[i].weit: 5, maxN[i].idx: 2, blockDimSize[i]: 5
thread: 0, i: 3, maxN[i].weit: 6, maxN[i].idx: 3, blockDimSize[i]: 6
thread: 0, i: 4, maxN[i].weit: 5, maxN[i].idx: 4, blockDimSize[i]: 5
thread: 0, i: 0, divisor[i]: 1, blockDimSize[i]: 4
thread: 0, i: 1, divisor[i]: 2, blockDimSize[i]: 3
thread: 0, i: 2, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, i: 3, divisor[i]: 2, blockDimSize[i]: 3
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 5
thread: 0, largestBlockVec.elm: 0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 0 4 3 1 3 5 0 0 0 0 0 0 0 
thread: 0, divisorComp: 0 0 0 0 1 2 5 2 1 0 0 0 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 1 4 1 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 3 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 2 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 4 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 3 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 0 , mySum: 6
thread: 1, maxBlockLvlSize: 4
thread: 1, maxInBlockLvlSize: 31
thread: 1, AllTableSize: 3600, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 4
thread: 0, maxInBlockLvlSize: 31
thread: 0, AllTableSize: 3600, maxSubsetsSize: 64
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 5
copy the latest feasible solution to instance takes time: 0.008244
thread: 3, sOPT: 5
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 1 0 
thread: 0, allBlocks[2]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 1 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 1 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 2 0 0 
Thread: 2, gpu_BlockDP is done.
thread: 0, allBlocks[5]: 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 1 1 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 1 0 1 0 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 0 0 1 1 0 
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 7
copy the latest feasible solution to instance takes time: 0.046465
thread: 2, sOPT: 7
thread: 0, allBlocks[8]: 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[8]: 0 0 3 0 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[9]: 0 0 2 1 0 
thread: 0, allBlocks[10]: 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 0 1 1 1 0 
thread: 0, allBlocks[11]: 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 0 1 2 0 0 
thread: 0, allBlocks[12]: 0 0 0 0 0 0 3 1 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[12]: 0 0 3 1 0 
thread: 0, allBlocks[13]: 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[13]: 0 0 4 0 0 
thread: 0, allBlocks[14]: 0 0 0 0 0 1 2 1 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[14]: 0 1 2 1 0 
thread: 0, allBlocks[15]: 0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[15]: 0 1 3 0 0 
thread: 0, allBlocks[16]: 0 0 0 0 0 0 4 1 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[16]: 0 0 4 1 0 
thread: 0, allBlocks[17]: 0 0 0 0 0 1 3 1 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[17]: 0 1 3 1 0 
thread: 0, allBlocks[18]: 0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[18]: 0 1 4 0 0 
thread: 0, allBlocks[19]: 0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[19]: 0 1 4 1 0 
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.19082
thread: 0, sOPT: 10
copy the latest feasible solution to instance takes time: 0.088202
thread: 1, sOPT: 9
Thread: 1, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 3, MlBk function is done, and BkID for all processes are collected.Thread: 
2, MlBk function is done, and BkID for all processes are collected.
0, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 31, UB: 34
BKID: 0, LB: 31, UB: 34, OPT: 10
Dynamic Programming Runtime: 1.32052
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 1
Iteration: 2, UB: 34, LB: 31start at time: 1505254713
thread: 0, MlBk is called with LB: 31, UB: 32
 thread: 0, LongJobs.size() 21
thread: thread: 12, MlBk is called with LB: , MlBk is called with LB: 3332, UB: , UB: 3334

 thread: 2, LongJobs.size() 21
 thread: 1, LongJobs.size() 21
thread: 2, NSTable size: 20
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 5
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 5
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 2, i: 1, maxN[i].weit: 6, maxN[i].idx: 1, blockDimSize[i]: 6
thread: 2, i: 2, maxN[i].weit: 5, maxN[i].idx: 2, blockDimSize[i]: 5
thread: 2, i: 3, maxN[i].weit: 6, maxN[i].idx: 3, blockDimSize[i]: 6
thread: 2, i: 4, maxN[i].weit: 5, maxN[i].idx: 4, blockDimSize[i]: 5
thread: 2, i: 0, divisor[i]: 1, blockDimSize[i]: 4
thread: 2, i: 1, divisor[i]: 2, blockDimSize[i]: 3
thread: 2, i: 2, divisor[i]: 5, blockDimSize[i]: 1
thread: 2, i: 3, divisor[i]: 2, blockDimSize[i]: 3
thread: 2, i: 4, divisor[i]: 1, blockDimSize[i]: 5
thread: 2, largestBlockVec.elm: 0 0 0 0 0 1 4 1 0 thread: 0 0 1, NSTable size: 020 0 
0thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 5
 thread: 1, i: 06 0, alltableelemets[maxindex].elm[i]: 4 

thread: 2, blockDimSizeComp: 0 0 0 0 4 3 1 thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 5
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3 5 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 1 2 50 , maxN[i].weit: 24 1, maxN[i].idx:  0, blockDimSize[i]: 40
thread: 1, i: 1, maxN[i].weit: 6, maxN[i].idx: 1, blockDimSize[i]: 6
thread: 1, i: 2, maxN[i].weit: 5, maxN[i].idx: 2, blockDimSize[i]: 5
thread: 1, i: 3, maxN[i].weit: 6, maxN[i].idx: 3, blockDimSize[i]: 6
thread: 1, i: 4, maxN[i].weit: 5, maxN[i].idx: 4, blockDimSize[i]: 5
thread: 1, i: 0, divisor[i]: 1, blockDimSize[i]: 4
thread: 1, i: 1, divisor[i]: 2, blockDimSize[i]: 3
thread: 1, i: 2, divisor[i]: 5, blockDimSize[i]: 1
thread: 1, i: 3, divisor[i]: 2, blockDimSize[i]: 3
thread: 1 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 1 4 1 0 
, i: 4, divisor[i]: 1, blockDimSize[i]: 5
thread: 1, largestBlockVec.elm: 0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 0 4 3 1 3 5 0 0 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 1 2 5 2 1 0 0 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 1 4 1 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
thread: 0 01 , allBlocks: 00 0  0 00  00  10  01  00 0 0  00 0  00  0 00  00  00 0  , mySum: 2
0 0 0 0 0 0 1 0 1 0 0 , mySum: 00 
0 00 0 0 0 0 0 0 1 0 0 0 0 0 0  0 0 0 , mySum: 2
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 03 0  0 00  0 , mySum: 01 
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 , mySum: 3
00 0  00  0 00 , mySum: 1 1
 1 0 0 0 0 0 0 2 0 0 0 0 0 0 0 1 0 0 0 0 00  00 , mySum: 2 
0 0 0 0 0 0 1 1 0 0 0 0 0 0 00 0 0 , mySum:  , mySum: 23
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0
 0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 3 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 40
 00 0 0 0 0 0 4 0 0 0 0 0 0 0  0 0 0, mySum:  40
 , mySum: 20 0 0 0 0 1 2 1 0 0
 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 00 0 , mySum:  3
0 0 0 0 0 0 2 1 0 0 0 0 0 00 0  0 00  , mySum: 30
 0 0 0 0 0 1 1 1 0 0 0 0 0 0, mySum:  0 40
 0 0 0 0 0 1 3 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 2 0 0 0 0 0 0 00 0  00  , mySum: , mySum: 3
40 0 0 0 0 0 3 1 0 0 0 0 0 
0 0 0 0 0 0 0 4 1 0 0 0 0 0 0 0 , mySum: 4
00 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 3 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 2 1 0 0 0 0 0 0  0 00  0, mySum:  4
0 0 0 0 0 1 3 0 0 0 0 0 0, mySum: 5
0 0 0 0 0 1 4 0 0 0 0 0 0 0  0 00  0 , mySum: 0 , mySum: 54

0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 0 0 0 0 4 1 0 0 0 0 0 00 0  00  0 , mySum: , mySum: 5
0 0 0 0 0 1 3 1 0 0 0 0 0 06 0 0
 , mySum: 5
0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 0 , mySum: 6
thread: 0, NSTable size: 26
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 9
thread: 0, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 0, i: 1, maxN[i].weit: 4, maxN[i].idx: 1, blockDimSize[i]: 4
thread: 0, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 0, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 0, i: 4, maxN[i].weit: 4, maxN[i].idx: 4, blockDimSize[i]: 4
thread: 0, i: 5, maxN[i].weit: 10, maxN[i].idx: 5, blockDimSize[i]: 10
thread: 0, i: 0, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 1, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 2, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 4
thread: 0, i: 5, divisor[i]: 2, blockDimSize[i]: 5
thread: 0, largestBlockVec.elm: 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 
thread: 0, blockDimSizeComp: 0 0 0 0 0 0 0 0 0 2 0 2 3 2 4 5 
thread: 0, divisorComp: 0 0 0 0 0 0 0 0 0 2 0 2 1 1 1 2 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 
thread: 0, largestNoZeroBlockVec: 1 1 0 0 0 1 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 , mySum: 3
thread: 2, maxBlockLvlSize: 4
thread: 2, maxInBlockLvlSize: 31
thread: 2, AllTableSize: 3600, maxSubsetsSize: 64
thread: 1, maxBlockLvlSize: 4
thread: 1, maxInBlockLvlSize: 31
thread: 1, AllTableSize: 3600, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 3
thread: 0, maxInBlockLvlSize: 84
thread: 0, AllTableSize: 3840, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 1 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 1 0 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 mySum: 2
thread: 0, blockNoZero[4]: 0 1 0 0 0 1 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[5]: 1 0 0 0 0 1 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 1 1 0 0 0 0 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 mySum: 3
thread: 0, blockNoZero[7]: 1 1 0 0 0 1 
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.215455
thread: 1, sOPT: 10
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.166711
thread: 2, sOPT: 10
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.074741
thread: 0, sOPT: 10
BKID: 0, LB: 31, UB: 31, OPT: 10
Dynamic Programming Runtime: 3.21176
Execution time between LB and UB is: 2
By far, all LB UB calculation runtime: 3
********************************************************
Total execution on UB and LB is: 3
OUT of Bk while loop  
UB    31
LB    31
T1    31
T2    31
OPT   10
nMachines   10
BkID	0
AllProbData.size()    2
ck :   1
AllProbData[ck].Ttable    31
ck :   0
AllProbData[ck].Ttable    33
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan34
Main Scheduling is Done
File 1-6 is Done.
******************************
Reading File...
File 1-7 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 49, LB: 30start at time: 1505254715
thread: 0, MlBk is called with LB: 30, UB: 35
thread: 3, MlBk is called with LB: 45, UB: 50
 thread: 0, LongJobs.size() 21
thread: 1, MlBk is called with LB: 35, UB: 40thread: 
2 thread: 1, LongJobs.size() 21
, MlBk is called with LB: 40, UB: 45
 thread: 3, LongJobs.size() 16
 thread: 2, LongJobs.size() 18
thread: 3, NSTable size: 27
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 5
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 5
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 3, i: 1, maxN[i].weit: 6, maxN[i].idx: 1, blockDimSize[i]: 6
thread: 3, i: 2, maxN[i].weit: 6, maxN[i].idx: 2, blockDimSize[i]: 6
thread: 3, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 3, i: 0, divisor[i]: 2, blockDimSize[i]: 2
thread: 3, i: 1, divisor[i]: 2, blockDimSize[i]: 3
thread: 3, i: 2, divisor[i]: 2, blockDimSize[i]: 3
thread: 3, i: 3, divisor[i]: 1, blockDimSize[i]: 4
thread: 3, largestBlockVec.elm: 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 0 0 2 3 3 4 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 0 0 2 2 2 1 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 1 1 1 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 , mySum: 3
thread: 3, maxBlockLvlSize: 3
thread: 3, maxInBlockLvlSize: 16
thread: 3, AllTableSize: 576, maxSubsetsSize: 64
thread: 2, NSTable size: 39
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 5
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 5
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 2, i: 1, maxN[i].weit: 4, maxN[i].idx: 1, blockDimSize[i]: 4
thread: 2, i: 2, maxN[i].weit: 6, maxN[i].idx: 2, blockDimSize[i]: 6
thread: 2, i: 3, maxN[i].weit: 6, maxN[i].idx: 3, blockDimSize[i]: 6
thread: 2, i: 4, maxN[i].weit: 4, maxN[i].idx: 4, blockDimSize[i]: 4
thread: 2, i: 0, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 1, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, i: 2, divisor[i]: 2, blockDimSize[i]: 3
thread: 2, i: 3, divisor[i]: 2, blockDimSize[i]: 3
thread: 2, i: 4, divisor[i]: 1, blockDimSize[i]: 4
thread: 2, largestBlockVec.elm: 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 0 3 2 3 3 4 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 1 2 2 2 1 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 1 1 1 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 , mySum: 3
thread: 2, maxBlockLvlSize: 3
thread: 2, maxInBlockLvlSize: 44
thread: 2, AllTableSize: 1728, maxSubsetsSize: 64
thread: 1, NSTable size: 27
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 5
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 5
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 5
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 6, maxN[i].idx: 0, blockDimSize[i]: 6
thread: 1, i: 1, maxN[i].weit: 4, maxN[i].idx: 1, blockDimSize[i]: 4
thread: 1, i: 2, maxN[i].weit: 6, maxN[i].idx: 2, blockDimSize[i]: 6
thread: 1, i: 3, maxN[i].weit: 6, maxN[i].idx: 3, blockDimSize[i]: 6
thread: 1, i: 4, maxN[i].weit: 4, maxN[i].idx: 4, blockDimSize[i]: 4
thread: 1, i: 0, divisor[i]: 2, blockDimSize[i]: 3
thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 4
thread: 1, i: 2, divisor[i]: 2, blockDimSize[i]: 3
thread: 1, i: 3, divisor[i]: 2, blockDimSize[i]: 3
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 4
thread: 1, largestBlockVec.elm: 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 0 3 4 3 3 4 0 0 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 2 1 2 2 1 0 0 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 1 0 1 1 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 , mySum: 3
thread: 0, NSTable size: 20
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 5
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 5
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 5
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 0, maxN[i].weit: 6, maxN[i].idx: 0, blockDimSize[i]: 6
thread: 0, i: 1, maxN[i].weit: 4, maxN[i].idx: 1, blockDimSize[i]: 4
thread: 0, i: 2, maxN[i].weit: 6, maxN[i].idx: 2, blockDimSize[i]: 6
thread: 0, i: 3, maxN[i].weit: 6, maxN[i].idx: 3, blockDimSize[i]: 6
thread: 0, i: 4, maxN[i].weit: 4, maxN[i].idx: 4, blockDimSize[i]: 4
thread: 0, i: 0, divisor[i]: 2, blockDimSize[i]: 3
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 4
thread: 0, i: 2, divisor[i]: 2, blockDimSize[i]: 3
thread: 0, i: 3, divisor[i]: 2, blockDimSize[i]: 3
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 4
thread: 0, largestBlockVec.elm: 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 0 3 4 3 3 4 0 0 0 0 0 0 0 
thread: 0, divisorComp: 0 0 0 0 2 1 2 2 1 0 0 0 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 1 0 1 1 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 , mySum: 3
thread: 1, maxBlockLvlSize: 3
thread: 1, maxInBlockLvlSize: 78
thread: 1, AllTableSize: 3456, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 3
thread: 0, maxInBlockLvlSize: 78
thread: 0, AllTableSize: 3456, maxSubsetsSize: 64
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 6
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 
copy the latest feasible solution to instance takes time: 0.041859
thread: 3, sOPT: 6
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 1 0 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 1 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 1 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 1 1 0 
thread: 0, allBlocks[5]: 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 1 0 0 1 0 
thread: 0, allBlocks[6]: 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 1 0 1 0 0 
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 7
copy the latest feasible solution to instance takes time: 0.098175
thread: 2, sOPT: 7
thread: 0, allBlocks[7]: 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[7]: 1 0 1 1 0 
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.164742
thread: 1, sOPT: 9
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.06492
thread: 0, sOPT: 10
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: Thread: 2, MlBk function is done, and BkID for all processes are collected.31, MlBk function is done, and BkID for all processes are collected., MlBk function is done, and BkID for all processes are collected.


sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 30, UB: 33
BKID: 0, LB: 30, UB: 33, OPT: 10
Dynamic Programming Runtime: 2.92081
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 1
Iteration: 2, UB: 33, LB: 30start at time: 1505254716
thread: 0, MlBk is called with LB: 30, UB: 31
 thread: 0, LongJobs.size() 21
thread: thread: 2, MlBk is called with LB: 32, UB: 331
, MlBk is called with LB: 31, UB: 32
 thread: 2, LongJobs.size() 21
 thread: 1, LongJobs.size() 21
thread: 2, NSTable size: 20
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 5
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 5
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 5
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 6, maxN[i].idx: 0, blockDimSize[i]: 6
thread: 2, i: 1, maxN[i].weit: 4, maxN[i].idx: 1, blockDimSize[i]: 4
thread: 2, i: 2, maxN[i].weit: 6, maxN[i].idx: 2, blockDimSize[i]: 6
thread: 2, i: 3, maxN[i].weit: 6, maxN[i].idx: 3, blockDimSize[i]: 6
thread: 2, i: 4, maxN[i].weit: 4, maxN[i].idx: 4, blockDimSize[i]: 4
thread: 2, i: 0, divisor[i]: 2, blockDimSize[i]: 3
thread: 2, i: 1, divisor[i]: 1, blockDimSize[i]: 4
thread: 2, i: 2, divisor[i]: 2, blockDimSize[i]: 3
thread: 2, i: 3, divisor[i]: 2, blockDimSize[i]: 3
thread: 2, i: 4, divisor[i]: 1, blockDimSize[i]: 4
thread: 2, largestBlockVec.elm: 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 0 3 4 3 3 4 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 2 1 2 2 1 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 1 0 1 1 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 , mySum: 3
thread: 2, maxBlockLvlSize: 3
thread: 2, maxInBlockLvlSize: 78
thread: 2, AllTableSize: 3456, maxSubsetsSize: 64
thread: 1, NSTable size: 34
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 8
thread: 1, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 1, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 1, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 1, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 1, i: 4, maxN[i].weit: 5, maxN[i].idx: 4, blockDimSize[i]: 5
thread: 1, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 1, i: 6, maxN[i].weit: 9, maxN[i].idx: 6, blockDimSize[i]: 9
thread: 1, i: 0, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 2, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 4, divisor[i]: 5, blockDimSize[i]: 1
thread: 1, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 6, divisor[i]: 3, blockDimSize[i]: 3
thread: 1, largestBlockVec.elm: 0 0 0 0 0 0 0 0 0 1 0 0 0 4 0 2 
thread: 1, blockDimSizeComp: 0 0 0 0 0 0 0 0 0 2 3 3 2 1 2 3 
thread: 1, divisorComp: 0 0 0 0 0 0 0 0 0 2 1 1 1 5 1 3 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0 1 0 0 0 4 0 2 
thread: 1, largestNoZeroBlockVec: 1 0 0 0 4 0 2 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 1 0 0 0 2 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 2 , mySum: 3
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 2 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 2 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 2 , mySum: 4
0 0 0 0 0 0 0 0 0 1 0 0 0 2 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 1 0 0 0 3 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 4 0 1 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 2 , mySum: 5
0 0 0 0 0 0 0 0 0 1 0 0 0 2 0 2 , mySum: 5
0 0 0 0 0 0 0 0 0 1 0 0 0 3 0 1 , mySum: 5
0 0 0 0 0 0 0 0 0 1 0 0 0 4 0 0 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 0 4 0 2 , mySum: 6
0 0 0 0 0 0 0 0 0 1 0 0 0 3 0 2 , mySum: 6
0 0 0 0 0 0 0 0 0 1 0 0 0 4 0 1 , mySum: 6
0 0 0 0 0 0 0 0 0 1 0 0 0 4 0 2 , mySum: 7
thread: 0, NSTable size: 32
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 8
thread: 0, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 0, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 0, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 0, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 0, i: 4, maxN[i].weit: 5, maxN[i].idx: 4, blockDimSize[i]: 5
thread: 0, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 0, i: 6, maxN[i].weit: 9, maxN[i].idx: 6, blockDimSize[i]: 9
thread: 0, i: 0, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 2, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 6, divisor[i]: 3, blockDimSize[i]: 3
thread: 0, largestBlockVec.elm: 0 0 0 0 0 0 0 0 0 1 0 0 0 4 0 2 
thread: 0, blockDimSizeComp: 0 0 0 0 0 0 0 0 0 2 3 3 2 1 2 3 
thread: 0, divisorComp: 0 0 0 0 0 0 0 0 0 2 1 1 1 5 1 3 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 1 0 0 0 4 0 2 
thread: 0, largestNoZeroBlockVec: 1 0 0 0 4 0 2 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 1 0 0 0 2 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 2 , mySum: 3
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 2 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 2 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 2 , mySum: 4
0 0 0 0 0 0 0 0 0 1 0 0 0 2 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 1 0 0 0 3 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 4 0 1 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 2 , mySum: 5
0 0 0 0 0 0 0 0 0 1 0 0 0 2 0 2 , mySum: 5
0 0 0 0 0 0 0 0 0 1 0 0 0 3 0 1 , mySum: 5
0 0 0 0 0 0 0 0 0 1 0 0 0 4 0 0 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 0 4 0 2 , mySum: 6
0 0 0 0 0 0 0 0 0 1 0 0 0 3 0 2 , mySum: 6
0 0 0 0 0 0 0 0 0 1 0 0 0 4 0 1 , mySum: 6
0 0 0 0 0 0 0 0 0 1 0 0 0 4 0 2 , mySum: 7
thread: 1, maxBlockLvlSize: 6
thread: 1, maxInBlockLvlSize: 48
thread: 1, AllTableSize: 6480, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 6
thread: 0, maxInBlockLvlSize: 48
thread: 0, AllTableSize: 6480, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 1 0 0 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 0 0 1 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 mySum: 2
thread: 0, blockNoZero[4]: 0 0 0 0 1 0 1 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 mySum: 2
thread: 0, blockNoZero[5]: 1 0 0 0 1 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[6]: 1 0 0 0 0 0 1 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 mySum: 2
thread: 0, blockNoZero[7]: 0 0 0 0 0 0 2 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 mySum: 2
thread: 0, blockNoZero[8]: 0 0 0 0 2 0 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 mySum: 3
thread: 0, blockNoZero[9]: 0 0 0 0 3 0 0 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 0 0 0 1 0 0 0 2 0 0 mySum: 3
thread: 0, blockNoZero[10]: 1 0 0 0 2 0 0 
thread: 0, allBlocks[11]: 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 1 mySum: 3
thread: 0, blockNoZero[11]: 1 0 0 0 1 0 1 
thread: 0, allBlocks[12]: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 2 mySum: 3
thread: 0, blockNoZero[12]: 0 0 0 0 1 0 2 
thread: 0, allBlocks[13]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 2 mySum: 3
thread: 0, blockNoZero[13]: 1 0 0 0 0 0 2 
thread: 0, allBlocks[14]: 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 1 mySum: 3
thread: 0, blockNoZero[14]: 0 0 0 0 2 0 1 
thread: 0, allBlocks[15]: 0 0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 mySum: 4
thread: 0, blockNoZero[15]: 0 0 0 0 4 0 0 
thread: 0, allBlocks[16]: 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 1 mySum: 4
thread: 0, blockNoZero[16]: 0 0 0 0 3 0 1 
thread: 0, allBlocks[17]: 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 2 mySum: 4
thread: 0, blockNoZero[17]: 1 0 0 0 1 0 2 
thread: 0, allBlocks[18]: 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 2 mySum: 4
thread: 0, blockNoZero[18]: 0 0 0 0 2 0 2 
thread: 0, allBlocks[19]: 0 0 0 0 0 0 0 0 0 1 0 0 0 2 0 1 mySum: 4
thread: 0, blockNoZero[19]: 1 0 0 0 2 0 1 
thread: 0, allBlocks[20]: 0 0 0 0 0 0 0 0 0 1 0 0 0 3 0 0 mySum: 4
thread: 0, blockNoZero[20]: 1 0 0 0 3 0 0 
thread: 0, allBlocks[21]: 0 0 0 0 0 0 0 0 0 0 0 0 0 4 0 1 mySum: 5
thread: 0, blockNoZero[21]: 0 0 0 0 4 0 1 
thread: 0, allBlocks[22]: 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 2 mySum: 5
thread: 0, blockNoZero[22]: 0 0 0 0 3 0 2 
thread: 0, allBlocks[23]: 0 0 0 0 0 0 0 0 0 1 0 0 0 2 0 2 mySum: 5
thread: 0, blockNoZero[23]: 1 0 0 0 2 0 2 
thread: 0, allBlocks[24]: 0 0 0 0 0 0 0 0 0 1 0 0 0 3 0 1 mySum: 5
thread: 0, blockNoZero[24]: 1 0 0 0 3 0 1 
thread: 0, allBlocks[25]: 0 0 0 0 0 0 0 0 0 1 0 0 0 4 0 0 mySum: 5
thread: 0, blockNoZero[25]: 1 0 0 0 4 0 0 
thread: 0, allBlocks[26]: 0 0 0 0 0 0 0 0 0 0 0 0 0 4 0 2 mySum: 6
thread: 0, blockNoZero[26]: 0 0 0 0 4 0 2 
thread: 0, allBlocks[27]: 0 0 0 0 0 0 0 0 0 1 0 0 0 3 0 2 mySum: 6
thread: 0, blockNoZero[27]: 1 0 0 0 3 0 2 
thread: 0, allBlocks[28]: 0 0 0 0 0 0 0 0 0 1 0 0 0 4 0 1 mySum: 6
thread: 0, blockNoZero[28]: 1 0 0 0 4 0 1 
thread: 0, allBlocks[29]: 0 0 0 0 0 0 0 0 0 1 0 0 0 4 0 2 mySum: 7
thread: 0, blockNoZero[29]: 1 0 0 0 4 0 2 
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.298394
thread: 2, sOPT: 10
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.329531
thread: 0, sOPT: 10
copy the latest feasible solution to instance takes time: 0.276356
thread: 1, sOPT: 10
BKID: 0, LB: 30, UB: 30, OPT: 10
Dynamic Programming Runtime: 3.58565
Execution time between LB and UB is: 2
By far, all LB UB calculation runtime: 3
********************************************************
Total execution on UB and LB is: 3
OUT of Bk while loop  
UB    30
LB    30
T1    30
T2    30
OPT   10
nMachines   10
BkID	0
AllProbData.size()    2
ck :   1
AllProbData[ck].Ttable    30
ck :   0
AllProbData[ck].Ttable    32
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan33
Main Scheduling is Done
File 1-7 is Done.
******************************
Reading File...
File 1-8 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 49, LB: 30start at time: 1505254718
thread: 0, MlBk is called with LB: 30, UB: 35
thread: 3, MlBk is called with LB: 45, UB: 50
 thread: 0, LongJobs.size() 21
thread: 1, MlBk is called with LB: 35, UB: 40
 thread: 3, LongJobs.size() 17
thread: 2, MlBk is called with LB: 40, UB: 45
 thread: 1, LongJobs.size() 21
 thread: 2, LongJobs.size() 19
thread: 3, NSTable size: 27
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 6
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 6
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 7, maxN[i].idx: 0, blockDimSize[i]: 7
thread: 3, i: 1, maxN[i].weit: 7, maxN[i].idx: 1, blockDimSize[i]: 7
thread: 3, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 3, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 3, i: 0, divisor[i]: 7, blockDimSize[i]: 1
thread: 3, i: 1, divisor[i]: 7, blockDimSize[i]: 1
thread: 3, i: 2, divisor[i]: 1, blockDimSize[i]: 3
thread: 3, i: 3, divisor[i]: 2, blockDimSize[i]: 2
thread: 3, largestBlockVec.elm: 0 0 0 0 0 6 6 0 1 0 0 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 0 0 1 1 3 2 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 0 0 7 7 1 2 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 6 6 0 1 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 6 6 0 1 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 1 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 0 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 1 0 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 3 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 3 0 0 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 3 0 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 2 0 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 4 0 0 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 4 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 5 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 4 0 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 3 0 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 2 0 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 3 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 5 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 3 2 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 3 1 0 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 5 0 1 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 5 0 0 1 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 3 2 0 1 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 3 3 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 4 2 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 4 1 0 1 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 5 1 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 2 4 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 2 3 0 1 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 6 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 5 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 4 0 1 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 4 3 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 5 1 0 1 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 6 1 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 3 3 0 1 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 4 2 0 1 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 5 2 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 6 0 0 1 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 2 4 0 1 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 2 5 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 3 4 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 6 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 5 0 1 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 6 0 1 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 5 3 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 5 2 0 1 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 1 6 0 1 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 2 5 0 1 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 2 6 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 6 1 0 1 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 4 4 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 4 3 0 1 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 6 2 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 3 4 0 1 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 3 5 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 5 4 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 6 2 0 1 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 6 3 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 3 6 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 5 3 0 1 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 4 5 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 4 4 0 1 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 2 6 0 1 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 3 5 0 1 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 5 4 0 1 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 5 5 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 6 4 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 4 6 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 4 5 0 1 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 3 6 0 1 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 6 3 0 1 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 4 6 0 1 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 0 6 5 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 0 6 4 0 1 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 0 5 6 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 0 5 5 0 1 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 0 5 6 0 1 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 0 6 5 0 1 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 0 6 6 0 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 0 6 6 0 1 0 0 0 0 0 0 0 , mySum: 13
thread: 3, maxBlockLvlSize: 13
thread: 3, maxInBlockLvlSize: 2
thread: 3, AllTableSize: 588, maxSubsetsSize: 64
thread: 2, NSTable size: 39
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 6
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 6
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 2, i: 1, maxN[i].weit: 7, maxN[i].idx: 1, blockDimSize[i]: 7
thread: 2, i: 2, maxN[i].weit: 7, maxN[i].idx: 2, blockDimSize[i]: 7
thread: 2, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 2, i: 4, maxN[i].weit: 4, maxN[i].idx: 4, blockDimSize[i]: 4
thread: 2, i: 0, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 1, divisor[i]: 7, blockDimSize[i]: 1
thread: 2, i: 2, divisor[i]: 7, blockDimSize[i]: 1
thread: 2, i: 3, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 4, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, largestBlockVec.elm: 0 0 0 0 0 6 6 0 1 0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 0 3 1 1 3 2 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 1 7 7 1 2 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 6 6 0 1 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 6 6 0 1 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 1 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 0 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 1 0 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 3 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 3 0 0 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 3 0 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 2 0 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 4 0 0 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 4 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 5 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 4 0 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 3 0 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 2 0 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 3 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 5 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 3 2 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 3 1 0 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 5 0 1 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 5 0 0 1 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 3 2 0 1 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 3 3 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 4 2 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 4 1 0 1 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 5 1 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 2 4 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 2 3 0 1 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 6 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 5 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 4 0 1 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 4 3 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 5 1 0 1 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 6 1 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 3 3 0 1 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 4 2 0 1 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 5 2 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 6 0 0 1 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 2 4 0 1 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 2 5 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 3 4 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 6 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 5 0 1 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 6 0 1 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 5 3 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 5 2 0 1 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 1 6 0 1 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 2 5 0 1 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 2 6 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 6 1 0 1 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 4 4 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 4 3 0 1 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 6 2 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 3 4 0 1 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 3 5 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 5 4 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 6 2 0 1 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 6 3 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 3 6 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 5 3 0 1 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 4 5 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 4 4 0 1 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 2 6 0 1 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 3 5 0 1 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 5 4 0 1 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 5 5 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 6 4 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 4 6 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 4 5 0 1 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 3 6 0 1 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 6 3 0 1 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 4 6 0 1 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 0 6 5 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 0 6 4 0 1 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 0 5 6 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 0 5 5 0 1 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 0 5 6 0 1 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 0 6 5 0 1 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 0 6 6 0 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 0 6 6 0 1 0 0 0 0 0 0 0 , mySum: 13
thread: 2, maxBlockLvlSize: 13
thread: 2, maxInBlockLvlSize: 5
thread: 2, AllTableSize: 1764, maxSubsetsSize: 64
thread: 1, NSTable size: 27
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 6
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 6
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 5, maxN[i].idx: 0, blockDimSize[i]: 5
thread: 1, i: 1, maxN[i].weit: 7, maxN[i].idx: 1, blockDimSize[i]: 7
thread: 1, i: 2, maxN[i].weit: 7, maxN[i].idx: 2, blockDimSize[i]: 7
thread: 1, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 1, i: 4, maxN[i].weit: 4, maxN[i].idx: 4, blockDimSize[i]: 4
thread: 1, i: 0, divisor[i]: 5, blockDimSize[i]: 1
thread: 1, i: 1, divisor[i]: 7, blockDimSize[i]: 1
thread: 1, i: 2, divisor[i]: 7, blockDimSize[i]: 1
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 4
thread: 1, largestBlockVec.elm: 0 0 0 0 4 6 6 0 0 0 0 0 0 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 0 1 1 1 3 4 0 0 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 5 7 7 1 1 0 0 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 4 6 6 0 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 4 6 6 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 3 1 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 3 0 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 3 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 2 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 1 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 3 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 3 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 0 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 1 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 1 3 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 3 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 2 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 4 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 1 2 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 3 0 2 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 0 3 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 2 2 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 3 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 4 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 3 2 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 3 1 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 5 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 4 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 5 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 3 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 3 2 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 4 1 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 4 0 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 5 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 3 2 1 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 3 3 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 3 0 3 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 4 1 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 0 4 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 3 3 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 3 1 2 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 2 4 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 4 2 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 4 0 2 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 3 2 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 4 2 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 1 3 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 2 3 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 5 1 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 5 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 2 2 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 1 4 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 3 1 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 4 1 1 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 4 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 6 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 0 5 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 4 1 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 3 0 4 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 5 1 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 2 3 2 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 4 3 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 3 4 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 2 1 4 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 2 5 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 2 2 3 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 2 0 5 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 6 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 2 5 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 6 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 4 0 3 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 6 1 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 0 6 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 4 1 2 0thread:  0 00, NSTable size:  200
 thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
0thread: 0, i: 1, alltableelemets[maxindex].elm[i]:  0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 6
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 6
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 02
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 0 0 0 0 , mySum: 7
0 0 0 0 1 1 5 0 0 0 0, i:  00, maxN[i].weit:  05 , maxN[i].idx: 0 00 , blockDimSize[i]: 0 , mySum: 5
7thread: 0, i: 1, maxN[i].weit: 
70 0 0 0 0 5 2 0 , maxN[i].idx: 01 0, blockDimSize[i]:  7
0thread: 0, i: 2, maxN[i].weit: 7, maxN[i].idx: 2, blockDimSize[i]:  0 0 0 0 0 , mySum: 7
0 0 0 0 1 2 4 0 0 0 0 0 0 0 7
thread: 0, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 0, i: 40, maxN[i].weit: 4, maxN[i].idx: 4 , blockDimSize[i]: 04 
, mySum: 7thread: 
00 0 0 0 3 4 0 0 0 , i: 0 0 00 0, divisor[i]:  5, blockDimSize[i]: 0 10 
0thread: 0, i: 1, divisor[i]: 7, blockDimSize[i]: 1
thread: 0, i: 2, divisor[i]: 7, blockDimSize[i]: 1
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 4
 thread: , mySum: 07
, largestBlockVec.elm: 0 0 0 0 4 2 1 0 0 0 00  0 0 0 0 00  , mySum: 7
00 0 0 0 1 3 3 0 0 0 0 0  0 0 00 0  , mySum: 7
0 0 0 0 1 4 2 0 0 0 0 40  0 60  60  0 0 , mySum: 7
0 0 0 0 3 1 3 0 0 00  00  00 0  0 00 0  , mySum: 7
0 0 0 0 3 2 2 0 0 00  00 0  00  0 00  
0thread: 0, blockDimSizeComp: 0 0 0 0 1 1 1 3 4  , mySum: 0 0 70 0 0
 0 0 0 0 0 3 3 1 0 0 0 0 0 0 0 00 0  , mySum: 
thread: 0, divisorComp: 0 0 0 0 5 7 7 1 17 0 0
 0 0 0 0 0 4 3 0 0 0 0 0 0 00 0  00  0 0, mySum:  7
0 0 0 0 3 5 0 0 0 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 4 6 60 0 0 0 , mySum:  80 
0 0 0 0 0 2 3 3 0 0 0 0 0 0 00 0 0  , mySum: 8
00 0 0 0 3 0 5 0 0 0 0 0 0 0  0 00 0  0 , mySum: 0 80
0 0 0 0 4 0 4 0 0 0 0 0  
thread: 0, largestNoZeroBlockVec: 4 6 6 0 0 
0 0 0 0 , mySum: 8
0 0 0 0 3 1 4 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 4 3 1 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 2 4 2 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 4 1 3 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 3 2 3 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 2 5 1 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 3 4 1 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 4 4 0 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 4 2 2 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 3 3 2 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 2 6 0 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 1 2 5 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 5 3 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 1 6 1 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 4 4 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 1 5 2 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 6 2 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 2 0 6 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 3 5 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 2 6 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 1 4 3 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 2 1 5 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 1 3 4 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 2 2 4 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 1 1 6 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 4 0 5 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 3 4 2 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 1 2 6 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 3 0 6 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 5 4 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 1 5 3 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 3 5 1 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 3 1 5 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 3 2 4 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 3 3 3 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 6 3 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 1 4 4 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 1 3 5 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 3 6 0 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 4 1 4 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 2 3 4 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 2 2 5 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 2 4 3 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 4 5 0 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 4 4 1 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 2 1 6 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 2 5 2 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 4 3 2 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 2 6 1 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 1 6 2 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 4 2 3 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 4 5 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 3 6 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 4 4 2 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 2 3 5 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 4 6 0 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 4 5 1 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 4 1 5 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 3 5 2 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 4 6 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 5 5 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 4 0thread:  0, allBlocks: 60  0 00  0 00  0 00 0 0  00 0  00  , mySum: 010 
0 0 0 0 3 6 1 0 0 0 0 0 0 0 00  00 , mySum:  10
00 0 0 0 0 6 4 0 0 0 0 0 0 0 0  0 0, mySum:  10
0 0 0 0 4 3 3 0 0 0 0 0 0 0 0 0 , mySum: 00
 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 10
0 0 0 0 4 2 4 0 0 0 0 0 0 0 00 0  , mySum: 100 
0 0 0 0 0 1 5 4 0 0 0 0 0 0 00  00  0 0, mySum:  10
0 0 0 0 3 1 6 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 00 0  00 0  0 0 0, mySum:  , mySum: 101
0 0 0 0 2 2 6 0 0 0 0 0 0 0 0 
00 0 0 0 0 1 0 0 0 0  , mySum: 10
0 0 0 0 2 4 4 0 0 0 0 0 00 0 0 0 0 0  0 , mySum: 0 01 , mySum: 10

0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 3 3 4 0 0 0 0 0 0 0 0 00  , mySum: 02
 0 0 0 0 2 0 0 0 0 0 00 0 0 , mySum: 10 
0 0 0 0 0 0 1 4 5 0 0 0 0 0 00 0 0  00  , mySum: 100
0 0 0 0 3 2 5 0 0 0 0 0  0 , mySum: 02
 0 0 0 0 0 1 1 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 2 5 3 0 0 0 0 0 00 0  00  00 0  , mySum: 10, mySum: 
0 0 0 0 1 3 6 0 0 0 0 0 02 0 0
 0 0 0 0 0 1 0 1 0 0 0 0 0 0 , mySum: 0 010 
0 0 0 0 1 6 3 0 0 0 0 0 0 00 , mySum: 2
0 0 0 0 1 1 0 0 0 0 0 0  0 00 0  , mySum: 0 0 , mySum: 102

0 0 0 0 2 6 2 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 00 0 , mySum: 10
0 0 0 0 3 4 3 0 0 0 0 0 0  0 0 00  0 , mySum: 010
0 0 0 0 2 5 4 0 0 0 0 0 0  0 00 0  0 0, mySum:  11
0 0 0 0 0 0 5 6 0 0 0 0 0 0 , mySum: 0 02 
0 0 0 0 2 0 1 0 0 0 0 00 , mySum: 11
0 0 0 0 1 5 5 0 0 0 0 0 0 0 0 0 0 , mySum: 3
 0 0 0 0 0 3 0 0 0 0 00 0 0  00  00 0  , mySum: 3
, mySum: 0 0 0 0 1 2 0 0 0 0 011
0 0 0 0 4 1 6 0  00  00 0  0 00 0  00  0, mySum: 3 
0 0 0 0 2 1 0 0 0 0 0 0 , mySum: 11
0 0 0 0 2 6 3 0 0 0 0 0 00 0 0 0  , mySum: 11
00 0 0 0 4 2 5 0 0 0 0 0 0 0  0 00  , mySum: 011 
0 0 0 0 1 6 4 0 0 0 0 0 0 00 0  0 , mySum: , mySum: 311

0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 4 3 4 0 0 0 0 00 0  00  00 0  , mySum: 11
00 0 0 0 2 4 5 0 0 0 0 0 0 0  0, mySum:  0 , mySum: 311

0 0 0 0 4 4 3 0 0 0 0 0 00 0 0 0 1 1 1 0 0 0  0 00 0  0 0, mySum:  110 0
 0 0 0 0 4 6 1 0 0 0 0 0 00 , mySum: 3
0 0 0 0 0 2 1 0 0 0 0  0 0 00  00  0 0, mySum:  11
, mySum: 0 0 0 0 4 5 2 0 0 0 0 0 0 03
0 0 0 0 1 0 2 0 0 0 0  0 00 0  , mySum: 110
 0 0 0 0 2 3 6 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 2 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 3 2 6 0 0 0 0 0 00 0 0  00  , mySum: 11
0 0 0 0 0 3 4 4 0 0 0 0 0 00 0 0  0 00 , mySum:  3
, mySum: 110 0 0 0 0 0 3 0 0 0 0 0 
0 0 0 0 0 3 3 5 0 0 0 0 0 0 0 0 , mySum: 3
00 0 0 0 3 1 0 0 0 0 0  0 0 00 0  0 00  , mySum: 11, mySum: 
40 0 0 0 3 5 3 0 0 0 0 0 0 0 0
 0 0 0 0 3 0 1 0 0 0 , mySum: 11
0 0 0 0 1 4 6 0 0 0 0 0 0 00 0  00  0, mySum: 11 
0 0 0 0 0 0 3 6 2 0 0 0 0 0 00 0  0 00 , mySum: 4 
, mySum: 11
0 0 0 0 0 6 5 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 , mySum: 11
00 0 0 0 4 4 4 0 0 0 0 0 0  0 0 00  , mySum: 0 120 0
 0 0 0 0 0 0 6 6 0 0 0 0 0 00 , mySum: 4
0 0 0 0 1 3 0 0 0 0 0 0 0 0 , mySum: 12 
0 0 0 0 3 5 4 0 0 0 0 0 0 00  00  0 0, mySum:  12
0 0 0 0 2 4 6 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 2 1 0 0 0 0 0 0 0 , mySum: 012 0
 00 0 0 0 4 6 2 0 0 0 0 0 0 0 0 0 , mySum: 4
 0 0 0 0 1 1 2 0 0 0 00 0 0 , mySum: 12
0 0 0 0 4 3 5 0 0 0 0 0 0  0 00 0  0 0, mySum:  0 120
0 0 0 0 1 5 6 0 0 0 0 0  , mySum: 4
0 0 0 0 1 0 3 0 0 0 0 0 0 0 , mySum: 120
 00 0 0 0 3 3 6 0 0 0 0 0 0  0 0 0 0 , mySum: 04 0 
0 , mySum: 0 0 0 0 4 0 0 0 0 0 0 120 0 
0 0 0 0 0 2 5 5 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 4 0 0 0 00 0 0  0 00 0  0 , mySum: , mySum: 412

0 0 0 0 0 1 3 0 0 0 00 0 0 0 1 6 5 0 0 0 0  0 0 0 0 0 0, mySum:  40
 0 0 0 0 2 2 0 0 0 0 00 0 0 , mySum: 12
0 0 0 0 4 2 6 0 0 0 0 0  0 0 0 0 00  , mySum: 04 
0 0 0 0 0 0 3 1 0 0 0 00 , mySum: 12
0 0 0 0 3 6 3 0 0 0 0 0 0  0 0 0 0 , mySum: 0 120
 0 0 0 0 3 4 5 0 0 0 0 0 00 0 0  0 0, mySum: 12
 0 0 0 0 2 6 4 0 0 0 0 0 0, mySum: 4
0 0 0 0 2 0 2 0 0 0 0 0 0 0 , mySum: 12
 0 0 0 0 4 5 3 0 0 0 0 0 0 00 0  00 0  0 , mySum: 0 , mySum: 124

0 0 0 0 3 4 6 0 0 0 0 0 00 0 0 0 0 2 2 0 0  0 0 0 , mySum: 013 0 
00 0 0 0 4 4 5 0 0 0 0 0 0 0 0 0 0 , mySum: 4 
00 0 0 0 2 1 1 0 0 0 0  0 00  0 00  0, mySum:  , mySum: 134
0 0 0 0 1 1 3 0 0 0 0 0
 0 0 0 0 4 5 4 0 0 0 0 0 0 00  00  0 0, mySum:  13
0 0 0 0 4 3 6 0 0 0 0 0 0 00  0 , mySum: 0 , mySum: 135

0 0 0 0 3 5 5 0 0 0 0 0 0 0 0 0 2 3 0 0 0 00 0  00  00  00 , mySum:  13
0 0 0 0 0 2 5 6 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 2 1 0 0 0 00 0  00  0 0 0 , mySum: 0 , mySum: 135
0 0 0 0 1 0 4 0 0 0 0
 0 0 0 0 3 6 4 0 0 0 0 00 0 0  00 0  00  0 , mySum: , mySum: 5
0 0 0 0 2 1 2 0 0 0 0 0 130 0
 0 0 0 0 2 6 5 0 0 0 0 0 00 0 , mySum: 5
0 0 0 0 3 0 2 0 0 0 0 0  0 00 0  0 00  , mySum: 5
, mySum: 0 0 0 0 2 0 3 0 0 0 0 013 0 0
 0 0 0 0 0 4 6 3 0 0 0 0 0 0 0 00 0  , mySum: , mySum: 513
0 0 0 0 1 6 6 0 0 0 0 0 0
 0 0 0 0 1 2 2 0 0 0 0 0 , mySum: 130
0 0 0 0 4 6 4 0 0 0 0 0 0  0 0 0 0 0 0 0, mySum:  05 
0 , mySum: 0 0 0 0 1 3 1 0 0 0 0 140 0 0
 0 0 0 0 0 2 6 6 0 0 0 0 0 0 00 0 0  , mySum: , mySum: 5
140 0 0 0 1 4 0 0 0 0 0 0
 0 0 0 0 4 5 5 0 0 0 0 00 0 0 0 , mySum:  50 
00 0 0 0 3 2 0 0 0 0 0  0 0 00  00 0  , mySum: 5, mySum: 
0 0 0 0 3 1 1 0 0 014
0 0 0 0 4 4 6 0 0 0 0  00  00 0  0 00  0 00  , mySum: , mySum: 145

0 0 0 0 0 0 5 0 0 0 0 00 0 0 0 3 6 5 0 0 0 0  0 0 0 0 , mySum: 5
00 0 0 0 0 4 1 0 0 0 0 0  0 0 00  0 0, mySum: 5 
0 00 0 0 0 0 5 0 0 0 0 0  , mySum: 014
 0 0 0 0 3 5 6 0 0 0 0 0 0 0 0 00 , mySum:  14
00 0 0 0 4 5 6 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 3 0 0 0 0 0  0 00  00  00  , mySum: , mySum: 5
150 0 0 0 0 1 4 0 0 0 0
 0 0 0 0 3 6 6 0 0 0 0 00 0 0  0 0 0 , mySum: 015 
0 00 0 0 0 4 6 5 0 0 0 0 0 0  0, mySum:  50
0 0 0 0 0 3 2 0 0 0 0 0  0 00  , mySum: 150
 0 0 0 0 4 6 6 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 4 1 0 0 0 0 0 0 00 0  0 00  0, mySum:  , mySum: 516

0 0 0 0 4 0 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 5 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 3 2 1 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 3 3 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 3 0 3 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 4 1 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 0 4 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 3 3 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 3 1 2 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 2 4 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 4 2 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 4 0 2 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 3 2 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 4 2 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 1 3 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 2 3 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 5 1 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 5 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 2 2 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 1 4 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 3 1 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 4 1 1 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 4 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 6 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 0 5 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 4 1 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 3 0 4 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 5 1 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 2 3 2 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 4 3 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 3 4 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 2 1 4 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 2 5 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 2 2 3 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 2 0 5 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 6 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 2 5 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 6 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 4 0 3 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 6 1 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 0 6 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 4 1 2 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 1 5 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 5 2 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 2 4 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 3 4 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 4 2 1 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 3 3 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 4 2 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 3 1 3 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 3 2 2 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 3 3 1 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 4 3 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 3 5 0 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 2 3 3 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 3 0 5 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 4 0 4 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 3 1 4 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 4 3 1 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 2 4 2 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 4 1 3 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 3 2 3 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 2 5 1 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 3 4 1 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 4 4 0 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 4 2 2 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 3 3 2 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 2 6 0 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 1 2 5 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 5 3 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 1 6 1 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 4 4 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 1 5 2 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 6 2 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 2 0 6 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 3 5 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 2 6 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 1 4 3 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 2 1 5 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 1 3 4 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 2 2 4 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 1 1 6 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 4 0 5 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 3 4 2 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 1 2 6 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 3 0 6 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 5 4 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 1 5 3 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 3 5 1 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 3 1 5 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 3 2 4 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 3 3 3 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 6 3 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 1 4 4 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 1 3 5 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 3 6 0 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 4 1 4 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 2 3 4 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 2 2 5 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 2 4 3 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 4 5 0 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 4 4 1 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 2 1 6 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 2 5 2 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 4 3 2 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 2 6 1 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 1 6 2 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 4 2 3 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 4 5 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 3 6 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 4 4 2 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 2 3 5 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 4 6 0 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 4 5 1 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 4 1 5 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 3 5 2 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 4 6 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 5 5 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 4 0 6 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 3 6 1 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 6 4 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 4 3 3 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 4 2 4 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 1 5 4 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 3 1 6 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 2 2 6 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 2 4 4 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 3 3 4 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 1 4 5 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 3 2 5 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 2 5 3 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 1 3 6 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 1 6 3 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 2 6 2 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 3 4 3 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 2 5 4 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 0 5 6 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 1 5 5 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 4 1 6 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 2 6 3 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 4 2 5 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 1 6 4 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 4 3 4 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 2 4 5 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 4 4 3 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 4 6 1 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 4 5 2 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 2 3 6 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 3 2 6 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 3 4 4 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 3 3 5 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 3 5 3 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 1 4 6 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 3 6 2 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 0 6 5 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 4 4 4 0 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 0 6 6 0 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 3 5 4 0 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 2 4 6 0 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 4 6 2 0 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 4 3 5 0 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 1 5 6 0 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 3 3 6 0 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 2 5 5 0 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 1 6 5 0 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 4 2 6 0 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 3 6 3 0 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 3 4 5 0 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 2 6 4 0 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 4 5 3 0 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 3 4 6 0 0 0 0 0 0 0 0 0 , mySum: 13
0 0 0 0 4 4 5 0 0 0 0 0 0 0 0 0 , mySum: 13
0 0 0 0 4 5 4 0 0 0 0 0 0 0 0 0 , mySum: 13
0 0 0 0 4 3 6 0 0 0 0 0 0 0 0 0 , mySum: 13
0 0 0 0 3 5 5 0 0 0 0 0 0 0 0 0 , mySum: 13
0 0 0 0 2 5 6 0 0 0 0 0 0 0 0 0 , mySum: 13
0 0 0 0 3 6 4 0 0 0 0 0 0 0 0 0 , mySum: 13
0 0 0 0 2 6 5 0 0 0 0 0 0 0 0 0 , mySum: 13
0 0 0 0 4 6 3 0 0 0 0 0 0 0 0 0 , mySum: 13
0 0 0 0 1 6 6 0 0 0 0 0 0 0 0 0 , mySum: 13
0 0 0 0 4 6 4 0 0 0 0 0 0 0 0 0 , mySum: 14
0 0 0 0 2 6 6 0 0 0 0 0 0 0 0 0 , mySum: 14
0 0 0 0 4 5 5 0 0 0 0 0 0 0 0 0 , mySum: 14
0 0 0 0 4 4 6 0 0 0 0 0 0 0 0 0 , mySum: 14
0 0 0 0 3 6 5 0 0 0 0 0 0 0 0 0 , mySum: 14
0 0 0 0 3 5 6 0 0 0 0 0 0 0 0 0 , mySum: 14
0 0 0 0 4 5 6 0 0 0 0 0 0 0 0 0 , mySum: 15
0 0 0 0 3 6 6 0 0 0 0 0 0 0 0 0 , mySum: 15
0 0 0 0 4 6 5 0 0 0 0 0 0 0 0 0 , mySum: 15
0 0 0 0 4 6 6 0 0 0 0 0 0 0 0 0 , mySum: 16
thread: 1, maxBlockLvlSize: 29
thread: 1, maxInBlockLvlSize: 3
thread: 1, AllTableSize: 2940, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 29
thread: 0, maxInBlockLvlSize: 3
thread: 0, AllTableSize: 2940, maxSubsetsSize: 64
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 6
copy the latest feasible solution to instance takes time: 0.039414
thread: 3, sOPT: 6
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 1 0 0 
thread: 0, allBlocks[2]: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 1 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 1 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 2 0 0 
thread: 0, allBlocks[5]: 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 2 0 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 1 1 0 0 
thread: 0, allBlocks[7]: 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 1 0 1 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[8]: 1 1 0 0 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[9]: 0 2 0 0 0 
thread: 0, allBlocks[10]: 0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 2 0 1 0 0 
thread: 0, allBlocks[11]: 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 0 3 0 0 0 
thread: 0, allBlocks[12]: 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[12]: 1 2 0 0 0 
thread: 0, allBlocks[13]: 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[13]: 2 1 0 0 0 
thread: 0, allBlocks[14]: 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[14]: 3 0 0 0 0 
thread: 0, allBlocks[15]: 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[15]: 1 1 1 0 0 
thread: 0, allBlocks[16]: 0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[16]: 0 2 1 0 0 
thread: 0, allBlocks[17]: 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[17]: 1 0 2 0 0 
thread: 0, allBlocks[18]: 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[18]: 0 1 2 0 0 
thread: 0, allBlocks[19]: 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[19]: 0 0 3 0 0 
thread: 0, allBlocks[20]: 0 0 0 0 3 1 0 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[20]: 3 1 0 0 0 
thread: 0, allBlocks[21]: 0 0 0 0 3 0 1 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[21]: 3 0 1 0 0 
thread: 0, allBlocks[22]: 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[22]: 0 4 0 0 0 
thread: 0, allBlocks[23]: 0 0 0 0 1 3 0 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[23]: 1 3 0 0 0 
thread: 0, allBlocks[24]: 0 0 0 0 1 2 1 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[24]: 1 2 1 0 0 
thread: 0, allBlocks[25]: 0 0 0 0 1 1 2 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[25]: 1 1 2 0 0 
thread: 0, allBlocks[26]: 0 0 0 0 1 0 3 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[26]: 1 0 3 0 0 
thread: 0, allBlocks[27]: 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[27]: 4 0 0 0 0 
thread: 0, allBlocks[28]: 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[28]: 0 0 4 0 0 
thread: 0, allBlocks[29]: 0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[29]: 0 1 3 0 0 
thread: 0, allBlocks[30]: 0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[30]: 2 2 0 0 0 
thread: 0, allBlocks[31]: 0 0 0 0 0 3 1 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[31]: 0 3 1 0 0 
thread: 0, allBlocks[32]: 0 0 0 0 2 0 2 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[32]: 2 0 2 0 0 
thread: 0, allBlocks[33]: 0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[33]: 0 2 2 0 0 
thread: 0, allBlocks[34]: 0 0 0 0 2 1 1 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[34]: 2 1 1 0 0 
thread: 0, allBlocks[35]: 0 0 0 0 1 1 3 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[35]: 1 1 3 0 0 
thread: 0, allBlocks[36]: 0 0 0 0 2 3 0 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[36]: 2 3 0 0 0 
thread: 0, allBlocks[37]: 0 0 0 0 2 2 1 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[37]: 2 2 1 0 0 
thread: 0, allBlocks[38]: 0 0 0 0 1 0 4 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[38]: 1 0 4 0 0 
thread: 0, allBlocks[39]: 0 0 0 0 2 1 2 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[39]: 2 1 2 0 0 
thread: 0, allBlocks[40]: 0 0 0 0 3 0 2 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[40]: 3 0 2 0 0 
thread: 0, allBlocks[41]: 0 0 0 0 2 0 3 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[41]: 2 0 3 0 0 
thread: 0, allBlocks[42]: 0 0 0 0 1 2 2 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[42]: 1 2 2 0 0 
thread: 0, allBlocks[43]: 0 0 0 0 1 3 1 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[43]: 1 3 1 0 0 
thread: 0, allBlocks[44]: 0 0 0 0 1 4 0 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[44]: 1 4 0 0 0 
thread: 0, allBlocks[45]: 0 0 0 0 3 2 0 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[45]: 3 2 0 0 0 
thread: 0, allBlocks[46]: 0 0 0 0 3 1 1 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[46]: 3 1 1 0 0 
thread: 0, allBlocks[47]: 0 0 0 0 0 0 5 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[47]: 0 0 5 0 0 
thread: 0, allBlocks[48]: 0 0 0 0 0 4 1 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[48]: 0 4 1 0 0 
thread: 0, allBlocks[49]: 0 0 0 0 0 5 0 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[49]: 0 5 0 0 0 
thread: 0, allBlocks[50]: 0 0 0 0 0 2 3 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[50]: 0 2 3 0 0 
thread: 0, allBlocks[51]: 0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[51]: 0 1 4 0 0 
thread: 0, allBlocks[52]: 0 0 0 0 0 3 2 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[52]: 0 3 2 0 0 
thread: 0, allBlocks[53]: 0 0 0 0 4 1 0 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[53]: 4 1 0 0 0 
thread: 0, allBlocks[54]: 0 0 0 0 4 0 1 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[54]: 4 0 1 0 0 
thread: 0, allBlocks[55]: 0 0 0 0 1 5 0 0 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[55]: 1 5 0 0 0 
thread: 0, allBlocks[56]: 0 0 0 0 3 2 1 0 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[56]: 3 2 1 0 0 
thread: 0, allBlocks[57]: 0 0 0 0 0 3 3 0 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[57]: 0 3 3 0 0 
thread: 0, allBlocks[58]: 0 0 0 0 3 0 3 0 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[58]: 3 0 3 0 0 
thread: 0, allBlocks[59]: 0 0 0 0 1 4 1 0 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[59]: 1 4 1 0 0 
thread: 0, allBlocks[60]: 0 0 0 0 2 0 4 0 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[60]: 2 0 4 0 0 
thread: 0, allBlocks[61]: 0 0 0 0 3 3 0 0 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[61]: 3 3 0 0 0 
thread: 0, allBlocks[62]: 0 0 0 0 3 1 2 0 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[62]: 3 1 2 0 0 
thread: 0, allBlocks[63]: 0 0 0 0 0 2 4 0 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[63]: 0 2 4 0 0 
thread: 0, allBlocks[64]: 0 0 0 0 0 4 2 0 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[64]: 0 4 2 0 0 
thread: 0, allBlocks[65]: 0 0 0 0 4 0 2 0 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[65]: 4 0 2 0 0 
thread: 0, allBlocks[66]: 0 0 0 0 1 3 2 0 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[66]: 1 3 2 0 0 
thread: 0, allBlocks[67]: 0 0 0 0 4 2 0 0 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[67]: 4 2 0 0 0 
thread: 0, allBlocks[68]: 0 0 0 0 2 1 3 0 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[68]: 2 1 3 0 0 
thread: 0, allBlocks[69]: 0 0 0 0 1 2 3 0 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[69]: 1 2 3 0 0 
thread: 0, allBlocks[70]: 0 0 0 0 0 5 1 0 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[70]: 0 5 1 0 0 
thread: 0, allBlocks[71]: 0 0 0 0 0 1 5 0 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[71]: 0 1 5 0 0 
thread: 0, allBlocks[72]: 0 0 0 0 2 2 2 0 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[72]: 2 2 2 0 0 
thread: 0, allBlocks[73]: 0 0 0 0 1 1 4 0 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[73]: 1 1 4 0 0 
thread: 0, allBlocks[74]: 0 0 0 0 2 3 1 0 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[74]: 2 3 1 0 0 
thread: 0, allBlocks[75]: 0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[75]: 0 0 6 0 0 
thread: 0, allBlocks[76]: 0 0 0 0 4 1 1 0 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[76]: 4 1 1 0 0 
thread: 0, allBlocks[77]: 0 0 0 0 2 4 0 0 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[77]: 2 4 0 0 0 
thread: 0, allBlocks[78]: 0 0 0 0 0 6 0 0 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[78]: 0 6 0 0 0 
thread: 0, allBlocks[79]: 0 0 0 0 1 0 5 0 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[79]: 1 0 5 0 0 
thread: 0, allBlocks[80]: 0 0 0 0 2 4 1 0 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[80]: 2 4 1 0 0 
thread: 0, allBlocks[81]: 0 0 0 0 3 0 4 0 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[81]: 3 0 4 0 0 
thread: 0, allBlocks[82]: 0 0 0 0 1 5 1 0 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[82]: 1 5 1 0 0 
thread: 0, allBlocks[83]: 0 0 0 0 2 3 2 0 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[83]: 2 3 2 0 0 
thread: 0, allBlocks[84]: 0 0 0 0 4 3 0 0 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[84]: 4 3 0 0 0 
thread: 0, allBlocks[85]: 0 0 0 0 0 3 4 0 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[85]: 0 3 4 0 0 
thread: 0, allBlocks[86]: 0 0 0 0 2 1 4 0 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[86]: 2 1 4 0 0 
thread: 0, allBlocks[87]: 0 0 0 0 0 2 5 0 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[87]: 0 2 5 0 0 
thread: 0, allBlocks[88]: 0 0 0 0 2 2 3 0 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[88]: 2 2 3 0 0 
thread: 0, allBlocks[89]: 0 0 0 0 2 0 5 0 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[89]: 2 0 5 0 0 
thread: 0, allBlocks[90]: 0 0 0 0 0 1 6 0 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[90]: 0 1 6 0 0 
thread: 0, allBlocks[91]: 0 0 0 0 2 5 0 0 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[91]: 2 5 0 0 0 
thread: 0, allBlocks[92]: 0 0 0 0 1 6 0 0 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[92]: 1 6 0 0 0 
thread: 0, allBlocks[93]: 0 0 0 0 4 0 3 0 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[93]: 4 0 3 0 0 
thread: 0, allBlocks[94]: 0 0 0 0 0 6 1 0 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[94]: 0 6 1 0 0 
thread: 0, allBlocks[95]: 0 0 0 0 1 0 6 0 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[95]: 1 0 6 0 0 
thread: 0, allBlocks[96]: 0 0 0 0 4 1 2 0 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[96]: 4 1 2 0 0 
thread: 0, allBlocks[97]: 0 0 0 0 1 1 5 0 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[97]: 1 1 5 0 0 
thread: 0, allBlocks[98]: 0 0 0 0 0 5 2 0 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[98]: 0 5 2 0 0 
thread: 0, allBlocks[99]: 0 0 0 0 1 2 4 0 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[99]: 1 2 4 0 0 
thread: 0, allBlocks[100]: 0 0 0 0 3 4 0 0 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[100]: 3 4 0 0 0 
thread: 0, allBlocks[101]: 0 0 0 0 4 2 1 0 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[101]: 4 2 1 0 0 
thread: 0, allBlocks[102]: 0 0 0 0 1 3 3 0 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[102]: 1 3 3 0 0 
thread: 0, allBlocks[103]: 0 0 0 0 1 4 2 0 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[103]: 1 4 2 0 0 
thread: 0, allBlocks[104]: 0 0 0 0 3 1 3 0 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[104]: 3 1 3 0 0 
thread: 0, allBlocks[105]: 0 0 0 0 3 2 2 0 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[105]: 3 2 2 0 0 
thread: 0, allBlocks[106]: 0 0 0 0 3 3 1 0 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[106]: 3 3 1 0 0 
thread: 0, allBlocks[107]: 0 0 0 0 0 4 3 0 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[107]: 0 4 3 0 0 
thread: 0, allBlocks[108]: 0 0 0 0 3 5 0 0 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[108]: 3 5 0 0 0 
thread: 0, allBlocks[109]: 0 0 0 0 2 3 3 0 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[109]: 2 3 3 0 0 
thread: 0, allBlocks[110]: 0 0 0 0 3 0 5 0 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[110]: 3 0 5 0 0 
thread: 0, allBlocks[111]: 0 0 0 0 4 0 4 0 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[111]: 4 0 4 0 0 
thread: 0, allBlocks[112]: 0 0 0 0 3 1 4 0 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[112]: 3 1 4 0 0 
thread: 0, allBlocks[113]: 0 0 0 0 4 3 1 0 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[113]: 4 3 1 0 0 
thread: 0, allBlocks[114]: 0 0 0 0 2 4 2 0 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[114]: 2 4 2 0 0 
thread: 0, allBlocks[115]: 0 0 0 0 4 1 3 0 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[115]: 4 1 3 0 0 
thread: 0, allBlocks[116]: 0 0 0 0 3 2 3 0 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[116]: 3 2 3 0 0 
thread: 0, allBlocks[117]: 0 0 0 0 2 5 1 0 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[117]: 2 5 1 0 0 
thread: 0, allBlocks[118]: 0 0 0 0 3 4 1 0 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[118]: 3 4 1 0 0 
thread: 0, allBlocks[119]: 0 0 0 0 4 4 0 0 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[119]: 4 4 0 0 0 
thread: 0, allBlocks[120]: 0 0 0 0 4 2 2 0 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[120]: 4 2 2 0 0 
thread: 0, allBlocks[121]: 0 0 0 0 3 3 2 0 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[121]: 3 3 2 0 0 
thread: 0, allBlocks[122]: 0 0 0 0 2 6 0 0 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[122]: 2 6 0 0 0 
thread: 0, allBlocks[123]: 0 0 0 0 1 2 5 0 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[123]: 1 2 5 0 0 
thread: 0, allBlocks[124]: 0 0 0 0 0 5 3 0 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[124]: 0 5 3 0 0 
thread: 0, allBlocks[125]: 0 0 0 0 1 6 1 0 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[125]: 1 6 1 0 0 
thread: 0, allBlocks[126]: 0 0 0 0 0 4 4 0 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[126]: 0 4 4 0 0 
thread: 0, allBlocks[127]: 0 0 0 0 1 5 2 0 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[127]: 1 5 2 0 0 
thread: 0, allBlocks[128]: 0 0 0 0 0 6 2 0 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[128]: 0 6 2 0 0 
thread: 0, allBlocks[129]: 0 0 0 0 2 0 6 0 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[129]: 2 0 6 0 0 
thread: 0, allBlocks[130]: 0 0 0 0 0 3 5 0 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[130]: 0 3 5 0 0 
thread: 0, allBlocks[131]: 0 0 0 0 0 2 6 0 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[131]: 0 2 6 0 0 
thread: 0, allBlocks[132]: 0 0 0 0 1 4 3 0 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[132]: 1 4 3 0 0 
thread: 0, allBlocks[133]: 0 0 0 0 2 1 5 0 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[133]: 2 1 5 0 0 
thread: 0, allBlocks[134]: 0 0 0 0 1 3 4 0 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[134]: 1 3 4 0 0 
thread: 0, allBlocks[135]: 0 0 0 0 2 2 4 0 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[135]: 2 2 4 0 0 
thread: 0, allBlocks[136]: 0 0 0 0 1 1 6 0 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[136]: 1 1 6 0 0 
thread: 0, allBlocks[137]: 0 0 0 0 4 0 5 0 0 0 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[137]: 4 0 5 0 0 
thread: 0, allBlocks[138]: 0 0 0 0 3 4 2 0 0 0 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[138]: 3 4 2 0 0 
thread: 0, allBlocks[139]: 0 0 0 0 1 2 6 0 0 0 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[139]: 1 2 6 0 0 
thread: 0, allBlocks[140]: 0 0 0 0 3 0 6 0 0 0 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[140]: 3 0 6 0 0 
thread: 0, allBlocks[141]: 0 0 0 0 0 5 4 0 0 0 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[141]: 0 5 4 0 0 
thread: 0, allBlocks[142]: 0 0 0 0 1 5 3 0 0 0 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[142]: 1 5 3 0 0 
thread: 0, allBlocks[143]: 0 0 0 0 3 5 1 0 0 0 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[143]: 3 5 1 0 0 
thread: 0, allBlocks[144]: 0 0 0 0 3 1 5 0 0 0 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[144]: 3 1 5 0 0 
thread: 0, allBlocks[145]: 0 0 0 0 3 2 4 0 0 0 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[145]: 3 2 4 0 0 
thread: 0, allBlocks[146]: 0 0 0 0 3 3 3 0 0 0 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[146]: 3 3 3 0 0 
thread: 0, allBlocks[147]: 0 0 0 0 0 6 3 0 0 0 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[147]: 0 6 3 0 0 
thread: 0, allBlocks[148]: 0 0 0 0 1 4 4 0 0 0 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[148]: 1 4 4 0 0 
thread: 0, allBlocks[149]: 0 0 0 0 1 3 5 0 0 0 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[149]: 1 3 5 0 0 
thread: 0, allBlocks[150]: 0 0 0 0 3 6 0 0 0 0 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[150]: 3 6 0 0 0 
thread: 0, allBlocks[151]: 0 0 0 0 4 1 4 0 0 0 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[151]: 4 1 4 0 0 
thread: 0, allBlocks[152]: 0 0 0 0 2 3 4 0 0 0 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[152]: 2 3 4 0 0 
thread: 0, allBlocks[153]: 0 0 0 0 2 2 5 0 0 0 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[153]: 2 2 5 0 0 
thread: 0, allBlocks[154]: 0 0 0 0 2 4 3 0 0 0 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[154]: 2 4 3 0 0 
thread: 0, allBlocks[155]: 0 0 0 0 4 5 0 0 0 0 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[155]: 4 5 0 0 0 
thread: 0, allBlocks[156]: 0 0 0 0 4 4 1 0 0 0 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[156]: 4 4 1 0 0 
thread: 0, allBlocks[157]: 0 0 0 0 2 1 6 0 0 0 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[157]: 2 1 6 0 0 
thread: 0, allBlocks[158]: 0 0 0 0 2 5 2 0 0 0 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[158]: 2 5 2 0 0 
thread: 0, allBlocks[159]: 0 0 0 0 4 3 2 0 0 0 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[159]: 4 3 2 0 0 
thread: 0, allBlocks[160]: 0 0 0 0 2 6 1 0 0 0 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[160]: 2 6 1 0 0 
thread: 0, allBlocks[161]: 0 0 0 0 1 6 2 0 0 0 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[161]: 1 6 2 0 0 
thread: 0, allBlocks[162]: 0 0 0 0 4 2 3 0 0 0 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[162]: 4 2 3 0 0 
thread: 0, allBlocks[163]: 0 0 0 0 0 4 5 0 0 0 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[163]: 0 4 5 0 0 
thread: 0, allBlocks[164]: 0 0 0 0 0 3 6 0 0 0 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[164]: 0 3 6 0 0 
thread: 0, allBlocks[165]: 0 0 0 0 4 4 2 0 0 0 0 0 0 0 0 0 mySum: 10
thread: 0, blockNoZero[165]: 4 4 2 0 0 
thread: 0, allBlocks[166]: 0 0 0 0 2 3 5 0 0 0 0 0 0 0 0 0 mySum: 10
thread: 0, blockNoZero[166]: 2 3 5 0 0 
thread: 0, allBlocks[167]: 0 0 0 0 4 6 0 0 0 0 0 0 0 0 0 0 mySum: 10
thread: 0, blockNoZero[167]: 4 6 0 0 0 
thread: 0, allBlocks[168]: 0 0 0 0 4 5 1 0 0 0 0 0 0 0 0 0 mySum: 10
thread: 0, blockNoZero[168]: 4 5 1 0 0 
thread: 0, allBlocks[169]: 0 0 0 0 4 1 5 0 0 0 0 0 0 0 0 0 mySum: 10
thread: 0, blockNoZero[169]: 4 1 5 0 0 
thread: 0, allBlocks[170]: 0 0 0 0 3 5 2 0 0 0 0 0 0 0 0 0 mySum: 10
thread: 0, blockNoZero[170]: 3 5 2 0 0 
thread: 0, allBlocks[171]: 0 0 0 0 0 4 6 0 0 0 0 0 0 0 0 0 mySum: 10
thread: 0, blockNoZero[171]: 0 4 6 0 0 
thread: 0, allBlocks[172]: 0 0 0 0 0 5 5 0 0 0 0 0 0 0 0 0 mySum: 10
thread: 0, blockNoZero[172]: 0 5 5 0 0 
thread: 0, allBlocks[173]: 0 0 0 0 4 0 6 0 0 0 0 0 0 0 0 0 mySum: 10
thread: 0, blockNoZero[173]: 4 0 6 0 0 
thread: 0, allBlocks[174]: 0 0 0 0 3 6 1 0 0 0 0 0 0 0 0 0 mySum: 10
thread: 0, blockNoZero[174]: 3 6 1 0 0 
thread: 0, allBlocks[175]: 0 0 0 0 0 6 4 0 0 0 0 0 0 0 0 0 mySum: 10
thread: 0, blockNoZero[175]: 0 6 4 0 0 
thread: 0, allBlocks[176]: 0 0 0 0 4 3 3 0 0 0 0 0 0 0 0 0 mySum: 10
thread: 0, blockNoZero[176]: 4 3 3 0 0 
thread: 0, allBlocks[177]: 0 0 0 0 4 2 4 0 0 0 0 0 0 0 0 0 mySum: 10
thread: 0, blockNoZero[177]: 4 2 4 0 0 
thread: 0, allBlocks[178]: 0 0 0 0 1 5 4 0 0 0 0 0 0 0 0 0 mySum: 10
thread: 0, blockNoZero[178]: 1 5 4 0 0 
thread: 0, allBlocks[179]: 0 0 0 0 3 1 6 0 0 0 0 0 0 0 0 0 mySum: 10
thread: 0, blockNoZero[179]: 3 1 6 0 0 
thread: 0, allBlocks[180]: 0 0 0 0 2 2 6 0 0 0 0 0 0 0 0 0 mySum: 10
thread: 0, blockNoZero[180]: 2 2 6 0 0 
thread: 0, allBlocks[181]: 0 0 0 0 2 4 4 0 0 0 0 0 0 0 0 0 mySum: 10
thread: 0, blockNoZero[181]: 2 4 4 0 0 
thread: 0, allBlocks[182]: 0 0 0 0 3 3 4 0 0 0 0 0 0 0 0 0 mySum: 10
thread: 0, blockNoZero[182]: 3 3 4 0 0 
thread: 0, allBlocks[183]: 0 0 0 0 1 4 5 0 0 0 0 0 0 0 0 0 mySum: 10
thread: 0, blockNoZero[183]: 1 4 5 0 0 
thread: 0, allBlocks[184]: 0 0 0 0 3 2 5 0 0 0 0 0 0 0 0 0 mySum: 10
thread: 0, blockNoZero[184]: 3 2 5 0 0 
thread: 0, allBlocks[185]: 0 0 0 0 2 5 3 0 0 0 0 0 0 0 0 0 mySum: 10
thread: 0, blockNoZero[185]: 2 5 3 0 0 
thread: 0, allBlocks[186]: 0 0 0 0 1 3 6 0 0 0 0 0 0 0 0 0 mySum: 10
thread: 0, blockNoZero[186]: 1 3 6 0 0 
thread: 0, allBlocks[187]: 0 0 0 0 1 6 3 0 0 0 0 0 0 0 0 0 mySum: 10
thread: 0, blockNoZero[187]: 1 6 3 0 0 
thread: 0, allBlocks[188]: 0 0 0 0 2 6 2 0 0 0 0 0 0 0 0 0 mySum: 10
thread: 0, blockNoZero[188]: 2 6 2 0 0 
thread: 0, allBlocks[189]: 0 0 0 0 3 4 3 0 0 0 0 0 0 0 0 0 mySum: 10
thread: 0, blockNoZero[189]: 3 4 3 0 0 
thread: 0, allBlocks[190]: 0 0 0 0 2 5 4 0 0 0 0 0 0 0 0 0 mySum: 11
thread: 0, blockNoZero[190]: 2 5 4 0 0 
thread: 0, allBlocks[191]: 0 0 0 0 0 5 6 0 0 0 0 0 0 0 0 0 mySum: 11
thread: 0, blockNoZero[191]: 0 5 6 0 0 
thread: 0, allBlocks[192]: 0 0 0 0 1 5 5 0 0 0 0 0 0 0 0 0 mySum: 11
thread: 0, blockNoZero[192]: 1 5 5 0 0 
thread: 0, allBlocks[193]: 0 0 0 0 4 1 6 0 0 0 0 0 0 0 0 0 mySum: 11
thread: 0, blockNoZero[193]: 4 1 6 0 0 
thread: 0, allBlocks[194]: 0 0 0 0 2 6 3 0 0 0 0 0 0 0 0 0 mySum: 11
thread: 0, blockNoZero[194]: 2 6 3 0 0 
Thread: 2, gpu_BlockDP is done.
thread: 0, allBlocks[195]: 0 0 0 0 4 2 5 0 0 0 0 0 0 0 0 0 mySum: 11
thread: 0, blockNoZero[195]: 4 2 5 0 0 
thread: 0, allBlocks[196]: 0 0 0 0 1 6 4 0 0 0 0 0 0 0 0 0 mySum: 11
thread: 0, blockNoZero[196]: 1 6 4 0 0 
thread: 0, allBlocks[197]: 0 0 0 0 4 3 4 0 0 0 0 0 0 0 0 0 mySum: 11
thread: 0, blockNoZero[197]: 4 3 4 0 0 
thread: 0, allBlocks[198]: 0 0 0 0 2 4 5 0 0 0 0 0 0 0 0 0 mySum: 11
thread: 0, blockNoZero[198]: 2 4 5 0 0 
thread: 0, allBlocks[199]: 0 0 0 0 4 4 3 0 0 0 0 0 0 0 0 0 mySum: 11
thread: 0, blockNoZero[199]: 4 4 3 0 0 
thread: 0, allBlocks[200]: 0 0 0 0 4 6 1 0 0 0 0 0 0 0 0 0 mySum: 11
thread: 0, blockNoZero[200]: 4 6 1 0 0 
thread: 0, allBlocks[201]: 0 0 0 0 4 5 2 0 0 0 0 0 0 0 0 0 mySum: 11
thread: 0, blockNoZero[201]: 4 5 2 0 0 
thread: 0, allBlocks[202]: 0 0 0 0 2 3 6 0 0 0 0 0 0 0 0 0 mySum: 11
thread: 0, blockNoZero[202]: 2 3 6 0 0 
thread: 0, allBlocks[203]: 0 0 0 0 3 2 6 0 0 0 0 0 0 0 0 0 mySum: 11
thread: 0, blockNoZero[203]: 3 2 6 0 0 
thread: 0, allBlocks[204]: 0 0 0 0 3 4 4 0 0 0 0 0 0 0 0 0 mySum: 11
thread: 0, blockNoZero[204]: 3 4 4 0 0 
thread: 0, allBlocks[205]: 0 0 0 0 3 3 5 0 0 0 0 0 0 0 0 0 mySum: 11
thread: 0, blockNoZero[205]: 3 3 5 0 0 
thread: 0, allBlocks[206]: 0 0 0 0 3 5 3 0 0 0 0 0 0 0 0 0 mySum: 11
thread: 0, blockNoZero[206]: 3 5 3 0 0 
thread: 0, allBlocks[207]: 0 0 0 0 1 4 6 0 0 0 0 0 0 0 0 0 mySum: 11
thread: 0, blockNoZero[207]: 1 4 6 0 0 
thread: 0, allBlocks[208]: 0 0 0 0 3 6 2 0 0 0 0 0 0 0 0 0 mySum: 11
thread: 0, blockNoZero[208]: 3 6 2 0 0 
thread: 0, allBlocks[209]: 0 0 0 0 0 6 5 0 0 0 0 0 0 0 0 0 mySum: 11
thread: 0, blockNoZero[209]: 0 6 5 0 0 
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 7
thread: 0, allBlocks[210]: 0 0 0 0 4 4 4 0 0 0 0 0 0 0 0 0 mySum: 12
thread: 0, blockNoZero[210]: 4 4 4 0 0 
thread: 0, allBlocks[211]: 0 0 0 0 0 6 6 0 0 0 0 0 0 0 0 0 mySum: 12
thread: 0, blockNoZero[211]: 0 6 6 0 0 
thread: 0, allBlocks[212]: 0 0 0 0 3 5 4 0 0 0 0 0 0 0 0 0 mySum: 12
thread: 0, blockNoZero[212]: 3 5 4 0 0 
thread: 0, allBlocks[213]: 0 0 0 0 2 4 6 0 0 0 0 0 0 0 0 0 mySum: 12
thread: 0, blockNoZero[213]: 2 4 6 0 0 
thread: 0, allBlocks[214]: 0 0 0 0 4 6 2 0 0 0 0 0 0 0 0 0 mySum: 12
thread: 0, blockNoZero[214]: 4 6 2 0 0 
thread: 0, allBlocks[215]: 0 0 0 0 4 3 5 0 0 0 0 0 0 0 0 0 mySum: 12
thread: 0, blockNoZero[215]: 4 3 5 0 0 
thread: 0, allBlocks[216]: 0 0 0 0 1 5 6 0 0 0 0 0 0 0 0 0 mySum: 12
thread: 0, blockNoZero[216]: 1 5 6 0 0 
thread: 0, allBlocks[217]: 0 0 0 0 3 3 6 0 0 0 0 0 0 0 0 0 mySum: 12
thread: 0, blockNoZero[217]: 3 3 6 0 0 
thread: 0, allBlocks[218]: 0 0 0 0 2 5 5 0 0 0 0 0 0 0 0 0 mySum: 12
thread: 0, blockNoZero[218]: 2 5 5 0 0 
thread: 0, allBlocks[219]: 0 0 0 0 1 6 5 0 0 0 0 0 0 0 0 0 mySum: 12
thread: 0, blockNoZero[219]: 1 6 5 0 0 
thread: 0, allBlocks[220]: 0 0 0 0 4 2 6 0 0 0 0 0 0 0 0 0 mySum: 12
thread: 0, blockNoZero[220]: 4 2 6 0 0 
thread: 0, allBlocks[221]: 0 0 0 0 3 6 3 0 0 0 0 0 0 0 0 0 mySum: 12
thread: 0, blockNoZero[221]: 3 6 3 0 0 
thread: 0, allBlocks[222]: 0 0 0 0 3 4 5 0 0 0 0 0 0 0 0 0 mySum: 12
thread: 0, blockNoZero[222]: 3 4 5 0 0 
thread: 0, allBlocks[223]: 0 0 0 0 2 6 4 0 0 0 0 0 0 0 0 0 mySum: 12
thread: 0, blockNoZero[223]: 2 6 4 0 0 
thread: 0, allBlocks[224]: 0 0 0 0 4 5 3 0 0 0 0 0 0 0 0 0 mySum: 12
thread: 0, blockNoZero[224]: 4 5 3 0 0 
thread: 0, allBlocks[225]: 0 0 0 0 3 4 6 0 0 0 0 0 0 0 0 0 mySum: 13
thread: 0, blockNoZero[225]: 3 4 6 0 0 
thread: 0, allBlocks[226]: 0 0 0 0 4 4 5 0 0 0 0 0 0 0 0 0 mySum: 13
thread: 0, blockNoZero[226]: 4 4 5 0 0 
thread: 0, allBlocks[227]: 0 0 0 0 4 5 4 0 0 0 0 0 0 0 0 0 mySum: 13
thread: 0, blockNoZero[227]: 4 5 4 0 0 
thread: 0, allBlocks[228]: 0 0 0 0 4 3 6 0 0 0 0 0 0 0 0 0 mySum: 13
thread: 0, blockNoZero[228]: 4 3 6 0 0 
thread: 0, allBlocks[229]: 0 0 0 0 3 5 5 0 0 0 0 0 0 0 0 0 mySum: 13
thread: 0, blockNoZero[229]: 3 5 5 0 0 
thread: 0, allBlocks[230]: 0 0 0 0 2 5 6 0 0 0 0 0 0 0 0 0 mySum: 13
thread: 0, blockNoZero[230]: 2 5 6 0 0 
thread: 0, allBlocks[231]: 0 0 0 0 3 6 4 0 0 0 0 0 0 0 0 0 mySum: 13
thread: 0, blockNoZero[231]: 3 6 4 0 0 
thread: 0, allBlocks[232]: 0 0 0 0 2 6 5 0 0 0 0 0 0 0 0 0 mySum: 13
thread: 0, blockNoZero[232]: 2 6 5 0 0 
thread: 0, allBlocks[233]: 0 0 0 0 4 6 3 0 0 0 0 0 0 0 0 0 mySum: 13
thread: 0, blockNoZero[233]: 4 6 3 0 0 
thread: 0, allBlocks[234]: 0 0 0 0 1 6 6 0 0 0 0 0 0 0 0 0 mySum: 13
thread: 0, blockNoZero[234]: 1 6 6 0 0 
copy the latest feasible solution to instance takes time: 0.101223
thread: 2, sOPT: 7
thread: 0, allBlocks[235]: 0 0 0 0 4 6 4 0 0 0 0 0 0 0 0 0 mySum: 14
thread: 0, blockNoZero[235]: 4 6 4 0 0 
thread: 0, allBlocks[236]: 0 0 0 0 2 6 6 0 0 0 0 0 0 0 0 0 mySum: 14
thread: 0, blockNoZero[236]: 2 6 6 0 0 
thread: 0, allBlocks[237]: 0 0 0 0 4 5 5 0 0 0 0 0 0 0 0 0 mySum: 14
thread: 0, blockNoZero[237]: 4 5 5 0 0 
thread: 0, allBlocks[238]: 0 0 0 0 4 4 6 0 0 0 0 0 0 0 0 0 mySum: 14
thread: 0, blockNoZero[238]: 4 4 6 0 0 
thread: 0, allBlocks[239]: 0 0 0 0 3 6 5 0 0 0 0 0 0 0 0 0 mySum: 14
thread: 0, blockNoZero[239]: 3 6 5 0 0 
thread: 0, allBlocks[240]: 0 0 0 0 3 5 6 0 0 0 0 0 0 0 0 0 mySum: 14
thread: 0, blockNoZero[240]: 3 5 6 0 0 
thread: 0, allBlocks[241]: 0 0 0 0 4 5 6 0 0 0 0 0 0 0 0 0 mySum: 15
thread: 0, blockNoZero[241]: 4 5 6 0 0 
thread: 0, allBlocks[242]: 0 0 0 0 3 6 6 0 0 0 0 0 0 0 0 0 mySum: 15
thread: 0, blockNoZero[242]: 3 6 6 0 0 
thread: 0, allBlocks[243]: 0 0 0 0 4 6 5 0 0 0 0 0 0 0 0 0 mySum: 15
thread: 0, blockNoZero[243]: 4 6 5 0 0 
thread: 0, allBlocks[244]: 0 0 0 0 4 6 6 0 0 0 0 0 0 0 0 0 mySum: 16
thread: 0, blockNoZero[244]: 4 6 6 0 0 
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 9
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.137437
thread: 1, sOPT: 9
copy the latest feasible solution to instance takes time: 0.06776
thread: 0, sOPT: 10
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: Thread: 1, MlBk function is done, and BkID for all processes are collected.
3, MlBk function is done, and BkID for all processes are collected.
2, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 30, UB: 33
BKID: 0, LB: 30, UB: 33, OPT: 10
Dynamic Programming Runtime: 1.52417
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 1
Iteration: 2, UB: 33, LB: 30start at time: 1505254719
thread: 0, MlBk is called with LB: 30, UB: 31
 thread: 0, LongJobs.size() 21
thread: thread: 2, MlBk is called with LB: 32, UB: 1, MlBk is called with LB: 3331, UB: 32

 thread: 2, LongJobs.size() 21
 thread: 1, LongJobs.size() 21
thread: 2, NSTable size: 20
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 6
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 6
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 5, maxN[i].idx: 0, blockDimSize[i]: 5
thread: 2, i: 1, maxN[i].weit: 7, maxN[i].idx: 1, blockDimSize[i]: 7
thread: 2, i: 2, maxN[i].weit: 7, maxN[i].idx: 2, blockDimSize[i]: 7
thread: 2, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 2, i: 4, maxN[i].weit: 4, maxN[i].idx: 4, blockDimSize[i]: 4
thread: 2, i: 0, divisor[i]: 5, blockDimSize[i]: 1
thread: 2, i: 1, divisor[i]: 7, blockDimSize[i]: 1
thread: 2, i: 2, divisor[i]: 7, blockDimSize[i]: 1
thread: 2, i: 3, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 4, divisor[i]: 1, blockDimSize[i]: 4
thread: 2, largestBlockVec.elm: 0 0 0 0 4 6 6 0 0 0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 0 1 1 1 3 4 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 5 7 7 1 1 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 4 6 6 0 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 4 6 6 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 3 1 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 3 0 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 3 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 2 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 1 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 3 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 3 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 0 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 1 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 1 3 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 3 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 2 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 4 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 1 2 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 3 0 2 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 0 3 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 2 2 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 3 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 4 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 3 2 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 3 1 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 5 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 4 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 5 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 3 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 3 2 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 4 1 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 4 0 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 5 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 3 2 1 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 3 3 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 3 0 3 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 4 1 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 0 4 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 3 3 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 3 1 2 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 2 4 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 4 2 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 4 0 2 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 3 2 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 4 2 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 1 3 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 2 3 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 5 1 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 5 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 2 2 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 1 4 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 3 1 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 4 1 1 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 4 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 6 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 0 5 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 4 1 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 3 0 4 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 5 1 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 2 3 2 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 4 3 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 3 4 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 2 1 4 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 2 5 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 2 2 3 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 2 0 5 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 6 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 2 5 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 6 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 4 0 3 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 6 1 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 0 6 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 4 1 2 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 1 5 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 5 2 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 2 4 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 3 4 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 4 2 1 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 3 3 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 4 2 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 3 1 3 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 3 2 2 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 3 3 1 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 4 3 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 3 5 0 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 2 3 3 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 3 0 5 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 4 0 4 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 3 1 4 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 4 3 1 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 2 4 2 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 4 1 3 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 3 2 3 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 2 5 1 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 3 4 1 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 4 4 0 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 4 2 2 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 3 3 2 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 2 6 0 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 1 2 5 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 5 3 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 1 6 1 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 4 4 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 1 5 2 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 6 2 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 2 0 6 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 3 5 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 2 6 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 1 4 3 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 2 1 5 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 1 3 4 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 2 2 4 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 1 1 6 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 4 0 5 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 3 4 2 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 1 2 6 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 3 0 6 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 5 4 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 1 5 3 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 3 5 1 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 3 1 5 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 3 2 4 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 3 3 3 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 6 3 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 1 4 4 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 1 3 5 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 3 6 0 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 4 1 4 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 2 3 4 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 2 2 5 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 2 4 3 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 4 5 0 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 4 4 1 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 2 1 6 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 2 5 2 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 4 3 2 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 2 6 1 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 1 6 2 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 4 2 3 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 4 5 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 3 6 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 4 4 2 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 2 3 5 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 4 6 0 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 4 5 1 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 4 1 5 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 3 5 2 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 4 6 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 5 5 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 4 0 6 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 3 6 1 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 6 4 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 4 3 3 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 4 2 4 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 1 5 4 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 3 1 6 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 2 2 6 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 2 4 4 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 3 3 4 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 1 4 5 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 3 2 5 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 2 5 3 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 1 3 6 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 1 6 3 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 2 6 2 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 3 4 3 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 2 5 4 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 0 5 6 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 1 5 5 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 4 1 6 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 2 6 3 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 4 2 5 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 1 6 4 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 4 3 4 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 2 4 5 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 4 4 3 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 4 6 1 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 4 5 2 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 2 3 6 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 3 2 6 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 3 4 4 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 3 3 5 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 3 5 3 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 1 4 6 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 3 6 2 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 0 6 5 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 4 4 4 0 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 0 6 6 0 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 3 5 4 0 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 2 4 6 0 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 4 6 2 0 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 4 3 5 0 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 1 5 6 0 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 3 3 6 0 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 2 5 5 0 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 1 6 5 0 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 4 2 6 0 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 3 6 3 0 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 3 4 5 0 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 2 6 4 0 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 4 5 3 0 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 3 4 6 0 0 0 0 0 0 0 0 0 , mySum: 13
0 0 0 0 4 4 5 0 0 0 0 0 0 0 0 0 , mySum: 13
0 0 0 0 4 5 4 0 0 0 0 0 0 0 0 0 , mySum: 13
0 0 0 0 4 3 6 0 0 0 0 0 0 0 0 0 , mySum: 13
0 0 0 0 3 5 5 0 0 0 0 0 0 0 0 0 , mySum: 13
0 0 0 0 2 5 6 0 0 0 0 0 0 0 0 0 , mySum: 13
0 0 0 0 3 6 4 0 0 0 0 0 0 0 0 0 , mySum: 13
0 0 0 0 2 6 5 0 0 0 0 0 0 0 0 0 , mySum: 13
0 0 0 0 4 6 3 0 0 0 0 0 0 0 0 0 , mySum: 13
0 0 0 0 1 6 6 0 0 0 0 0 0 0 0 0 , mySum: 13
0 0 0 0 4 6 4 0 0 0 0 0 0 0 0 0 , mySum: 14
0 0 0 0 2 6 6 0 0 0 0 0 0 0 0 0 , mySum: 14
0 0 0 0 4 5 5 0 0 0 0 0 0 0 0 0 , mySum: 14
0 0 0 0 4 4 6 0 0 0 0 0 0 0 0 0 , mySum: 14
0 0 0 0 3 6 5 0 0 0 0 0 0 0 0 0 , mySum: 14
0 0 0 0 3 5 6 0 0 0 0 0 0 0 0 0 , mySum: 14
0 0 0 0 4 5 6 0 0 0 0 0 0 0 0 0 , mySum: 15
0 0 0 0 3 6 6 0 0 0 0 0 0 0 0 0 , mySum: 15
0 0 0 0 4 6 5 0 0 0 0 0 0 0 0 0 , mySum: 15
0 0 0 0 4 6 6 0 0 0 0 0 0 0 0 0 , mySum: 16
thread: 2, maxBlockLvlSize: 29
thread: 2, maxInBlockLvlSize: 3
thread: 2, AllTableSize: 2940, maxSubsetsSize: 64
thread: 1, NSTable size: 35
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 5
thread: 1, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 1, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 1, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 1, i: 3, maxN[i].weit: 5, maxN[i].idx: 3, blockDimSize[i]: 5
thread: 1, i: 4, maxN[i].weit: 4, maxN[i].idx: 4, blockDimSize[i]: 4
thread: 1, i: 5, maxN[i].weit: 4, maxN[i].idx: 5, blockDimSize[i]: 4
thread: 1, i: 6, maxN[i].weit: 6, maxN[i].idx: 6, blockDimSize[i]: 6
thread: 1, i: 0, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 2, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 3, divisor[i]: 5, blockDimSize[i]: 1
thread: 1, i: 4, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, i: 5, divisor[i]: 1, blockDimSize[i]: 4
thread: 1, i: 6, divisor[i]: 2, blockDimSize[i]: 3
thread: 1, largestBlockVec.elm: 0 0 0 0 0 0 0 0 0 0 0 0 4 1 0 1 
thread: 1, blockDimSizeComp: 0 0 0 0 0 0 0 0 0 3 3 3 1 2 4 3 
thread: 1, divisorComp: 0 0 0 0 0 0 0 0 0 1 1 1 5 2 1 2 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 4 1 0 1 
thread: 1, largestNoZeroBlockVec: 0 0 0 4 1 0 1 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 2 1 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 2 1 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 3 1 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 3 1 0 1 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 1 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 4 1 0 0 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 4 1 0 1 , mySum: 6
thread: 0, NSTable size: 33
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 5
thread: 0, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 0, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 0, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 0, i: 3, maxN[i].weit: 5, maxN[i].idx: 3, blockDimSize[i]: 5
thread: 0, i: 4, maxN[i].weit: 4, maxN[i].idx: 4, blockDimSize[i]: 4
thread: 0, i: 5, maxN[i].weit: 4, maxN[i].idx: 5, blockDimSize[i]: 4
thread: 0, i: 6, maxN[i].weit: 6, maxN[i].idx: 6, blockDimSize[i]: 6
thread: 0, i: 0, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 2, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 3, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, i: 4, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 5, divisor[i]: 1, blockDimSize[i]: 4
thread: 0, i: 6, divisor[i]: 2, blockDimSize[i]: 3
thread: 0, largestBlockVec.elm: 0 0 0 0 0 0 0 0 0 0 0 0 4 1 0 1 
thread: 0, blockDimSizeComp: 0 0 0 0 0 0 0 0 0 3 3 3 1 2 4 3 
thread: 0, divisorComp: 0 0 0 0 0 0 0 0 0 1 1 1 5 2 1 2 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 4 1 0 1 
thread: 0, largestNoZeroBlockVec: 0 0 0 4 1 0 1 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 2 1 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 2 1 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 3 1 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 3 1 0 1 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 1 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 4 1 0 0 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 4 1 0 1 , mySum: 6
thread: 1, maxBlockLvlSize: 4
thread: 1, maxInBlockLvlSize: 122
thread: 1, AllTableSize: 12960, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 4
thread: 0, maxInBlockLvlSize: 122
thread: 0, AllTableSize: 12960, maxSubsetsSize: 64
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 
copy the latest feasible solution to instance takes time: 0.1531
thread: 2, sOPT: 10
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 0 0 1 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 0 1 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 mySum: 2
thread: 0, blockNoZero[4]: 0 0 0 0 1 0 1 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 mySum: 2
thread: 0, blockNoZero[5]: 0 0 0 1 0 0 1 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 0 0 1 1 0 0 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 0 0 0 2 0 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 0 0 0 0 0 2 1 0 0 mySum: 3
thread: 0, blockNoZero[8]: 0 0 0 2 1 0 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 mySum: 3
thread: 0, blockNoZero[9]: 0 0 0 3 0 0 0 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 1 mySum: 3
thread: 0, blockNoZero[10]: 0 0 0 2 0 0 1 
thread: 0, allBlocks[11]: 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 mySum: 3
thread: 0, blockNoZero[11]: 0 0 0 1 1 0 1 
thread: 0, allBlocks[12]: 0 0 0 0 0 0 0 0 0 0 0 0 2 1 0 1 mySum: 4
thread: 0, blockNoZero[12]: 0 0 0 2 1 0 1 
thread: 0, allBlocks[13]: 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 1 mySum: 4
thread: 0, blockNoZero[13]: 0 0 0 3 0 0 1 
thread: 0, allBlocks[14]: 0 0 0 0 0 0 0 0 0 0 0 0 3 1 0 0 mySum: 4
thread: 0, blockNoZero[14]: 0 0 0 3 1 0 0 
thread: 0, allBlocks[15]: 0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 mySum: 4
thread: 0, blockNoZero[15]: 0 0 0 4 0 0 0 
thread: 0, allBlocks[16]: 0 0 0 0 0 0 0 0 0 0 0 0 3 1 0 1 mySum: 5
thread: 0, blockNoZero[16]: 0 0 0 3 1 0 1 
thread: 0, allBlocks[17]: 0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 1 mySum: 5
thread: 0, blockNoZero[17]: 0 0 0 4 0 0 1 
thread: 0, allBlocks[18]: 0 0 0 0 0 0 0 0 0 0 0 0 4 1 0 0 mySum: 5
thread: 0, blockNoZero[18]: 0 0 0 4 1 0 0 
thread: 0, allBlocks[19]: 0 0 0 0 0 0 0 0 0 0 0 0 4 1 0 1 mySum: 6
thread: 0, blockNoZero[19]: 0 0 0 4 1 0 1 
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 4e-06
thread: 0, sOPT: 11
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.297153
thread: 1, sOPT: 10
BKID: 0, LB: 31, UB: 31, OPT: 10
Dynamic Programming Runtime: 7.93098
Execution time between LB and UB is: 4
By far, all LB UB calculation runtime: 5
********************************************************
Total execution on UB and LB is: 5
OUT of Bk while loop  
UB    31
LB    31
T1    31
T2    31
OPT   10
nMachines   10
BkID	0
AllProbData.size()    2
ck :   1
AllProbData[ck].Ttable    31
ck :   0
AllProbData[ck].Ttable    32
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan34
Main Scheduling is Done
File 1-8 is Done.
******************************
Reading File...
File 1-9 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 51, LB: 32start at time: 1505254723
thread: 0, MlBk is called with LB: 32, UB: 37
thread: 3, MlBk is called with LB: 47, UB: 52
 thread: 0, LongJobs.size() 21
thread: 1, MlBk is called with LB: 37, UB: 42
thread: 2, MlBk is called with LB: 42, UB: 47
 thread: 1, LongJobs.size() 21 thread: 
3, LongJobs.size() 16
 thread: 2, LongJobs.size() 17
thread: 3, NSTable size: 18
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 6
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 7
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 7, maxN[i].idx: 0, blockDimSize[i]: 7
thread: 3, i: 1, maxN[i].weit: 4, maxN[i].idx: 1, blockDimSize[i]: 4
thread: 3, i: 2, maxN[i].weit: 8, maxN[i].idx: 2, blockDimSize[i]: 8
thread: 3, i: 0, divisor[i]: 7, blockDimSize[i]: 1
thread: 3, i: 1, divisor[i]: 2, blockDimSize[i]: 2
thread: 3, i: 2, divisor[i]: 2, blockDimSize[i]: 4
thread: 3, largestBlockVec.elm: 0 0 0 6 1 1 0 0 0 0 0 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 1 2 4 0 0 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 7 2 2 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 6 1 1 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 6 1 1 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 3 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 3 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 2 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 3 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 4 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 4 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 5 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 4 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 5 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 5 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 6 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 5 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 6 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 6 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 6 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 8
thread: 3, maxBlockLvlSize: 4
thread: 3, maxInBlockLvlSize: 2
thread: 3, AllTableSize: 224, maxSubsetsSize: 64
thread: 2, NSTable size: 24
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 5
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 7
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 2, i: 1, maxN[i].weit: 6, maxN[i].idx: 1, blockDimSize[i]: 6
thread: 2, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 2, i: 3, maxN[i].weit: 8, maxN[i].idx: 3, blockDimSize[i]: 8
thread: 2, i: 0, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, i: 1, divisor[i]: 2, blockDimSize[i]: 3
thread: 2, i: 2, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 3, divisor[i]: 2, blockDimSize[i]: 4
thread: 2, largestBlockVec.elm: 0 0 0 0 0 1 1 0 1 0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 0 0 2 3 3 4 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 0 2 2 1 2 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 1 1 0 1 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 1 1 0 1 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 1 0 0 0 0 0 0 0 , mySum: 3
thread: 2, maxBlockLvlSize: 3
thread: 2, maxInBlockLvlSize: 16
thread: 2, AllTableSize: 576, maxSubsetsSize: 64
thread: 1, NSTable size: 31
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 5
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 7
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 5, maxN[i].idx: 0, blockDimSize[i]: 5
thread: 1, i: 1, maxN[i].weit: 4, maxN[i].idx: 1, blockDimSize[i]: 4
thread: 1, i: 2, maxN[i].weit: 6, maxN[i].idx: 2, blockDimSize[i]: 6
thread: 1, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 1, i: 4, maxN[i].weit: 8, maxN[i].idx: 4, blockDimSize[i]: 8
thread: 1, i: 0, divisor[i]: 5, blockDimSize[i]: 1
thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 4
thread: 1, i: 2, divisor[i]: 2, blockDimSize[i]: 3
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 4, divisor[i]: 2, blockDimSize[i]: 4
thread: 1, largestBlockVec.elm: 0 0 0 0 4 0 1 0 1 0 0 0 0 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 0 1 4 3 3 4 0 0 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 5 1 2 1 2 0 0 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 4 0 1 0 1 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 4 0 1 0 1 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 0 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 1 0 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 3 0 0 0 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 3 0 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 3 0 1 0 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 4 0 0 0 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 4 0 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 4 0 1 0 1 0 0 0 0 0 0 0 , mySum: 6
thread: 0, NSTable size: 23
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 5
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 7
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 0, maxN[i].weit: 5, maxN[i].idx: 0, blockDimSize[i]: 5
thread: 0, i: 1, maxN[i].weit: 4, maxN[i].idx: 1, blockDimSize[i]: 4
thread: 0, i: 2, maxN[i].weit: 6, maxN[i].idx: 2, blockDimSize[i]: 6
thread: 0, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 0, i: 4, maxN[i].weit: 8, maxN[i].idx: 4, blockDimSize[i]: 8
thread: 0, i: 0, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 4
thread: 0, i: 2, divisor[i]: 2, blockDimSize[i]: 3
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 4, divisor[i]: 2, blockDimSize[i]: 4
thread: 0, largestBlockVec.elm: 0 0 0 0 4 0 1 0 1 0 0 0 0 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 0 1 4 3 3 4 0 0 0 0 0 0 0 
thread: 0, divisorComp: 0 0 0 0 5 1 2 1 2 0 0 0 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 4 0 1 0 1 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 4 0 1 0 1 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 0 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 1 0 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 3 0 0 0 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 3 0 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 3 0 1 0 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 4 0 0 0 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 4 0 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 4 0 1 0 1 0 0 0 0 0 0 0 , mySum: 6
thread: 1, maxBlockLvlSize: 4
thread: 1, maxInBlockLvlSize: 28
thread: 1, AllTableSize: 2880, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 4
thread: 0, maxInBlockLvlSize: 28
thread: 0, AllTableSize: 2880, maxSubsetsSize: 64
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 6
copy the latest feasible solution to instance takes time: 0.015217
thread: 3, sOPT: 6
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 7
copy the latest feasible solution to instance takes time: 0.023218
thread: 2, sOPT: 7
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 1 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 1 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 1 0 1 
thread: 0, allBlocks[5]: 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 1 0 0 0 1 
thread: 0, allBlocks[6]: 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 1 0 1 0 0 
thread: 0, allBlocks[7]: 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 2 0 0 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[8]: 2 0 1 0 0 
thread: 0, allBlocks[9]: 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[9]: 3 0 0 0 0 
thread: 0, allBlocks[10]: 0 0 0 0 2 0 0 0 1 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 2 0 0 0 1 
thread: 0, allBlocks[11]: 0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 1 0 1 0 1 
thread: 0, allBlocks[12]: 0 0 0 0 2 0 1 0 1 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[12]: 2 0 1 0 1 
thread: 0, allBlocks[13]: 0 0 0 0 3 0 0 0 1 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[13]: 3 0 0 0 1 
thread: 0, allBlocks[14]: 0 0 0 0 3 0 1 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[14]: 3 0 1 0 0 
thread: 0, allBlocks[15]: 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[15]: 4 0 0 0 0 
thread: 0, allBlocks[16]: 0 0 0 0 3 0 1 0 1 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[16]: 3 0 1 0 1 
thread: 0, allBlocks[17]: 0 0 0 0 4 0 0 0 1 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[17]: 4 0 0 0 1 
thread: 0, allBlocks[18]: 0 0 0 0 4 0 1 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[18]: 4 0 1 0 0 
thread: 0, allBlocks[19]: 0 0 0 0 4 0 1 0 1 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[19]: 4 0 1 0 1 
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 9
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.12561
thread: 1, sOPT: 9
copy the latest feasible solution to instance takes time: 0.116947
thread: 0, sOPT: 10
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: Thread: 312, MlBk function is done, and BkID for all processes are collected., MlBk function is done, and BkID for all processes are collected., MlBk function is done, and BkID for all processes are collected.


sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 32, UB: 35
BKID: 0, LB: 32, UB: 35, OPT: 10
Dynamic Programming Runtime: 1.0445
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 1
Iteration: 2, UB: 35, LB: 32start at time: 1505254724
thread: 0, MlBk is called with LB: 32, UB: 33
 thread: 0, LongJobs.size() 21
thread: thread: 2, MlBk is called with LB: 341, MlBk is called with LB: , UB: 3335, UB: 34

 thread: 2, LongJobs.size() 21
 thread: 1, LongJobs.size() 21
thread: 2, NSTable size: 23
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 5
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 7
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 5, maxN[i].idx: 0, blockDimSize[i]: 5
thread: 2, i: 1, maxN[i].weit: 4, maxN[i].idx: 1, blockDimSize[i]: 4
thread: 2, i: 2, maxN[i].weit: 6, maxN[i].idx: 2, blockDimSize[i]: 6
thread: 2, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 2, i: 4, maxN[i].weit: 8, maxN[i].idx: 4, blockDimSize[i]: 8
thread: 2, i: 0, divisor[i]: 5, blockDimSize[i]: 1
thread: 2, i: 1, divisor[i]: 1, blockDimSize[i]: 4
thread: 2, i: 2, divisor[i]: 2, blockDimSize[i]: 3
thread: 2, i: 3, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 4, divisor[i]: 2, blockDimSize[i]: 4
thread: 2, largestBlockVec.elm: 0 0 0 0 4 0 1 0 1 0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 0 1 4 3 3 4 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 5 1 2 1 2 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 4 0 1 0 1 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 4 0 1 0 1 
thread: 1, NSTable size: 20
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 4
thread: 2, allBlocks: 0 0 0thread:  10, i:  5, alltableelemets[maxindex].elm[i]: 03
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 5
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 7
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread:  10 , i: 0 120 , alltableelemets[maxindex].elm[i]: 00 
0thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
 1 0 0thread:  01 , i: 0 00, maxN[i].weit:  5, maxN[i].idx: 00 , blockDimSize[i]: 05 
thread: 01 , i: 01 , maxN[i].weit: 04 , maxN[i].idx: 1, blockDimSize[i]: 04 , mySum: 
1thread: 1, i: 2, maxN[i].weit: 6, maxN[i].idx: 2, blockDimSize[i]: 6
thread: 
1, i: 3, maxN[i].weit: 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 1 0 03 0 0 , maxN[i].idx: 0 0 0 3, mySum: , blockDimSize[i]: 23

0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0thread: 1, i: 4, maxN[i].weit: 8, maxN[i].idx: 4, blockDimSize[i]: 8
thread: 1, i:  0 0 0 0, mySum: , divisor[i]: 25
, blockDimSize[i]: 0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 , mySum: 13
0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0
 , mySum: thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 4
thread: 1, i: 2, divisor[i]: 2, blockDimSize[i]: 3
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 4, divisor[i]: 2, blockDimSize[i]: 4
3thread: 1
, largestBlockVec.elm: 0 0 0 0 2 0 0 0 1 0 0 0 0 0 0 0 , mySum: 0 3
0 0 0 0 0 1 0 1 0 1 0 00  00  0 0 0 0 , mySum: 34
0 0 0 0 2 0 1 0 1 0 0 0 0 0 0 0  , mySum: 4
0 0 0 0 3 0 0 0 1 0 0 00  0 10  00  0 , mySum: 4
0 0 0 0 3 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 0 1 4 3 3 04 0  , mySum: 04 0
 0 0 0 0 4 0 0 0 0 00  00  00  0 0
 thread: 1, divisorComp: 0 0 0 0 5 1 2 1 2 0 00 0 0  00  00  0, mySum:  
4thread: 1, largestBlockVec: 0 0 0 0 4 0 1 0 1 0 0
 0 0 0 0 3 0 1 0 1 0 0 0 0 0 0 0 0, mySum: 5 
0 0 0 0 0 4 0 0 0 1 0 0 0 0 0 0 00 , mySum:  50 
0 0 0 0 0 4 0 1 0 0 0 0 0 0 0 
0 thread: 1, largestNoZeroBlockVec: 4 0 1 0 1 
0 , mySum: 5
0 0 0 0 4 0 1 0 1 0 0 0 0 0 0 0 , mySum: 6
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 0 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 1 0 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 3 0 0 0 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 3 0 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 3 0 1 0 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 4 0 0 0 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 4 0 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 4 0 1 0 1 0 0 0 0 0 0 0 , mySum: 6
thread: 0, NSTable size: 20
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 5
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 7
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 0, maxN[i].weit: 5, maxN[i].idx: 0, blockDimSize[i]: 5
thread: 0, i: 1, maxN[i].weit: 4, maxN[i].idx: 1, blockDimSize[i]: 4
thread: 0, i: 2, maxN[i].weit: 6, maxN[i].idx: 2, blockDimSize[i]: 6
thread: 0, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 0, i: 4, maxN[i].weit: 8, maxN[i].idx: 4, blockDimSize[i]: 8
thread: 0, i: 0, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 4
thread: 0, i: 2, divisor[i]: 2, blockDimSize[i]: 3
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 4, divisor[i]: 2, blockDimSize[i]: 4
thread: 0, largestBlockVec.elm: 0 0 0 0 4 0 1 0 1 0 0 0 0 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 0 1 4 3 3 4 0 0 0 0 0 0 0 
thread: 0, divisorComp: 0 0 0 0 5 1 2 1 2 0 0 0 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 4 0 1 0 1 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 4 0 1 0 1 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 0 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 1 0 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 3 0 0 0 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 3 0 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 3 0 1 0 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 4 0 0 0 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 4 0 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 4 0 1 0 1 0 0 0 0 0 0 0 , mySum: 6
thread: 2, maxBlockLvlSize: 4
thread: 2, maxInBlockLvlSize: 28
thread: 2, AllTableSize: 2880, maxSubsetsSize: 64
thread: 1, maxBlockLvlSize: 4
thread: 1, maxInBlockLvlSize: 28
thread: 1, AllTableSize: 2880, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 4
thread: 0, maxInBlockLvlSize: 28
thread: 0, AllTableSize: 2880, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 1 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 1 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 1 0 1 
thread: 0, allBlocks[5]: 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 1 0 0 0 1 
thread: 0, allBlocks[6]: 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 1 0 1 0 0 
thread: 0, allBlocks[7]: 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 2 0 0 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[8]: 2 0 1 0 0 
thread: 0, allBlocks[9]: 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[9]: 3 0 0 0 0 
thread: 0, allBlocks[10]: 0 0 0 0 2 0 0 0 1 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 2 0 0 0 1 
thread: 0, allBlocks[11]: 0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 1 0 1 0 1 
thread: 0, allBlocks[12]: 0 0 0 0 2 0 1 0 1 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[12]: 2 0 1 0 1 
thread: 0, allBlocks[13]: 0 0 0 0 3 0 0 0 1 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[13]: 3 0 0 0 1 
thread: 0, allBlocks[14]: 0 0 0 0 3 0 1 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[14]: 3 0 1 0 0 
thread: 0, allBlocks[15]: 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[15]: 4 0 0 0 0 
thread: 0, allBlocks[16]: 0 0 0 0 3 0 1 0 1 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[16]: 3 0 1 0 1 
thread: 0, allBlocks[17]: 0 0 0 0 4 0 0 0 1 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[17]: 4 0 0 0 1 
thread: 0, allBlocks[18]: 0 0 0 0 4 0 1 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[18]: 4 0 1 0 0 
thread: 0, allBlocks[19]: 0 0 0 0 4 0 1 0 1 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[19]: 4 0 1 0 1 
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
Thread: 0, gpu_BlockDP is done.
Thread: 2, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.208202
thread: 1, sOPT: 10
copy the latest feasible solution to instance takes time: 0.164295
thread: 0, sOPT: 10
copy the latest feasible solution to instance takes time: 0.187054
thread: 2, sOPT: 10
BKID: 0, LB: 32, UB: 32, OPT: 10
Dynamic Programming Runtime: 1.43393
Execution time between LB and UB is: 0
By far, all LB UB calculation runtime: 1
********************************************************
Total execution on UB and LB is: 1
OUT of Bk while loop  
UB    32
LB    32
T1    32
T2    32
OPT   10
nMachines   10
BkID	0
AllProbData.size()    2
ck :   1
AllProbData[ck].Ttable    32
ck :   0
AllProbData[ck].Ttable    34
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan34
Main Scheduling is Done
File 1-9 is Done.
******************************
Reading File...
File 1-10 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 51, LB: 32start at time: 1505254724
thread: 0, MlBk is called with LB: 32, UB: 37
thread: 3, MlBk is called with LB: 47, UB: 52
 thread: 0, LongJobs.size() 21
thread: 2, MlBk is called with LB: 42, UB: 47
 thread: 3, LongJobs.size() 18
thread: 1, MlBk is called with LB: 37, UB: 42
 thread: 2, LongJobs.size() 18
 thread: 1, LongJobs.size() 21
thread: 3, NSTable size: 18
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 4
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 11
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 5, maxN[i].idx: 0, blockDimSize[i]: 5
thread: 3, i: 1, maxN[i].weit: 12, maxN[i].idx: 1, blockDimSize[i]: 12
thread: 3, i: 2, maxN[i].weit: 4, maxN[i].idx: 2, blockDimSize[i]: 4
thread: 3, i: 0, divisor[i]: 5, blockDimSize[i]: 1
thread: 3, i: 1, divisor[i]: 3, blockDimSize[i]: 4
thread: 3, i: 2, divisor[i]: 2, blockDimSize[i]: 2
thread: 3, largestBlockVec.elm: 0 0 0 4 2 1 0 0 0 0 0 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 1 4 2 0 0 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 5 3 2 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 4 2 1 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 4 2 1 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 3 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 3 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 2 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 2 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 1 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 2 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 3 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 3 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 4 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 4 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 3 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 4 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 4 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 4 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 7
thread: 3, maxBlockLvlSize: 6
thread: 3, maxInBlockLvlSize: 2
thread: 3, AllTableSize: 240, maxSubsetsSize: 64
thread: 2, NSTable size: 23
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 7
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 6
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 2, i: 1, maxN[i].weit: 8, maxN[i].idx: 1, blockDimSize[i]: 8
thread: 2, i: 2, maxN[i].weit: 7, maxN[i].idx: 2, blockDimSize[i]: 7
thread: 2, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 2, i: 0, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 1, divisor[i]: 2, blockDimSize[i]: 4
thread: 2, i: 2, divisor[i]: 7, blockDimSize[i]: 1
thread: 2, i: 3, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, largestBlockVec.elm: 0 0 0 0 0 0 1 6 1 0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 0 0 3 4 1 2 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 0 1 2 7 2 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 1 6 1 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 1 6 1 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 2 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 3 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 4 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 3 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 5 1 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 1 5 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 6 1 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 1 5 1 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 1 6 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 1 6 1 0 0 0 0 0 0 0 , mySum: 8
thread: 2, maxBlockLvlSize: 4
thread: 2, maxInBlockLvlSize: 6
thread: 2, AllTableSize: 672, maxSubsetsSize: 64
thread: 1, NSTable size: 30
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 7
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 6
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 1, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 1, i: 2, maxN[i].weit: 8, maxN[i].idx: 2, blockDimSize[i]: 8
thread: 1, i: 3, maxN[i].weit: 7, maxN[i].idx: 3, blockDimSize[i]: 7
thread: 1, i: 4, maxN[i].weit: 4, maxN[i].idx: 4, blockDimSize[i]: 4
thread: 1, i: 0, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 2, divisor[i]: 2, blockDimSize[i]: 4
thread: 1, i: 3, divisor[i]: 7, blockDimSize[i]: 1
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 4
thread: 1, largestBlockVec.elm: 0 0 0 0 1 0 1 6 0 0 0 0 0 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 0 2 3 4 1 4 0 0 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 2 1 2 7 1 0 0 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 1 0 1 6 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 1 0 1 6 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 1 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 3 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 1 3 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 4 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 5 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 1 5 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 0 1 4 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 0 0 6 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 1 6 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 0 1 5 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 0 1 6 0 0 0 0 0 0 0 0 , mySum: 8
thread: 0, NSTable size: 23
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 7
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 6
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 0, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 0, i: 2, maxN[i].weit: 8, maxN[i].idx: 2, blockDimSize[i]: 8
thread: 0, i: 3, maxN[i].weit: 7, maxN[i].idx: 3, blockDimSize[i]: 7
thread: 0, i: 4, maxN[i].weit: 4, maxN[i].idx: 4, blockDimSize[i]: 4
thread: 0, i: 0, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 2, divisor[i]: 2, blockDimSize[i]: 4
thread: 0, i: 3, divisor[i]: 7, blockDimSize[i]: 1
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 4
thread: 0, largestBlockVec.elm: 0 0 0 0 1 0 1 6 0 0 0 0 0 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 0 2 3 4 1 4 0 0 0 0 0 0 0 
thread: 0, divisorComp: 0 0 0 0 2 1 2 7 1 0 0 0 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 1 0 1 6 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 1 0 1 6 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 1 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 3 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 1 3 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 4 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 5 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 1 5 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 0 1 4 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 0 0 6 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 1 6 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 0 1 5 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 0 1 6 0 0 0 0 0 0 0 0 , mySum: 8
thread: 1, maxBlockLvlSize: 4
thread: 1, maxInBlockLvlSize: 19
thread: 1, AllTableSize: 2688, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 4
thread: 0, maxInBlockLvlSize: 19
thread: 0, AllTableSize: 2688, maxSubsetsSize: 64
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 6
copy the latest feasible solution to instance takes time: 0.015558
thread: 3, sOPT: 6
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 1 0 
thread: 0, allBlocks[2]: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 1 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 1 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 1 1 0 
thread: 0, allBlocks[5]: 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 1 0 1 0 0 
Thread: 2, gpu_BlockDP is done.
thread: 0, allBlocks[6]: 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 0 0 2 0 
thread: 0, allBlocks[7]: 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 1 0 0 1 0 
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 7
copy the latest feasible solution to instance takes time: 0.03528
thread: 2, sOPT: 7
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[8]: 0 0 0 3 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[9]: 0 0 1 2 0 
thread: 0, allBlocks[10]: 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 1 0 1 1 0 
thread: 0, allBlocks[11]: 0 0 0 0 1 0 0 2 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 1 0 0 2 0 
thread: 0, allBlocks[12]: 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[12]: 0 0 0 4 0 
thread: 0, allBlocks[13]: 0 0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[13]: 0 0 1 3 0 
thread: 0, allBlocks[14]: 0 0 0 0 1 0 1 2 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[14]: 1 0 1 2 0 
thread: 0, allBlocks[15]: 0 0 0 0 1 0 0 3 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[15]: 1 0 0 3 0 
thread: 0, allBlocks[16]: 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[16]: 0 0 0 5 0 
thread: 0, allBlocks[17]: 0 0 0 0 1 0 1 3 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[17]: 1 0 1 3 0 
thread: 0, allBlocks[18]: 0 0 0 0 1 0 0 4 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[18]: 1 0 0 4 0 
thread: 0, allBlocks[19]: 0 0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[19]: 0 0 1 4 0 
thread: 0, allBlocks[20]: 0 0 0 0 1 0 0 5 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[20]: 1 0 0 5 0 
thread: 0, allBlocks[21]: 0 0 0 0 0 0 1 5 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[21]: 0 0 1 5 0 
thread: 0, allBlocks[22]: 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[22]: 0 0 0 6 0 
thread: 0, allBlocks[23]: 0 0 0 0 1 0 1 4 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[23]: 1 0 1 4 0 
thread: 0, allBlocks[24]: 0 0 0 0 1 0 0 6 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[24]: 1 0 0 6 0 
thread: 0, allBlocks[25]: 0 0 0 0 0 0 1 6 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[25]: 0 0 1 6 0 
thread: 0, allBlocks[26]: 0 0 0 0 1 0 1 5 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[26]: 1 0 1 5 0 
thread: 0, allBlocks[27]: 0 0 0 0 1 0 1 6 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[27]: 1 0 1 6 0 
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 9
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.123015
thread: 1, sOPT: 9
copy the latest feasible solution to instance takes time: 0.096675
thread: 0, sOPT: 10
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 1, MlBk function is done, and BkID for all processes are collected.3
, MlBk function is done, and BkID for all processes are collected.
Thread: 2, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 32, UB: 35
BKID: 0, LB: 32, UB: 35, OPT: 10
Dynamic Programming Runtime: 0.964932
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 1
Iteration: 2, UB: 35, LB: 32start at time: 1505254725
thread: 0, MlBk is called with LB: 32, UB: 33
 thread: 0, LongJobs.size() 21
thread: thread: 1, MlBk is called with LB: 332, MlBk is called with LB: , UB: 3434, UB: 35

 thread: 2, LongJobs.size() 21
 thread: 1, LongJobs.size() 21
thread: 2, NSTable size: 23
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 7
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 6
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 2, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 2, i: 2, maxN[i].weit: 8, maxN[i].idx: 2, blockDimSize[i]: 8
thread: 2, i: 3, maxN[i].weit: 7, maxN[i].idx: 3, blockDimSize[i]: 7
thread: 2, i: 4, maxN[i].weit: 4, maxN[i].idx: 4, blockDimSize[i]: 4
thread: 2, i: 0, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, i: 1, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 2, divisor[i]: 2, blockDimSize[i]: 4
thread: 2, i: 3, divisor[i]: 7, blockDimSize[i]: 1
thread: 2, i: 4, divisor[i]: 1, blockDimSize[i]: 4
thread: 2, largestBlockVec.elm: 0 0 0 0 1 0 1 6 0 0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 0 2 3 4 1thread:  14 0 0 0 , NSTable size: 020 0 0 
0thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 2
 
thread: 2, divisorComp: 0 0 0 0 thread: 21, i:  16 , alltableelemets[maxindex].elm[i]: 27
 thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 6
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 7 1 0 04 , maxN[i].idx: 00, blockDimSize[i]:  40
thread: 1, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
 0 0 0thread:  1, i: 
2thread: 2, largestBlockVec: 0 0 0 0 1 0 1 6 0 0, maxN[i].weit: 8, maxN[i].idx: 2, blockDimSize[i]: 8
thread: 1, i: 3, maxN[i].weit: 7, maxN[i].idx: 3, blockDimSize[i]: 7
 thread: 1, i: 4, maxN[i].weit: 04 0 , maxN[i].idx: 0 40 0, blockDimSize[i]:  40
 thread: 1, i: 0, divisor[i]: 2
, blockDimSize[i]: 2
thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 2, divisor[i]: 2, blockDimSize[i]: 4
thread: 1, i: 3, divisor[i]: 7, blockDimSize[i]: 1
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 4
thread: 1, largestBlockVec.elm: thread: 02 , largestNoZeroBlockVec: 1 00  1 6 00  
0 1 0 1 6 0 0 0 0 0 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 0 2 3 4 1 4 0 0 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 2 1 2 7 1 0 0 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 1 0 1 6 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 1 0 1 6 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0thread: 1 , allBlocks: 00  00 0  0 04  00  0 00  0 00 0  00  00 0  0 0 00  0 00  , mySum: , mySum: 04
0 0 0 0 0 0 1 3 0 0 0 0 0
 0 0 0 0 0 0 0 0 1 0 0 0 0 00 0  0 00  , mySum: , mySum: 41

0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 2 0 0 0 0 0 00  00  00  , mySum: 1, mySum: 
40 0 0 0 0 0 1 0 0 0 0 0 0 0
 0 0 0 0 1 0 0 3 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 5 0 0 00  00  , mySum: 0 0 10 0
 , mySum: 50 0 0 0 0 0 1 1 0 0 0 0 0 
00 0 0 0 1 0 1 3 0 0 0 0 0 0 0  0 , mySum: 05
0 0 0 0 1 0 0 4 0  00 , mySum:  2
00 0 0 0 1 0 1 0 0 0 0 0 0 0 0  0 0 0 0 0 0, mySum:  5, mySum: 
0 0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 , mySum: 5
0 0 02 0 1 0 0
 0 0 0 0 0 0 0 2 0 0 0 0 0 0 05 0  , mySum: 02 
00 0 0 0 1 0 0 1 0 0 0 0 0 0 0  0 , mySum: 20
 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 00 , mySum:  30 
00 0 0 0 0 0 1 2 0 0 0 0 0 0  0 0 , mySum: 6
0 0 0 0 0 0 1 5 0 0 0 0 0 0 0 0 , mySum: 6
00 0  0 0 00  0, mySum:  03 
0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 06 0 0 0 0  0 , mySum: 30
0 0 0 0 1 0 0 2 0 0 0 0 0 0 0  0 0 , mySum: 6
0 0 0 0 1 0 1 4 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 0 0 6 0 0 0 00 , mySum: 3
0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0  , mySum: 07 
, mySum: 0 0 0 0 0 0 1 6 0 0 0 0 0 0 0 0 , mySum: 7
40 0 0 0 
10 0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 1 5 0  00 , mySum:  40
 00 0 0 0 1 0 1 2 0 0 0 0 0 0 0  0 0 0 0 , mySum: 7
00 0 0 0 1 0 1 6 0 0 0 0 0  0 0, mySum:  0 , mySum: 48

0 0 0 0 1 0 0 3 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 1 3 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 4 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 5 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 1 5 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 0 1 4 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 0 0 6 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 1 6 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 0 1 5 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 0 1 6 0 0 0 0 0 0 0 0 , mySum: 8
thread: 0, NSTable size: 20
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 7
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 6
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 0, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 0, i: 2, maxN[i].weit: 8, maxN[i].idx: 2, blockDimSize[i]: 8
thread: 0, i: 3, maxN[i].weit: 7, maxN[i].idx: 3, blockDimSize[i]: 7
thread: 0, i: 4, maxN[i].weit: 4, maxN[i].idx: 4, blockDimSize[i]: 4
thread: 0, i: 0, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 2, divisor[i]: 2, blockDimSize[i]: 4
thread: 0, i: 3, divisor[i]: 7, blockDimSize[i]: 1
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 4
thread: 0, largestBlockVec.elm: 0 0 0 0 1 0 1 6 0 0 0 0 0 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 0 2 3 4 1 4 0 0 0 0 0 0 0 
thread: 0, divisorComp: 0 0 0 0 2 1 2 7 1 0 0 0 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 1 0 1 6 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 1 0 1 6 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 1 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 3 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 1 3 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 4 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 5 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 1 5 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 0 1 4 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 0 0 6 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 1 6 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 0 1 5 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 0 1 6 0 0 0 0 0 0 0 0 , mySum: 8
thread: 2, maxBlockLvlSize: 4
thread: 2, maxInBlockLvlSize: 19
thread: 2, AllTableSize: 2688, maxSubsetsSize: 64
thread: 1, maxBlockLvlSize: 4
thread: 1, maxInBlockLvlSize: 19
thread: 1, AllTableSize: 2688, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 4
thread: 0, maxInBlockLvlSize: 19
thread: 0, AllTableSize: 2688, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 1 0 
thread: 0, allBlocks[2]: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 1 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 1 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 1 1 0 
thread: 0, allBlocks[5]: 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 1 0 1 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 0 0 2 0 
thread: 0, allBlocks[7]: 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 1 0 0 1 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[8]: 0 0 0 3 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[9]: 0 0 1 2 0 
thread: 0, allBlocks[10]: 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 1 0 1 1 0 
thread: 0, allBlocks[11]: 0 0 0 0 1 0 0 2 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 1 0 0 2 0 
thread: 0, allBlocks[12]: 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[12]: 0 0 0 4 0 
thread: 0, allBlocks[13]: 0 0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[13]: 0 0 1 3 0 
thread: 0, allBlocks[14]: 0 0 0 0 1 0 1 2 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[14]: 1 0 1 2 0 
thread: 0, allBlocks[15]: 0 0 0 0 1 0 0 3 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[15]: 1 0 0 3 0 
thread: 0, allBlocks[16]: 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[16]: 0 0 0 5 0 
thread: 0, allBlocks[17]: 0 0 0 0 1 0 1 3 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[17]: 1 0 1 3 0 
thread: 0, allBlocks[18]: 0 0 0 0 1 0 0 4 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[18]: 1 0 0 4 0 
thread: 0, allBlocks[19]: 0 0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[19]: 0 0 1 4 0 
thread: 0, allBlocks[20]: 0 0 0 0 1 0 0 5 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[20]: 1 0 0 5 0 
thread: 0, allBlocks[21]: 0 0 0 0 0 0 1 5 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[21]: 0 0 1 5 0 
thread: 0, allBlocks[22]: 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[22]: 0 0 0 6 0 
thread: 0, allBlocks[23]: 0 0 0 0 1 0 1 4 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[23]: 1 0 1 4 0 
thread: 0, allBlocks[24]: 0 0 0 0 1 0 0 6 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[24]: 1 0 0 6 0 
thread: 0, allBlocks[25]: 0 0 0 0 0 0 1 6 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[25]: 0 0 1 6 0 
thread: 0, allBlocks[26]: 0 0 0 0 1 0 1 5 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[26]: 1 0 1 5 0 
thread: 0, allBlocks[27]: 0 0 0 0 1 0 1 6 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[27]: 1 0 1 6 0 
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.138976
thread: 1, sOPT: 10
copy the latest feasible solution to instance takes time: 0.184178
thread: 2, sOPT: 10
copy the latest feasible solution to instance takes time: 0.186183
thread: 0, sOPT: 10
BKID: 0, LB: 32, UB: 32, OPT: 10
Dynamic Programming Runtime: 1.22206
Execution time between LB and UB is: 0
By far, all LB UB calculation runtime: 1
********************************************************
Total execution on UB and LB is: 1
OUT of Bk while loop  
UB    32
LB    32
T1    32
T2    32
OPT   10
nMachines   10
BkID	0
AllProbData.size()    2
ck :   1
AllProbData[ck].Ttable    32
ck :   0
AllProbData[ck].Ttable    34
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan34
Main Scheduling is Done
File 1-10 is Done.
******************************
Reading File...
File 1-11 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 48, LB: 29start at time: 1505254726
thread: 0, MlBk is called with LB: 29, UB: 34
thread: 3, MlBk is called with LB: 44, UB: 49
 thread: 0, LongJobs.size() 21
thread:  thread: 3, LongJobs.size() 1, MlBk is called with LB: 34, UB: 1639
thread: 2, MlBk is called with LB: 39, UB: 44

 thread: 2, LongJobs.size() 18
 thread: 1, LongJobs.size() 21
thread: 2, NSTable size: 34
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 6
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 2, i: 1, maxN[i].weit: 7, maxN[i].idx: 1, blockDimSize[i]: 7
thread: 2, i: 2, maxN[i].weit: 5, maxN[i].idx: 2, blockDimSize[i]: 5
thread: 2, i: 3, maxN[i].weit: 5, maxN[i].idx: 3, blockDimSize[i]: 5
thread: 2, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 2, i: 0, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 1, divisor[i]: 7, blockDimSize[i]: 1
thread: 2, i: 2, divisor[i]: 5, blockDimSize[i]: 1
thread: 2, i: 3, divisor[i]: 5, blockDimSize[i]: 1
thread: 2, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, largestBlockVec.elm: 0 0 0 0 0 6 4 4 0 0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 0 3 1 1 1 3 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 1 7 5 5 1 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 6 4 4 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 6 4 4 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 3 0 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 2 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 1 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 0 3 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 3 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 3 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 0 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 1 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 2 2 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 5 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 0 3 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 4 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 4 0 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 1 2 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 3 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 3 0 2 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 3 2 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 1 3 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 2 3 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 0 4 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 3 1 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 2 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 4 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 3 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 3 2 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 3 1 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 4 1 1 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 4 2 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 2 4 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 4 0 2 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 3 0 3 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 3 1 2 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 3 3 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 3 2 1 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 2 2 2 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 6 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 1 4 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 2 3 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 4 2 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 3 2 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 5 1 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 3 3 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 5 0 1 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 2 0 4 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 2 1 3 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 2 4 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 6 1 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 3 3 1 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 4 2 1 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 6 0 1 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 3 2 2 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 3 4 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 5 2 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 5 1 1 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 5 0 2 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 4 0 3 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 4 1 2 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 4 3 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 4 3 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 4 2 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 3 1 3 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 3 3 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 2 3 2 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 3 0 4 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 2 4 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 2 2 3 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 3 4 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 2 4 1 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 2 1 4 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 5 3 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 2 2 4 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 4 2 2 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 0 4 4 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 4 3 1 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 1 3 4 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 4 4 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 5 2 1 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 5 1 2 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 1 4 3 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 5 0 3 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 2 3 3 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 6 0 2 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 4 0 4 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 4 1 3 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 2 4 2 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 3 2 3 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 3 1 4 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 6 1 1 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 3 3 2 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 6 2 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 3 4 1 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 3 2 4 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 6 3 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 6 2 1 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 5 1 3 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 6 1 2 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 5 2 2 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 5 3 1 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 6 0 3 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 5 4 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 1 4 4 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 3 3 3 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 3 4 2 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 2 4 3 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 2 3 4 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 4 1 4 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 4 2 3 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 4 3 2 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 4 4 1 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 5 0 4 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 6 1 3 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 3 4 3 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 3 3 4 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 2 4 4 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 6 0 4 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 6 2 2 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 5 1 4 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 4 4 2 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 6 3 1 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 5 4 1 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 4 2 4 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 6 4 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 5 3 2 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 4 3 3 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 5 2 3 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 6 2 3 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 0 6 3 2 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 0 6 4 1 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 0 5 2 4 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 0 6 1 4 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 0 3 4 4 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 0 4 4 3 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 0 5 4 2 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 0 5 3 3 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 0 4 3 4 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 0 4 4 4 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 0 6 2 4 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 0 5 4 3 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 0 5 3 4 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 0 6 3 3 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 0 6 4 2 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 0 5 4 4 0 0 0 0 0 0 0 0 , mySum: 13
0 0 0 0 0 6 3 4 0 0 0 0 0 0 0 0 , mySum: 13
0 0 0 0 0 6 4 3 0 0 0 0 0 0 0 0 , mySum: 13
0 0 0 0 0 6 4 4 0 0 0 0 0 0 0 0 , mySum: 14
thread: 2, maxBlockLvlSize: 23
thread: 2, maxInBlockLvlSize: 3
thread: 2, AllTableSize: 1575, maxSubsetsSize: 64
thread: 3, NSTable size: 27
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 6
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 4
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 4
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 7, maxN[i].idx: 0, blockDimSize[i]: 7
thread: 3, i: 1, maxN[i].weit: 5, maxN[i].idx: 1, blockDimSize[i]: 5
thread: 3, i: 2, maxN[i].weit: 5, maxN[i].idx: 2, blockDimSize[i]: 5
thread: 3, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 3, i: 0, divisor[i]: 7, blockDimSize[i]: 1
thread: 3, i: 1, divisor[i]: 5, blockDimSize[i]: 1
thread: 3, i: 2, divisor[i]: 5, blockDimSize[i]: 1
thread: 3, i: 3, divisor[i]: 1, blockDimSize[i]: 3
thread: 3, largestBlockVec.elm: 0 0 0 0 0 6 4 4 0 0 0 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 0 0 1 1 1 3 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 0 0 7 5 5 1 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 6 4 4 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 6 4 4 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 3 0 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 2 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 1 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 0 3 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 3 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 3 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 0 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 1 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 2 2 0 0 0 0 0 0 0 0 , mySum: 5
thread: 0 0 0 10 , NSTable size: 027 
5thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 5
 thread: 0 10, i:  5, alltableelemets[maxindex].elm[i]: 06 0
 thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 0 3 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 4 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 4 0 0 0 0 0 0 0 60 , maxN[i].idx: 0 , mySum: 05
0 0 0 0 0 4 0 1 0 0 0 0 0 0, blockDimSize[i]: 6
 thread: 1, i: 01 , maxN[i].weit: 07 , maxN[i].idx: , mySum: 15, blockDimSize[i]: 7

0 0 0 0 0 2 1 2 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 4 0 0 0 0thread:  1, i: 02 , maxN[i].weit: 50, maxN[i].idx:  20, blockDimSize[i]:  5
0thread: 1, i: 3, maxN[i].weit: 5, maxN[i].idx: 3, blockDimSize[i]: 5
thread: 1, i: 4, maxN[i].weit: 3 , mySum: 5
0 0 0 0 0 1 3 1 0 0 0 0 0 0 , maxN[i].idx: 0 0 4, mySum: 5
, blockDimSize[i]: 30 0 0 0 0 3 0 2 0 0 0
 0thread: 1, i:  00 0 , divisor[i]: 20, blockDimSize[i]:  30 , mySum: 
5
thread: 1, i: 1, divisor[i]: 7, blockDimSize[i]: 1
thread: 1, i: 2, divisor[i]: 5, blockDimSize[i]: 1
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 5
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, largestBlockVec.elm: 0 0 00  0 0 0 3 20 0  0 0 0 0 00 0  0 0, mySum: 5 
0 0 0 0 0 1 1 3 0 0 01  0 0 60  0 0 4, mySum: 5 
0 0 0 0 0 0 2 3 0 0 00  0 0 0 00  00  0, mySum:  50
0 0 0 0 0 1 0 4 0 0 0 0 0 0  0 0 0 0 0
 0thread: 1, blockDimSizeComp: 0 0 0 0 3  1 , mySum: 1 55
0 0 0 0 0 3 1 1 0 0 0 0 0 0 3 0 0 0  00  00  0, mySum:  0 5
thread: 1, divisorComp: 0 0 0 0 2 7 
50 0 0 0 0 2 2 1 0 0 0 0 0 0  0 1 01  0, mySum: 5 
00 0 0 0 0 0 4 1 0 0 0 0  0 0 0 00 0  0 00  
, mySum: 5
thread: 1, largestBlockVec: 0 0 0 0 1 60 0 0 0 0 2 3 0 0 0 0  4 0 0 0 00 0  0 00  00  0, mySum:  0 50 

thread: 1, largestNoZeroBlockVec: 1 6 4 0 0 0 0 0 0 0 3 2 0 0 0 0 0 
0 0 0 0 , mySum: 5
0 0 0 0 0 2 3 1 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 4 1 1 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 4 2 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 2 4 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 4 0 2 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 3 0 3 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 3 1 2 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 3 3 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 3 2 1 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 2 2 2 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 6 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 1 4 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 2 3 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 4 2 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 3 2 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 5 1 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 3 3 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 5 0 1 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 2 0 4 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 2 1 3 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 2 4 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 6 1 0thread:  0 10, allBlocks:  00  0 00  00  00 0  0 , mySum: 07 0
 00 0 0 0 0 3 3 1 0 0 0 0 0 0 0 0 0 0 0 0  0 0, mySum:  70 
00 0 0 0 0 4 2 1 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0  0 0 00  0 0, mySum:  70 0
 00 0 0 0 0 6 0 1 0 0 0 0 0 0 0 0  , mySum: , mySum: 7
0 0 0 0 0 3 2 2 0 0 0 0 0 1
0 0 0 0 1 0 0 0 0 0 0 00  00  00 , mySum: 7 
0 0 0 0 0 0 3 4 0 0 0 0 0 0 00 0 , mySum:  10
 , mySum: 0 0 0 0 0 1 0 0 0 0 70 0 0
 0 0 0 0 0 0 5 2 0 0 0 0 0 0 00 0 , mySum: 1
 0 0 0 0 0 1 1 0 0 0 00 0 0  0 00 0  , mySum: 7, mySum: 
2
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 5 1 1 0 0 0 0 00 0  00  00  , mySum: 07
0 0 0 0 0 5 0 2 0 0 0 0 0 0  0 00  , mySum: 2, mySum: 
70 0 0 0 0 2 0 0 0 0 0 0 
0 0 0 0 0 0 4 0 3 0 0 0 0 00  00  00  0 , mySum: , mySum: 7
20 0 0 0 0 4 1 2 0 0 0 0 0
 0 0 0 0 0 1 0 1 0 0 00  00  0 , mySum: 0 70
 0 0 0 0 0 4 3 0 0 0 0 0 0 00 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0  0 0 , mySum: 7
0 0 0 0 0 0 4 3 0 0 0 0 00 0 0 0 0  0 , mySum: 20
 0 0 0 0 0 0 3 0 0 0 0 00  00  , mySum: 0 70
 00 0 0 0 0 1 4 2 0 0 0 0 0  , mySum: 3
0 0 0 0 1 2 0 0 0 0 00 0  00  0 0, mySum: 7 
0 0 0 0 0 3 1 3 0 0 0 0 0 00 0 , mySum: 3
0 0 0 0 1 1 1 0 0 0 0  0 00  00  , mySum: 0 07 , mySum: 3

0 0 0 0 1 0 2 0 0 00 0 0 0 0 1 3 3 0 0 0 0 0 0 0 0 0  0 00  , mySum: 03
 00 0 0 0 0 3 0 0 0 0  , mySum: 7
0 0 0 0 0 2 3 2 00  0 0 00  00 0  0 00 , mySum: 3 
0 0 0 0 0 2 1 0 0 0 0 00 0  0 00  , mySum: 70
 , mySum: 3
0 0 0 0 0 1 2 0 0 00 0 0 0 0 3 0 4 0 0 0  0 0 0 00  00 0  0 , mySum: 07
 00 0 0 0 0 1 2 4 0 0 0 0 0 0  0, mySum:  30
 0 0 0 0 0 2 2 0 0 0 , mySum: 7
0 0 0 0 0 2 2 3 0 0 0 0 0 0 0 0 0 00 0 0  , mySum: 40
0 0 0 0 0 3 1 0 0 0 0  0 , mySum: 0 0 07 
0 , mySum: 40 0 0 0 0 0 3 4 0 0 0 0 0 0 
0 0 0 0 0 1 3 0 0 0 0 , mySum: 7
0 0 0 0 0 2 4 1 0 0 0 0 0 0 0 0 00  00  0 0, mySum: 7
 0 0 0 0 0 2 1 4 0 0 0 00 0  0, mySum:  04 0 
, mySum: 0 0 0 0 0 4 0 0 0 0 07 0 0 0
 0 0 0 0 0 0 5 3 0 0 0 0 0 0 0 00 0  , mySum: 8, mySum: 
4
0 0 0 0 0 2 2 4 0 0 0 0 0 0 0 0 0 1 2 1 0 00 0  0 00  0 , mySum: 08
0 0 0 0 0 4 2 2 0 0 0 0 0 0 0  0 , mySum: 08 0
 0 0 0 0 0 0 4 4 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 4 0 0 00 0 0  0 0 00 0  , mySum: 40
 0 0 0 0 1 0 3 0 0 0 0, mySum:  08 0
 0 0 0 0 0 0 4 3 1 0 0 0 0 0 00 0  0 , mySum: 80 
, mySum: 40 0 0 0 0 1 3 4 0 0 0 0 0
 0 0 0 0 1 1 2 0 0 0 00 0  00  0 , mySum: 08
0 0 0 0 0 4 4 0 0 0 0 0 0 0  0 00 , mySum: 8 
00 0 0 0 0 5 2 1 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 3 0 0 0  0 0 00  0 00  0 , mySum: 08
0 0 0 0 0 5 1 2 0 0 0 0 0 0  , mySum: 4
0 0 0 0 1 1 3 0 0 0 0 00  00  , mySum: 0 80
0 0 0 0 0 1 4 3 0 0 0 0 0 0 0  0 , mySum: 08 , mySum: 5

0 0 0 0 0 5 0 3 0 0 0 0 0 0 0 0 0 0 1 4 0 0 0 0 0 , mySum: 80
 0 0 0 0 0 0 2 3 3 0 0 0 0 0 0 0 0 0 0 , mySum: 05 0 
00 0 0 0 1 0 4 0 0 0 , mySum: 8
0 0 0 0 0 6 0 2 0 0 0 0 0  0 0 0 0 00  00 , mySum:  50
 0 0 0 0 0 2 3 0 0 0 , mySum: 0 0 80
 0 0 0 0 0 4 0 4 0 0 0 0 0 0 0 00 , mySum:  8
0 0 0 0 0 4 1 3 0 0 0 0 00 0 , mySum: 5
0 0 0 0 1 2 2 0 0 0  0 00 0  00 0  00  , mySum: 8, mySum: 
0 0 0 0 0 2 4 2 0 0 0 0 0 0 50 0 , mySum: 
80 0 0 0 1 3 1 0 0 0 0
 0 0 0 0 0 3 2 3 0 0 0 0 0 00 0  0 0, mySum:  8
0 0 0 0 0 3 1 4 0 0 0 0 0 0 00 0 , mySum:  8
0 0 0 0 0 6 1 1 0 0 0 0 0 0 00  00  , mySum: 8
, mySum: 0 0 0 0 0 3 3 2 0 0 0 0 05 0 0 0 
, mySum: 8
0 0 0 0 0 6 2 0 0 0 0 0 0 0 0 0 0 1 4 0 0 0 00 0  00  0 00  , mySum: 08 0 
, mySum: 0 0 0 0 0 3 4 1 0 0 0 0 0 05
0 0 0 0 0 3 2 0 0 0 0  0 00  00 0  0, mySum:  8, mySum: 5

0 0 0 0 0 4 1 0 0 00 0 0 0 0 3 2 4 0 0 0 0 0 0 0 0 0  00  0, mySum: 5 
00 0 0 0 0 5 0 0 0 0  0 00 , mySum: 9 
00 0 0 0 0 6 3 0 0 0 0 0 0 0 0  0 , mySum: 09 0 
0 , mySum: 0 0 0 0 0 6 2 1 0 0 0 0 0 50 0 0 
, mySum: 0 0 0 0 1 1 4 0 0 0 0 90 0
0 0 0 0 0 5 1 3 0 0 0 0 0 0 0  0 0, mySum:  90 
0 0 0 0 0 0 6 1 2 0 0 0 0 0 , mySum: 6
0 0 0 0 0 2 4 0 0 0 0 00  00  0 00  , mySum: 90
 0 0 0 0 0 5 2 2 0 0 0 0 0 0 0, mySum:  0 , mySum: 69
0 0 0 0 0 5 3 1 0 0 0 0 0 
0 0 0 0 0 1 4 1 0 0 0 00  00  , mySum: 09 
0 0 0 0 0 0 6 0 3 0 0 0 0 0 0 0 , mySum: 6
00 0 0 0 1 3 2 0 0 0 0  0 00  0 0 0, mySum: 9
 0 0 0 0 0 5 4 0 0 0 0 0 0 0 00 0 , mySum:  9, mySum: 
0 0 0 0 0 1 4 4 0 0 0 0 06 0 0 0 , mySum: 
9
0 0 0 0 0 3 3 3 0 0 0 0 0 0 0 0 0 0 3 3 0 00 0 0 , mySum: 9
 0 0 0 0 0 3 4 2 0 0 0 0 00 0 0 0 0  00  0 00 , mySum:  6
, mySum: 90 0 0 0 1 2 3 0 0 0
 0 0 0 0 0 2 4 3 0 0 0 0 0 0 00 0  00  , mySum: 60
 00 0 0 0 0 4 2 0 0 0 0  0 00  0, mySum:  9
00 0 0 0 0 2 3 4 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 5 1 0 0 0  0 00  00  , mySum: 0 90 0
 , mySum: 60 0 0 0 0 4 1 4 0 0 0 0 0 0 0
 0 0 0 0 0 6 0 0 0 0 00  0 , mySum: 09 
0 0 0 0 0 4 2 3 0 0 0 0 0 0 0 0 0 , mySum: 60
 00 0 0 0 1 5 0 0 0 0  0 , mySum: 09 
0 0 0 0 , mySum: 6
0 0 0 0 1 4 2 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 4 3 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 5 2 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 3 4 0 00  00 0  0 00  0 00  04 0  , mySum: 73
 0 0 0 0 1 2 4 0 0 0 0 02 0  00  0 00  , mySum: 70 
00 0 0 0 1 6 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 6 1 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 3 3 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 5 1 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 5 2 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 1 4 3 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 1 3 4 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 4 4 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 5 3 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 1 6 1 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 6 2 0 0 0 0 0 0 0  0 0 0 0 , mySum: 9
0 0 0 0 0 4 4 1 0 0 0 0 00 0  00  0 , mySum: , mySum: 98

0 0 0 0 0 5 0 4 0 0 0 0 00 0 0 0 1 6 2 0 0 0 0  0 00  0 00  00  , mySum: 9, mySum: 
90 0 0 0 0 6 1 3 0 0 0 0 0 0 0
 0 0 0 0 0 6 3 0 0 00 , mySum: 10
0 0 0 0 0 3 4 3 0 0 0 0 0 0  0 00  , mySum: 0 100
 00 0 0 0 0 3 3 4 0 0 0 0 0  0 00  0 0, mySum:  10, mySum: 9

0 0 0 0 1 5 3 0 0 0 0 00 0 0 0 0 2 4 4 0 0 0 0 0  0 00  0 , mySum: 100
 0 0 0 0 0 0 6 0 4 0 0 0 0 00 0  , mySum: 0 90 , mySum: 
100 0 0 0 1 4 4 0 0 0 0 
0 00 0 0 0 0 6 2 2 0 0 0 0 0 0 0 , mySum: 9 
0 0 0 0 0 0 5 4 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 5 1 4 0 0 0 0 0 00 0  00  , mySum: 10
00 0 0 0 0 4 4 2 0 0 0 0 0 0 0 0 , mySum: 9 
0 00 0 0 0 1 5 4 0 0 0 0  0 00  0 , mySum: 010
0 0 0 0 0 6 3 1 0 0 0 0 0 0  0 , mySum: 10
0 0 0 0 0 6 4 0 0 0 0 00  00  , mySum: 100 
00 0 0 0 0 5 4 1 0 0 0 0 0 0  0 , mySum: 10
0 0 0 0 1 6 3 0 0 0 0 00  00  , mySum: 0 010 
0 0 0 0 0 4 2 4 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 1 6 4 0 0 0 0 0 , mySum: 10
0 0 0 0 0 6 4 0 0 0 0 0 0 0 0 0 0 00  00  , mySum: 110
 , mySum: 10
0 0 0 0 0 5 3 2 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 4 3 3 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 5 2 3 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 6 2 3 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 0 6 3 2 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 0 6 4 1 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 0 5 2 4 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 0 6 1 4 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 0 3 4 4 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 0 4 4 3 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 0 5 4 2 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 0 5 3 3 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 0 4 3 4 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 0 4 4 4 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 0 6 2 4 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 0 5 4 3 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 0 5 3 4 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 0 6 3 3 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 0 6 4 2 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 0 5 4 4 0 0 0 0 0 0 0 0 , mySum: 13
0 0 0 0 0 6 3 4 0 0 0 0 0 0 0 0 , mySum: 13
0 0 0 0 0 6 4 3 0 0 0 0 0 0 0 0 , mySum: 13
0 0 0 0 0 6 4 4 0 0 0 0 0 0 0 0 , mySum: 14
thread: 3, maxBlockLvlSize: 23
thread: 3, maxInBlockLvlSize: 1
thread: 3, AllTableSize: 525, maxSubsetsSize: 64
thread: 1, maxBlockLvlSize: 10
thread: 1, maxInBlockLvlSize: 9
thread: 1, AllTableSize: 3150, maxSubsetsSize: 64
thread: 0, NSTable size: 36
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 6
thread: 0, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 0, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 0, i: 2, maxN[i].weit: 5, maxN[i].idx: 2, blockDimSize[i]: 5
thread: 0, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 0, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 0, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 0, i: 6, maxN[i].weit: 7, maxN[i].idx: 6, blockDimSize[i]: 7
thread: 0, i: 0, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 2, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 5, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 6, divisor[i]: 7, blockDimSize[i]: 1
thread: 0, largestBlockVec.elm: 0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 6 
thread: 0, blockDimSizeComp: 0 0 0 0 0 0 0 0 0 2 3 1 3 3 3 1 
thread: 0, divisorComp: 0 0 0 0 0 0 0 0 0 2 1 5 1 1 1 7 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 6 
thread: 0, largestNoZeroBlockVec: 1 0 4 0 0 0 6 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 2 , mySum: 3
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 2 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 1 0 2 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 1 0 2 0 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 3 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 2 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 2 , mySum: 4
0 0 0 0 0 0 0 0 0 1 0 3 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 3 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 , mySum: 4
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 3 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5 , mySum: 5
0 0 0 0 0 0 0 0 0 1 0 2 0 0 0 2 , mySum: 5
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 4 , mySum: 5
0 0 0 0 0 0 0 0 0 1 0 3 0 0 0 1 , mySum: 5
0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 4 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 3 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 1 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 2 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 5 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 4 , mySum: 6
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 4 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 3 , mySum: 6
0 0 0 0 0 0 0 0 0 1 0 2 0 0 0 3 , mySum: 6
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 5 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6 , mySum: 6
0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 1 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 2 , mySum: 6
0 0 0 0 0 0 0 0 0 1 0 3 0 0 0 2 , mySum: 6
0 0 0 0 0 0 0 0 0 1 0 2 0 0 0 4 , mySum: 7
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 6 , mySum: 7
0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 3 , mySum: 7
0 0 0 0 0 0 0 0 0 1 0 3 0 0 0 3 , mySum: 7
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 5 , mySum: 7
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 5 , mySum: 7
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 6 , mySum: 7
0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 4 , mySum: 7
0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 2 , mySum: 7
0 0 0 0 0 0 0 0 0 1 0 3 0 0 0 4 , mySum: 8
0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 3 , mySum: 8
0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 4 , mySum: 8
0 0 0 0 0 0 0 0 0 1 0 2 0 0 0 5 , mySum: 8
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 6 , mySum: 8
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 6 , mySum: 8
0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 5 , mySum: 8
0 0 0 0 0 0 0 0 0 1 0 2 0 0 0 6 , mySum: 9
0 0 0 0 0 0 0 0 0 1 0 3 0 0 0 5 , mySum: 9
0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 6 , mySum: 9
0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 5 , mySum: 9
0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 4 , mySum: 9
0 0 0 0 0 0 0 0 0 1 0 3 0 0 0 6 , mySum: 10
0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 6 , mySum: 10
0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 5 , mySum: 10
0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 6 , mySum: 11
thread: 0, maxBlockLvlSize: 10
thread: 0, maxInBlockLvlSize: 35
thread: 0, AllTableSize: 11340, maxSubsetsSize: 64
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 6
copy the latest feasible solution to instance takes time: 0.034567
thread: 3, sOPT: 6
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 7
copy the latest feasible solution to instance takes time: 0.085456
thread: 2, sOPT: 7
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 0 1 
Thread: 1, gpu_BlockDP is done.
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 1 0 0 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 1 0 0 0 0 
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 8
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 mySum: 2
thread: 0, blockNoZero[4]: 0 0 0 0 0 0 2 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[5]: 1 0 0 0 0 0 1 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 mySum: 2
thread: 0, blockNoZero[6]: 0 0 1 0 0 0 1 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 1 0 1 0 0 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 mySum: 2
thread: 0, blockNoZero[8]: 0 0 2 0 0 0 0 
copy the latest feasible solution to instance takes time: 0.123092
thread: 1, sOPT: 8
thread: 0, allBlocks[9]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 mySum: 3
thread: 0, blockNoZero[9]: 0 0 0 0 0 0 3 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 2 mySum: 3
thread: 0, blockNoZero[10]: 0 0 1 0 0 0 2 
thread: 0, allBlocks[11]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 2 mySum: 3
thread: 0, blockNoZero[11]: 1 0 0 0 0 0 2 
thread: 0, allBlocks[12]: 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 1 mySum: 3
thread: 0, blockNoZero[12]: 0 0 2 0 0 0 1 
thread: 0, allBlocks[13]: 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 mySum: 3
thread: 0, blockNoZero[13]: 1 0 1 0 0 0 1 
thread: 0, allBlocks[14]: 0 0 0 0 0 0 0 0 0 1 0 2 0 0 0 0 mySum: 3
thread: 0, blockNoZero[14]: 1 0 2 0 0 0 0 
thread: 0, allBlocks[15]: 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 mySum: 3
thread: 0, blockNoZero[15]: 0 0 3 0 0 0 0 
thread: 0, allBlocks[16]: 0 0 0 0 0 0 0 0 0 1 0 2 0 0 0 1 mySum: 4
thread: 0, blockNoZero[16]: 1 0 2 0 0 0 1 
thread: 0, allBlocks[17]: 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 mySum: 4
thread: 0, blockNoZero[17]: 0 0 4 0 0 0 0 
thread: 0, allBlocks[18]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 3 mySum: 4
thread: 0, blockNoZero[18]: 1 0 0 0 0 0 3 
thread: 0, allBlocks[19]: 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 1 mySum: 4
thread: 0, blockNoZero[19]: 0 0 3 0 0 0 1 
thread: 0, allBlocks[20]: 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 2 mySum: 4
thread: 0, blockNoZero[20]: 1 0 1 0 0 0 2 
thread: 0, allBlocks[21]: 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 2 mySum: 4
thread: 0, blockNoZero[21]: 0 0 2 0 0 0 2 
thread: 0, allBlocks[22]: 0 0 0 0 0 0 0 0 0 1 0 3 0 0 0 0 mySum: 4
thread: 0, blockNoZero[22]: 1 0 3 0 0 0 0 
thread: 0, allBlocks[23]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 3 mySum: 4
thread: 0, blockNoZero[23]: 0 0 1 0 0 0 3 
thread: 0, allBlocks[24]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 mySum: 4
thread: 0, blockNoZero[24]: 0 0 0 0 0 0 4 
thread: 0, allBlocks[25]: 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 3 mySum: 5
thread: 0, blockNoZero[25]: 1 0 1 0 0 0 3 
thread: 0, allBlocks[26]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5 mySum: 5
thread: 0, blockNoZero[26]: 0 0 0 0 0 0 5 
thread: 0, allBlocks[27]: 0 0 0 0 0 0 0 0 0 1 0 2 0 0 0 2 mySum: 5
thread: 0, blockNoZero[27]: 1 0 2 0 0 0 2 
thread: 0, allBlocks[28]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 4 mySum: 5
thread: 0, blockNoZero[28]: 1 0 0 0 0 0 4 
thread: 0, allBlocks[29]: 0 0 0 0 0 0 0 0 0 1 0 3 0 0 0 1 mySum: 5
thread: 0, blockNoZero[29]: 1 0 3 0 0 0 1 
thread: 0, allBlocks[30]: 0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 0 mySum: 5
thread: 0, blockNoZero[30]: 1 0 4 0 0 0 0 
thread: 0, allBlocks[31]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 4 mySum: 5
thread: 0, blockNoZero[31]: 0 0 1 0 0 0 4 
thread: 0, allBlocks[32]: 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 3 mySum: 5
thread: 0, blockNoZero[32]: 0 0 2 0 0 0 3 
thread: 0, allBlocks[33]: 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 1 mySum: 5
thread: 0, blockNoZero[33]: 0 0 4 0 0 0 1 
thread: 0, allBlocks[34]: 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 2 mySum: 5
thread: 0, blockNoZero[34]: 0 0 3 0 0 0 2 
thread: 0, allBlocks[35]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 5 mySum: 6
thread: 0, blockNoZero[35]: 0 0 1 0 0 0 5 
thread: 0, allBlocks[36]: 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 4 mySum: 6
thread: 0, blockNoZero[36]: 0 0 2 0 0 0 4 
thread: 0, allBlocks[37]: 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 4 mySum: 6
thread: 0, blockNoZero[37]: 1 0 1 0 0 0 4 
thread: 0, allBlocks[38]: 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 3 mySum: 6
thread: 0, blockNoZero[38]: 0 0 3 0 0 0 3 
thread: 0, allBlocks[39]: 0 0 0 0 0 0 0 0 0 1 0 2 0 0 0 3 mySum: 6
thread: 0, blockNoZero[39]: 1 0 2 0 0 0 3 
thread: 0, allBlocks[40]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 5 mySum: 6
thread: 0, blockNoZero[40]: 1 0 0 0 0 0 5 
thread: 0, allBlocks[41]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6 mySum: 6
thread: 0, blockNoZero[41]: 0 0 0 0 0 0 6 
thread: 0, allBlocks[42]: 0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 1 mySum: 6
thread: 0, blockNoZero[42]: 1 0 4 0 0 0 1 
thread: 0, allBlocks[43]: 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 2 mySum: 6
thread: 0, blockNoZero[43]: 0 0 4 0 0 0 2 
thread: 0, allBlocks[44]: 0 0 0 0 0 0 0 0 0 1 0 3 0 0 0 2 mySum: 6
thread: 0, blockNoZero[44]: 1 0 3 0 0 0 2 
thread: 0, allBlocks[45]: 0 0 0 0 0 0 0 0 0 1 0 2 0 0 0 4 mySum: 7
thread: 0, blockNoZero[45]: 1 0 2 0 0 0 4 
thread: 0, allBlocks[46]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 6 mySum: 7
thread: 0, blockNoZero[46]: 0 0 1 0 0 0 6 
thread: 0, allBlocks[47]: 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 3 mySum: 7
thread: 0, blockNoZero[47]: 0 0 4 0 0 0 3 
thread: 0, allBlocks[48]: 0 0 0 0 0 0 0 0 0 1 0 3 0 0 0 3 mySum: 7
thread: 0, blockNoZero[48]: 1 0 3 0 0 0 3 
thread: 0, allBlocks[49]: 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 5 mySum: 7
thread: 0, blockNoZero[49]: 1 0 1 0 0 0 5 
thread: 0, allBlocks[50]: 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 5 mySum: 7
thread: 0, blockNoZero[50]: 0 0 2 0 0 0 5 
thread: 0, allBlocks[51]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 6 mySum: 7
thread: 0, blockNoZero[51]: 1 0 0 0 0 0 6 
thread: 0, allBlocks[52]: 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 4 mySum: 7
thread: 0, blockNoZero[52]: 0 0 3 0 0 0 4 
thread: 0, allBlocks[53]: 0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 2 mySum: 7
thread: 0, blockNoZero[53]: 1 0 4 0 0 0 2 
thread: 0, allBlocks[54]: 0 0 0 0 0 0 0 0 0 1 0 3 0 0 0 4 mySum: 8
thread: 0, blockNoZero[54]: 1 0 3 0 0 0 4 
thread: 0, allBlocks[55]: 0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 3 mySum: 8
thread: 0, blockNoZero[55]: 1 0 4 0 0 0 3 
thread: 0, allBlocks[56]: 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 4 mySum: 8
thread: 0, blockNoZero[56]: 0 0 4 0 0 0 4 
thread: 0, allBlocks[57]: 0 0 0 0 0 0 0 0 0 1 0 2 0 0 0 5 mySum: 8
thread: 0, blockNoZero[57]: 1 0 2 0 0 0 5 
thread: 0, allBlocks[58]: 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 6 mySum: 8
thread: 0, blockNoZero[58]: 1 0 1 0 0 0 6 
thread: 0, allBlocks[59]: 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 6 mySum: 8
thread: 0, blockNoZero[59]: 0 0 2 0 0 0 6 
thread: 0, allBlocks[60]: 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 5 mySum: 8
thread: 0, blockNoZero[60]: 0 0 3 0 0 0 5 
thread: 0, allBlocks[61]: 0 0 0 0 0 0 0 0 0 1 0 2 0 0 0 6 mySum: 9
thread: 0, blockNoZero[61]: 1 0 2 0 0 0 6 
thread: 0, allBlocks[62]: 0 0 0 0 0 0 0 0 0 1 0 3 0 0 0 5 mySum: 9
thread: 0, blockNoZero[62]: 1 0 3 0 0 0 5 
thread: 0, allBlocks[63]: 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 6 mySum: 9
thread: 0, blockNoZero[63]: 0 0 3 0 0 0 6 
thread: 0, allBlocks[64]: 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 5 mySum: 9
thread: 0, blockNoZero[64]: 0 0 4 0 0 0 5 
thread: 0, allBlocks[65]: 0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 4 mySum: 9
thread: 0, blockNoZero[65]: 1 0 4 0 0 0 4 
thread: 0, allBlocks[66]: 0 0 0 0 0 0 0 0 0 1 0 3 0 0 0 6 mySum: 10
thread: 0, blockNoZero[66]: 1 0 3 0 0 0 6 
thread: 0, allBlocks[67]: 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 6 mySum: 10
thread: 0, blockNoZero[67]: 0 0 4 0 0 0 6 
thread: 0, allBlocks[68]: 0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 5 mySum: 10
thread: 0, blockNoZero[68]: 1 0 4 0 0 0 5 
thread: 0, allBlocks[69]: 0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 6 mySum: 11
thread: 0, blockNoZero[69]: 1 0 4 0 0 0 6 
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.241788
thread: 0, sOPT: 10
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 3, MlBk function is done, and BkID for all processes are collected.
2, MlBk function is done, and BkID for all processes are collected.
Thread: 1, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 29, UB: 32
BKID: 0, LB: 29, UB: 32, OPT: 10
Dynamic Programming Runtime: 2.36307
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 1
Iteration: 2, UB: 32, LB: 29start at time: 1505254727
thread: 0, MlBk is called with LB: 29, UB: 30
 thread: 0, LongJobs.size() 21
thread: thread: 1, MlBk is called with LB: 230, MlBk is called with LB: 31, UB: 32, UB: 31

 thread: 2, LongJobs.size() 21
 thread: 1, LongJobs.size() 21
thread: 1, NSTable size: 34
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: thread: 21, NSTable size: , i: 366
, alltableelemets[maxindex].elm[i]: thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 00
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 6
thread: 1, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 1, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 1, i: 
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
2thread: 2, i: 3, maxN[i].weit: , alltableelemets[maxindex].elm[i]: 05
, maxN[i].idx: 2thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: , blockDimSize[i]: 6, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 3
5
thread: 1, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: thread: 1, i: 4, maxN[i].weit: 32, maxN[i].idx: , i: 4, blockDimSize[i]: 103, alltableelemets[maxindex].elm[i]: 2

thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 4thread: 1, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 1
, i: 6, maxN[i].weit: 7, maxN[i].idx: thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 26
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 6
, blockDimSize[i]: 7
thread: 1, i: 0, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 2, divisor[i]: 5, blockDimSize[i]: 1
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 5, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 6, divisor[i]: 7, blockDimSize[i]: 1
thread: thread: 1, largestBlockVec.elm: 2, i: 0, maxN[i].weit: 04, maxN[i].idx:  0, blockDimSize[i]: 40
 thread: 2, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 03
thread: 2, i: 2, maxN[i].weit: 5, maxN[i].idx: 2, blockDimSize[i]: 5 
thread: 2, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 2, i: 4, maxN[i].weit: 3, maxN[i].idx: 40, blockDimSize[i]: 3 
thread: 2, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 2, i: 6, maxN[i].weit: 7, maxN[i].idx: 6, blockDimSize[i]: 7
0thread: 2, i:  0, divisor[i]: 02 0, blockDimSize[i]:  20 
thread: 2, i: 1, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 2, divisor[i]: 5, blockDimSize[i]: 1
thread: 2, i: 3, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 5, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 6, divisor[i]: 7, blockDimSize[i]: 1
thread: 02, largestBlockVec.elm:  0 1 0 0 0 40  0 0 00  00  6 
0thread: 1, blockDimSizeComp: 0 0 0 0 0 0 0 0 0 2 3 0 1 0  4 0 1 30 3  0 36  1 

thread: 2, blockDimSizeComp: 0 0 0 0 0 0 0 0 0 2thread: 1, divisorComp: 0 0 0 0 0 0 0 0 0 2  1 5 31 1  1 31  37  
3thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0  1 10  
thread: 2, divisorComp: 0 0 0 0 0 0 0 0 0 2 14 0 0 0 6  
5thread: 1, largestNoZeroBlockVec: 1 0 4 0 0 0 6 
 1 1 1 7 
thread: 2, largestBlockVec: 0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 6 
thread: 2, largestNoZeroBlockVec: 1 0 4 0 0 0 6 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 thread: 0 0 20, allBlocks: 0  0 00  10 0  0 00  0 00  0 0, mySum:  1
0 0 0 0 0 0 0 0 0 0 00  01 0  0 0 00  0 00 0  , mySum: 0 10 
00 0 0 0 0 0 0 0 0 0 0 0 0 0  , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 0 00 0  01 , mySum:  1
10 0 0 0 0 0 0 0 0 1 0 0 0 0 0  0 , mySum: , mySum: 21

0 0 0 0 0 0 0 0 0 0 0 1 0 00 0 0 0 0 0 0 0 0 0 0  0 1 , mySum: 21
 0 0 0 0 0 0 0 0 0 0 1 0 1 0 00 0  00  0 , mySum: , mySum: 2
10 0 0 0 0 0 0 0 0 0 0 2 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 00 0  02 , mySum:  2
, mySum: 0 0 0 0 0 0 0 0 0 0 0 0 0 02 0 3 
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0, mySum:  1 3, mySum: 
2
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 00  0 01  0 , mySum: 12 
0 0 0 0 0 0 0 0 0 1 0 1 0 0 00 0  , mySum: 0 20
0 0 0 0 0 0 0 0 0 0 0 2 0 0  0 0 2, mySum:  2
, mySum: 0 0 0 0 0 0 0 0 0 0 0 0 0 3
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 3 , mySum: 30
 0 0 0 0 0 0 0 0 0 0 0 1 0 0 00 2  , mySum: 23 , mySum: 
3
0 0 0 0 0 0 0 0 0 1 0 0 0 00 0 0 0 0 0 0 0 0 0 0 2  0 2 , mySum: 3
00 0 0 0 0 0 0 0 0 0 0 2 0 0 0  1 , mySum: 03
0 0 0 0 0 0 0 0 0 1 0 1 0 0  0 01  1 , mySum: , mySum: 33

0 0 0 0 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 0 1 0 1 00 0  00 1  , mySum: 03 , mySum: 
3
0 0 0 0 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0, mySum:  30
 00 0 0 0 0 0 0 0 0 0 0 3 0  0 , mySum: 3
0 0 0 0 0 0 0 0 0 1 0 2 0 0 0 0 , mySum: 03 0 
10 0 0 0 0 0 0 0 0 1 0 2 0 0  0, mySum:  41
 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0, mySum:  0 4, mySum: 
4
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 04 0  0 00  03 , mySum:  4, mySum: 
0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 14 , mySum: 4

0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 00 0  0 2 0, mySum:  4
0 0 0 0 0 0 0 0 0 0 0 2 0 03 0  2 , mySum: , mySum: 44

0 0 0 0 0 0 0 0 0 1 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 3 00 0  0 10 , mySum:  4, mySum: 4

0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 2 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 2 0 00 0  2 0, mySum:  4
0 0 0 0 0 0 0 0 0 1 0 3 0 00 0  30  , mySum: 4
, mySum: 40 0 0 0 0 0 0 0 0 0 0 1 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 00 0 0  4 , mySum: 43
 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0, mySum:  3 4, mySum: 
50 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 00 0  54  , mySum: 4, mySum: 
0 0 0 0 0 0 0 0 0 1 0 1 0 0 5
0 0 0 0 0 0 0 0 0 1 0 2 00 3 , mySum: 5 
0 00 0 0 0 0 0 0 0 0 0 0 0 0  2 , mySum: 5
0 0 0 0 0 0 0 0 0 1 0 0 0 00 0 4  , mySum: 5
0 0 0 0 0 0 0 0 0 1 0 3 0 0 00 1  , mySum: 5
0 0 0 0 0 0 0 0 0 1 0 4 0 5 , mySum: 5
0 0 0 0 0 0 0 0 0 1 0 2 0 00 0  20  , mySum: 50 
, mySum: 50 0 0 0 0 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 1 00 4 , mySum: 5
0 0 0 0 0 0 0 0 0 1 0 3 0  0 0 10 , mySum: 5 
00 0 0 0 0 0 0 0 0 1 0 4 0  4 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 2 0 00 0 0 , mySum:  50 
3 , mySum: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 5
0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 01 , mySum:  5
0 0 0 0 0 0 0 0 0 0 0 3 0 0 04 2  , mySum: 5
, mySum: 0 0 0 0 0 0 0 0 0 0 0 1 0 05 0 5
 , mySum: 0 0 0 0 0 0 0 0 0 0 0 2 0 6
0 0 0 0 0 0 0 00  00  0 0 32  , mySum: 0 50
 0 0 0 0 0 0 0 0 0 0 0 4 0 0 00 1  , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 3 0 0 40  2, mySum: 6 
0 0 0 0 0 0 0 0 0 1 0 1 0 0 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 1 0 00 0  5 , mySum: 64 
, mySum: 60 0 0 0 0 0 0 0 0 0 0 2 0 0 
00 0 0 0 0 0 0 0 0 0 0 3  4 , mySum: 6
0 0 0 0 0 0 0 0 0 1 0 1 00 0 0 3 , mySum: 6
 0 0 0 0 0 0 0 0 0 1 0 2 0 0 0 4 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 3 , mySum: 60
 0 0 0 0 0 0 0 0 0 1 0 0 0 00 0  35  , mySum: , mySum: 66
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6
 0 0 0 0 0 0 0 0 0 1 0 2 0, mySum:  0 60
 0 0 0 0 0 0 0 0 0 1 0 4 0 0 03 1  , mySum: 6
, mySum: 0 0 0 0 0 0 0 0 0 0 0 4 0 06
0 0 0 0 0 0 0 0 0 1  00  2 , mySum: 06
0 0 0 0 0 0 0 0 0 1 0 3 0 0 0  2 , mySum: 60
0 0 0 0 0 0 0 0 0 1 0 2 0  0 0 5 , mySum: 6
00 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 , mySum: 7
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 6 , mySum: 6
0 0 0 0 0 0 0 0 0 1 0 4 0  0 6 , mySum: 7
0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 1 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 4 0 0 00 2  0, mySum:  63
0 0 0 0 0 0 0 0 0 1 0 3 0 0  , mySum: 07 
20 0 0 0 0 0 0 0 0 1 0 3 0 0  , mySum: 6
0 0 0 0 0 0 0 0 0 1 0 2 0 0 3 , mySum: 7
0 0 0 0 0 0 0 0 0 1 0 1 0 00 0 4 , mySum: 7 
0 50 0 0 0 0 0 0 0 0 0 0 1 0 0 0  , mySum: 6 , mySum: 77
0 0 0 0 0 0 0 0 0 0 0 4 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 2 03 0  0 5 , mySum: , mySum: 77

0 0 0 0 0 0 0 0 0 1 0 3 0 0 00 0 0 0 0 0 0 0 0 1 0 0 3 , mySum: 7
0 0 0 0 0 0 0 0 0 1 0 1 0 0  0 50  0, mySum: 7 
0 60 0 0 0 0 0 0 0 0 0 0 2 0 0 , mySum: 7
0 0 0 0 0 0 0 0 0 0 0 3 0 0  0 5 , mySum: 7
0 0 0 0 0 0 0 0 0 1 0 0 0 0 00 6  , mySum: 7
0 0 0 0 0 0 0 0 0 0 0 3 0 04 0  4, mySum:  7, mySum: 7

0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 0 0 0 0 0 0 0 1 0 04 0 0  00  2 2, mySum:  7
, mySum: 70 0 0 0 0 0 0 0 0 1 0 3 0 0 0 4
 0 0 0 0 0 0 0 0 0 1 0 3 0, mySum:  0 80 
0 0 0 0 0 0 0 0 0 1 0 4 0 04 , mySum: 8
0 0 0 0 0 0 0 0 0 1 0 4  0 3 , mySum: 8
0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 3 , mySum: 8
0 0 0 0 0 0 0 0 0 0 0 4 00 4 , mySum: 8
0 0 0 0 0 0 0 0 0 1 0 2 0  0 0 4 , mySum: 8
00 0 0 0 0 0 0 0 0 1 0 2 0  0 5 , mySum: 8
0 0 0 0 0 0 0 0 0 1 0 1 00 0 5 , mySum: 8 
0 0 0 0 0 0 0 0 0 0 1 0 1 0 00 0  66  , mySum: , mySum: 8
0 0 0 0 0 0 0 0 0 0 0 2 0 8
0 0 0 0 0 0 0 0 0 0 0 2 0 00 0  60 , mySum:  8
0 0 0 0 0 0 0 0 0 0 0 3 06 , mySum: 8
0 0 0 0 0 0 0 0 0 0 0 3 0 0 0  50  , mySum: 08
 0 0 0 0 0 0 0 0 0 1 0 2 0 05 0 6  , mySum: 8, mySum: 
0 0 0 0 0 0 0 0 0 1 0 2 0 0 0 96 , mySum: 9

0 0 0 0 0 0 0 0 0 1 0 3 0 0 0 0 0 0 0 0 0 0 1 0 0 5 , mySum: 09 
30 0 0 0 0 0 0 0 0 0 0 3 0  0 0 06 0  0 , mySum: 59
 0 0 0 0 0 0 0 0 0 0 0 4 0 , mySum: 9
0 0 0 0 0 0 0 0 0 0 0 3 0 00 0 5 , mySum: 9
0 0 0 0 0 0 0 0 0 1 0 4 0  0 0 04  6, mySum:  9
0 0 0 0 0 0 0 0 0 1 0 3 0 0, mySum: 9
0 0 0 0 0 0 0 0 0 0 0 4 0 0  0 5 , mySum: 0 96 
, mySum: 100 0 0 0 0 0 0 0 0 1 0 4 0 
0 00 0 0 0 0 0 0 0 0 0 0 4  0 0 40 , mySum:  96
 , mySum: 0 0 0 0 0 0 0 0 0 1 0 3 0 0 10
0 0 0 0 0 0 0 0 0 1 0 4 0 0 6 , mySum: 10
0 0 0 0 0 0 0 0 0 0 0 4 0 0 00 6 , mySum:  10
0 0 0 0 0 0 0 0 0 1 0 4 0 0 00 5  , mySum: 10
0 0 0 0 0 0 0 0 0 1 0 4 0 5 , mySum: 10
0 0 0 0 0 0 0 0 0 1 0 4 0 00 0 6 , mySum:  110 
6 , mySum: 11
thread: 0, NSTable size: 31
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 6
thread: 0, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 0, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 0, i: 2, maxN[i].weit: 5, maxN[i].idx: 2, blockDimSize[i]: 5
thread: 0, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 0, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 0, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 0, i: 6, maxN[i].weit: 7, maxN[i].idx: 6, blockDimSize[i]: 7
thread: 0, i: 0, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 2, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 5, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 6, divisor[i]: 7, blockDimSize[i]: 1
thread: 0, largestBlockVec.elm: 0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 6 
thread: 0, blockDimSizeComp: 0 0 0 0 0 0 0 0 0 2 3 1 3 3 3 1 
thread: 0, divisorComp: 0 0 0 0 0 0 0 0 0 2 1 5 1 1 1 7 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 6 
thread: 0, largestNoZeroBlockVec: 1 0 4 0 0 0 6 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 2 , mySum: 3
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 2 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 1 0 2 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 1 0 2 0 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 3 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 2 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 2 , mySum: 4
0 0 0 0 0 0 0 0 0 1 0 3 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 3 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 , mySum: 4
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 3 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5 , mySum: 5
0 0 0 0 0 0 0 0 0 1 0 2 0 0 0 2 , mySum: 5
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 4 , mySum: 5
0 0 0 0 0 0 0 0 0 1 0 3 0 0 0 1 , mySum: 5
0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 4 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 3 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 1 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 2 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 5 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 4 , mySum: 6
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 4 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 3 , mySum: 6
0 0 0 0 0 0 0 0 0 1 0 2 0 0 0 3 , mySum: 6
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 5 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6 , mySum: 6
0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 1 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 2 , mySum: 6
0 0 0 0 0 0 0 0 0 1 0 3 0 0 0 2 , mySum: 6
0 0 0 0 0 0 0 0 0 1 0 2 0 0 0 4 , mySum: 7
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 6 , mySum: 7
0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 3 , mySum: 7
0 0 0 0 0 0 0 0 0 1 0 3 0 0 0 3 , mySum: 7
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 5 , mySum: 7
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 5 , mySum: 7
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 6 , mySum: 7
0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 4 , mySum: 7
0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 2 , mySum: 7
0 0 0 0 0 0 0 0 0 1 0 3 0 0 0 4 , mySum: 8
0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 3 , mySum: 8
0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 4 , mySum: 8
0 0 0 0 0 0 0 0 0 1 0 2 0 0 0 5 , mySum: 8
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 6 , mySum: 8
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 6 , mySum: 8
0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 5 , mySum: 8
0 0 0 0 0 0 0 0 0 1 0 2 0 0 0 6 , mySum: 9
0 0 0 0 0 0 0 0 0 1 0 3 0 0 0 5 , mySum: 9
0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 6 , mySum: 9
0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 5 , mySum: 9
0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 4 , mySum: 9
0 0 0 0 0 0 0 0 0 1 0 3 0 0 0 6 , mySum: 10
0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 6 , mySum: 10
0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 5 , mySum: 10
0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 6 , mySum: 11
thread: 2, maxBlockLvlSize: 10
thread: 2, maxInBlockLvlSize: 35
thread: 2, AllTableSize: 11340, maxSubsetsSize: 64
thread: 1, maxBlockLvlSize: 10
thread: 1, maxInBlockLvlSize: 35
thread: 1, AllTableSize: 11340, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 10
thread: 0, maxInBlockLvlSize: 35
thread: 0, AllTableSize: 11340, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 1 0 0 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 1 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 mySum: 2
thread: 0, blockNoZero[4]: 0 0 0 0 0 0 2 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[5]: 1 0 0 0 0 0 1 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 mySum: 2
thread: 0, blockNoZero[6]: 0 0 1 0 0 0 1 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 1 0 1 0 0 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 mySum: 2
thread: 0, blockNoZero[8]: 0 0 2 0 0 0 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 mySum: 3
thread: 0, blockNoZero[9]: 0 0 0 0 0 0 3 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 2 mySum: 3
thread: 0, blockNoZero[10]: 0 0 1 0 0 0 2 
thread: 0, allBlocks[11]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 2 mySum: 3
thread: 0, blockNoZero[11]: 1 0 0 0 0 0 2 
thread: 0, allBlocks[12]: 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 1 mySum: 3
thread: 0, blockNoZero[12]: 0 0 2 0 0 0 1 
thread: 0, allBlocks[13]: 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 mySum: 3
thread: 0, blockNoZero[13]: 1 0 1 0 0 0 1 
thread: 0, allBlocks[14]: 0 0 0 0 0 0 0 0 0 1 0 2 0 0 0 0 mySum: 3
thread: 0, blockNoZero[14]: 1 0 2 0 0 0 0 
thread: 0, allBlocks[15]: 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 mySum: 3
thread: 0, blockNoZero[15]: 0 0 3 0 0 0 0 
thread: 0, allBlocks[16]: 0 0 0 0 0 0 0 0 0 1 0 2 0 0 0 1 mySum: 4
thread: 0, blockNoZero[16]: 1 0 2 0 0 0 1 
thread: 0, allBlocks[17]: 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 mySum: 4
thread: 0, blockNoZero[17]: 0 0 4 0 0 0 0 
thread: 0, allBlocks[18]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 3 mySum: 4
thread: 0, blockNoZero[18]: 1 0 0 0 0 0 3 
thread: 0, allBlocks[19]: 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 1 mySum: 4
thread: 0, blockNoZero[19]: 0 0 3 0 0 0 1 
thread: 0, allBlocks[20]: 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 2 mySum: 4
thread: 0, blockNoZero[20]: 1 0 1 0 0 0 2 
thread: 0, allBlocks[21]: 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 2 mySum: 4
thread: 0, blockNoZero[21]: 0 0 2 0 0 0 2 
thread: 0, allBlocks[22]: 0 0 0 0 0 0 0 0 0 1 0 3 0 0 0 0 mySum: 4
thread: 0, blockNoZero[22]: 1 0 3 0 0 0 0 
thread: 0, allBlocks[23]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 3 mySum: 4
thread: 0, blockNoZero[23]: 0 0 1 0 0 0 3 
thread: 0, allBlocks[24]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 mySum: 4
thread: 0, blockNoZero[24]: 0 0 0 0 0 0 4 
thread: 0, allBlocks[25]: 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 3 mySum: 5
thread: 0, blockNoZero[25]: 1 0 1 0 0 0 3 
thread: 0, allBlocks[26]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5 mySum: 5
thread: 0, blockNoZero[26]: 0 0 0 0 0 0 5 
thread: 0, allBlocks[27]: 0 0 0 0 0 0 0 0 0 1 0 2 0 0 0 2 mySum: 5
thread: 0, blockNoZero[27]: 1 0 2 0 0 0 2 
thread: 0, allBlocks[28]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 4 mySum: 5
thread: 0, blockNoZero[28]: 1 0 0 0 0 0 4 
thread: 0, allBlocks[29]: 0 0 0 0 0 0 0 0 0 1 0 3 0 0 0 1 mySum: 5
thread: 0, blockNoZero[29]: 1 0 3 0 0 0 1 
thread: 0, allBlocks[30]: 0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 0 mySum: 5
thread: 0, blockNoZero[30]: 1 0 4 0 0 0 0 
thread: 0, allBlocks[31]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 4 mySum: 5
thread: 0, blockNoZero[31]: 0 0 1 0 0 0 4 
thread: 0, allBlocks[32]: 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 3 mySum: 5
thread: 0, blockNoZero[32]: 0 0 2 0 0 0 3 
thread: 0, allBlocks[33]: 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 1 mySum: 5
thread: 0, blockNoZero[33]: 0 0 4 0 0 0 1 
thread: 0, allBlocks[34]: 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 2 mySum: 5
thread: 0, blockNoZero[34]: 0 0 3 0 0 0 2 
thread: 0, allBlocks[35]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 5 mySum: 6
thread: 0, blockNoZero[35]: 0 0 1 0 0 0 5 
thread: 0, allBlocks[36]: 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 4 mySum: 6
thread: 0, blockNoZero[36]: 0 0 2 0 0 0 4 
thread: 0, allBlocks[37]: 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 4 mySum: 6
thread: 0, blockNoZero[37]: 1 0 1 0 0 0 4 
thread: 0, allBlocks[38]: 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 3 mySum: 6
thread: 0, blockNoZero[38]: 0 0 3 0 0 0 3 
thread: 0, allBlocks[39]: 0 0 0 0 0 0 0 0 0 1 0 2 0 0 0 3 mySum: 6
thread: 0, blockNoZero[39]: 1 0 2 0 0 0 3 
thread: 0, allBlocks[40]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 5 mySum: 6
thread: 0, blockNoZero[40]: 1 0 0 0 0 0 5 
thread: 0, allBlocks[41]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6 mySum: 6
thread: 0, blockNoZero[41]: 0 0 0 0 0 0 6 
thread: 0, allBlocks[42]: 0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 1 mySum: 6
thread: 0, blockNoZero[42]: 1 0 4 0 0 0 1 
thread: 0, allBlocks[43]: 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 2 mySum: 6
thread: 0, blockNoZero[43]: 0 0 4 0 0 0 2 
thread: 0, allBlocks[44]: 0 0 0 0 0 0 0 0 0 1 0 3 0 0 0 2 mySum: 6
thread: 0, blockNoZero[44]: 1 0 3 0 0 0 2 
thread: 0, allBlocks[45]: 0 0 0 0 0 0 0 0 0 1 0 2 0 0 0 4 mySum: 7
thread: 0, blockNoZero[45]: 1 0 2 0 0 0 4 
thread: 0, allBlocks[46]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 6 mySum: 7
thread: 0, blockNoZero[46]: 0 0 1 0 0 0 6 
thread: 0, allBlocks[47]: 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 3 mySum: 7
thread: 0, blockNoZero[47]: 0 0 4 0 0 0 3 
thread: 0, allBlocks[48]: 0 0 0 0 0 0 0 0 0 1 0 3 0 0 0 3 mySum: 7
thread: 0, blockNoZero[48]: 1 0 3 0 0 0 3 
thread: 0, allBlocks[49]: 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 5 mySum: 7
thread: 0, blockNoZero[49]: 1 0 1 0 0 0 5 
thread: 0, allBlocks[50]: 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 5 mySum: 7
thread: 0, blockNoZero[50]: 0 0 2 0 0 0 5 
thread: 0, allBlocks[51]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 6 mySum: 7
thread: 0, blockNoZero[51]: 1 0 0 0 0 0 6 
thread: 0, allBlocks[52]: 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 4 mySum: 7
thread: 0, blockNoZero[52]: 0 0 3 0 0 0 4 
thread: 0, allBlocks[53]: 0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 2 mySum: 7
thread: 0, blockNoZero[53]: 1 0 4 0 0 0 2 
thread: 0, allBlocks[54]: 0 0 0 0 0 0 0 0 0 1 0 3 0 0 0 4 mySum: 8
thread: 0, blockNoZero[54]: 1 0 3 0 0 0 4 
thread: 0, allBlocks[55]: 0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 3 mySum: 8
thread: 0, blockNoZero[55]: 1 0 4 0 0 0 3 
thread: 0, allBlocks[56]: 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 4 mySum: 8
thread: 0, blockNoZero[56]: 0 0 4 0 0 0 4 
thread: 0, allBlocks[57]: 0 0 0 0 0 0 0 0 0 1 0 2 0 0 0 5 mySum: 8
thread: 0, blockNoZero[57]: 1 0 2 0 0 0 5 
thread: 0, allBlocks[58]: 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 6 mySum: 8
thread: 0, blockNoZero[58]: 1 0 1 0 0 0 6 
thread: 0, allBlocks[59]: 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 6 mySum: 8
thread: 0, blockNoZero[59]: 0 0 2 0 0 0 6 
thread: 0, allBlocks[60]: 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 5 mySum: 8
thread: 0, blockNoZero[60]: 0 0 3 0 0 0 5 
thread: 0, allBlocks[61]: 0 0 0 0 0 0 0 0 0 1 0 2 0 0 0 6 mySum: 9
thread: 0, blockNoZero[61]: 1 0 2 0 0 0 6 
thread: 0, allBlocks[62]: 0 0 0 0 0 0 0 0 0 1 0 3 0 0 0 5 mySum: 9
thread: 0, blockNoZero[62]: 1 0 3 0 0 0 5 
thread: 0, allBlocks[63]: 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 6 mySum: 9
thread: 0, blockNoZero[63]: 0 0 3 0 0 0 6 
thread: 0, allBlocks[64]: 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 5 mySum: 9
thread: 0, blockNoZero[64]: 0 0 4 0 0 0 5 
thread: 0, allBlocks[65]: 0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 4 mySum: 9
thread: 0, blockNoZero[65]: 1 0 4 0 0 0 4 
thread: 0, allBlocks[66]: 0 0 0 0 0 0 0 0 0 1 0 3 0 0 0 6 mySum: 10
thread: 0, blockNoZero[66]: 1 0 3 0 0 0 6 
thread: 0, allBlocks[67]: 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 6 mySum: 10
thread: 0, blockNoZero[67]: 0 0 4 0 0 0 6 
thread: 0, allBlocks[68]: 0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 5 mySum: 10
thread: 0, blockNoZero[68]: 1 0 4 0 0 0 5 
thread: 0, allBlocks[69]: 0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 6 mySum: 11
thread: 0, blockNoZero[69]: 1 0 4 0 0 0 6 
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 4e-06
thread: 0, sOPT: 11
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.514061
thread: 1, sOPT: 10
copy the latest feasible solution to instance takes time: 0.589755
thread: 2, sOPT: 10
BKID: 0, LB: 30, UB: 30, OPT: 10
Dynamic Programming Runtime: 6.16979
Execution time between LB and UB is: 3
By far, all LB UB calculation runtime: 4
********************************************************
Total execution on UB and LB is: 4
OUT of Bk while loop  
UB    30
LB    30
T1    30
T2    30
OPT   10
nMachines   10
BkID	0
AllProbData.size()    2
ck :   1
AllProbData[ck].Ttable    30
ck :   0
AllProbData[ck].Ttable    31
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan31
Main Scheduling is Done
File 1-11 is Done.
******************************
Reading File...
File 1-12 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 49, LB: 30start at time: 1505254730
thread: 0, MlBk is called with LB: 30, UB: 35
thread: 3, MlBk is called with LB: 45, UB: 50
 thread: 0, LongJobs.size() 21
thread: 2, MlBk is called with LB: 40, UB: 45
 thread: 3, LongJobs.size() 14
thread: 1, MlBk is called with LB: 35, UB: 40
 thread: 2, LongJobs.size() 16
 thread: 1, LongJobs.size() 21
thread: 3, NSTable size: 26
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 6
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 3, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 3, i: 2, maxN[i].weit: 4, maxN[i].idx: 2, blockDimSize[i]: 4
thread: 3, i: 3, maxN[i].weit: 7, maxN[i].idx: 3, blockDimSize[i]: 7
thread: 3, i: 0, divisor[i]: 2, blockDimSize[i]: 2
thread: 3, i: 1, divisor[i]: 1, blockDimSize[i]: 3
thread: 3, i: 2, divisor[i]: 2, blockDimSize[i]: 2
thread: 3, i: 3, divisor[i]: 7, blockDimSize[i]: 1
thread: 3, largestBlockVec.elm: 0 0 0 0 0 1 0 1 6 0 0 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 0 0 2 3 2 1 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 0 0 2 1 2 7 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 1 0 1 6 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 1 0 1 6 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 1 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 0 1 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 0 0 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 0 1 3 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 0 0 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 1 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 0 0 5 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 1 5 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 0 1 4 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 0 0 6 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 0 1 6 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 0 1 5 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 0 1 6 0 0 0 0 0 0 0 , mySum: 8
thread: 3, maxBlockLvlSize: 4
thread: 3, maxInBlockLvlSize: 4
thread: 3, AllTableSize: 336, maxSubsetsSize: 64
thread: 2, NSTable size: 38
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 6
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 2, i: 1, maxN[i].weit: 4, maxN[i].idx: 1, blockDimSize[i]: 4
thread: 2, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 2, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 2, i: 4, maxN[i].weit: 7, maxN[i].idx: 4, blockDimSize[i]: 7
thread: 2, i: 0, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 1, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, i: 2, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 3, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, i: 4, divisor[i]: 7, blockDimSize[i]: 1
thread: 2, largestBlockVec.elm: 0 0 0 0 0 1 0 1 6 0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 0 3 2 3 2 1 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 1 2 1 2 7 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 1 0 1 6 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 1 0 1 6 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 1 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 0 1 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 0 0 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 0 1 3 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 0 0 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 1 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 0 0 5 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 1 5 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 0 1 4 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 0 0 6 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 0 1 6 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 0 1 5 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 0 1 6 0 0 0 0 0 0 0 , mySum: 8
thread: 2, maxBlockLvlSize: 4
thread: 2, maxInBlockLvlSize: 10
thread: 2, AllTableSize: 1008, maxSubsetsSize: 64
thread: 1, NSTable size: 27
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 7
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 6
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 8, maxN[i].idx: 0, blockDimSize[i]: 8
thread: 1, i: 1, maxN[i].weit: 4, maxN[i].idx: 1, blockDimSize[i]: 4
thread: 1, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 1, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 1, i: 4, maxN[i].weit: 7, maxN[i].idx: 4, blockDimSize[i]: 7
thread: 1, i: 0, divisor[i]: 2, blockDimSize[i]: 4
thread: 1, i: 1, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, i: 2, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 4
thread: 1, i: 4, divisor[i]: 7, blockDimSize[i]: 1
thread: 1, largestBlockVec.elm: 0 0 0 0 1 1 0 0 6 0 0 0 0 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 0 4 2 3 4 1 0 0 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 2 2 1 1 7 0 0 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 1 1 0 0 6 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 1 1 0 0 6 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 0 0 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 1 0 0 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 0 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 1 0 0 3 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 0 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 0 0 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 0 5 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 0 0 5 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 1 0 0 4 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 0 0 0 6 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 0 0 6 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 1 0 0 5 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 1 0 0 6 0 0 0 0 0 0 0 , mySum: 8
thread: 0, NSTable size: 20
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 7
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 6
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 0, maxN[i].weit: 8, maxN[i].idx: 0, blockDimSize[i]: 8
thread: 0, i: 1, maxN[i].weit: 4, maxN[i].idx: 1, blockDimSize[i]: 4
thread: 0, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 0, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 0, i: 4, maxN[i].weit: 7, maxN[i].idx: 4, blockDimSize[i]: 7
thread: 0, i: 0, divisor[i]: 2, blockDimSize[i]: 4
thread: 0, i: 1, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 2, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 4
thread: 0, i: 4, divisor[i]: 7, blockDimSize[i]: 1
thread: 0, largestBlockVec.elm: 0 0 0 0 1 1 0 0 6 0 0 0 0 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 0 4 2 3 4 1 0 0 0 0 0 0 0 
thread: 0, divisorComp: 0 0 0 0 2 2 1 1 7 0 0 0 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 1 1 0 0 6 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 1 1 0 0 6 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 0 0 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 1 0 0 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 0 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 1 0 0 3 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 0 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 0 0 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 0 5 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 0 0 5 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 1 0 0 4 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 0 0 0 6 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 0 0 6 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 1 0 0 5 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 1 0 0 6 0 0 0 0 0 0 0 , mySum: 8
thread: 1, maxBlockLvlSize: 4
thread: 1, maxInBlockLvlSize: 19
thread: 1, AllTableSize: 2688, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 4
thread: 0, maxInBlockLvlSize: 19
thread: 0, AllTableSize: 2688, maxSubsetsSize: 64
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 5
copy the latest feasible solution to instance takes time: 0.022188
thread: 3, sOPT: 5
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 1 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 1 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 1 0 0 1 
thread: 0, allBlocks[5]: 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 1 1 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 0 0 0 2 
thread: 0, allBlocks[7]: 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 1 0 0 0 1 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[8]: 0 0 0 0 3 
thread: 0, allBlocks[9]: 0 0 0 0 0 1 0 0 2 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[9]: 0 1 0 0 2 
thread: 0, allBlocks[10]: 0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 1 1 0 0 1 
thread: 0, allBlocks[11]: 0 0 0 0 1 0 0 0 2 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 1 0 0 0 2 
thread: 0, allBlocks[12]: 0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[12]: 0 0 0 0 4 
thread: 0, allBlocks[13]: 0 0 0 0 0 1 0 0 3 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[13]: 0 1 0 0 3 
thread: 0, allBlocks[14]: 0 0 0 0 1 1 0 0 2 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[14]: 1 1 0 0 2 
Thread: 2, gpu_BlockDP is done.
thread: 0, allBlocks[15]: 0 0 0 0 1 0 0 0 3 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[15]: 1 0 0 0 3 
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 6
thread: 0, allBlocks[16]: 0 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[16]: 0 0 0 0 5 
thread: 0, allBlocks[17]: 0 0 0 0 1 1 0 0 3 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[17]: 1 1 0 0 3 
thread: 0, allBlocks[18]: 0 0 0 0 1 0 0 0 4 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[18]: 1 0 0 0 4 
thread: 0, allBlocks[19]: 0 0 0 0 0 1 0 0 4 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[19]: 0 1 0 0 4 
copy the latest feasible solution to instance takes time: 0.053252
thread: 2, sOPT: 6
thread: 0, allBlocks[20]: 0 0 0 0 1 0 0 0 5 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[20]: 1 0 0 0 5 
thread: 0, allBlocks[21]: 0 0 0 0 0 1 0 0 5 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[21]: 0 1 0 0 5 
thread: 0, allBlocks[22]: 0 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[22]: 0 0 0 0 6 
thread: 0, allBlocks[23]: 0 0 0 0 1 1 0 0 4 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[23]: 1 1 0 0 4 
thread: 0, allBlocks[24]: 0 0 0 0 1 0 0 0 6 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[24]: 1 0 0 0 6 
thread: 0, allBlocks[25]: 0 0 0 0 0 1 0 0 6 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[25]: 0 1 0 0 6 
thread: 0, allBlocks[26]: 0 0 0 0 1 1 0 0 5 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[26]: 1 1 0 0 5 
thread: 0, allBlocks[27]: 0 0 0 0 1 1 0 0 6 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[27]: 1 1 0 0 6 
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.127773
thread: 0, sOPT: 10
copy the latest feasible solution to instance takes time: 0.065236
thread: 1, sOPT: 9
Thread: 1, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: Thread: 2, MlBk function is done, and BkID for all processes are collected.3
0, MlBk function is done, and BkID for all processes are collected.
, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 30, UB: 33
BKID: 0, LB: 30, UB: 33, OPT: 10
Dynamic Programming Runtime: 0.975384
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 1
Iteration: 2, UB: 33, LB: 30start at time: 1505254731
thread: 0, MlBk is called with LB: 30, UB: 31
 thread: 0, LongJobs.size() 21
thread: thread: 1, MlBk is called with LB: 312, MlBk is called with LB: , UB: 3232, UB: 33

 thread: 2, LongJobs.size()  thread: 211
, LongJobs.size() 21
thread: 1, NSTable size: 21
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 5
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 9
thread: 1, i: 0, maxN[i].weit: 6, maxN[i].idx: 0, blockDimSize[i]: 6
thread: 1, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 1, i: 2, maxN[i].weit: 4, maxN[i].idx: 2, blockDimSize[i]: 4
thread: 1, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 1, i: 4, maxN[i].weit: 10, maxN[i].idx: 4, blockDimSize[i]: 10
thread: 1, i: 0, divisor[i]: 2, blockDimSize[i]: 3
thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 2, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 4, divisor[i]: 2, blockDimSize[i]: 5
thread: 1, largestBlockVec.elm: 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 
thread: 1, blockDimSizeComp: 0 0 0 0 0 0 0 0 0 3 3 2 0 0 3 5 
thread: 1, divisorComp: 0 0 0 0 0 0 0 0 0 2 1 2 0 0 1 2 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 
thread: 1, largestNoZeroBlockVec: 1 0 1 0 1 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 , mySum: 3
thread: 2, NSTable size: 20
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 7
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 6
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 8, maxN[i].idx: 0, blockDimSize[i]: 8
thread: 2, i: 1, maxN[i].weit: 4, maxN[i].idx: 1, blockDimSize[i]: 4
thread: 2, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 2, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 2, i: 4, maxN[i].weit: 7, maxN[i].idx: 4, blockDimSize[i]: 7
thread: 2, i: 0, divisor[i]: 2, blockDimSize[i]: 4
thread: 2, i: 1, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, i: 2, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 3, divisor[i]: 1, blockDimSize[i]: 4
thread: thread: 2, i: 4, divisor[i]: 7, blockDimSize[i]: 1
thread: 2, largestBlockVec.elm: 0 0 0 0 10 , NSTable size: 1 190
 thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 01 , alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 5
6thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 2 
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 9
thread: 00, i:  00 , maxN[i].weit: 0 60, maxN[i].idx:  00 , blockDimSize[i]: 06
thread: 0, i: 1, maxN[i].weit: 3 0 
thread: 2, blockDimSizeComp: 0 0 0 0 4 2 3 4 1 0 0 0 0 0 , maxN[i].idx: 01 , blockDimSize[i]: 30
 thread: 0, i: 2, maxN[i].weit: 4, maxN[i].idx: 2, blockDimSize[i]: 4
thread: 0, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 0, i: 4, maxN[i].weit: 10, maxN[i].idx: 4, blockDimSize[i]: 10

thread: 0, i: 0, divisor[i]: thread: 2, blockDimSize[i]: 23, divisorComp: 
0 thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 2, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 4, divisor[i]: 2, blockDimSize[i]: 5
0thread: 0, largestBlockVec.elm:  0 0 0 20  2 10 1  70 0  0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 1 1 0 0 6 0 0 0 00 0  00  00  0
 thread: 2, largestNoZeroBlockVec: 1 1 0 0 6 
0 1 0 1 0 0 0 1 
thread: 0, blockDimSizeComp: 0 0 0 0 0 0 0 0 0 3 3 2 0 0 3 5 
thread: 0, divisorComp: 0 0 0 0 0 0 0 0 0 2 1 2 0 0 1 2 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 
thread: 0, largestNoZeroBlockVec: 1 0 1 0 1 
thread: 2, allBlocks: 0 0thread:  00 , allBlocks: 00 0  00  00  0 00  00  0 00 0 0  00  0 00 0  00 0  0 00 , mySum:  0
0 0 0 0 0 0 0 0 0 0 0, mySum:  0
00 0 0 0 0 0 0 0 1 0 0 0 0 0  0 00  , mySum: 01 0
 10 0 0 0 1 0 0 0 0 0 0 0 0 0 0  , mySum: 01 
, mySum: 0 0 0 0 0 0 0 0 0 0 0 1 0 1
0 0 0 0 0 1 0 0 0 0 00  00 0  00  0, mySum:  10
 0 0 0 0 0 0 0 0 0 1, mySum:  10
 0 0 0 0 0 1 0 0 1 0 0 0 0 00 0  00  0 , mySum: 02
0 0 0 0 1 1 0 0 0 0 0 0 0  0 0 0 0, mySum: 1 , mySum: 
2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 10 0 0 , mySum: 2 
0 0 0 0 0 1 0 0 0 1 0 0 0 00 0 0  0 , mySum: 02
0 0 0 0 0 0 0 0 3 0 0 0 0 1 , mySum: 2
 0 0 0 0 0 0 0 0 0 1 0 0 0 00 0  1 , mySum: 02 0
 0 0 0 0 0 0 0 0 0 1 0 1 0 , mySum: 3
0 0 0 0 0 1 0 0 2 0 0 0 0 00 0  0 0, mySum:  3
0 0 0 0 1 1 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 1 00 0 0 , mySum: 3
0 0 0 0 1 0 0 0 2 0 0 0 0 0  0 00  , mySum: 03 
10 0 0 0 0 0 0 0 4 0 0 0 0 , mySum: 3
 0 0 0 , mySum: 4
0 0 0 0 0 1 0 0 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 1 0 0 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 0 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 1 0 0 3 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 0 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 0 0 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 0 5 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 0 0 5 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 1 0 0 4 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 0 0 0 6 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 0 0 6 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 1 0 0 5 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 1 0 0 6 0 0 0 0 0 0 0 , mySum: 8
thread: 1, maxBlockLvlSize: 3
thread: 1, maxInBlockLvlSize: 48
thread: 1, AllTableSize: 2160, maxSubsetsSize: 64
thread: 2, maxBlockLvlSize: 4
thread: 2, maxInBlockLvlSize: 19
thread: 2, AllTableSize: 2688, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 3
thread: 0, maxInBlockLvlSize: 48
thread: 0, AllTableSize: 2160, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 1 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 1 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 mySum: 2
thread: 0, blockNoZero[4]: 0 0 1 0 1 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[5]: 1 0 0 0 1 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 1 0 1 0 0 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 mySum: 3
thread: 0, blockNoZero[7]: 1 0 1 0 1 
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 6e-06
thread: 0, sOPT: 11
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.17642
thread: 2, sOPT: 10
copy the latest feasible solution to instance takes time: 0.056538
thread: 1, sOPT: 10
BKID: 0, LB: 31, UB: 31, OPT: 10
Dynamic Programming Runtime: 1.56838
Execution time between LB and UB is: 0
By far, all LB UB calculation runtime: 1
********************************************************
Total execution on UB and LB is: 1
OUT of Bk while loop  
UB    31
LB    31
T1    31
T2    31
OPT   10
nMachines   10
BkID	0
AllProbData.size()    2
ck :   1
AllProbData[ck].Ttable    31
ck :   0
AllProbData[ck].Ttable    32
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan34
Main Scheduling is Done
File 1-12 is Done.
******************************
Reading File...
File 1-13 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 49, LB: 30start at time: 1505254732
thread: 0, MlBk is called with LB: 30, UB: 35
thread: 3, MlBk is called with LB: 45, UB: 50
 thread: 0, LongJobs.size() 21
thread: 2, MlBk is called with LB: 40, UB: 45
 thread: 3, LongJobs.size() 16
thread: 1, MlBk is called with LB: 35, UB: 40
 thread: 2, LongJobs.size() 20
 thread: 1, LongJobs.size() 21
thread: 3, NSTable size: 27
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 4
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 6
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 4
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 5, maxN[i].idx: 0, blockDimSize[i]: 5
thread: 3, i: 1, maxN[i].weit: 7, maxN[i].idx: 1, blockDimSize[i]: 7
thread: 3, i: 2, maxN[i].weit: 5, maxN[i].idx: 2, blockDimSize[i]: 5
thread: 3, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 3, i: 0, divisor[i]: 5, blockDimSize[i]: 1
thread: 3, i: 1, divisor[i]: 7, blockDimSize[i]: 1
thread: 3, i: 2, divisor[i]: 5, blockDimSize[i]: 1
thread: 3, i: 3, divisor[i]: 1, blockDimSize[i]: 3
thread: 3, largestBlockVec.elm: 0 0 0 0 0 4 6 4 0 0 0 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 0 0 1 1 1 3 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 0 0 5 7 5 1 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 4 6 4 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 4 6 4 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 0 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 3 0 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 3 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 1 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 1 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 0 3 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 2 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 3 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 2 2 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 3 1 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 3 0 2 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 3 2 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 3 2 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 2 3 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 0 3 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 3 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 4 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 1 2 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 1 3 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 4 0 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 5 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 0 4 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 2 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 3 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 4 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 3 1 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 3 0 3 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 3 3 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 2 4 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 2 2 2 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 2 4 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 2 1 3 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 2 0 4 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 4 0 2 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 3 3 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 4 2 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 5 1 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 1 4 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 4 2 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 2 3 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 3 2 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 4 1 1 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 3 2 1 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 5 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 3 1 2 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 2 3 2 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 2 4 1 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 4 1 2 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 4 0 3 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 2 5 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 4 2 1 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 3 4 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 3 3 1 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 3 2 2 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 3 1 3 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 3 0 4 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 4 3 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 6 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 2 4 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 2 2 3 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 5 2 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 6 1 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 2 1 4 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 3 3 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 5 1 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 4 3 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 4 2 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 3 4 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 3 2 3 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 0 5 3 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 1 5 2 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 3 1 4 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 1 4 3 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 3 5 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 4 0 4 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 1 3 4 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 3 3 2 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 0 6 2 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 3 4 1 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 4 1 3 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 2 3 3 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 2 2 4 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 2 4 2 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 2 5 1 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 4 4 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 4 3 1 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 2 6 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 4 2 2 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 0 4 4 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 1 6 1 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 4 2 3 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 4 3 2 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 0 5 4 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 4 4 1 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 4 5 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 4 1 4 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 0 6 3 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 3 6 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 3 5 1 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 2 3 4 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 2 6 1 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 1 6 2 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 1 5 3 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 1 4 4 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 3 2 4 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 3 3 3 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 3 4 2 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 2 5 2 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 2 4 3 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 4 3 3 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 2 5 3 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 3 5 2 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 4 2 4 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 2 4 4 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 4 4 2 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 4 5 1 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 2 6 2 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 4 6 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 1 6 3 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 1 5 4 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 3 3 4 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 0 6 4 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 3 4 3 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 3 6 1 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 1 6 4 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 0 4 6 1 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 0 3 4 4 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 0 4 5 2 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 0 3 5 3 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 0 4 4 3 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 0 3 6 2 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 0 4 3 4 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 0 2 5 4 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 0 2 6 3 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 0 3 6 3 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 0 4 4 4 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 0 3 5 4 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 0 4 5 3 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 0 2 6 4 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 0 4 6 2 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 0 3 6 4 0 0 0 0 0 0 0 0 , mySum: 13
0 0 0 0 0 4 5 4 0 0 0 0 0 0 0 0 , mySum: 13
0 0 0 0 0 4 6 3 0 0 0 0 0 0 0 0 , mySum: 13
0 0 0 0 0 4 6 4 0 0 0 0 0 0 0 0 , mySum: 14
thread: 3, maxBlockLvlSize: 23
thread: 3, maxInBlockLvlSize: 1
thread: 3, AllTableSize: 525, maxSubsetsSize: 64
thread: 2, NSTable size: 42
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 6
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 5, maxN[i].idx: 0, blockDimSize[i]: 5
thread: 2, i: 1, maxN[i].weit: 5, maxN[i].idx: 1, blockDimSize[i]: 5
thread: 2, i: 2, maxN[i].weit: 7, maxN[i].idx: 2, blockDimSize[i]: 7
thread: 2, i: 3, maxN[i].weit: 5, maxN[i].idx: 3, blockDimSize[i]: 5
thread: 2, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 2, i: 0, divisor[i]: 5, blockDimSize[i]: 1
thread: 2, i: 1, divisor[i]: 5, blockDimSize[i]: 1
thread: 2, i: 2, divisor[i]: 7, blockDimSize[i]: 1
thread: 2, i: 3, divisor[i]: 1, blockDimSize[i]: 5
thread: 2, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, largestBlockVec.elm: 0 0 0 0 4 4 6 0 0 0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 0 1 1 1 5 3 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 5 5 7 1 1 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 4 4 6 0 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 4 4 6 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 3 1 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 1 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 1 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 2 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 3 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 3 0 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 3 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 3 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 0 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 2 2 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 1 3 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 4 0 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 3 0 2 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 3 2 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 3 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 4 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 3 1 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 5 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 0 3 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 4 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 4 1 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 1 2 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 3 2 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 4 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 2 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 3 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 3 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 1 3 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 2 2 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 4 1 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 3 0 3 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 3 1 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 4 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 0 4 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 1 4 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 2 4 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 4 2 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 3 3 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 4 1 1 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 4 2 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 3 1 2 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 4 0 2 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 0 5 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 3 3 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 2 3 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 5 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 3 2 1 0 0 0 0 0 0 0 0 0 , mySum: 6
0thread:  1, NSTable size: 027 
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
0thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 5
thread: 1, i: 5, alltableelemets[maxindex].elm[i]:  40
 thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 6
thread: 0 0 6 0 0 0 0 10, i:  70, alltableelemets[maxindex].elm[i]: 4 
0thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 6 , maxN[i].idx: 0, blockDimSize[i]: 60
thread: 1, i: 1, maxN[i].weit: 5, maxN[i].idx: 1, blockDimSize[i]: 5
thread: 1 , i: 2, maxN[i].weit: 7, maxN[i].idx: 02 , blockDimSize[i]: 7, mySum: 
6thread: 1, i: 3, maxN[i].weit: 5, maxN[i].idx: 3, blockDimSize[i]: 5
thread: 1, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3

thread: 1, i: 0 00 , divisor[i]: 02, blockDimSize[i]:  3
0thread: 1, i: 1, divisor[i]: 5, blockDimSize[i]: 1
thread: 1, i: 2, divisor[i]: 7, blockDimSize[i]: 1
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 5
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 3
 thread: 11, largestBlockVec.elm:  3 2 00  0 0 00  0 0 00  00  0 , mySum: 6
0 0 0 0 4 3 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 2 4 1 0 0 0 0 0 0 01  0 0 , mySum: 74
 0 0 0 0 4 2 1 0 0 0 0 0 0 0 0 0 6 , mySum: 07
 0 0 0 0 2 3 2 0 0 0 0 0 0 0 0 00 , mySum:  70
 00 0 0 0 2 2 3 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0  00  00  04  1 2
thread: 1, blockDimSizeComp: 0 0 0 0 3 1  1 05  0 03  0 00  00  0 00 0  00  , mySum: 7
00 0 0 0 4 0 3 0 0 0 0 0 0 0  0 0 , mySum: 07
0 0 0 0 3 4 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 2 5  7 10 1  0 00  0 00 0  0 00  0 , mySum: 
7thread: 1, largestBlockVec: 0 0 0 0 1 4 6 
00 0 0 0 3 3 1 0 0 0 0 0 0 0 0 0 , mySum: 7
 0 0 0 00 3  0 02 0  20  0 00  0 00 
thread: 1, largestNoZeroBlockVec: 1 4 6 0 0 
 0 0 0 0 0 0 , mySum: 7
0 0 0 0 3 0 4 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 3 1 3 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 2 0 5 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 4 2 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 4 3 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 6 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 3 3 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 3 4 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 2 4 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 0 6 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 2 1 4 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 2 5 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 1 5 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 3 4 1 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 3 2 3 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 2 2 4 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 1 4 3 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 1 2 5 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 4 3 1 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 3 1 4 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 1 1 6 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 1 3 4 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 thread: 01, allBlocks:  00  0 40 0  0 40 0  0 00  0 00  00 0  00  0 00  0 0 , mySum: 08
0 0 0 0 3 3 2 0 0 0  00 0  , mySum: 00 
0 00 0 0 0 0 0 1 0 0 0 0 0  0 00 , mySum:  80 
00 0 0 0 4 2 2 0 0 0 0 0 0 0  0, mySum:  10
0 0 0 0 1 0 0 0 0 0 0  , mySum: 8
0 0 0 0 4 0 4 0 0 0 0 0 0 0 00  00  0 0, mySum: 8 
0 0 0 0 4 4 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 2 1 5 0 0 0 0 0 0 0 0 0 0 0 0 0, mySum: 1 
00 0 0 0 0 0 2 0 0 0 0  0 , mySum: 8
0 0 0 0 2 3 3 0 0 0 0 0 00 0 0 0 0  0, mySum:  20 
00 0 0 0 1 0 1 0 0 0 0  0, mySum:  80
0 0 0 0 0 3 5 0 0 0 0 0 0 0  0 0 0 , mySum: 20
 0 0 0 0 0 0 1 1 0 0 0 0 0, mySum:  08 
0 0 0 0 0 0 0 2 6 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 0 0 0 00  00  00 0  , mySum: 80
 00 0 0 0 3 0 5 0 0 0 0 0 0 0 0  0, mySum: 2 
, mySum: 0 0 0 0 0 2 0 0 0 0 0 8
0 0 0 0 2 4 2 0 0 0 0 0 00 0  00  0 00  0 , mySum: , mySum: 82

0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 2 0 6 0 0 0 0 0 0 0 0 0 0, mySum:  03 
00 0 0 0 0 1 2 0 0 0 0 0 0  0 0 , mySum: 8
0 0 0 0 4 1 3 0 0 0 0 0 00 0 0 , mySum: 3 
0 0 0 0 0 1 0 2 0 0 0 0 0 0 , mySum: 8
0 0 0 0 3 4 2 0 0 0 0 0 0 00 0 0  0, mySum:  90
0 0 0 0 4 2 3 0 0 0 0 0 0 0 0  0 0, mySum:  9
00 0 0 0 4 1 4 0 0 0 0 0 0 0  , mySum: 0 03 , mySum: 9

0 0 0 0 4 3 2 0 0 0 0 0 0 00 0 0 0 0 2 1 0 0 0 0  0 00  00  , mySum: 0 90 , mySum: 
0 0 0 0 0 3 6 0 0 0 0 0 0 3
0 0 0 0 1 1 1 0 0 00 0 0 , mySum: 9
 0 0 0 0 4 0 5 0 0 0 0 0 0 0 0 0 0 00  , mySum: 30 
0 0 0 0 0 1 2 0 0 0 0 0 00 0  0 , mySum: 0 90
 0 0 0 0 0 4 5 0 0 0 0 0 0 0 , mySum: 0 03 
, mySum: 90 0 0 0 0 3 0 0 0 0 0 0
 0 0 0 0 2 2 5 0 0 0 0 0 0 0 0 0, mySum:  03 
00 0 0 0 1 2 1 0 0 0  0 0 , mySum: 9
0 0 0 0 4 4 1 0 0 0 0 0 00 0  0 00 , mySum:  90 0
 0 0 0 0 0 2 1 6 0 0 0 0 0 00 0 0 , mySum:  40 
, mySum: 90 0 0 0 0 4 0 0 0 0 0 
0 0 0 0 0 2 3 4 0 0 0 0 0 00 0  00 0  0, mySum:  9
0 0 0 0 3 2 4 0 0 0 0 0 00 , mySum: 4
0 0 0 0 1 0 3 0 0 0 0 0 0 0 , mySum: 9 
0 0 0 0 1 2 6 0 0 0 0 0 0 0 00 0  0, mySum:  90
 00 0 0 0 3 3 3 0 0 0 0 0 0 0  0 00  , mySum: 9
, mySum: 0 0 0 0 1 4 4 0 0 0 0 0 04
0 0 0 0 0 3 1 0 0 0  0 0 0 , mySum: 9
0 0 0 0 3 1 5 0 0 0 0 0 00 0 0  00  0, mySum:  9
00 0 0 0 1 3 5 0 0 0 0 0 0 0  0 00 0  , mySum: , mySum: 49
0 0 0 0 1 1 2 0 0 0 0 0 0
 0 0 0 0 2 4 3 0 0 0 0 0 00 0  00  0 , mySum: 04 , mySum: 
9
0 0 0 0 3 0 6 0 0 0 0 0 0 00 0 0 0 0 2 2 0 0 0 0  0 0 00  , mySum: 90
 0 0 0 0 4 4 2 0 0 0 0 0 0 00 0 , mySum: 4
0 0 0 0 1 3 0 0 0 0 0 0 , mySum: 10
0 0 0 0 1 4 5 0 0 0 0 0 0 0  0 00  0 , mySum: 0 0 010 
00 0 0 0 2 4 4 0 0 0 0 0 0 0  , mySum: 04 
00 0 0 0 0 1 3 0 0 0 0 0 , mySum: 10
0 0 0 0 2 3 5 0 0 0 0 0 0 0 0 0 0  , mySum: 04 
0 00 0 0 0 0 0 4 0 0 0 0  0 , mySum: 0 0 010 0 
, mySum: 0 0 0 0 4 1 5 0 0 0 0 0 0 0 4
0 0 0 0 1 1 3 0 0 0 0 00  00  0, mySum: 10
 00 0 0 0 2 2 6 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 5 0 0 0  0 0 00  0 00  0, mySum:  10
, mySum: 0 0 0 0 4 2 4 0 0 0 0 0 5
0 0 0 0 1 2 2 0 0 0 00 0 0  00  0 00  0 , mySum: , mySum: 105
0 0 0 0 1 0 4 0 0 0 0
 0 0 0 0 4 0 6 0 0 0 0 0 0 00 0  00  0, mySum:  100
 0 0 0 0 1 3 6 0 0 0 0 0 00 , mySum: 5
0 0 0 0 1 3 1 0 0 0  0 0 0 , mySum: 10
00 0 0 0 0 4 6 0 0 0 0 0 0  0 0 00 , mySum: 10 
0 0 0 0 3 1 6 0 0 0 0 0 0 0 0 0 0 , mySum: 50
 00 0 0 0 1 4 0 0 0 0 0 0  0 00  0 , mySum: 0 10, mySum: 5

0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 3 4 3 0 0 0 0 0 00 0  00  0 , mySum: 100
0 0 0 0 3 2 5 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 3 0 0 0 0  0 0 0 0 0 , mySum: 5
thread: 0, NSTable size: 0 0 200
 00  0 04 1thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 5
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 6
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 0, maxN[i].weit: 6, maxN[i].idx: 0, blockDimSize[i]:  6
 0 , mySum: 10
0 0 0 0 4 3 3 0 0 0 0thread: 0, i: 1, maxN[i].weit:  5, maxN[i].idx: 01, blockDimSize[i]:  50
thread: 0, i: 2, maxN[i].weit: 7, maxN[i].idx: 2, blockDimSize[i]: 70
 0 0 0 , mySum: 10
0 0 0 0 3 3 4 0 0 0 0thread: 0, i: 3 , maxN[i].weit: 0 50 , maxN[i].idx:  0 0 0 0 0 0 0 0 , mySum: 5
30 0 0 0 0 3 2 0 0 0 0 0 0 0, blockDimSize[i]:  50 
0 thread: 00 0, i:  40, maxN[i].weit:  3, mySum: 10, mySum: 
, maxN[i].idx: 4, blockDimSize[i]: 3
0thread: 0, i: 0, divisor[i]: 2, blockDimSize[i]: 3
thread: 0, i: 1, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, i: 2, divisor[i]: 7, blockDimSize[i]: 1
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 5
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 3
 thread: 0, largestBlockVec.elm: 0 0 0 0 00  54 4 3 0 0 0 0 0 0 0 0 0 
, mySum: 110 0 0 0 0 1 5 0 0 0 
0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 2 4 0 0 0 0 0 0 0 4 2 5 0 0 0 00  0 0 0 0 0 , mySum: 111
 0 0 00  0 400  0 0 , mySum: 6
0 0 0 0 1 1 4 0 0 0 0 0 0 0 06  00  , mySum: 60  0 0 0 0 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 0 3 1 1 05 3 0 0 0 0 0 0 0  
4 3thread: 0, divisorComp: 0 0 0 0 2 5 7  4 10  10  0
 0 0 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 1 4 6 0 0 00 0 0 0 0 3 3  0 0 0 0 0 0 0 00 0 0 0 0 0 0 0 0 , mySum: 110 , mySum:  0 0 0 0 
thread: 0, largestNoZeroBlockVec: 1 4 6 0 0 

0 0 0 0 3 3 5 6
0 0 0 0 1 2 3 0 0 0 00 0  0 0 00  00  0, mySum:  6
00 0 0 0 1 0 5 0 0 0  0 0 0 0 , mySum: 110
 0 0 0 0 4 1 6 0 0 0 0 0 0 0 0 0 0 , mySum: 06
0 0 0 0 0 0 6 0 0 0 0 0 0 0 , mySum: 11 
0 0 0 0 0 0 3 4 4 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 4 1 0 0 0 00 0 0 0 , mySum: 11 
0 0 0 0 0 3 2 6 0 0 0 0 0 0 0 00  00  , mySum: 11
00 0 0 0 1 4 6 0 0 0 0 0 0  0 0 0 , mySum: 11
thread: 0, allBlocks: 00 00 0  , mySum:  00 6 
00 0 0 0 0 0 4 2 0 0 0 0 0 0 0 00  00  0 , mySum: 6
 0 0 0 0 0 0 0 00 00  , mySum: 00 0 
0 0 0 0 0 0 1 0 0 0 0 0 0  10  0 30 22 0 0 0 0 0 0 0 0 0 , mySum:  64
 0 0 0 0 1 2 4 0 0 0 0, mySum:  0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 6 0 0 0 0 0 0 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 4 3 0 0 0 0 0 0 00 0 0 , mySum: 7
 5 0 0 0 00  00 0 0 0 1  0 00 0  0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 3 3 0 0 0 0 0 0 0  , mySum: 11
0 0 0 0 2 3 6 0 0 0 0 0 00  0 0 , mySum: 0 00  , mySum: 117
00 0 0 0 4 2 6 0 0 0 0 0 0
0 0 0 0 1 1 5 0 0 0 0  00  00 , mySum: 1
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0  00  0, mySum:  20 , mySum: 7
0 0 0 0 0 2 5 0 0 0 0 0 0 
0 0 0 , mySum: 7
0 0 0 0 1 0 6 0 0 0 0 0 0 00 0 0 0 1 0 1  , mySum: 12
0 0 0 0 3 4 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
 0 0 0 , mySum: 12
00 0 0 0 3 3 6 0 0 0 0 0 0 0  00  00 00   0 0, mySum: 1 12
0 0 0 0 4 3 5 0 0 0 0 0 0 0 , mySum: 7 
00 0 0 0 0 3 4 0 0 0 0 0 0  , mySum: 0 012 
10 0 0 0 2 4 6 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 4 2 0 0 0 0 0 0 , mySum: 12
0 0 0 0 4 4 4 0 0 0 0 0 0 00 0  0 00  0 , mySum: 7
0 0 0 0 1 3 4 0 0 0 0 0 0 00 0  0 00  0 , mySum: 12
0 0 0 0 3 4 6 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 1 4 3 0 0 0 0 0 00 0  0  , mySum: 013
0 0 0 0 4 3 6 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 4 4 0 0 0 0 0 0 , mySum: 013
 00 0 0 0 4 4 5 0 0 0 0 0  0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 13
0 0 0 0 4 4 6 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 00 0 0 0 0 , mySum: 2
0 0 0 0 0 0 3 0 0 0 0  00 , mySum:  140 
 0 0 0 , mySum: 3
0 0 0 0 0 1 2 0 0 0 0 0 00 0  0 00  , mySum: 3
00 0 0 0 1 0 2 0 0 0 0 0 0  , mySum: 0 80
0 0 0 0 1 2 5 0 0 0 0 0 0 0  0 0 0, mySum:  8
, mySum: 0 0 0 0 1 1 6 0 0 0 0 0 0 3
0 0 0 0 0 2 1 0 0 0 0 0 0 00 0  0 , mySum: 03
 0 0 0 0 1 1 1 0 0 0 0 0 00 , mySum: 8
0 0 0 0 0 2 6 0 0 0 0 0 0  0 0 00  , mySum: 8
0 0 0 0 0 3 5 0 0 0 0 0 00 0 0  00  , mySum: 8, mySum: 
30 0 0 0 1 2 6 0 0 0 0 0 0 
0 0 0 0 0 1 2 0 0 0 0 0 0 00 0 0  0 0, mySum:  3, mySum: 9

0 0 0 0 1 3 5 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 3 6 0 0 0 0 0 00 0 0 0 0  0 0, mySum:  30
 0 0 0 0 1 2 1 0 0 0 0 0 0 0 , mySum: 0 0 9, mySum: 4

0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 0 4 5 0 0 0 0 00 0  0 00 0  , mySum: 90
 , mySum: 0 0 0 0 1 4 4 0 0 0 0 0 0 04 0 0
 0 0 0 0 1 0 3 0 0 0 0 0 0 0 , mySum: 0 0 9, mySum: 4

0 0 0 0 0 3 1 0 0 0 0 0 0 00 0 0 0 1 3 6 0 0 0 0  0 0 , mySum: 40
 00 0 0 0 1 1 2 0 0 0 0 0 0  0 0 0 , mySum: 100
 00 0 0 0 0 4 6 0 0 0 0 0  0 , mySum: 4
0 0 0 0 0 2 2 0 0 0 0 0 0 00 0  00  0 , mySum: 0 4, mySum: 
100 0 0 0 1 3 0 0 0 0 0 0 0 
0 0 0 0 0 1 4 5 0 0 0 0 00 0 0  0 0, mySum: 4 
0 0 0 0 0 0 1 3 0 0 0 0 0 0 0, mySum: 10
0 0 0 0 1 4 6 0 0 0 0 0 0 0  0 0 00 , mySum: 11 
, mySum: 4
0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 1 3 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 5 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 2 2 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 4 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 3 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 4 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 3 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 4 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 3 2 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 5 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 2 4 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 1 4 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 3 3 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 2 3 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 0 5 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 4 1 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 4 2 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 3 2 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 2 4 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 6 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 4 3 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 3 3 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 1 5 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 2 5 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 0 6 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 3 4 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 4 2 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 3 4 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 1 4 3 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 4 4 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 1 2 5 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 1 1 6 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 2 6 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 3 5 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 1 2 6 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 1 3 5 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 3 6 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 4 5 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 1 4 4 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 1 3 6 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 4 6 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 1 4 5 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 1 4 6 0 0 0 0 0 0 0 0 0 , mySum: 11
thread: 2, maxBlockLvlSize: 23
thread: 2, maxInBlockLvlSize: 3
thread: 2, AllTableSize: 2625, maxSubsetsSize: 64
thread: 1, maxBlockLvlSize: 10
thread: 1, maxInBlockLvlSize: 9
thread: 1, AllTableSize: 3150, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 10
thread: 0, maxInBlockLvlSize: 9
thread: 0, AllTableSize: 3150, maxSubsetsSize: 64
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 6
copy the latest feasible solution to instance takes time: 0.027611
thread: 3, sOPT: 6
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 1 0 0 
thread: 0, allBlocks[2]: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 1 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 1 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 2 0 0 
thread: 0, allBlocks[5]: 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 1 0 1 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 1 1 0 0 
thread: 0, allBlocks[7]: 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 1 1 0 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[8]: 0 2 0 0 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[9]: 0 0 3 0 0 
thread: 0, allBlocks[10]: 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 0 1 2 0 0 
thread: 0, allBlocks[11]: 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 1 0 2 0 0 
thread: 0, allBlocks[12]: 0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[12]: 0 2 1 0 0 
thread: 0, allBlocks[13]: 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[13]: 1 1 1 0 0 
thread: 0, allBlocks[14]: 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[14]: 1 2 0 0 0 
thread: 0, allBlocks[15]: 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[15]: 0 3 0 0 0 
thread: 0, allBlocks[16]: 0 0 0 0 1 2 1 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[16]: 1 2 1 0 0 
thread: 0, allBlocks[17]: 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[17]: 0 4 0 0 0 
thread: 0, allBlocks[18]: 0 0 0 0 1 0 3 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[18]: 1 0 3 0 0 
thread: 0, allBlocks[19]: 0 0 0 0 0 3 1 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[19]: 0 3 1 0 0 
thread: 0, allBlocks[20]: 0 0 0 0 1 1 2 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[20]: 1 1 2 0 0 
thread: 0, allBlocks[21]: 0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[21]: 0 2 2 0 0 
thread: 0, allBlocks[22]: 0 0 0 0 1 3 0 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[22]: 1 3 0 0 0 
thread: 0, allBlocks[23]: 0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[23]: 0 1 3 0 0 
thread: 0, allBlocks[24]: 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[24]: 0 0 4 0 0 
thread: 0, allBlocks[25]: 0 0 0 0 1 1 3 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[25]: 1 1 3 0 0 
thread: 0, allBlocks[26]: 0 0 0 0 0 0 5 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[26]: 0 0 5 0 0 
thread: 0, allBlocks[27]: 0 0 0 0 1 2 2 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[27]: 1 2 2 0 0 
thread: 0, allBlocks[28]: 0 0 0 0 1 0 4 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[28]: 1 0 4 0 0 
thread: 0, allBlocks[29]: 0 0 0 0 1 3 1 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[29]: 1 3 1 0 0 
thread: 0, allBlocks[30]: 0 0 0 0 1 4 0 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[30]: 1 4 0 0 0 
thread: 0, allBlocks[31]: 0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[31]: 0 1 4 0 0 
thread: 0, allBlocks[32]: 0 0 0 0 0 2 3 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[32]: 0 2 3 0 0 
thread: 0, allBlocks[33]: 0 0 0 0 0 4 1 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[33]: 0 4 1 0 0 
thread: 0, allBlocks[34]: 0 0 0 0 0 3 2 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[34]: 0 3 2 0 0 
thread: 0, allBlocks[35]: 0 0 0 0 0 1 5 0 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[35]: 0 1 5 0 0 
thread: 0, allBlocks[36]: 0 0 0 0 0 2 4 0 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[36]: 0 2 4 0 0 
thread: 0, allBlocks[37]: 0 0 0 0 1 1 4 0 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[37]: 1 1 4 0 0 
thread: 0, allBlocks[38]: 0 0 0 0 0 3 3 0 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[38]: 0 3 3 0 0 
thread: 0, allBlocks[39]: 0 0 0 0 1 2 3 0 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[39]: 1 2 3 0 0 
thread: 0, allBlocks[40]: 0 0 0 0 1 0 5 0 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[40]: 1 0 5 0 0 
thread: 0, allBlocks[41]: 0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[41]: 0 0 6 0 0 
thread: 0, allBlocks[42]: 0 0 0 0 1 4 1 0 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[42]: 1 4 1 0 0 
thread: 0, allBlocks[43]: 0 0 0 0 0 4 2 0 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[43]: 0 4 2 0 0 
thread: 0, allBlocks[44]: 0 0 0 0 1 3 2 0 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[44]: 1 3 2 0 0 
thread: 0, allBlocks[45]: 0 0 0 0 1 2 4 0 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[45]: 1 2 4 0 0 
thread: 0, allBlocks[46]: 0 0 0 0 0 1 6 0 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[46]: 0 1 6 0 0 
thread: 0, allBlocks[47]: 0 0 0 0 0 4 3 0 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[47]: 0 4 3 0 0 
thread: 0, allBlocks[48]: 0 0 0 0 1 3 3 0 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[48]: 1 3 3 0 0 
thread: 0, allBlocks[49]: 0 0 0 0 1 1 5 0 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[49]: 1 1 5 0 0 
thread: 0, allBlocks[50]: 0 0 0 0 0 2 5 0 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[50]: 0 2 5 0 0 
thread: 0, allBlocks[51]: 0 0 0 0 1 0 6 0 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[51]: 1 0 6 0 0 
thread: 0, allBlocks[52]: 0 0 0 0 0 3 4 0 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[52]: 0 3 4 0 0 
thread: 0, allBlocks[53]: 0 0 0 0 1 4 2 0 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[53]: 1 4 2 0 0 
thread: 0, allBlocks[54]: 0 0 0 0 1 3 4 0 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[54]: 1 3 4 0 0 
thread: 0, allBlocks[55]: 0 0 0 0 1 4 3 0 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[55]: 1 4 3 0 0 
thread: 0, allBlocks[56]: 0 0 0 0 0 4 4 0 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[56]: 0 4 4 0 0 
thread: 0, allBlocks[57]: 0 0 0 0 1 2 5 0 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[57]: 1 2 5 0 0 
thread: 0, allBlocks[58]: 0 0 0 0 1 1 6 0 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[58]: 1 1 6 0 0 
thread: 0, allBlocks[59]: 0 0 0 0 0 2 6 0 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[59]: 0 2 6 0 0 
thread: 0, allBlocks[60]: 0 0 0 0 0 3 5 0 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[60]: 0 3 5 0 0 
thread: 0, allBlocks[61]: 0 0 0 0 1 2 6 0 0 0 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[61]: 1 2 6 0 0 
thread: 0, allBlocks[62]: 0 0 0 0 1 3 5 0 0 0 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[62]: 1 3 5 0 0 
thread: 0, allBlocks[63]: 0 0 0 0 0 3 6 0 0 0 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[63]: 0 3 6 0 0 
thread: 0, allBlocks[64]: 0 0 0 0 0 4 5 0 0 0 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[64]: 0 4 5 0 0 
thread: 0, allBlocks[65]: 0 0 0 0 1 4 4 0 0 0 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[65]: 1 4 4 0 0 
thread: 0, allBlocks[66]: 0 0 0 0 1 3 6 0 0 0 0 0 0 0 0 0 mySum: 10
thread: 0, blockNoZero[66]: 1 3 6 0 0 
thread: 0, allBlocks[67]: 0 0 0 0 0 4 6 0 0 0 0 0 0 0 0 0 mySum: 10
thread: 0, blockNoZero[67]: 0 4 6 0 0 
thread: 0, allBlocks[68]: 0 0 0 0 1 4 5 0 0 0 0 0 0 0 0 0 mySum: 10
thread: 0, blockNoZero[68]: 1 4 5 0 0 
thread: 0, allBlocks[69]: 0 0 0 0 1 4 6 0 0 0 0 0 0 0 0 0 mySum: 11
thread: 0, blockNoZero[69]: 1 4 6 0 0 
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 7
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.223329
thread: 2, sOPT: 7
copy the latest feasible solution to instance takes time: 0.174303
thread: 0, sOPT: 10
copy the latest feasible solution to instance takes time: 0.16895
thread: 1, sOPT: 9
Thread: 1, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 3, MlBk function is done, and BkID for all processes are collected.
0, MlBk function is done, and BkID for all processes are collected.
Thread: 2, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 30, UB: 33
BKID: 0, LB: 30, UB: 33, OPT: 10
Dynamic Programming Runtime: 1.81599
Execution time between LB and UB is: 0
By far, all LB UB calculation runtime: 0
Iteration: 2, UB: 33, LB: 30start at time: 1505254732
thread: 0, MlBk is called with LB: 30, UB: 31
 thread: 0, LongJobs.size() 21
thread: thread: 1, MlBk is called with LB: 31, UB: 322
, MlBk is called with LB: 32, UB: 33
 thread: 1, LongJobs.size() 21
 thread: 2, LongJobs.size() 21
thread: 2, NSTable size: 20
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 5
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 6
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 6, maxN[i].idx: 0, blockDimSize[i]: 6
thread: 2, i: 1, maxN[i].weit: 5, maxN[i].idx: 1, blockDimSize[i]: 5
thread: 2, i: 2, maxN[i].weit: 7, maxN[i].idx: 2, blockDimSize[i]: 7
thread: 2, i: 3, maxN[i].weit: 5, maxN[i].idx: 3, blockDimSize[i]: 5
thread: 2, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 2, i: 0, divisor[i]: 2, blockDimSize[i]: 3
thread: 2, i: 1, divisor[i]: 5, blockDimSize[i]: 1
thread: 2, i: 2, divisor[i]: 7, blockDimSize[i]: 1
thread: 2, i: 3, divisor[i]: 1, blockDimSize[i]: 5
thread: 2, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, largestBlockVec.elm: 0 0 0 0 1 4 6 0 0 0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 0 3 1 1 5 3 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 2 5 7 1 1 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 1 4 6 0 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 1 4 6 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 2 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 3 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 3 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 1 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 3 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 1 3 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 5 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 2 2 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 4 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 3 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 4 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 3 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 4 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 3 2 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 5 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 2 4 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 1 4 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 3 3 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 2 3 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 0 5 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 4 1 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 4 2 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 3 2 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 2 4 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 6 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 4 3 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 3 3 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 1 5 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 2 5 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 0 6 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 3 4 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 4 2 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 3 4 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 1 4 3 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 4 4 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 1 2 5 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 1 1 6 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 2 6 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 3 5 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 1 2 6 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 1 3 5 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 3 6 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 4 5 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 1 4 4 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 1 3 6 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 0 4 6 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 1 4 5 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 1 4 6 0 0 0 0 0 0 0 0 0 , mySum: 11
thread: 2, maxBlockLvlSize: 10
thread: 2, maxInBlockLvlSize: 9
thread: 2, AllTableSize: 3150, maxSubsetsSize: 64
thread: 1, NSTable size: 33
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 6
thread: 1, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 1, i: 1, maxN[i].weit: 5, maxN[i].idx: 1, blockDimSize[i]: 5
thread: 1, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 1, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 1, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 1, i: 5, maxN[i].weit: 5, maxN[i].idx: 5, blockDimSize[i]: 5
thread: 1, i: 6, maxN[i].weit: 7, maxN[i].idx: 6, blockDimSize[i]: 7
thread: 1, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 1, divisor[i]: 5, blockDimSize[i]: 1
thread: 1, i: 2, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 5, divisor[i]: 5, blockDimSize[i]: 1
thread: 1, i: 6, divisor[i]: 7, blockDimSize[i]: 1
thread: 1, largestBlockVec.elm: 0 0 0 0 0 0 0 0 0 0 4 0 0 0 4 6 
thread: 1, blockDimSizeComp: 0 0 0 0 0 0 0 0 0 2 1 3 3 3 1 1 
thread: 1, divisorComp: 0 0 0 0 0 0 0 0 0 1 5 1 1 1 5 7 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 4 0 0 0 4 6 
thread: 1, largestNoZeroBlockVec: 0 4 0 0 0 4 6 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 , mySum: 2
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 2 , mySum: 3
0 0 0 0 0 0 0 0 0 0 2 0 0 0 1 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 1 0 0 0 2 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 2 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 , mySum: 3
0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 , mySum: 4
0 0 0 0 0 0 0 0 0 0 3 0 0 0 1 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 2 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 3 , mySum: 4
0 0 0 0 0 0 0 0 0 0 2 0 0 0 1 1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 1 0 0 0 2 1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 3 , mySum: 4
0 0 0 0 0 0 0 0 0 0 1 0 0 0 3 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 2 , mySum: 4
0 0 0 0 0 0 0 0 0 0 2 0 0 0 2 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 2 , mySum: 4
0 0 0 0 0 0 0 0 0 0 1 0 0 0 2 2 , mySum: 5
0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 3 , mySum: 5
0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 1 , mySum: 5
0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 2 , mySum: 5
0 0 0 0 0 0 0 0 0 0 3 0 0 0 2 0 , mySum: 5
0 0 0 0 0 0 0 0 0 0 1 0 0 0 3 1 , mySum: 5
0 0 0 0 0 0 0 0 0 0 1 0 0 0 4 0 , mySum: 5
0 0 0 0 0 0 0 0 0 0 3 0 0 0 1 1 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5 , mySum: 5
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 3 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 4 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 1 , mySum: 5
0 0 0 0 0 0 0 0 0 0 4 0 0 0 1 0 , mySum: 5
0 0 0 0 0 0 0 0 0 0 2 0 0 0 1 2 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 2 , mySum: 5
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 4 , mySum: 5
0 0 0 0 0 0 0 0 0 0 2 0 0 0 2 1 , mySum: 5
0 0 0 0 0 0 0 0 0 0 2 0 0 0 3 0 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 3 , mySum: 5
0 0 0 0 0 0 0 0 0 0 2 0 0 0 1 3 , mySum: 6
0 0 0 0 0 0 0 0 0 0 2 0 0 0 2 2 , mySum: 6
0 0 0 0 0 0 0 0 0 0 1 0 0 0 4 1 , mySum: 6
0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 3 , mySum: 6
0 0 0 0 0 0 0 0 0 0 2 0 0 0 3 1 , mySum: 6
0 0 0 0 0 0 0 0 0 0 2 0 0 0 4 0 , mySum: 6
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 4 , mySum: 6
0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 4 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 4 , mySum: 6
0 0 0 0 0 0 0 0 0 0 4 0 0 0 2 0 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 , mySum: 6
0 0 0 0 0 0 0 0 0 0 4 0 0 0 1 1 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 2 , mySum: 6
0 0 0 0 0 0 0 0 0 0 3 0 0 0 1 2 , mySum: 6
0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 2 , mySum: 6
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 5 , mySum: 6
0 0 0 0 0 0 0 0 0 0 3 0 0 0 3 0 , mySum: 6
0 0 0 0 0 0 0 0 0 0 1 0 0 0 2 3 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 5 , mySum: 6
0 0 0 0 0 0 0 0 0 0 3 0 0 0 2 1 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6 , mySum: 6
0 0 0 0 0 0 0 0 0 0 1 0 0 0 3 2 , mySum: 6
0 0 0 0 0 0 0 0 0 0 4 0 0 0 3 0 , mySum: 7
0 0 0 0 0 0 0 0 0 0 2 0 0 0 4 1 , mySum: 7
0 0 0 0 0 0 0 0 0 0 4 0 0 0 2 1 , mySum: 7
0 0 0 0 0 0 0 0 0 0 2 0 0 0 3 2 , mySum: 7
0 0 0 0 0 0 0 0 0 0 2 0 0 0 2 3 , mySum: 7
0 0 0 0 0 0 0 0 0 0 4 0 0 0 1 2 , mySum: 7
0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 3 , mySum: 7
0 0 0 0 0 0 0 0 0 0 3 0 0 0 4 0 , mySum: 7
0 0 0 0 0 0 0 0 0 0 3 0 0 0 3 1 , mySum: 7
0 0 0 0 0 0 0 0 0 0 3 0 0 0 2 2 , mySum: 7
0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 4 , mySum: 7
0 0 0 0 0 0 0 0 0 0 3 0 0 0 1 3 , mySum: 7
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 5 , mySum: 7
0 0 0 0 0 0 0 0 0 0 1 0 0 0 4 2 , mySum: 7
0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 3 , mySum: 7
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 6 , mySum: 7
0 0 0 0 0 0 0 0 0 0 1 0 0 0 3 3 , mySum: 7
0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 4 , mySum: 7
0 0 0 0 0 0 0 0 0 0 1 0 0 0 2 4 , mySum: 7
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 6 , mySum: 7
0 0 0 0 0 0 0 0 0 0 2 0 0 0 1 4 , mySum: 7
0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 5 , mySum: 7
0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 5 , mySum: 7
0 0 0 0 0 0 0 0 0 0 3 0 0 0 4 1 , mySum: 8
0 0 0 0 0 0 0 0 0 0 3 0 0 0 2 3 , mySum: 8
0 0 0 0 0 0 0 0 0 0 2 0 0 0 2 4 , mySum: 8
0 0 0 0 0 0 0 0 0 0 1 0 0 0 4 3 , mySum: 8
0 0 0 0 0 0 0 0 0 0 1 0 0 0 2 5 , mySum: 8
0 0 0 0 0 0 0 0 0 0 4 0 0 0 3 1 , mySum: 8
0 0 0 0 0 0 0 0 0 0 3 0 0 0 1 4 , mySum: 8
0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 6 , mySum: 8
0 0 0 0 0 0 0 0 0 0 1 0 0 0 3 4 , mySum: 8
0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 4 , mySum: 8
0 0 0 0 0 0 0 0 0 0 3 0 0 0 3 2 , mySum: 8
0 0 0 0 0 0 0 0 0 0 4 0 0 0 2 2 , mySum: 8
0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 4 , mySum: 8
0 0 0 0 0 0 0 0 0 0 4 0 0 0 4 0 , mySum: 8
0 0 0 0 0 0 0 0 0 0 2 0 0 0 1 5 , mySum: 8
0 0 0 0 0 0 0 0 0 0 2 0 0 0 3 3 , mySum: 8
0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 5 , mySum: 8
0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 6 , mySum: 8
0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 5 , mySum: 8
0 0 0 0 0 0 0 0 0 0 2 0 0 0 4 2 , mySum: 8
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 6 , mySum: 8
0 0 0 0 0 0 0 0 0 0 4 0 0 0 1 3 , mySum: 8
0 0 0 0 0 0 0 0 0 0 3 0 0 0 4 2 , mySum: 9
0 0 0 0 0 0 0 0 0 0 4 0 0 0 2 3 , mySum: 9
0 0 0 0 0 0 0 0 0 0 4 0 0 0 1 4 , mySum: 9
0 0 0 0 0 0 0 0 0 0 4 0 0 0 3 2 , mySum: 9
0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 6 , mySum: 9
0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 5 , mySum: 9
0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 5 , mySum: 9
0 0 0 0 0 0 0 0 0 0 2 0 0 0 2 5 , mySum: 9
0 0 0 0 0 0 0 0 0 0 4 0 0 0 4 1 , mySum: 9
0 0 0 0 0 0 0 0 0 0 2 0 0 0 1 6 , mySum: 9
0 0 0 0 0 0 0 0 0 0 2 0 0 0 3 4 , mySum: 9
0 0 0 0 0 0 0 0 0 0 3 0 0 0 2 4 , mySum: 9
0 0 0 0 0 0 0 0 0 0 1 0 0 0 2 6 , mySum: 9
0 0 0 0 0 0 0 0 0 0 3 0 0 0 3 3 , mySum: 9
0 0 0 0 0 0 0 0 0 0 1 0 0 0 4 4 , mySum: 9
0 0 0 0 0 0 0 0 0 0 3 0 0 0 1 5 , mySum: 9
0 0 0 0 0 0 0 0 0 0 1 0 0 0 3 5 , mySum: 9
0 0 0 0 0 0 0 0 0 0 2 0 0 0 4 3 , mySum: 9
0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 6 , mySum: 9
0 0 0 0 0 0 0 0 0 0 4 0 0 0 4 2 , mySum: 10
0 0 0 0 0 0 0 0 0 0 1 0 0 0 4 5 , mySum: 10
0 0 0 0 0 0 0 0 0 0 2 0 0 0 4 4 , mySum: 10
0 0 0 0 0 0 0 0 0 0 2 0 0 0 3 5 , mySum: 10
0 0 0 0 0 0 0 0 0 0 4 0 0 0 1 5 , mySum: 10
0 0 0 0 0 0 0 0 0 0 2 0 0 0 2 6 , mySum: 10
0 0 0 0 0 0 0 0 0 0 4 0 0 0 2 4 , mySum: 10
0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 6 , mySum: 10
0 0 0 0 0 0 0 0 0 0 1 0 0 0 3 6 , mySum: 10
0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 6 , mySum: 10
0 0 0 0 0 0 0 0 0 0 3 0 0 0 1 6 , mySum: 10
0 0 0 0 0 0 0 0 0 0 3 0 0 0 4 3 , mySum: 10
0 0 0 0 0 0 0 0 0 0 3 0 0 0 2 5 , mySum: 10
0 0 0 0 0 0 0 0 0 0 4 0 0 0 3 3 , mySum: 10
0 0 0 0 0 0 0 0 0 0 3 0 0 0 3 4 , mySum: 10
0 0 0 0 0 0 0 0 0 0 4 0 0 0 4 3 , mySum: 11
0 0 0 0 0 0 0 0 0 0 4 0 0 0 2 5 , mySum: 11
0 0 0 0 0 0 0 0 0 0 4 0 0 0 3 4 , mySum: 11
0 0 0 0 0 0 0 0 0 0 3 0 0 0 3 5 , mySum: 11
0 0 0 0 0 0 0 0 0 0 4 0 0 0 1 6 , mySum: 11
0 0 0 0 0 0 0 0 0 0 3 0 0 0 4 4 , mySum: 11
0 0 0 0 0 0 0 0 0 0 3 0 0 0 2 6 , mySum: 11
0 0 0 0 0 0 0 0 0 0 1 0 0 0 4 6 , mySum: 11
0 0 0 0 0 0 0 0 0 0 2 0 0 0 4 5 , mySum: 11
0 0 0 0 0 0 0 0 0 0 2 0 0 0 3 6 , mySum: 11
0 0 0 0 0 0 0 0 0 0 4 0 0 0 2 6 , mySum: 12
0 0 0 0 0 0 0 0 0 0 3 0 0 0 4 5 , mySum: 12
0 0 0 0 0 0 0 0 0 0 3 0 0 0 3 6 , mySum: 12
0 0 0 0 0 0 0 0 0 0 4 0 0 0 3 5 , mySum: 12
0 0 0 0 0 0 0 0 0 0 2 0 0 0 4 6 , mySum: 12
0 0 0 0 0 0 0 0 0 0 4 0 0 0 4 4 , mySum: 12
0 0 0 0 0 0 0 0 0 0 3 0 0 0 4 6 , mySum: 13
0 0 0 0 0 0 0 0 0 0 4 0 0 0 3 6 , mySum: 13
0 0 0 0 0 0 0 0 0 0 4 0 0 0 4 5 , mySum: 13
0 0 0 0 0 0 0 0 0 0 4 0 0 0 4 6 , mySum: 14
thread: 0, NSTable size: 32
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 6
thread: 0, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 0, i: 1, maxN[i].weit: 5, maxN[i].idx: 1, blockDimSize[i]: 5
thread: 0, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 0, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 0, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 0, i: 5, maxN[i].weit: 5, maxN[i].idx: 5, blockDimSize[i]: 5
thread: 0, i: 6, maxN[i].weit: 7, maxN[i].idx: 6, blockDimSize[i]: 7
thread: 0, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 1, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, i: 2, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 5, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, i: 6, divisor[i]: 7, blockDimSize[i]: 1
thread: 0, largestBlockVec.elm: 0 0 0 0 0 0 0 0 0 0 4 0 0 0 4 6 
thread: 0, blockDimSizeComp: 0 0 0 0 0 0 0 0 0 2 1 3 3 3 1 1 
thread: 0, divisorComp: 0 0 0 0 0 0 0 0 0 1 5 1 1 1 5 7 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 4 0 0 0 4 6 
thread: 0, largestNoZeroBlockVec: 0 4 0 0 0 4 6 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 , mySum: 2
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 2 , mySum: 3
0 0 0 0 0 0 0 0 0 0 2 0 0 0 1 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 1 0 0 0 2 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 2 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 , mySum: 3
0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 , mySum: 4
0 0 0 0 0 0 0 0 0 0 3 0 0 0 1 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 2 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 3 , mySum: 4
0 0 0 0 0 0 0 0 0 0 2 0 0 0 1 1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 1 0 0 0 2 1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 3 , mySum: 4
0 0 0 0 0 0 0 0 0 0 1 0 0 0 3 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 2 , mySum: 4
0 0 0 0 0 0 0 0 0 0 2 0 0 0 2 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 2 , mySum: 4
0 0 0 0 0 0 0 0 0 0 1 0 0 0 2 2 , mySum: 5
0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 3 , mySum: 5
0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 1 , mySum: 5
0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 2 , mySum: 5
0 0 0 0 0 0 0 0 0 0 3 0 0 0 2 0 , mySum: 5
0 0 0 0 0 0 0 0 0 0 1 0 0 0 3 1 , mySum: 5
0 0 0 0 0 0 0 0 0 0 1 0 0 0 4 0 , mySum: 5
0 0 0 0 0 0 0 0 0 0 3 0 0 0 1 1 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5 , mySum: 5
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 3 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 4 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 1 , mySum: 5
0 0 0 0 0 0 0 0 0 0 4 0 0 0 1 0 , mySum: 5
0 0 0 0 0 0 0 0 0 0 2 0 0 0 1 2 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 2 , mySum: 5
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 4 , mySum: 5
0 0 0 0 0 0 0 0 0 0 2 0 0 0 2 1 , mySum: 5
0 0 0 0 0 0 0 0 0 0 2 0 0 0 3 0 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 3 , mySum: 5
0 0 0 0 0 0 0 0 0 0 2 0 0 0 1 3 , mySum: 6
0 0 0 0 0 0 0 0 0 0 2 0 0 0 2 2 , mySum: 6
0 0 0 0 0 0 0 0 0 0 1 0 0 0 4 1 , mySum: 6
0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 3 , mySum: 6
0 0 0 0 0 0 0 0 0 0 2 0 0 0 3 1 , mySum: 6
0 0 0 0 0 0 0 0 0 0 2 0 0 0 4 0 , mySum: 6
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 4 , mySum: 6
0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 4 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 4 , mySum: 6
0 0 0 0 0 0 0 0 0 0 4 0 0 0 2 0 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 , mySum: 6
0 0 0 0 0 0 0 0 0 0 4 0 0 0 1 1 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 2 , mySum: 6
0 0 0 0 0 0 0 0 0 0 3 0 0 0 1 2 , mySum: 6
0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 2 , mySum: 6
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 5 , mySum: 6
0 0 0 0 0 0 0 0 0 0 3 0 0 0 3 0 , mySum: 6
0 0 0 0 0 0 0 0 0 0 1 0 0 0 2 3 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 5 , mySum: 6
0 0 0 0 0 0 0 0 0 0 3 0 0 0 2 1 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6 , mySum: 6
0 0 0 0 0 0 0 0 0 0 1 0 0 0 3 2 , mySum: 6
0 0 0 0 0 0 0 0 0 0 4 0 0 0 3 0 , mySum: 7
0 0 0 0 0 0 0 0 0 0 2 0 0 0 4 1 , mySum: 7
0 0 0 0 0 0 0 0 0 0 4 0 0 0 2 1 , mySum: 7
0 0 0 0 0 0 0 0 0 0 2 0 0 0 3 2 , mySum: 7
0 0 0 0 0 0 0 0 0 0 2 0 0 0 2 3 , mySum: 7
0 0 0 0 0 0 0 0 0 0 4 0 0 0 1 2 , mySum: 7
0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 3 , mySum: 7
0 0 0 0 0 0 0 0 0 0 3 0 0 0 4 0 , mySum: 7
0 0 0 0 0 0 0 0 0 0 3 0 0 0 3 1 , mySum: 7
0 0 0 0 0 0 0 0 0 0 3 0 0 0 2 2 , mySum: 7
0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 4 , mySum: 7
0 0 0 0 0 0 0 0 0 0 3 0 0 0 1 3 , mySum: 7
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 5 , mySum: 7
0 0 0 0 0 0 0 0 0 0 1 0 0 0 4 2 , mySum: 7
0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 3 , mySum: 7
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 6 , mySum: 7
0 0 0 0 0 0 0 0 0 0 1 0 0 0 3 3 , mySum: 7
0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 4 , mySum: 7
0 0 0 0 0 0 0 0 0 0 1 0 0 0 2 4 , mySum: 7
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 6 , mySum: 7
0 0 0 0 0 0 0 0 0 0 2 0 0 0 1 4 , mySum: 7
0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 5 , mySum: 7
0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 5 , mySum: 7
0 0 0 0 0 0 0 0 0 0 3 0 0 0 4 1 , mySum: 8
0 0 0 0 0 0 0 0 0 0 3 0 0 0 2 3 , mySum: 8
0 0 0 0 0 0 0 0 0 0 2 0 0 0 2 4 , mySum: 8
0 0 0 0 0 0 0 0 0 0 1 0 0 0 4 3 , mySum: 8
0 0 0 0 0 0 0 0 0 0 1 0 0 0 2 5 , mySum: 8
0 0 0 0 0 0 0 0 0 0 4 0 0 0 3 1 , mySum: 8
0 0 0 0 0 0 0 0 0 0 3 0 0 0 1 4 , mySum: 8
0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 6 , mySum: 8
0 0 0 0 0 0 0 0 0 0 1 0 0 0 3 4 , mySum: 8
0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 4 , mySum: 8
0 0 0 0 0 0 0 0 0 0 3 0 0 0 3 2 , mySum: 8
0 0 0 0 0 0 0 0 0 0 4 0 0 0 2 2 , mySum: 8
0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 4 , mySum: 8
0 0 0 0 0 0 0 0 0 0 4 0 0 0 4 0 , mySum: 8
0 0 0 0 0 0 0 0 0 0 2 0 0 0 1 5 , mySum: 8
0 0 0 0 0 0 0 0 0 0 2 0 0 0 3 3 , mySum: 8
0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 5 , mySum: 8
0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 6 , mySum: 8
0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 5 , mySum: 8
0 0 0 0 0 0 0 0 0 0 2 0 0 0 4 2 , mySum: 8
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 6 , mySum: 8
0 0 0 0 0 0 0 0 0 0 4 0 0 0 1 3 , mySum: 8
0 0 0 0 0 0 0 0 0 0 3 0 0 0 4 2 , mySum: 9
0 0 0 0 0 0 0 0 0 0 4 0 0 0 2 3 , mySum: 9
0 0 0 0 0 0 0 0 0 0 4 0 0 0 1 4 , mySum: 9
0 0 0 0 0 0 0 0 0 0 4 0 0 0 3 2 , mySum: 9
0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 6 , mySum: 9
0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 5 , mySum: 9
0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 5 , mySum: 9
0 0 0 0 0 0 0 0 0 0 2 0 0 0 2 5 , mySum: 9
0 0 0 0 0 0 0 0 0 0 4 0 0 0 4 1 , mySum: 9
0 0 0 0 0 0 0 0 0 0 2 0 0 0 1 6 , mySum: 9
0 0 0 0 0 0 0 0 0 0 2 0 0 0 3 4 , mySum: 9
0 0 0 0 0 0 0 0 0 0 3 0 0 0 2 4 , mySum: 9
0 0 0 0 0 0 0 0 0 0 1 0 0 0 2 6 , mySum: 9
0 0 0 0 0 0 0 0 0 0 3 0 0 0 3 3 , mySum: 9
0 0 0 0 0 0 0 0 0 0 1 0 0 0 4 4 , mySum: 9
0 0 0 0 0 0 0 0 0 0 3 0 0 0 1 5 , mySum: 9
0 0 0 0 0 0 0 0 0 0 1 0 0 0 3 5 , mySum: 9
0 0 0 0 0 0 0 0 0 0 2 0 0 0 4 3 , mySum: 9
0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 6 , mySum: 9
0 0 0 0 0 0 0 0 0 0 4 0 0 0 4 2 , mySum: 10
0 0 0 0 0 0 0 0 0 0 1 0 0 0 4 5 , mySum: 10
0 0 0 0 0 0 0 0 0 0 2 0 0 0 4 4 , mySum: 10
0 0 0 0 0 0 0 0 0 0 2 0 0 0 3 5 , mySum: 10
0 0 0 0 0 0 0 0 0 0 4 0 0 0 1 5 , mySum: 10
0 0 0 0 0 0 0 0 0 0 2 0 0 0 2 6 , mySum: 10
0 0 0 0 0 0 0 0 0 0 4 0 0 0 2 4 , mySum: 10
0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 6 , mySum: 10
0 0 0 0 0 0 0 0 0 0 1 0 0 0 3 6 , mySum: 10
0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 6 , mySum: 10
0 0 0 0 0 0 0 0 0 0 3 0 0 0 1 6 , mySum: 10
0 0 0 0 0 0 0 0 0 0 3 0 0 0 4 3 , mySum: 10
0 0 0 0 0 0 0 0 0 0 3 0 0 0 2 5 , mySum: 10
0 0 0 0 0 0 0 0 0 0 4 0 0 0 3 3 , mySum: 10
0 0 0 0 0 0 0 0 0 0 3 0 0 0 3 4 , mySum: 10
0 0 0 0 0 0 0 0 0 0 4 0 0 0 4 3 , mySum: 11
0 0 0 0 0 0 0 0 0 0 4 0 0 0 2 5 , mySum: 11
0 0 0 0 0 0 0 0 0 0 4 0 0 0 3 4 , mySum: 11
0 0 0 0 0 0 0 0 0 0 3 0 0 0 3 5 , mySum: 11
0 0 0 0 0 0 0 0 0 0 4 0 0 0 1 6 , mySum: 11
0 0 0 0 0 0 0 0 0 0 3 0 0 0 4 4 , mySum: 11
0 0 0 0 0 0 0 0 0 0 3 0 0 0 2 6 , mySum: 11
0 0 0 0 0 0 0 0 0 0 1 0 0 0 4 6 , mySum: 11
0 0 0 0 0 0 0 0 0 0 2 0 0 0 4 5 , mySum: 11
0 0 0 0 0 0 0 0 0 0 2 0 0 0 3 6 , mySum: 11
0 0 0 0 0 0 0 0 0 0 4 0 0 0 2 6 , mySum: 12
0 0 0 0 0 0 0 0 0 0 3 0 0 0 4 5 , mySum: 12
0 0 0 0 0 0 0 0 0 0 3 0 0 0 3 6 , mySum: 12
0 0 0 0 0 0 0 0 0 0 4 0 0 0 3 5 , mySum: 12
0 0 0 0 0 0 0 0 0 0 2 0 0 0 4 6 , mySum: 12
0 0 0 0 0 0 0 0 0 0 4 0 0 0 4 4 , mySum: 12
0 0 0 0 0 0 0 0 0 0 3 0 0 0 4 6 , mySum: 13
0 0 0 0 0 0 0 0 0 0 4 0 0 0 3 6 , mySum: 13
0 0 0 0 0 0 0 0 0 0 4 0 0 0 4 5 , mySum: 13
0 0 0 0 0 0 0 0 0 0 4 0 0 0 4 6 , mySum: 14
thread: 1, maxBlockLvlSize: 23
thread: 1, maxInBlockLvlSize: 13
thread: 1, AllTableSize: 9450, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 23
thread: 0, maxInBlockLvlSize: 13
thread: 0, AllTableSize: 9450, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 1 0 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 0 0 0 1 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 mySum: 2
thread: 0, blockNoZero[4]: 0 1 0 0 0 1 0 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 mySum: 2
thread: 0, blockNoZero[5]: 0 0 0 0 0 0 2 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[6]: 0 1 0 0 0 0 1 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 0 2 0 0 0 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 mySum: 2
thread: 0, blockNoZero[8]: 0 0 0 0 0 2 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 mySum: 2
thread: 0, blockNoZero[9]: 0 0 0 0 0 1 1 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 2 mySum: 3
thread: 0, blockNoZero[10]: 0 0 0 0 0 1 2 
thread: 0, allBlocks[11]: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 1 0 mySum: 3
thread: 0, blockNoZero[11]: 0 2 0 0 0 1 0 
thread: 0, allBlocks[12]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 2 0 mySum: 3
thread: 0, blockNoZero[12]: 0 1 0 0 0 2 0 
Thread: 2, gpu_BlockDP is done.
thread: 0, allBlocks[13]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 2 mySum: 3
thread: 0, blockNoZero[13]: 0 1 0 0 0 0 2 
thread: 0, allBlocks[14]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 mySum: 3
thread: 0, blockNoZero[14]: 0 0 0 0 0 3 0 
thread: 0, allBlocks[15]: 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[15]: 0 3 0 0 0 0 0 
thread: 0, allBlocks[16]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 mySum: 3
thread: 0, blockNoZero[16]: 0 0 0 0 0 0 3 
thread: 0, allBlocks[17]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 1 mySum: 3
thread: 0, blockNoZero[17]: 0 1 0 0 0 1 1 
thread: 0, allBlocks[18]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 1 mySum: 3
thread: 0, blockNoZero[18]: 0 0 0 0 0 2 1 
thread: 0, allBlocks[19]: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 1 mySum: 3
thread: 0, blockNoZero[19]: 0 2 0 0 0 0 1 
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
thread: 0, allBlocks[20]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 mySum: 4
thread: 0, blockNoZero[20]: 0 0 0 0 0 0 4 
thread: 0, allBlocks[21]: 0 0 0 0 0 0 0 0 0 0 3 0 0 0 1 0 mySum: 4
thread: 0, blockNoZero[21]: 0 3 0 0 0 1 0 
thread: 0, allBlocks[22]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 2 mySum: 4
thread: 0, blockNoZero[22]: 0 1 0 0 0 1 2 
thread: 0, allBlocks[23]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 0 mySum: 4
thread: 0, blockNoZero[23]: 0 0 0 0 0 4 0 
thread: 0, allBlocks[24]: 0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[24]: 0 4 0 0 0 0 0 
thread: 0, allBlocks[25]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 3 mySum: 4
thread: 0, blockNoZero[25]: 0 0 0 0 0 1 3 
thread: 0, allBlocks[26]: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 1 1 mySum: 4
thread: 0, blockNoZero[26]: 0 2 0 0 0 1 1 
thread: 0, allBlocks[27]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 2 1 mySum: 4
thread: 0, blockNoZero[27]: 0 1 0 0 0 2 1 
thread: 0, allBlocks[28]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 1 mySum: 4
thread: 0, blockNoZero[28]: 0 0 0 0 0 3 1 
thread: 0, allBlocks[29]: 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 1 mySum: 4
thread: 0, blockNoZero[29]: 0 3 0 0 0 0 1 
thread: 0, allBlocks[30]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 3 mySum: 4
thread: 0, blockNoZero[30]: 0 1 0 0 0 0 3 
thread: 0, allBlocks[31]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 3 0 mySum: 4
thread: 0, blockNoZero[31]: 0 1 0 0 0 3 0 
thread: 0, allBlocks[32]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 2 mySum: 4
thread: 0, blockNoZero[32]: 0 0 0 0 0 2 2 
thread: 0, allBlocks[33]: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 2 0 mySum: 4
thread: 0, blockNoZero[33]: 0 2 0 0 0 2 0 
thread: 0, allBlocks[34]: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 2 mySum: 4
thread: 0, blockNoZero[34]: 0 2 0 0 0 0 2 
copy the latest feasible solution to instance takes time: 0.19606
thread: 2, sOPT: 10
thread: 0, allBlocks[35]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 2 2 mySum: 5
thread: 0, blockNoZero[35]: 0 1 0 0 0 2 2 
thread: 0, allBlocks[36]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 3 mySum: 5
thread: 0, blockNoZero[36]: 0 1 0 0 0 1 3 
thread: 0, allBlocks[37]: 0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 1 mySum: 5
thread: 0, blockNoZero[37]: 0 4 0 0 0 0 1 
thread: 0, allBlocks[38]: 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 2 mySum: 5
thread: 0, blockNoZero[38]: 0 3 0 0 0 0 2 
thread: 0, allBlocks[39]: 0 0 0 0 0 0 0 0 0 0 3 0 0 0 2 0 mySum: 5
thread: 0, blockNoZero[39]: 0 3 0 0 0 2 0 
thread: 0, allBlocks[40]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 3 1 mySum: 5
thread: 0, blockNoZero[40]: 0 1 0 0 0 3 1 
thread: 0, allBlocks[41]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 4 0 mySum: 5
thread: 0, blockNoZero[41]: 0 1 0 0 0 4 0 
thread: 0, allBlocks[42]: 0 0 0 0 0 0 0 0 0 0 3 0 0 0 1 1 mySum: 5
thread: 0, blockNoZero[42]: 0 3 0 0 0 1 1 
thread: 0, allBlocks[43]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5 mySum: 5
thread: 0, blockNoZero[43]: 0 0 0 0 0 0 5 
thread: 0, allBlocks[44]: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 3 mySum: 5
thread: 0, blockNoZero[44]: 0 2 0 0 0 0 3 
thread: 0, allBlocks[45]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 4 mySum: 5
thread: 0, blockNoZero[45]: 0 0 0 0 0 1 4 
thread: 0, allBlocks[46]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 1 mySum: 5
thread: 0, blockNoZero[46]: 0 0 0 0 0 4 1 
thread: 0, allBlocks[47]: 0 0 0 0 0 0 0 0 0 0 4 0 0 0 1 0 mySum: 5
thread: 0, blockNoZero[47]: 0 4 0 0 0 1 0 
thread: 0, allBlocks[48]: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 1 2 mySum: 5
thread: 0, blockNoZero[48]: 0 2 0 0 0 1 2 
thread: 0, allBlocks[49]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 2 mySum: 5
thread: 0, blockNoZero[49]: 0 0 0 0 0 3 2 
thread: 0, allBlocks[50]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 4 mySum: 5
thread: 0, blockNoZero[50]: 0 1 0 0 0 0 4 
thread: 0, allBlocks[51]: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 2 1 mySum: 5
thread: 0, blockNoZero[51]: 0 2 0 0 0 2 1 
thread: 0, allBlocks[52]: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 3 0 mySum: 5
thread: 0, blockNoZero[52]: 0 2 0 0 0 3 0 
thread: 0, allBlocks[53]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 3 mySum: 5
thread: 0, blockNoZero[53]: 0 0 0 0 0 2 3 
thread: 0, allBlocks[54]: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 1 3 mySum: 6
thread: 0, blockNoZero[54]: 0 2 0 0 0 1 3 
thread: 0, allBlocks[55]: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 2 2 mySum: 6
thread: 0, blockNoZero[55]: 0 2 0 0 0 2 2 
thread: 0, allBlocks[56]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 4 1 mySum: 6
thread: 0, blockNoZero[56]: 0 1 0 0 0 4 1 
thread: 0, allBlocks[57]: 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 3 mySum: 6
thread: 0, blockNoZero[57]: 0 3 0 0 0 0 3 
thread: 0, allBlocks[58]: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 3 1 mySum: 6
thread: 0, blockNoZero[58]: 0 2 0 0 0 3 1 
thread: 0, allBlocks[59]: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 4 0 mySum: 6
thread: 0, blockNoZero[59]: 0 2 0 0 0 4 0 
thread: 0, allBlocks[60]: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 4 mySum: 6
thread: 0, blockNoZero[60]: 0 2 0 0 0 0 4 
thread: 0, allBlocks[61]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 4 mySum: 6
thread: 0, blockNoZero[61]: 0 1 0 0 0 1 4 
thread: 0, allBlocks[62]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 4 mySum: 6
thread: 0, blockNoZero[62]: 0 0 0 0 0 2 4 
thread: 0, allBlocks[63]: 0 0 0 0 0 0 0 0 0 0 4 0 0 0 2 0 mySum: 6
thread: 0, blockNoZero[63]: 0 4 0 0 0 2 0 
thread: 0, allBlocks[64]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 mySum: 6
thread: 0, blockNoZero[64]: 0 0 0 0 0 3 3 
thread: 0, allBlocks[65]: 0 0 0 0 0 0 0 0 0 0 4 0 0 0 1 1 mySum: 6
thread: 0, blockNoZero[65]: 0 4 0 0 0 1 1 
thread: 0, allBlocks[66]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 2 mySum: 6
thread: 0, blockNoZero[66]: 0 0 0 0 0 4 2 
thread: 0, allBlocks[67]: 0 0 0 0 0 0 0 0 0 0 3 0 0 0 1 2 mySum: 6
thread: 0, blockNoZero[67]: 0 3 0 0 0 1 2 
thread: 0, allBlocks[68]: 0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 2 mySum: 6
thread: 0, blockNoZero[68]: 0 4 0 0 0 0 2 
thread: 0, allBlocks[69]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 5 mySum: 6
thread: 0, blockNoZero[69]: 0 1 0 0 0 0 5 
thread: 0, allBlocks[70]: 0 0 0 0 0 0 0 0 0 0 3 0 0 0 3 0 mySum: 6
thread: 0, blockNoZero[70]: 0 3 0 0 0 3 0 
thread: 0, allBlocks[71]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 2 3 mySum: 6
thread: 0, blockNoZero[71]: 0 1 0 0 0 2 3 
thread: 0, allBlocks[72]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 5 mySum: 6
thread: 0, blockNoZero[72]: 0 0 0 0 0 1 5 
thread: 0, allBlocks[73]: 0 0 0 0 0 0 0 0 0 0 3 0 0 0 2 1 mySum: 6
thread: 0, blockNoZero[73]: 0 3 0 0 0 2 1 
thread: 0, allBlocks[74]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6 mySum: 6
thread: 0, blockNoZero[74]: 0 0 0 0 0 0 6 
thread: 0, allBlocks[75]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 3 2 mySum: 6
thread: 0, blockNoZero[75]: 0 1 0 0 0 3 2 
thread: 0, allBlocks[76]: 0 0 0 0 0 0 0 0 0 0 4 0 0 0 3 0 mySum: 7
thread: 0, blockNoZero[76]: 0 4 0 0 0 3 0 
thread: 0, allBlocks[77]: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 4 1 mySum: 7
thread: 0, blockNoZero[77]: 0 2 0 0 0 4 1 
thread: 0, allBlocks[78]: 0 0 0 0 0 0 0 0 0 0 4 0 0 0 2 1 mySum: 7
thread: 0, blockNoZero[78]: 0 4 0 0 0 2 1 
thread: 0, allBlocks[79]: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 3 2 mySum: 7
thread: 0, blockNoZero[79]: 0 2 0 0 0 3 2 
thread: 0, allBlocks[80]: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 2 3 mySum: 7
thread: 0, blockNoZero[80]: 0 2 0 0 0 2 3 
thread: 0, allBlocks[81]: 0 0 0 0 0 0 0 0 0 0 4 0 0 0 1 2 mySum: 7
thread: 0, blockNoZero[81]: 0 4 0 0 0 1 2 
thread: 0, allBlocks[82]: 0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 3 mySum: 7
thread: 0, blockNoZero[82]: 0 4 0 0 0 0 3 
thread: 0, allBlocks[83]: 0 0 0 0 0 0 0 0 0 0 3 0 0 0 4 0 mySum: 7
thread: 0, blockNoZero[83]: 0 3 0 0 0 4 0 
thread: 0, allBlocks[84]: 0 0 0 0 0 0 0 0 0 0 3 0 0 0 3 1 mySum: 7
thread: 0, blockNoZero[84]: 0 3 0 0 0 3 1 
thread: 0, allBlocks[85]: 0 0 0 0 0 0 0 0 0 0 3 0 0 0 2 2 mySum: 7
thread: 0, blockNoZero[85]: 0 3 0 0 0 2 2 
thread: 0, allBlocks[86]: 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 4 mySum: 7
thread: 0, blockNoZero[86]: 0 3 0 0 0 0 4 
thread: 0, allBlocks[87]: 0 0 0 0 0 0 0 0 0 0 3 0 0 0 1 3 mySum: 7
thread: 0, blockNoZero[87]: 0 3 0 0 0 1 3 
thread: 0, allBlocks[88]: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 5 mySum: 7
thread: 0, blockNoZero[88]: 0 2 0 0 0 0 5 
thread: 0, allBlocks[89]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 4 2 mySum: 7
thread: 0, blockNoZero[89]: 0 1 0 0 0 4 2 
thread: 0, allBlocks[90]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 3 mySum: 7
thread: 0, blockNoZero[90]: 0 0 0 0 0 4 3 
thread: 0, allBlocks[91]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 6 mySum: 7
thread: 0, blockNoZero[91]: 0 0 0 0 0 1 6 
thread: 0, allBlocks[92]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 3 3 mySum: 7
thread: 0, blockNoZero[92]: 0 1 0 0 0 3 3 
thread: 0, allBlocks[93]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 4 mySum: 7
thread: 0, blockNoZero[93]: 0 0 0 0 0 3 4 
thread: 0, allBlocks[94]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 2 4 mySum: 7
thread: 0, blockNoZero[94]: 0 1 0 0 0 2 4 
thread: 0, allBlocks[95]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 6 mySum: 7
thread: 0, blockNoZero[95]: 0 1 0 0 0 0 6 
thread: 0, allBlocks[96]: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 1 4 mySum: 7
thread: 0, blockNoZero[96]: 0 2 0 0 0 1 4 
thread: 0, allBlocks[97]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 5 mySum: 7
thread: 0, blockNoZero[97]: 0 0 0 0 0 2 5 
thread: 0, allBlocks[98]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 5 mySum: 7
thread: 0, blockNoZero[98]: 0 1 0 0 0 1 5 
thread: 0, allBlocks[99]: 0 0 0 0 0 0 0 0 0 0 3 0 0 0 4 1 mySum: 8
thread: 0, blockNoZero[99]: 0 3 0 0 0 4 1 
thread: 0, allBlocks[100]: 0 0 0 0 0 0 0 0 0 0 3 0 0 0 2 3 mySum: 8
thread: 0, blockNoZero[100]: 0 3 0 0 0 2 3 
thread: 0, allBlocks[101]: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 2 4 mySum: 8
thread: 0, blockNoZero[101]: 0 2 0 0 0 2 4 
thread: 0, allBlocks[102]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 4 3 mySum: 8
thread: 0, blockNoZero[102]: 0 1 0 0 0 4 3 
thread: 0, allBlocks[103]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 2 5 mySum: 8
thread: 0, blockNoZero[103]: 0 1 0 0 0 2 5 
thread: 0, allBlocks[104]: 0 0 0 0 0 0 0 0 0 0 4 0 0 0 3 1 mySum: 8
thread: 0, blockNoZero[104]: 0 4 0 0 0 3 1 
thread: 0, allBlocks[105]: 0 0 0 0 0 0 0 0 0 0 3 0 0 0 1 4 mySum: 8
thread: 0, blockNoZero[105]: 0 3 0 0 0 1 4 
thread: 0, allBlocks[106]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 6 mySum: 8
thread: 0, blockNoZero[106]: 0 1 0 0 0 1 6 
thread: 0, allBlocks[107]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 3 4 mySum: 8
thread: 0, blockNoZero[107]: 0 1 0 0 0 3 4 
thread: 0, allBlocks[108]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 4 mySum: 8
thread: 0, blockNoZero[108]: 0 0 0 0 0 4 4 
thread: 0, allBlocks[109]: 0 0 0 0 0 0 0 0 0 0 3 0 0 0 3 2 mySum: 8
thread: 0, blockNoZero[109]: 0 3 0 0 0 3 2 
thread: 0, allBlocks[110]: 0 0 0 0 0 0 0 0 0 0 4 0 0 0 2 2 mySum: 8
thread: 0, blockNoZero[110]: 0 4 0 0 0 2 2 
thread: 0, allBlocks[111]: 0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 4 mySum: 8
thread: 0, blockNoZero[111]: 0 4 0 0 0 0 4 
thread: 0, allBlocks[112]: 0 0 0 0 0 0 0 0 0 0 4 0 0 0 4 0 mySum: 8
thread: 0, blockNoZero[112]: 0 4 0 0 0 4 0 
thread: 0, allBlocks[113]: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 1 5 mySum: 8
thread: 0, blockNoZero[113]: 0 2 0 0 0 1 5 
thread: 0, allBlocks[114]: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 3 3 mySum: 8
thread: 0, blockNoZero[114]: 0 2 0 0 0 3 3 
thread: 0, allBlocks[115]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 5 mySum: 8
thread: 0, blockNoZero[115]: 0 0 0 0 0 3 5 
thread: 0, allBlocks[116]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 6 mySum: 8
thread: 0, blockNoZero[116]: 0 0 0 0 0 2 6 
thread: 0, allBlocks[117]: 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 5 mySum: 8
thread: 0, blockNoZero[117]: 0 3 0 0 0 0 5 
thread: 0, allBlocks[118]: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 4 2 mySum: 8
thread: 0, blockNoZero[118]: 0 2 0 0 0 4 2 
thread: 0, allBlocks[119]: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 6 mySum: 8
thread: 0, blockNoZero[119]: 0 2 0 0 0 0 6 
thread: 0, allBlocks[120]: 0 0 0 0 0 0 0 0 0 0 4 0 0 0 1 3 mySum: 8
thread: 0, blockNoZero[120]: 0 4 0 0 0 1 3 
thread: 0, allBlocks[121]: 0 0 0 0 0 0 0 0 0 0 3 0 0 0 4 2 mySum: 9
thread: 0, blockNoZero[121]: 0 3 0 0 0 4 2 
thread: 0, allBlocks[122]: 0 0 0 0 0 0 0 0 0 0 4 0 0 0 2 3 mySum: 9
thread: 0, blockNoZero[122]: 0 4 0 0 0 2 3 
thread: 0, allBlocks[123]: 0 0 0 0 0 0 0 0 0 0 4 0 0 0 1 4 mySum: 9
thread: 0, blockNoZero[123]: 0 4 0 0 0 1 4 
thread: 0, allBlocks[124]: 0 0 0 0 0 0 0 0 0 0 4 0 0 0 3 2 mySum: 9
thread: 0, blockNoZero[124]: 0 4 0 0 0 3 2 
thread: 0, allBlocks[125]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 6 mySum: 9
thread: 0, blockNoZero[125]: 0 0 0 0 0 3 6 
thread: 0, allBlocks[126]: 0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 5 mySum: 9
thread: 0, blockNoZero[126]: 0 4 0 0 0 0 5 
thread: 0, allBlocks[127]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 5 mySum: 9
thread: 0, blockNoZero[127]: 0 0 0 0 0 4 5 
thread: 0, allBlocks[128]: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 2 5 mySum: 9
thread: 0, blockNoZero[128]: 0 2 0 0 0 2 5 
thread: 0, allBlocks[129]: 0 0 0 0 0 0 0 0 0 0 4 0 0 0 4 1 mySum: 9
thread: 0, blockNoZero[129]: 0 4 0 0 0 4 1 
thread: 0, allBlocks[130]: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 1 6 mySum: 9
thread: 0, blockNoZero[130]: 0 2 0 0 0 1 6 
thread: 0, allBlocks[131]: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 3 4 mySum: 9
thread: 0, blockNoZero[131]: 0 2 0 0 0 3 4 
thread: 0, allBlocks[132]: 0 0 0 0 0 0 0 0 0 0 3 0 0 0 2 4 mySum: 9
thread: 0, blockNoZero[132]: 0 3 0 0 0 2 4 
thread: 0, allBlocks[133]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 2 6 mySum: 9
thread: 0, blockNoZero[133]: 0 1 0 0 0 2 6 
thread: 0, allBlocks[134]: 0 0 0 0 0 0 0 0 0 0 3 0 0 0 3 3 mySum: 9
thread: 0, blockNoZero[134]: 0 3 0 0 0 3 3 
thread: 0, allBlocks[135]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 4 4 mySum: 9
thread: 0, blockNoZero[135]: 0 1 0 0 0 4 4 
thread: 0, allBlocks[136]: 0 0 0 0 0 0 0 0 0 0 3 0 0 0 1 5 mySum: 9
thread: 0, blockNoZero[136]: 0 3 0 0 0 1 5 
thread: 0, allBlocks[137]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 3 5 mySum: 9
thread: 0, blockNoZero[137]: 0 1 0 0 0 3 5 
thread: 0, allBlocks[138]: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 4 3 mySum: 9
thread: 0, blockNoZero[138]: 0 2 0 0 0 4 3 
thread: 0, allBlocks[139]: 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 6 mySum: 9
thread: 0, blockNoZero[139]: 0 3 0 0 0 0 6 
thread: 0, allBlocks[140]: 0 0 0 0 0 0 0 0 0 0 4 0 0 0 4 2 mySum: 10
thread: 0, blockNoZero[140]: 0 4 0 0 0 4 2 
thread: 0, allBlocks[141]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 4 5 mySum: 10
thread: 0, blockNoZero[141]: 0 1 0 0 0 4 5 
thread: 0, allBlocks[142]: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 4 4 mySum: 10
thread: 0, blockNoZero[142]: 0 2 0 0 0 4 4 
thread: 0, allBlocks[143]: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 3 5 mySum: 10
thread: 0, blockNoZero[143]: 0 2 0 0 0 3 5 
thread: 0, allBlocks[144]: 0 0 0 0 0 0 0 0 0 0 4 0 0 0 1 5 mySum: 10
thread: 0, blockNoZero[144]: 0 4 0 0 0 1 5 
thread: 0, allBlocks[145]: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 2 6 mySum: 10
thread: 0, blockNoZero[145]: 0 2 0 0 0 2 6 
thread: 0, allBlocks[146]: 0 0 0 0 0 0 0 0 0 0 4 0 0 0 2 4 mySum: 10
thread: 0, blockNoZero[146]: 0 4 0 0 0 2 4 
thread: 0, allBlocks[147]: 0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 6 mySum: 10
thread: 0, blockNoZero[147]: 0 4 0 0 0 0 6 
thread: 0, allBlocks[148]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 3 6 mySum: 10
thread: 0, blockNoZero[148]: 0 1 0 0 0 3 6 
thread: 0, allBlocks[149]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 6 mySum: 10
thread: 0, blockNoZero[149]: 0 0 0 0 0 4 6 
thread: 0, allBlocks[150]: 0 0 0 0 0 0 0 0 0 0 3 0 0 0 1 6 mySum: 10
thread: 0, blockNoZero[150]: 0 3 0 0 0 1 6 
thread: 0, allBlocks[151]: 0 0 0 0 0 0 0 0 0 0 3 0 0 0 4 3 mySum: 10
thread: 0, blockNoZero[151]: 0 3 0 0 0 4 3 
thread: 0, allBlocks[152]: 0 0 0 0 0 0 0 0 0 0 3 0 0 0 2 5 mySum: 10
thread: 0, blockNoZero[152]: 0 3 0 0 0 2 5 
thread: 0, allBlocks[153]: 0 0 0 0 0 0 0 0 0 0 4 0 0 0 3 3 mySum: 10
thread: 0, blockNoZero[153]: 0 4 0 0 0 3 3 
thread: 0, allBlocks[154]: 0 0 0 0 0 0 0 0 0 0 3 0 0 0 3 4 mySum: 10
thread: 0, blockNoZero[154]: 0 3 0 0 0 3 4 
thread: 0, allBlocks[155]: 0 0 0 0 0 0 0 0 0 0 4 0 0 0 4 3 mySum: 11
thread: 0, blockNoZero[155]: 0 4 0 0 0 4 3 
thread: 0, allBlocks[156]: 0 0 0 0 0 0 0 0 0 0 4 0 0 0 2 5 mySum: 11
thread: 0, blockNoZero[156]: 0 4 0 0 0 2 5 
thread: 0, allBlocks[157]: 0 0 0 0 0 0 0 0 0 0 4 0 0 0 3 4 mySum: 11
thread: 0, blockNoZero[157]: 0 4 0 0 0 3 4 
thread: 0, allBlocks[158]: 0 0 0 0 0 0 0 0 0 0 3 0 0 0 3 5 mySum: 11
thread: 0, blockNoZero[158]: 0 3 0 0 0 3 5 
thread: 0, allBlocks[159]: 0 0 0 0 0 0 0 0 0 0 4 0 0 0 1 6 mySum: 11
thread: 0, blockNoZero[159]: 0 4 0 0 0 1 6 
thread: 0, allBlocks[160]: 0 0 0 0 0 0 0 0 0 0 3 0 0 0 4 4 mySum: 11
thread: 0, blockNoZero[160]: 0 3 0 0 0 4 4 
thread: 0, allBlocks[161]: 0 0 0 0 0 0 0 0 0 0 3 0 0 0 2 6 mySum: 11
thread: 0, blockNoZero[161]: 0 3 0 0 0 2 6 
thread: 0, allBlocks[162]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 4 6 mySum: 11
thread: 0, blockNoZero[162]: 0 1 0 0 0 4 6 
thread: 0, allBlocks[163]: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 4 5 mySum: 11
thread: 0, blockNoZero[163]: 0 2 0 0 0 4 5 
thread: 0, allBlocks[164]: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 3 6 mySum: 11
thread: 0, blockNoZero[164]: 0 2 0 0 0 3 6 
thread: 0, allBlocks[165]: 0 0 0 0 0 0 0 0 0 0 4 0 0 0 2 6 mySum: 12
thread: 0, blockNoZero[165]: 0 4 0 0 0 2 6 
thread: 0, allBlocks[166]: 0 0 0 0 0 0 0 0 0 0 3 0 0 0 4 5 mySum: 12
thread: 0, blockNoZero[166]: 0 3 0 0 0 4 5 
thread: 0, allBlocks[167]: 0 0 0 0 0 0 0 0 0 0 3 0 0 0 3 6 mySum: 12
thread: 0, blockNoZero[167]: 0 3 0 0 0 3 6 
thread: 0, allBlocks[168]: 0 0 0 0 0 0 0 0 0 0 4 0 0 0 3 5 mySum: 12
thread: 0, blockNoZero[168]: 0 4 0 0 0 3 5 
thread: 0, allBlocks[169]: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 4 6 mySum: 12
thread: 0, blockNoZero[169]: 0 2 0 0 0 4 6 
thread: 0, allBlocks[170]: 0 0 0 0 0 0 0 0 0 0 4 0 0 0 4 4 mySum: 12
thread: 0, blockNoZero[170]: 0 4 0 0 0 4 4 
thread: 0, allBlocks[171]: 0 0 0 0 0 0 0 0 0 0 3 0 0 0 4 6 mySum: 13
thread: 0, blockNoZero[171]: 0 3 0 0 0 4 6 
thread: 0, allBlocks[172]: 0 0 0 0 0 0 0 0 0 0 4 0 0 0 3 6 mySum: 13
thread: 0, blockNoZero[172]: 0 4 0 0 0 3 6 
thread: 0, allBlocks[173]: 0 0 0 0 0 0 0 0 0 0 4 0 0 0 4 5 mySum: 13
thread: 0, blockNoZero[173]: 0 4 0 0 0 4 5 
thread: 0, allBlocks[174]: 0 0 0 0 0 0 0 0 0 0 4 0 0 0 4 6 mySum: 14
thread: 0, blockNoZero[174]: 0 4 0 0 0 4 6 
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 11
copy the latest feasible solution to instance takes time: 2e-06
thread: 1, sOPT: 11
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 1e-06
thread: 0, sOPT: 11
BKID: 0, LB: 32, UB: 32, OPT: 10
Dynamic Programming Runtime: 2.59914
Execution time between LB and UB is: 2
By far, all LB UB calculation runtime: 2
********************************************************
Total execution on UB and LB is: 2
OUT of Bk while loop  
UB    32
LB    32
T1    32
T2    32
OPT   10
nMachines   10
BkID	0
AllProbData.size()    2
ck :   1
AllProbData[ck].Ttable    32
ck :   0
AllProbData[ck].Ttable    32
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan34
Main Scheduling is Done
File 1-13 is Done.
******************************
Reading File...
File 1-14 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 52, LB: 33start at time: 1505254734
thread: 0, MlBk is called with LB: 33, UB: 38
thread: 3, MlBk is called with LB: 48, UB: 53
 thread: 0, LongJobs.size() 21
thread: 2, MlBk is called with LB: 43, UB: 48
thread:  thread: 3, LongJobs.size() 17
1, MlBk is called with LB: 38, UB: 43
 thread: 2, LongJobs.size() 18
 thread: 1, LongJobs.size() 20
thread: 3, NSTable size: 16
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 11
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 4
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 3, i: 1, maxN[i].weit: 12, maxN[i].idx: 1, blockDimSize[i]: 12
thread: 3, i: 2, maxN[i].weit: 5, maxN[i].idx: 2, blockDimSize[i]: 5
thread: 3, i: 0, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, i: 1, divisor[i]: 3, blockDimSize[i]: 4
thread: 3, i: 2, divisor[i]: 5, blockDimSize[i]: 1
thread: 3, largestBlockVec.elm: 0 0 0 2 2 4 0 0 0 0 0 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 1 4 1 0 0 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 3 3 5 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 2 2 4 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 2 2 4 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 2 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 1 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 2 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 2 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 1 1 2 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 1 0 3 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 3 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 1 1 3 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 1 0 4 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 1 2 2 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 2 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 3 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 2 0 3 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 4 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 2 1 2 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 1 1 4 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 2 2 2 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 2 1 3 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 2 0 4 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 4 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 1 2 3 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 2 1 4 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 1 2 4 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 2 2 3 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 2 2 4 0 0 0 0 0 0 0 0 0 0 , mySum: 8
thread: 3, maxBlockLvlSize: 9
thread: 3, maxInBlockLvlSize: 1
thread: 3, AllTableSize: 180, maxSubsetsSize: 64
thread: 2, NSTable size: 19
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 5
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 8
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 2, i: 1, maxN[i].weit: 6, maxN[i].idx: 1, blockDimSize[i]: 6
thread: 2, i: 2, maxN[i].weit: 9, maxN[i].idx: 2, blockDimSize[i]: 9
thread: 2, i: 3, maxN[i].weit: 5, maxN[i].idx: 3, blockDimSize[i]: 5
thread: 2, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 1, divisor[i]: 2, blockDimSize[i]: 3
thread: 2, i: 2, divisor[i]: 3, blockDimSize[i]: 3
thread: 2, i: 3, divisor[i]: 5, blockDimSize[i]: 1
thread: 2, largestBlockVec.elm: 0 0 0 0 0 0 1 2 4 0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 0 0 2 3 3 1 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 0 1 2 3 5 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 1 2 4 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 1 2 4 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 0 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 1 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 1 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 2 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 2 3 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 1 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 0 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 1 3 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 2 2 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 2 4 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 1 2 3 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 1 1 4 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 1 2 4 0 0 0 0 0 0 0 , mySum: 7
thread: 2, maxBlockLvlSize: 6
thread: 2, maxInBlockLvlSize: 5
thread: 2, AllTableSize: 540, maxSubsetsSize: 64
thread: 1, NSTable size: 29
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 5
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 8
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 1, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 1, i: 2, maxN[i].weit: 6, maxN[i].idx: 2, blockDimSize[i]: 6
thread: 1, i: 3, maxN[i].weit: 9, maxN[i].idx: 3, blockDimSize[i]: 9
thread: 1, i: 4, maxN[i].weit: 5, maxN[i].idx: 4, blockDimSize[i]: 5
thread: 1, i: 0, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 2, divisor[i]: 2, blockDimSize[i]: 3
thread: 1, i: 3, divisor[i]: 3, blockDimSize[i]: 3
thread: 1, i: 4, divisor[i]: 5, blockDimSize[i]: 1
thread: 1, largestBlockVec.elm: 0 0 0 0 0 0 1 2 4 0 0 0 0 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 0 3 2 3 3 1 0 0 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 1 1 2 3 5 0 0 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 1 2 4 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 1 2 4 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 0 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 1 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 1 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 2 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 2 3 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 1 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 0 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 1 3 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 2 2 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 2 4 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 1 2 3 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 1 1 4 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 1 2 4 0 0 0 0 0 0 0 , mySum: 7
thread: 1, maxBlockLvlSize: 6
thread: 1, maxInBlockLvlSize: 13
thread: 1, AllTableSize: 1620, maxSubsetsSize: 64
thread: 0, NSTable size: 21
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 5
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 8
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 0, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 0, i: 2, maxN[i].weit: 6, maxN[i].idx: 2, blockDimSize[i]: 6
thread: 0, i: 3, maxN[i].weit: 9, maxN[i].idx: 3, blockDimSize[i]: 9
thread: 0, i: 4, maxN[i].weit: 5, maxN[i].idx: 4, blockDimSize[i]: 5
thread: 0, i: 0, divisor[i]: 1, blockDimSize[i]: 4
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 2, divisor[i]: 2, blockDimSize[i]: 3
thread: 0, i: 3, divisor[i]: 3, blockDimSize[i]: 3
thread: 0, i: 4, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, largestBlockVec.elm: 0 0 0 0 0 0 1 2 4 0 0 0 0 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 0 4 2 3 3 1 0 0 0 0 0 0 0 
thread: 0, divisorComp: 0 0 0 0 1 1 2 3 5 0 0 0 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 1 2 4 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 1 2 4 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 0 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 1 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 1 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 2 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 2 3 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 1 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 0 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 1 3 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 2 2 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 2 4 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 1 2 3 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 1 1 4 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 1 2 4 0 0 0 0 0 0 0 , mySum: 7
thread: 0, maxBlockLvlSize: 6
thread: 0, maxInBlockLvlSize: 16
thread: 0, AllTableSize: 2160, maxSubsetsSize: 64
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 7
copy the latest feasible solution to instance takes time: 0.010199
thread: 3, sOPT: 7
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 1 0 0 
Thread: 2, gpu_BlockDP is done.
thread: 0, allBlocks[3]: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 0 1 0 
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 8
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 0 1 1 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 0 1 1 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 0 0 2 0 
copy the latest feasible solution to instance takes time: thread: 0, allBlocks[7]: 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 0 0 1 0 1 
0.027668
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[8]: 0 0 0 0 2 
thread: 2, sOPT: 8
thread: 0, allBlocks[9]: 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[9]: 0 0 0 0 3 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 0 0 1 2 0 
thread: 0, allBlocks[11]: 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 0 0 1 1 1 
thread: 0, allBlocks[12]: 0 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[12]: 0 0 1 0 2 
thread: 0, allBlocks[13]: 0 0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[13]: 0 0 0 2 1 
thread: 0, allBlocks[14]: 0 0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[14]: 0 0 0 1 2 
thread: 0, allBlocks[15]: 0 0 0 0 0 0 0 2 2 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[15]: 0 0 0 2 2 
thread: 0, allBlocks[16]: 0 0 0 0 0 0 1 0 3 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[16]: 0 0 1 0 3 
thread: 0, allBlocks[17]: 0 0 0 0 0 0 0 1 3 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[17]: 0 0 0 1 3 
thread: 0, allBlocks[18]: 0 0 0 0 0 0 1 1 2 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[18]: 0 0 1 1 2 
thread: 0, allBlocks[19]: 0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[19]: 0 0 0 0 4 
thread: 0, allBlocks[20]: 0 0 0 0 0 0 1 2 1 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[20]: 0 0 1 2 1 
thread: 0, allBlocks[21]: 0 0 0 0 0 0 0 2 3 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[21]: 0 0 0 2 3 
thread: 0, allBlocks[22]: 0 0 0 0 0 0 0 1 4 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[22]: 0 0 0 1 4 
thread: 0, allBlocks[23]: 0 0 0 0 0 0 1 0 4 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[23]: 0 0 1 0 4 
thread: 0, allBlocks[24]: 0 0 0 0 0 0 1 1 3 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[24]: 0 0 1 1 3 
thread: 0, allBlocks[25]: 0 0 0 0 0 0 1 2 2 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[25]: 0 0 1 2 2 
thread: 0, allBlocks[26]: 0 0 0 0 0 0 0 2 4 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[26]: 0 0 0 2 4 
thread: 0, allBlocks[27]: 0 0 0 0 0 0 1 2 3 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[27]: 0 0 1 2 3 
thread: 0, allBlocks[28]: 0 0 0 0 0 0 1 1 4 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[28]: 0 0 1 1 4 
thread: 0, allBlocks[29]: 0 0 0 0 0 0 1 2 4 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[29]: 0 0 1 2 4 
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.065106
thread: 1, sOPT: 9
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.036525
thread: 0, sOPT: 10
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: Thread: 32, MlBk function is done, and BkID for all processes are collected.1
, MlBk function is done, and BkID for all processes are collected.
, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 33, UB: 36
BKID: 0, LB: 33, UB: 36, OPT: 10
Dynamic Programming Runtime: 0.624107
Execution time between LB and UB is: 0
By far, all LB UB calculation runtime: 0
Iteration: 2, UB: 36, LB: 33start at time: 1505254734
thread: 0, MlBk is called with LB: 33, UB: 34
 thread: 0, LongJobs.size() 21
thread: thread: 1, MlBk is called with LB: 234, MlBk is called with LB: , UB: 3535, UB: 36

 thread: 2, LongJobs.size() 21
 thread: 1, LongJobs.size() 21
thread: 1, NSTable size: 21
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: thread: 1
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 5
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 8
thread: 1, i: 82, NSTable size: 21
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 5
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 8
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
, alltableelemets[maxindex].elm[i]: thread: 2, i: 0, maxN[i].weit: 44, maxN[i].idx: 0, blockDimSize[i]: 4

thread: 2, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 2, i: 2, maxN[i].weit: 6, maxN[i].idx: 2, blockDimSize[i]: 6
thread: 2, i: 3, maxN[i].weit: 9, maxN[i].idx: 3, blockDimSize[i]: 9
thread: 2, i: 4, maxN[i].weit: 5, maxN[i].idx: 4, blockDimSize[i]: 5
thread: thread: 21, i: 0, divisor[i]: , i: 1, blockDimSize[i]: 94, alltableelemets[maxindex].elm[i]: 
thread: 2, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 2, divisor[i]: 2, blockDimSize[i]: 3
thread: 2, i: 3, divisor[i]: 3, blockDimSize[i]: 3
thread: 2, i: 4, divisor[i]: 5, blockDimSize[i]: 1
0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4thread: 2, largestBlockVec.elm: 0 
0thread:  1, i: 1, maxN[i].weit: 2, maxN[i].idx: 01, blockDimSize[i]:  20 
thread: 1, i: 2, maxN[i].weit: 60, maxN[i].idx:  2, blockDimSize[i]: 6
thread: 1, i: 3, maxN[i].weit: 9, maxN[i].idx: 3, blockDimSize[i]: 9
thread: 1, i: 4, maxN[i].weit: 05, maxN[i].idx: 4, blockDimSize[i]: 5 
thread: 11, i:  02, divisor[i]:  1, blockDimSize[i]: 4
thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 2, divisor[i]: 2, blockDimSize[i]: 3
thread: 1, i: 3, divisor[i]: 3, blockDimSize[i]: 3
thread: 1, i: 4, divisor[i]: 5, blockDimSize[i]: 1
4thread: 1, largestBlockVec.elm:  0 00  0 00  0 00  0 0 
thread: 2, blockDimSizeComp: 0 0 0 0 4 2 3 3 1 00 0  0 0 00 0  0 1 
2thread: 2, divisorComp: 0 0 0 0 1 1 2 3 5 0  0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 1 2 4 0 0 0 0 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 0 4 2 3 3 1 4 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 1 2 4 
0 0 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 1 1 2 3 5 0 0 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 1 2 4 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 1 2 4 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 thread: 0 0 10 0 , allBlocks: 0 0 , mySum: 01
 0 0 0 0 0 0 0 1 1 0 0 0 00  00  0 00  0 0, mySum:  2
0 0 0 0 0 0 1 1 0 0 0 0 0 00 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 1
 0 0 0 0 0 0 1 0 0 0 0 0 0 0 00 0  , mySum: 01
0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 1 0 0 0 0  0 0 0 , mySum: 1
00 0 0 0 0 0 0 1 1 0 0 0 0  0 0 , mySum: 2
00 0 0 0 0 0 0 0 2 0 0 0 0  0 0 , mySum: 2
00 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 , mySum: 2
 0 0 0 0 0 0 0 2 0 0 0 0 0 00 0 0 , mySum: 3 
00 0 0 0 0 0 1 2 0 0 0 0 0  0 0 00  , mySum: , mySum: 23

0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 00  00  00 , mySum: 3 
0 0 0 0 0 0 1 0 2 thread: 00 , NSTable size: 19
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 5
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 8
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 0, maxN[i].weit: 4, maxN[i].idx: 00, blockDimSize[i]: 4
, mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0thread:  0 0 0 , mySum: 2
 0 0 0 0 0 00 0  0, mySum: 3
0 0 0 0 0 3 0 0 0 00  00  0, i:  1, maxN[i].weit: 0 02, maxN[i].idx: 1 , blockDimSize[i]: 200 , mySum: 
 3thread: 0, i: 2, maxN[i].weit: 6, maxN[i].idx: 2, blockDimSize[i]: 0 60 
2thread: 0, i: 3, maxN[i].weit: 9, maxN[i].idx: 3, blockDimSize[i]: 9
thread: 0, i: 4, maxN[i].weit: 5, maxN[i].idx: 4, blockDimSize[i]: 5
 thread: 0, i: 0, divisor[i]: 1, blockDimSize[i]: 4
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 2, divisor[i]: 2, blockDimSize[i]: 3
thread: 0, i: 3, divisor[i]: 3, blockDimSize[i]: 3
thread: 0, i: 4, divisor[i]: 5, blockDimSize[i]: 1
thread: 01, largestBlockVec.elm: 0 0  00  0 00
 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 1 2 0 0 0 00 0 0 0 0 0 1 2 0 0 0 0   0 0 1 2 40  00  00 0 0 0 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 0 4 2 3 3 1 0  00 0  00  , mySum: 0 , mySum: 03 03
 
00 0 0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 
thread: 0, divisorComp: 0 0 0 0 1 1 2 3 5  0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 0 2 0 0 0 0 00  00  00  0 00  0 , mySum: 003 
thread: 0, largestBlockVec: 0 0 0 0 0 0 1 2 4 0 0 , mySum: 4
0 0 0 0 0 0 1 0 3 0 0 0 0  0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 1 2 4 

0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 1 3 0 0 0 0 02 0  01  0, mySum:  0 40 
00 0 0 0 0 0 1 1 2 0 0 0 0 0 0 0 , mySum: 3
thread: 00 0, allBlocks:  00  0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 4 0 00 0 0 0 0  00  0 0 0 0 1 2 0 0 0 00  0 0 0 , mySum: 4
 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 0 1 2 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 00  0 00 , mySum: 1
0 0 , mySum: 4
0 0 0 0 0 0 0 2 3 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0  0 00  0, mySum:  004  0 0 
, mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 00 0 0 0 0 0 1 0 3 0 0 0 0  0 00, mySum:  0 , mySum: 1
0 0 0 0 0 0 0 1 1 0 0 0 0 05
0 0 0 0 0 0 0 1 4 0 0 0 0 0 0  00 0  , mySum:  5
0 0 0 0 0 0 1 0 4 0 0 0 00 0 0 0 , mySum: 5
0 0 0 0 0 0 1 1 3 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 2 2 0 0 0 0 0  0 0 , mySum: 4
0 0 0 0 0 0 1 1 2 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 2 4 0 0 0 0 0 00 0 , mySum: 6
, mySum: 2
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 1 2 3 0 0 0  0 0 0 0 , mySum: 6
0 0 0 0 0 0 1 1 4 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 4 0 0 0 0 0 00 0  0 0 , mySum: 04
0 , mySum: 6
00 0 0 0 0 0 1 2 4 0 0 0 0 0  0 0 0 0 0 1 2 1 0 0 0  0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 2 3 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 00 0 , mySum: 2
0 0 , mySum: 7
0 0 0 0 0 0 1 0 1 0 0 0  0 0 00  00 , mySum:  2, mySum: 
50 0 0 0 0 0 0 0 2 0 0 0 0 
0 00 0 0 0 0 0 0 1 4 0 0 0  0 , mySum: 2
0 0 0 0 0 0 0 0 3 0 0 0 0 0 00 0  , mySum: 3
0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 , mySum: 50
 0 0 0 0 0 0 1 0 4 0 0 0 0 00 0 , mySum: 3
0 0 0 0 0 0 1 1 1 0 0 0 0 0  0 0 0, mySum: 3
 0 0 0 0 0 0 1 0 2 0 0 0 0 00 0  0 , mySum: , mySum: 3
0 0 0 0 0 0 0 2 1 0 0 0 0 0 50 0
 0 0 0 0 0 0 1 1 3 0 0 0 0 0 , mySum: 0 30
 , mySum: 0 0 0 0 0 0 0 1 2 0 0 0 0 0 05 0 , mySum: 3

0 0 0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 0 0 1 2 2 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 0 3 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 2 4 0 0 0 0 00 0  00  0 , mySum: , mySum: 6
0 0 0 0 0 0 1 2 3 0 0 0 04 0 0
 0 0 0 0 0 0 0 1 3 0 0 0 0 00 , mySum: 6
0 0 0 0 0 0 1 1 4 0 0 0 0  0 0 0 00 , mySum:  4
, mySum: 0 0 0 0 0 0 1 1 2 0 0 0 0 0 0 06 , mySum: 4
0 0 0 0 0 0 0 0 4 0 0 0 0 0
 0 0 0 0 0 0 1 2 4 0 0 00 0 0  00  , mySum: 4
0 0 0 0 0 0 0 1 2 1 0 0 0 0 0 , mySum: 7
0 0 , mySum: 4
0 0 0 0 0 0 0 2 3 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 1 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 0 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 1 3 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 2 2 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 2 4 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 1 2 3 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 1 1 4 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 1 2 4 0 0 0 0 0 0 0 , mySum: 7
thread: 2, maxBlockLvlSize: 6
thread: 2, maxInBlockLvlSize: 16
thread: 2, AllTableSize: 2160, maxSubsetsSize: 64
thread: 1, maxBlockLvlSize: 6
thread: 1, maxInBlockLvlSize: 16
thread: 1, AllTableSize: 2160, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 6
thread: 0, maxInBlockLvlSize: 16
thread: 0, AllTableSize: 2160, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 1 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 0 1 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 0 1 1 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 0 1 1 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 0 0 2 0 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 0 0 1 0 1 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[8]: 0 0 0 0 2 
thread: 0, allBlocks[9]: 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[9]: 0 0 0 0 3 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 0 0 1 2 0 
thread: 0, allBlocks[11]: 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 0 0 1 1 1 
thread: 0, allBlocks[12]: 0 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[12]: 0 0 1 0 2 
thread: 0, allBlocks[13]: 0 0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[13]: 0 0 0 2 1 
thread: 0, allBlocks[14]: 0 0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[14]: 0 0 0 1 2 
thread: 0, allBlocks[15]: 0 0 0 0 0 0 0 2 2 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[15]: 0 0 0 2 2 
thread: 0, allBlocks[16]: 0 0 0 0 0 0 1 0 3 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[16]: 0 0 1 0 3 
thread: 0, allBlocks[17]: 0 0 0 0 0 0 0 1 3 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[17]: 0 0 0 1 3 
thread: 0, allBlocks[18]: 0 0 0 0 0 0 1 1 2 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[18]: 0 0 1 1 2 
thread: 0, allBlocks[19]: 0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[19]: 0 0 0 0 4 
thread: 0, allBlocks[20]: 0 0 0 0 0 0 1 2 1 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[20]: 0 0 1 2 1 
thread: 0, allBlocks[21]: 0 0 0 0 0 0 0 2 3 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[21]: 0 0 0 2 3 
thread: 0, allBlocks[22]: 0 0 0 0 0 0 0 1 4 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[22]: 0 0 0 1 4 
thread: 0, allBlocks[23]: 0 0 0 0 0 0 1 0 4 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[23]: 0 0 1 0 4 
thread: 0, allBlocks[24]: 0 0 0 0 0 0 1 1 3 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[24]: 0 0 1 1 3 
thread: 0, allBlocks[25]: 0 0 0 0 0 0 1 2 2 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[25]: 0 0 1 2 2 
thread: 0, allBlocks[26]: 0 0 0 0 0 0 0 2 4 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[26]: 0 0 0 2 4 
thread: 0, allBlocks[27]: 0 0 0 0 0 0 1 2 3 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[27]: 0 0 1 2 3 
thread: 0, allBlocks[28]: 0 0 0 0 0 0 1 1 4 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[28]: 0 0 1 1 4 
thread: 0, allBlocks[29]: 0 0 0 0 0 0 1 2 4 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[29]: 0 0 1 2 4 
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.175503
thread: 0, sOPT: 10
Thread: 2, gpu_BlockDP is done.
Thread: 1, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.076995
thread: 2, sOPT: 10
copy the latest feasible solution to instance takes time: 0.089248
thread: 1, sOPT: 10
BKID: 0, LB: 33, UB: 33, OPT: 10
Dynamic Programming Runtime: 0.947768
Execution time between LB and UB is: 0
By far, all LB UB calculation runtime: 0
********************************************************
Total execution on UB and LB is: 1
OUT of Bk while loop  
UB    33
LB    33
T1    33
T2    33
OPT   10
nMachines   10
BkID	0
AllProbData.size()    2
ck :   1
AllProbData[ck].Ttable    33
ck :   0
AllProbData[ck].Ttable    35
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan34
Main Scheduling is Done
File 1-14 is Done.
******************************
Reading File...
File 1-15 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 52, LB: 33start at time: 1505254735
thread: 0, MlBk is called with LB: 33, UB: 38
thread: 3, MlBk is called with LB: 48, UB: 53
 thread: 0, LongJobs.size() 21
thread: 1, MlBk is called with LB: 38, UB: 43
 thread: 3, LongJobs.size() 17
thread: 2, MlBk is called with LB: 43, UB: 48
 thread: 1, LongJobs.size() 21
 thread: 2, LongJobs.size() 20
thread: 3, NSTable size: 18
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 6
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 6
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 5
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 7, maxN[i].idx: 0, blockDimSize[i]: 7
thread: 3, i: 1, maxN[i].weit: 7, maxN[i].idx: 1, blockDimSize[i]: 7
thread: 3, i: 2, maxN[i].weit: 6, maxN[i].idx: 2, blockDimSize[i]: 6
thread: 3, i: 0, divisor[i]: 7, blockDimSize[i]: 1
thread: 3, i: 1, divisor[i]: 7, blockDimSize[i]: 1
thread: 3, i: 2, divisor[i]: 2, blockDimSize[i]: 3
thread: 3, largestBlockVec.elm: 0 0 0 6 6 1 0 0 0 0 0 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 1 1 3 0 0 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 7 7 2 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 6 6 1 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 6 6 1 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 2 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 3 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 3 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 2 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 3 1 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 1 3 0 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 1 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 4 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 4 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 5 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 4 1 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 1 3 1 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 1 4 0 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 2 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 2 3 0 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 5 0 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 3 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 3 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 5 1 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 5 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 3 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 3 3 0 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 4 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 4 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 6 0 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 5 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 2 4 0 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 2 3 1 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 6 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 1 5 0 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 1 4 1 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 4 3 0 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 5 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 6 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 3 3 1 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 4 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 5 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 6 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 2 4 1 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 2 5 0 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 3 4 0 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 1 6 0 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 1 5 1 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 6 1 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 5 3 0 0 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 5 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 1 6 1 0 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 2 5 1 0 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 2 6 0 0 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 6 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 4 4 0 0 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 4 3 1 0 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 6 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 3 4 1 0 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 3 5 0 0 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 5 4 0 0 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 6 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 6 3 0 0 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 3 6 0 0 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 5 3 1 0 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 4 5 0 0 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 4 4 1 0 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 2 6 1 0 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 3 5 1 0 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 5 4 1 0 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 5 5 0 0 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 6 4 0 0 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 4 6 0 0 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 4 5 1 0 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 3 6 1 0 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 6 3 1 0 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 4 6 1 0 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 6 5 0 0 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 6 4 1 0 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 5 6 0 0 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 5 5 1 0 0 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 5 6 1 0 0 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 6 5 1 0 0 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 6 6 0 0 0 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 6 6 1 0 0 0 0 0 0 0 0 0 0 , mySum: 13
thread: 3, maxBlockLvlSize: 13
thread: 3, maxInBlockLvlSize: 1
thread: 3, AllTableSize: 294, maxSubsetsSize: 64
thread: 2, NSTable size: 24
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 5
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 6
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 5
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 6, maxN[i].idx: 0, blockDimSize[i]: 6
thread: 2, i: 1, maxN[i].weit: 5, maxN[i].idx: 1, blockDimSize[i]: 5
thread: 2, i: 2, maxN[i].weit: 7, maxN[i].idx: 2, blockDimSize[i]: 7
thread: 2, i: 3, maxN[i].weit: 6, maxN[i].idx: 3, blockDimSize[i]: 6
thread: 2, i: 0, divisor[i]: 2, blockDimSize[i]: 3
thread: 2, i: 1, divisor[i]: 1, blockDimSize[i]: 5
thread: 2, i: 2, divisor[i]: 7, blockDimSize[i]: 1
thread: 2, i: 3, divisor[i]: 2, blockDimSize[i]: 3
thread: 2, largestBlockVec.elm: 0 0 0 0 0 1 0 6 1 0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 0 0 3 5 1 3 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 0 2 1 7 2 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 1 0 6 1 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 1 0 6 1 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 0 3 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 0 2 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 3 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 4 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 0 3 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 0 4 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 5 1 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 0 4 1 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 0 5 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 6 1 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 0 5 1 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 0 6 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 0 6 1 0 0 0 0 0 0 0 , mySum: 8
thread: 2, maxBlockLvlSize: 4
thread: 2, maxInBlockLvlSize: 9
thread: 2, AllTableSize: 1260, maxSubsetsSize: 64
thread: 1, NSTable size: 29
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 5
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 6
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 5
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 1, i: 1, maxN[i].weit: 6, maxN[i].idx: 1, blockDimSize[i]: 6
thread: 1, i: 2, maxN[i].weit: 5, maxN[i].idx: 2, blockDimSize[i]: 5
thread: 1, i: 3, maxN[i].weit: 7, maxN[i].idx: 3, blockDimSize[i]: 7
thread: 1, i: 4, maxN[i].weit: 6, maxN[i].idx: 4, blockDimSize[i]: 6
thread: 1, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 1, divisor[i]: 2, blockDimSize[i]: 3
thread: 1, i: 2, divisor[i]: 1, blockDimSize[i]: 5
thread: 1, i: 3, divisor[i]: 7, blockDimSize[i]: 1
thread: 1, i: 4, divisor[i]: 2, blockDimSize[i]: 3
thread: 1, largestBlockVec.elm: 0 0 0 0 0 1 0 6 1 0 0 0 0 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 0 2 3 5 1 3 0 0 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 1 2 1 7 2 0 0 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 1 0 6 1 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 1 0 6 1 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 0 3 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 0 2 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 3 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 4 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 0 3 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 0 4 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 5 1 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 0 4 1 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 0 5 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 6 1 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 0 5 1 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 0 6 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 0 6 1 0 0 0 0 0 0 0 , mySum: 8
thread: 0, NSTable size: 19
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 5
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 6
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 5
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 0, i: 1, maxN[i].weit: 6, maxN[i].idx: 1, blockDimSize[i]: 6
thread: 0, i: 2, maxN[i].weit: 5, maxN[i].idx: 2, blockDimSize[i]: 5
thread: 0, i: 3, maxN[i].weit: 7, maxN[i].idx: 3, blockDimSize[i]: 7
thread: 0, i: 4, maxN[i].weit: 6, maxN[i].idx: 4, blockDimSize[i]: 6
thread: 0, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 1, divisor[i]: 2, blockDimSize[i]: 3
thread: 0, i: 2, divisor[i]: 1, blockDimSize[i]: 5
thread: 0, i: 3, divisor[i]: 7, blockDimSize[i]: 1
thread: 0, i: 4, divisor[i]: 2, blockDimSize[i]: 3
thread: 0, largestBlockVec.elm: 0 0 0 0 0 1 0 6 1 0 0 0 0 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 0 2 3 5 1 3 0 0 0 0 0 0 0 
thread: 0, divisorComp: 0 0 0 0 1 2 1 7 2 0 0 0 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 1 0 6 1 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 1 0 6 1 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 0 3 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 0 2 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 3 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 4 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 0 3 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 0 4 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 5 1 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 0 4 1 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 0 5 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 6 1 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 0 5 1 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 0 6 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 0 6 1 0 0 0 0 0 0 0 , mySum: 8
thread: 1, maxBlockLvlSize: 4
thread: 1, maxInBlockLvlSize: 17
thread: 1, AllTableSize: 2520, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 4
thread: 0, maxInBlockLvlSize: 17
thread: 0, AllTableSize: 2520, maxSubsetsSize: 64
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 6
copy the latest feasible solution to instance takes time: 0.018702
thread: 3, sOPT: 6
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 1 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 0 1 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 0 2 0 
thread: 0, allBlocks[5]: 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 1 0 1 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 1 0 0 1 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 0 0 0 1 1 
thread: 0, allBlocks[8]: 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[8]: 0 1 0 2 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[9]: 0 1 0 1 1 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 0 0 0 2 1 
thread: 0, allBlocks[11]: 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 0 0 0 3 0 
thread: 0, allBlocks[12]: 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[12]: 0 0 0 4 0 
thread: 0, allBlocks[13]: 0 0 0 0 0 1 0 3 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[13]: 0 1 0 3 0 
thread: 0, allBlocks[14]: 0 0 0 0 0 1 0 2 1 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[14]: 0 1 0 2 1 
thread: 0, allBlocks[15]: 0 0 0 0 0 0 0 3 1 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[15]: 0 0 0 3 1 
thread: 0, allBlocks[16]: 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[16]: 0 0 0 5 0 
thread: 0, allBlocks[17]: 0 0 0 0 0 0 0 4 1 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[17]: 0 0 0 4 1 
thread: 0, allBlocks[18]: 0 0 0 0 0 1 0 3 1 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[18]: 0 1 0 3 1 
thread: 0, allBlocks[19]: 0 0 0 0 0 1 0 4 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[19]: 0 1 0 4 0 
thread: 0, allBlocks[20]: 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[20]: 0 0 0 6 0 
Thread: 2, gpu_BlockDP is done.
thread: 0, allBlocks[21]: 0 0 0 0 0 0 0 5 1 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[21]: 0 0 0 5 1 
thread: 0, allBlocks[22]: 0 0 0 0 0 1 0 4 1 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[22]: 0 1 0 4 1 
thread: 0, allBlocks[23]: 0 0 0 0 0 1 0 5 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[23]: 0 1 0 5 0 
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 8
thread: 0, allBlocks[24]: 0 0 0 0 0 0 0 6 1 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[24]: 0 0 0 6 1 
thread: 0, allBlocks[25]: 0 0 0 0 0 1 0 5 1 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[25]: 0 1 0 5 1 
thread: 0, allBlocks[26]: 0 0 0 0 0 1 0 6 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[26]: 0 1 0 6 0 
copy the latest feasible solution to instance takes time: 0.065367
thread: 2, sOPT: 8
thread: 0, allBlocks[27]: 0 0 0 0 0 1 0 6 1 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[27]: 0 1 0 6 1 
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.120989
thread: 0, sOPT: 10
copy the latest feasible solution to instance takes time: 0.080117
thread: 1, sOPT: 9
Thread: 1, MlBk function is done, and BkID for all processes are collected.
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 2, MlBk function is done, and BkID for all processes are collected.3, MlBk function is done, and BkID for all processes are collected.

sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 33, UB: 36
BKID: 0, LB: 33, UB: 36, OPT: 10
Dynamic Programming Runtime: 0.952801
Execution time between LB and UB is: 0
By far, all LB UB calculation runtime: 0
Iteration: 2, UB: 36, LB: 33start at time: 1505254735
thread: 0, MlBk is called with LB: 33, UB: 34
thread: 1, MlBk is called with LB: 34, UB: 35
 thread: 0, LongJobs.size() 21thread: 
2, MlBk is called with LB: 35, UB: 36
 thread: 1, LongJobs.size() 21
 thread: 2, LongJobs.size() 21
thread: 2, NSTable size: 19
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 5
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 6
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 5
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 2, i: 1, maxN[i].weit: 6, maxN[i].idx: 1, blockDimSize[i]: 6
thread: 2, i: 2, maxN[i].weit: 5, maxN[i].idx: 2, blockDimSize[i]: 5
thread: 2, i: 3, maxN[i].weit: 7, maxN[i].idx: 3, blockDimSize[i]: 7
thread: 2, i: 4, maxN[i].weit: 6, maxN[i].idx: 4, blockDimSize[i]: 6
thread: 2, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 1, divisor[i]: 2, blockDimSize[i]: 3
thread: 2, i: 2, divisor[i]: 1, blockDimSize[i]: 5
thread: 2, i: 3, divisor[i]: 7, blockDimSize[i]: 1
thread: 2, i: 4, divisor[i]: 2, blockDimSize[i]: 3
thread: 2, largestBlockVec.elm: 0 0 0 0 0 1 0 6 1 0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 0 2 3 5 1 3 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 1 2 1 7 2 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 1 0 6 1 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 1 0 6 1 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 0 3 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 0 2 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 3 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 4 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 0 3 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 0 4 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 5 1 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 0 4 1 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 0 5 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 6 1 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 0 5 1 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 0 6 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 0 6 1 0 0 0 0 0 0 0 , mySum: 8
thread: 1, NSTable size: 19
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 5
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 6
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 5
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 1, i: 1, maxN[i].weit: 6, maxN[i].idx: 1, blockDimSize[i]: 6
thread: 1, i: 2, maxN[i].weit: 5, maxN[i].idx: 2, blockDimSize[i]: 5
thread: 1, i: 3, maxN[i].weit: 7, maxN[i].idx: 3, blockDimSize[i]: 7
thread: 1, i: 4, maxN[i].weit: 6, maxN[i].idx: 4, blockDimSize[i]: 6
thread: 1, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 1, divisor[i]: 2, blockDimSize[i]: 3
thread: 1, i: 2, divisor[i]: 1, blockDimSize[i]: 5
thread: 1, i: 3, divisor[i]: 7, blockDimSize[i]: 1
thread: 1, i: 4, divisor[i]: 2, blockDimSize[i]: 3
thread: 1, largestBlockVec.elm: 0 0 0 0 0 1 0 6 1 0 0 0 0 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 0 2 3 5 1 3 0 0 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 1 2 1 7 2 0 0 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 1 0 6 1 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 1 0 6 1 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 0 3 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 0 2 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 3 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 4 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 0 3 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 0 4 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 5 1 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 0 4 1 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 0 5 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 6 1 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 0 5 1 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 0 6 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 0 6 1 0 0 0 0 0 0 0 , mySum: 8
thread: 0, NSTable size: 17
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 5
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 6
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 5
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 0, i: 1, maxN[i].weit: 6, maxN[i].idx: 1, blockDimSize[i]: 6
thread: 0, i: 2, maxN[i].weit: 5, maxN[i].idx: 2, blockDimSize[i]: 5
thread: 0, i: 3, maxN[i].weit: 7, maxN[i].idx: 3, blockDimSize[i]: 7
thread: 0, i: 4, maxN[i].weit: 6, maxN[i].idx: 4, blockDimSize[i]: 6
thread: 0, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 1, divisor[i]: 2, blockDimSize[i]: 3
thread: 0, i: 2, divisor[i]: 1, blockDimSize[i]: 5
thread: 0, i: 3, divisor[i]: 7, blockDimSize[i]: 1
thread: 0, i: 4, divisor[i]: 2, blockDimSize[i]: 3
thread: 0, largestBlockVec.elm: 0 0 0 0 0 1 0 6 1 0 0 0 0 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 0 2 3 5 1 3 0 0 0 0 0 0 0 
thread: 0, divisorComp: 0 0 0 0 1 2 1 7 2 0 0 0 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 1 0 6 1 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 1 0 6 1 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 0 3 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 0 2 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 3 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 4 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 0 3 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 0 4 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 5 1 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 0 4 1 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 0 5 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 6 1 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 0 5 1 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 0 6 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 0 6 1 0 0 0 0 0 0 0 , mySum: 8
thread: 2, maxBlockLvlSize: 4
thread: 2, maxInBlockLvlSize: 17
thread: 2, AllTableSize: 2520, maxSubsetsSize: 64
thread: 1, maxBlockLvlSize: 4
thread: 1, maxInBlockLvlSize: 17
thread: 1, AllTableSize: 2520, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 4
thread: 0, maxInBlockLvlSize: 17
thread: 0, AllTableSize: 2520, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 1 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 0 1 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 0 2 0 
thread: 0, allBlocks[5]: 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 1 0 1 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 1 0 0 1 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 0 0 0 1 1 
thread: 0, allBlocks[8]: 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[8]: 0 1 0 2 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[9]: 0 1 0 1 1 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 0 0 0 2 1 
thread: 0, allBlocks[11]: 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 0 0 0 3 0 
thread: 0, allBlocks[12]: 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[12]: 0 0 0 4 0 
thread: 0, allBlocks[13]: 0 0 0 0 0 1 0 3 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[13]: 0 1 0 3 0 
thread: 0, allBlocks[14]: 0 0 0 0 0 1 0 2 1 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[14]: 0 1 0 2 1 
thread: 0, allBlocks[15]: 0 0 0 0 0 0 0 3 1 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[15]: 0 0 0 3 1 
thread: 0, allBlocks[16]: 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[16]: 0 0 0 5 0 
thread: 0, allBlocks[17]: 0 0 0 0 0 0 0 4 1 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[17]: 0 0 0 4 1 
thread: 0, allBlocks[18]: 0 0 0 0 0 1 0 3 1 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[18]: 0 1 0 3 1 
thread: 0, allBlocks[19]: 0 0 0 0 0 1 0 4 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[19]: 0 1 0 4 0 
thread: 0, allBlocks[20]: 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[20]: 0 0 0 6 0 
thread: 0, allBlocks[21]: 0 0 0 0 0 0 0 5 1 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[21]: 0 0 0 5 1 
thread: 0, allBlocks[22]: 0 0 0 0 0 1 0 4 1 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[22]: 0 1 0 4 1 
thread: 0, allBlocks[23]: 0 0 0 0 0 1 0 5 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[23]: 0 1 0 5 0 
thread: 0, allBlocks[24]: 0 0 0 0 0 0 0 6 1 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[24]: 0 0 0 6 1 
thread: 0, allBlocks[25]: 0 0 0 0 0 1 0 5 1 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[25]: 0 1 0 5 1 
thread: 0, allBlocks[26]: 0 0 0 0 0 1 0 6 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[26]: 0 1 0 6 0 
thread: 0, allBlocks[27]: 0 0 0 0 0 1 0 6 1 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[27]: 0 1 0 6 1 
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.203768
thread: 2, sOPT: 10
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 3e-06
thread: 0, sOPT: 11
copy the latest feasible solution to instance takes time: 0.089627
thread: 1, sOPT: 10
BKID: 0, LB: 34, UB: 34, OPT: 10
Dynamic Programming Runtime: 1.0725
Execution time between LB and UB is: 0
By far, all LB UB calculation runtime: 0
********************************************************
Total execution on UB and LB is: 0
OUT of Bk while loop  
UB    34
LB    34
T1    34
T2    34
OPT   10
nMachines   10
BkID	0
AllProbData.size()    2
ck :   1
AllProbData[ck].Ttable    34
ck :   0
AllProbData[ck].Ttable    35
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan36
Main Scheduling is Done
File 1-15 is Done.
******************************
Reading File...
File 1-16 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 49, LB: 30start at time: 1505254736
thread: 0, MlBk is called with LB: 30, UB: 35
thread: 3, MlBk is called with LB: 45, UB: 50
 thread: 0, LongJobs.size() 21
thread: 2, MlBk is called with LB: 40, UB: 45thread: 
1 thread: 3, LongJobs.size() 17, MlBk is called with LB: 
35, UB: 40
 thread: 2, LongJobs.size() 20
 thread: 1, LongJobs.size() 21
thread: 3, NSTable size: 27
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 5
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 6
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 6, maxN[i].idx: 0, blockDimSize[i]: 6
thread: 3, i: 1, maxN[i].weit: 7, maxN[i].idx: 1, blockDimSize[i]: 7
thread: 3, i: 2, maxN[i].weit: 4, maxN[i].idx: 2, blockDimSize[i]: 4
thread: 3, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 3, i: 0, divisor[i]: 2, blockDimSize[i]: 3
thread: 3, i: 1, divisor[i]: 7, blockDimSize[i]: 1
thread: 3, i: 2, divisor[i]: 2, blockDimSize[i]: 2
thread: 3, i: 3, divisor[i]: 1, blockDimSize[i]: 4
thread: 3, largestBlockVec.elm: 0 0 0 0 0 1 6 1 0 0 0 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 0 0 3 1 2 4 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 0 0 2 7 2 1 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 1 6 1 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 1 6 1 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 2 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 3 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 5 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 4 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 3 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 5 1 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 5 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 6 1 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 5 1 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 6 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 6 1 0 0 0 0 0 0 0 0 , mySum: 8
thread: 3, maxBlockLvlSize: 4
thread: 3, maxInBlockLvlSize: 6
thread: 3, AllTableSize: 672, maxSubsetsSize: 64
thread: 2, NSTable size: 41
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 5
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 6
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 2, i: 1, maxN[i].weit: 6, maxN[i].idx: 1, blockDimSize[i]: 6
thread: 2, i: 2, maxN[i].weit: 7, maxN[i].idx: 2, blockDimSize[i]: 7
thread: 2, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 2, i: 4, maxN[i].weit: 4, maxN[i].idx: 4, blockDimSize[i]: 4
thread: 2, i: 0, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, i: 1, divisor[i]: 2, blockDimSize[i]: 3
thread: 2, i: 2, divisor[i]: 7, blockDimSize[i]: 1
thread: 2, i: 3, divisor[i]: 1, blockDimSize[i]: 4
thread: 2, i: 4, divisor[i]: 1, blockDimSize[i]: 4
thread: 2, largestBlockVec.elm: 0 0 0 0 1 1 6 0 0 0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 0 2 3 1 4 4 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 2 2 7 1 1 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 1 1 6 0 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 1 1 6 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 1 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 3 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 5 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 1 3 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 4 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 5 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 5 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 1 4 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 0 6 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 6 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 1 5 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 1 6 0 0 0 0 0 0 0 0 0 , mySum: 8
thread: 1, NSTable size: 27
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 5
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 6
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 5, maxN[i].idx: 0, blockDimSize[i]: 5
thread: 1, i: 1, maxN[i].weit: 6, maxN[i].idx: 1, blockDimSize[i]: 6
thread: 1, i: 2, maxN[i].weit: 7, maxN[i].idx: 2, blockDimSize[i]: 7
thread: 1, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 1, i: 4, maxN[i].weit: 4, maxN[i].idx: 4, blockDimSize[i]: 4
thread: 1, i: 0, divisor[i]: 5, blockDimSize[i]: 1
thread: 1, i: 1, divisor[i]: 2, blockDimSize[i]: 3
thread: 1, i: 2, divisor[i]: 7, blockDimSize[i]: 1
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 4
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 4
thread: 1, largestBlockVec.elm: 0 0 0 0 4 1 6 0 0 0 0 0 0 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 0 1 3 1 4 4 0 0 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 5 2 7 1 1 0 0 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 4 1 6 0 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 4 1 6 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 1 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 3 1 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 0 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 1 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 3 0 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 3 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 1 3 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 4 0 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 4 1 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 1 2 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 3 1 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 5 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 4 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 0 3 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 3 0 2 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 3 1 2 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 3 0 3 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 5 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 4 0 2 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 4 1 1 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 0 5 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 1 3 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 0 4 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 1 4 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 1 4 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 6 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 2 0 5 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 3 0 4 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 4 0 3 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 0 6 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 3 1 3 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 4 1 2 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 1 5 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 1 6 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 4 0 4 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 2 1 5 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 3 1 4 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 4 1 3 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 3 0 5 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 2 0 6 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 3 1 5 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 4 1 4 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 4 0 5 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 3 0 6 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 2 1 6 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 4 1 5 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 3 1 6 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 4 0 6 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 4 1 6 0 0 0 0 0 0 0 0 0 , mySum: 11
thread: 0, NSTable size: 20
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 5
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 6
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 0, maxN[i].weit: 5, maxN[i].idx: 0, blockDimSize[i]: 5
thread: 0, i: 1, maxN[i].weit: 6, maxN[i].idx: 1, blockDimSize[i]: 6
thread: 0, i: 2, maxN[i].weit: 7, maxN[i].idx: 2, blockDimSize[i]: 7
thread: 0, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 0, i: 4, maxN[i].weit: 4, maxN[i].idx: 4, blockDimSize[i]: 4
thread: 0, i: 0, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, i: 1, divisor[i]: 2, blockDimSize[i]: 3
thread: 0, i: 2, divisor[i]: 7, blockDimSize[i]: 1
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 4
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 4
thread: 0, largestBlockVec.elm: 0 0 0 0 4 1 6 0 0 0 0 0 0 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 0 1 3 1 4 4 0 0 0 0 0 0 0 
thread: 0, divisorComp: 0 0 0 0 5 2 7 1 1 0 0 0 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 4 1 6 0 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 4 1 6 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 1 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 3 1 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 0 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 1 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 3 0 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 3 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 1 3 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 4 0 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 4 1 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 1 2 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 3 1 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 5 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 4 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 0 3 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 3 0 2 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 3 1 2 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 3 0 3 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 5 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 4 0 2 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 4 1 1 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 0 5 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 1 3 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 0 4 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 1 4 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 1 4 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 6 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 2 0 5 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 3 0 4 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 4 0 3 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 0 6 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 3 1 3 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 4 1 2 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 1 5 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 1 6 0 0 0 0 thread: 0 0 0 0 0 , mySum: 28
0 0 0 0 4 0 4 0 0 0 , maxBlockLvlSize: 4
thread: 2, maxInBlockLvlSize: 19
0thread: 2 , AllTableSize: 02688, maxSubsetsSize:  64
0 0 0 0 , mySum: 8
0 0 0 0 2 1 5 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 3 1 4 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 4 1 3 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 3 0 5 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 2 0 6 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 3 1 5 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 4 1 4 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 4 0 5 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 3 0 6 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 2 1 6 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 4 1 5 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 3 1 6 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 4 0 6 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 4 1 6 0 0 0 0 0 0 0 0 0 , mySum: 11
thread: 1, maxBlockLvlSize: 10
thread: 1, maxInBlockLvlSize: 10
thread: 1, AllTableSize: 3360, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 10
thread: 0, maxInBlockLvlSize: 10
thread: 0, AllTableSize: 3360, maxSubsetsSize: 64
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 6
copy the latest feasible solution to instance takes time: 0.045339
thread: 3, sOPT: 6
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 1 0 0 
thread: 0, allBlocks[2]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 1 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 1 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 2 0 0 
thread: 0, allBlocks[5]: 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 2 0 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 1 1 0 0 
thread: 0, allBlocks[7]: 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 1 1 0 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[8]: 1 0 1 0 0 
thread: 0, allBlocks[9]: 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[9]: 2 1 0 0 0 
thread: 0, allBlocks[10]: 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 3 0 0 0 0 
thread: 0, allBlocks[11]: 0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 2 0 1 0 0 
thread: 0, allBlocks[12]: 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[12]: 1 1 1 0 0 
thread: 0, allBlocks[13]: 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[13]: 1 0 2 0 0 
thread: 0, allBlocks[14]: 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[14]: 0 0 3 0 0 
thread: 0, allBlocks[15]: 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[15]: 0 1 2 0 0 
thread: 0, allBlocks[16]: 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[16]: 0 0 4 0 0 
thread: 0, allBlocks[17]: 0 0 0 0 2 1 1 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[17]: 2 1 1 0 0 
thread: 0, allBlocks[18]: 0 0 0 0 3 1 0 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[18]: 3 1 0 0 0 
thread: 0, allBlocks[19]: 0 0 0 0 2 0 2 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[19]: 2 0 2 0 0 
thread: 0, allBlocks[20]: 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[20]: 4 0 0 0 0 
thread: 0, allBlocks[21]: 0 0 0 0 1 1 2 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[21]: 1 1 2 0 0 
thread: 0, allBlocks[22]: 0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[22]: 0 1 3 0 0 
thread: 0, allBlocks[23]: 0 0 0 0 3 0 1 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[23]: 3 0 1 0 0 
thread: 0, allBlocks[24]: 0 0 0 0 1 0 3 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[24]: 1 0 3 0 0 
thread: 0, allBlocks[25]: 0 0 0 0 1 1 3 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[25]: 1 1 3 0 0 
thread: 0, allBlocks[26]: 0 0 0 0 4 0 1 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[26]: 4 0 1 0 0 
thread: 0, allBlocks[27]: 0 0 0 0 4 1 0 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[27]: 4 1 0 0 0 
thread: 0, allBlocks[28]: 0 0 0 0 2 1 2 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[28]: 2 1 2 0 0 
thread: 0, allBlocks[29]: 0 0 0 0 3 1 1 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[29]: 3 1 1 0 0 
thread: 0, allBlocks[30]: 0 0 0 0 0 0 5 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[30]: 0 0 5 0 0 
thread: 0, allBlocks[31]: 0 0 0 0 1 0 4 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[31]: 1 0 4 0 0 
thread: 0, allBlocks[32]: 0 0 0 0 2 0 3 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[32]: 2 0 3 0 0 
thread: 0, allBlocks[33]: 0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[33]: 0 1 4 0 0 
thread: 0, allBlocks[34]: 0 0 0 0 3 0 2 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[34]: 3 0 2 0 0 
thread: 0, allBlocks[35]: 0 0 0 0 3 1 2 0 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[35]: 3 1 2 0 0 
thread: 0, allBlocks[36]: 0 0 0 0 3 0 3 0 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[36]: 3 0 3 0 0 
thread: 0, allBlocks[37]: 0 0 0 0 0 1 5 0 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[37]: 0 1 5 0 0 
thread: 0, allBlocks[38]: 0 0 0 0 4 0 2 0 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[38]: 4 0 2 0 0 
thread: 0, allBlocks[39]: 0 0 0 0 4 1 1 0 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[39]: 4 1 1 0 0 
thread: 0, allBlocks[40]: 0 0 0 0 1 0 5 0 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[40]: 1 0 5 0 0 
thread: 0, allBlocks[41]: 0 0 0 0 2 1 3 0 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[41]: 2 1 3 0 0 
thread: 0, allBlocks[42]: 0 0 0 0 2 0 4 0 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[42]: 2 0 4 0 0 
thread: 0, allBlocks[43]: 0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[43]: 0 0 6 0 0 
thread: 0, allBlocks[44]: 0 0 0 0 1 1 4 0 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[44]: 1 1 4 0 0 
thread: 0, allBlocks[45]: 0 0 0 0 2 1 4 0 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[45]: 2 1 4 0 0 
thread: 0, allBlocks[46]: 0 0 0 0 0 1 6 0 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[46]: 0 1 6 0 0 
thread: 0, allBlocks[47]: 0 0 0 0 2 0 5 0 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[47]: 2 0 5 0 0 
thread: 0, allBlocks[48]: 0 0 0 0 3 0 4 0 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[48]: 3 0 4 0 0 
thread: 0, allBlocks[49]: 0 0 0 0 4 0 3 0 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[49]: 4 0 3 0 0 
thread: 0, allBlocks[50]: 0 0 0 0 1 0 6 0 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[50]: 1 0 6 0 0 
thread: 0, allBlocks[51]: 0 0 0 0 3 1 3 0 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[51]: 3 1 3 0 0 
thread: 0, allBlocks[52]: 0 0 0 0 4 1 2 0 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[52]: 4 1 2 0 0 
thread: 0, allBlocks[53]: 0 0 0 0 1 1 5 0 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[53]: 1 1 5 0 0 
thread: 0, allBlocks[54]: 0 0 0 0 1 1 6 0 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[54]: 1 1 6 0 0 
thread: 0, allBlocks[55]: 0 0 0 0 4 0 4 0 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[55]: 4 0 4 0 0 
thread: 0, allBlocks[56]: 0 0 0 0 2 1 5 0 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[56]: 2 1 5 0 0 
thread: 0, allBlocks[57]: 0 0 0 0 3 1 4 0 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[57]: 3 1 4 0 0 
thread: 0, allBlocks[58]: 0 0 0 0 4 1 3 0 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[58]: 4 1 3 0 0 
thread: 0, allBlocks[59]: 0 0 0 0 3 0 5 0 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[59]: 3 0 5 0 0 
thread: 0, allBlocks[60]: 0 0 0 0 2 0 6 0 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[60]: 2 0 6 0 0 
thread: 0, allBlocks[61]: 0 0 0 0 3 1 5 0 0 0 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[61]: 3 1 5 0 0 
thread: 0, allBlocks[62]: 0 0 0 0 4 1 4 0 0 0 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[62]: 4 1 4 0 0 
thread: 0, allBlocks[63]: 0 0 0 0 4 0 5 0 0 0 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[63]: 4 0 5 0 0 
thread: 0, allBlocks[64]: 0 0 0 0 3 0 6 0 0 0 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[64]: 3 0 6 0 0 
thread: 0, allBlocks[65]: 0 0 0 0 2 1 6 0 0 0 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[65]: 2 1 6 0 0 
thread: 0, allBlocks[66]: 0 0 0 0 4 1 5 0 0 0 0 0 0 0 0 0 mySum: 10
thread: 0, blockNoZero[66]: 4 1 5 0 0 
thread: 0, allBlocks[67]: 0 0 0 0 3 1 6 0 0 0 0 0 0 0 0 0 mySum: 10
thread: 0, blockNoZero[67]: 3 1 6 0 0 
thread: 0, allBlocks[68]: 0 0 0 0 4 0 6 0 0 0 0 0 0 0 0 0 mySum: 10
thread: 0, blockNoZero[68]: 4 0 6 0 0 
thread: 0, allBlocks[69]: 0 0 0 0 4 1 6 0 0 0 0 0 0 0 0 0 mySum: 11
thread: 0, blockNoZero[69]: 4 1 6 0 0 
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 9
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 7
copy the latest feasible solution to instance takes time: 0.258834
thread: 0, sOPT: 10
copy the latest feasible solution to instance takes time: 0.211123
thread: 1, sOPT: 9
copy the latest feasible solution to instance takes time: 0.193051
thread: 2, sOPT: 7
Thread: 2, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 13, MlBk function is done, and BkID for all processes are collected.
, MlBk function is done, and BkID for all processes are collected.
Thread: 0, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 30, UB: 33
BKID: 0, LB: 30, UB: 33, OPT: 10
Dynamic Programming Runtime: 1.62865
Execution time between LB and UB is: 0
By far, all LB UB calculation runtime: 0
Iteration: 2, UB: 33, LB: 30start at time: 1505254736
thread: 0, MlBk is called with LB: 30, UB: 31
 thread: 0, LongJobs.size() 21
thread: thread: 2, MlBk is called with LB: 132, MlBk is called with LB: , UB: 3133, UB: 32

 thread: 2, LongJobs.size() 21
 thread: 1, LongJobs.size() 21
thread: 2, NSTable size: 20
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 5
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 6
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 5, maxN[i].idx: 0, blockDimSize[i]: 5
thread: 2, i: 1, maxN[i].weit: 6, maxN[i].idx: 1, blockDimSize[i]: 6
thread: 2, i: 2, maxN[i].weit: 7, maxN[i].idx: 2, blockDimSize[i]: 7
thread: 2, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 2, i: 4, maxN[i].weit: 4, maxN[i].idx: 4, blockDimSize[i]: 4
thread: 2, i: 0, divisor[i]: 5, blockDimSize[i]: 1
thread: 2, i: 1, divisor[i]: 2, blockDimSize[i]: 3
thread: 2, i: 2, divisor[i]: 7, blockDimSize[i]: 1
thread: 2, i: 3, divisor[i]: 1, blockDimSize[i]: 4
thread: 2, i: 4, divisor[i]: 1, blockDimSize[i]: 4
thread: 2, largestBlockVec.elm: 0 0 0 0 4 1 6 0 0 0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 0 1 3 1 4 4 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 5 2 7 1 1 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 4 1 6 0 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 4 1 6 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 1 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 3 1 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 0 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 1 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 3 0 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 3 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 1 3 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 4 0 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 4 1 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 1 2 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 3 1 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 5 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 4 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 0 3 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 3 0 2 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 3 1 2 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 3 0 3 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 5 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 4 0 2 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 4 1 1 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 0 5 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 1 3 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 0 4 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 1 4 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 1 4 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 6 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 2 0 5 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 3 0 4 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 4 0 3 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 0 6 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 3 1 3 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 4 1 2 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 1 5 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 1 6 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 4 0 4 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 2 1 5 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 3 1 4 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 4 1 3 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 3 0 5 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 2 0 6 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 3 1 5 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 4 1 4 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 4 0 5 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 3 0 6 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 2 1 6 0 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 4 1 5 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 3 1 6 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 4 0 6 0 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 4 1 6 0 0 0 0 0 0 0 0 0 , mySum: 11
thread: 2, maxBlockLvlSize: 10
thread: 2, maxInBlockLvlSize: 10
thread: 2, AllTableSize: 3360, maxSubsetsSize: 64
thread: 1, NSTable size: 32
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 6
thread: 1, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 1, i: 1, maxN[i].weit: 4, maxN[i].idx: 1, blockDimSize[i]: 4
thread: 1, i: 2, maxN[i].weit: 5, maxN[i].idx: 2, blockDimSize[i]: 5
thread: 1, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 1, i: 4, maxN[i].weit: 4, maxN[i].idx: 4, blockDimSize[i]: 4
thread: 1, i: 5, maxN[i].weit: 4, maxN[i].idx: 5, blockDimSize[i]: 4
thread: 1, i: 6, maxN[i].weit: 7, maxN[i].idx: 6, blockDimSize[i]: 7
thread: 1, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 1, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, i: 2, divisor[i]: 5, blockDimSize[i]: 1
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 4
thread: 1, i: 5, divisor[i]: 1, blockDimSize[i]: 4
thread: 1, i: 6, divisor[i]: 7, blockDimSize[i]: 1
thread: 1, largestBlockVec.elm: 0 0 0 0 0 0 0 0 0 0 1 4 0 0 0 6 
thread: 1, blockDimSizeComp: 0 0 0 0 0 0 0 0 0 2 2 1 2 4 4 1 
thread: 1, divisorComp: 0 0 0 0 0 0 0 0 0 1 2 5 1 1 1 7 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 1 4 0 0 0 6 
thread: 1, largestNoZeroBlockVec: 0 1 4 0 0 0 6 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 , mySum: 2
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 2 , mySum: 3
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 2 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 1 2 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 1 2 0 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 3 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 2 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 2 , mySum: 4
0 0 0 0 0 0 0 0 0 0 1 3 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 3 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 , mySum: 4
0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 3 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5 , mySum: 5
0 0 0 0 0 0 0 0 0 0 1 2 0 0 0 2 , mySum: 5
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 4 , mySum: 5
0 0 0 0 0 0 0 0 0 0 1 3 0 0 0 1 , mySum: 5
0 0 0 0 0 0 0 0 0 0 1 4 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 4 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 3 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 1 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 2 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 5 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 4 , mySum: 6
0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 4 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 3 , mySum: 6
0 0 0 0 0 0 0 0 0 0 1 2 0 0 0 3 , mySum: 6
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 5 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6 , mySum: 6
0 0 0 0 0 0 0 0 0 0 1 4 0 0 0 1 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 2 , mySum: 6
0 0 0 0 0 0 0 0 0 0 1 3 0 0 0 2 , mySum: 6
0 0 0 0 0 0 0 0 0 0 1 2 0 0 0 4 , mySum: 7
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 6 , mySum: 7
0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 3 , mySum: 7
0 0 0 0 0 0 0 0 0 0 1 3 0 0 0 3 , mySum: 7
0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 5 , mySum: 7
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 5 , mySum: 7
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 6 , mySum: 7
0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 4 , mySum: 7
0 0 0 0 0 0 0 0 0 0 1 4 0 0 0 2 , mySum: 7
0 0 0 0 0 0 0 0 0 0 1 3 0 0 0 4 , mySum: 8
0 0 0 0 0 0 0 0 0 0 1 4 0 0 0 3 , mySum: 8
0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 4 , mySum: 8
0 0 0 0 0 0 0 0 0 0 1 2 0 0 0 5 , mySum: 8
0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 6 , mySum: 8
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 6 , mySum: 8
0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 5 , mySum: 8
0 0 0 0 0 0 0 0 0 0 1 2 0 0 0 6 , mySum: 9
0 0 0 0 0 0 0 0 0 0 1 3 0 0 0 5 , mySum: 9
0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 6 , mySum: 9
0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 5 , mySum: 9
0 0 0 0 0 0 0 0 0 0 1 4 0 0 0 4 , mySum: 9
0 0 0 0 0 0 0 0 0 0 1 3 0 0 0 6 , mySum: 10
0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 6 , mySum: 10
0 0 0 0 0 0 0 0 0 0 1 4 0 0 0 5 , mySum: 10
0 0 0 0 0 0 0 0 0 0 1 4 0 0 0 6 , mySum: 11
thread: 0, NSTable size: 31
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 6
thread: 0, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 0, i: 1, maxN[i].weit: 4, maxN[i].idx: 1, blockDimSize[i]: 4
thread: 0, i: 2, maxN[i].weit: 5, maxN[i].idx: 2, blockDimSize[i]: 5
thread: 0, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 0, i: 4, maxN[i].weit: 4, maxN[i].idx: 4, blockDimSize[i]: 4
thread: 0, i: 5, maxN[i].weit: 4, maxN[i].idx: 5, blockDimSize[i]: 4
thread: 0, i: 6, maxN[i].weit: 7, maxN[i].idx: 6, blockDimSize[i]: 7
thread: 0, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 1, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 2, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 4
thread: 0, i: 5, divisor[i]: 1, blockDimSize[i]: 4
thread: 0, i: 6, divisor[i]: 7, blockDimSize[i]: 1
thread: 0, largestBlockVec.elm: 0 0 0 0 0 0 0 0 0 0 1 4 0 0 0 6 
thread: 0, blockDimSizeComp: 0 0 0 0 0 0 0 0 0 2 2 1 2 4 4 1 
thread: 0, divisorComp: 0 0 0 0 0 0 0 0 0 1 2 5 1 1 1 7 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 1 4 0 0 0 6 
thread: 0, largestNoZeroBlockVec: 0 1 4 0 0 0 6 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 , mySum: 2
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 2 , mySum: 3
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 2 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 1 2 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 1 2 0 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 3 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 2 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 2 , mySum: 4
0 0 0 0 0 0 0 0 0 0 1 3 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 3 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 , mySum: 4
0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 3 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5 , mySum: 5
0 0 0 0 0 0 0 0 0 0 1 2 0 0 0 2 , mySum: 5
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 4 , mySum: 5
0 0 0 0 0 0 0 0 0 0 1 3 0 0 0 1 , mySum: 5
0 0 0 0 0 0 0 0 0 0 1 4 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 4 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 3 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 1 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 2 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 5 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 4 , mySum: 6
0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 4 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 3 , mySum: 6
0 0 0 0 0 0 0 0 0 0 1 2 0 0 0 3 , mySum: 6
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 5 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6 , mySum: 6
0 0 0 0 0 0 0 0 0 0 1 4 0 0 0 1 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 2 , mySum: 6
0 0 0 0 0 0 0 0 0 0 1 3 0 0 0 2 , mySum: 6
0 0 0 0 0 0 0 0 0 0 1 2 0 0 0 4 , mySum: 7
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 6 , mySum: 7
0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 3 , mySum: 7
0 0 0 0 0 0 0 0 0 0 1 3 0 0 0 3 , mySum: 7
0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 5 , mySum: 7
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 5 , mySum: 7
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 6 , mySum: 7
0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 4 , mySum: 7
0 0 0 0 0 0 0 0 0 0 1 4 0 0 0 2 , mySum: 7
0 0 0 0 0 0 0 0 0 0 1 3 0 0 0 4 , mySum: 8
0 0 0 0 0 0 0 0 0 0 1 4 0 0 0 3 , mySum: 8
0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 4 , mySum: 8
0 0 0 0 0 0 0 0 0 0 1 2 0 0 0 5 , mySum: 8
0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 6 , mySum: 8
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 6 , mySum: 8
0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 5 , mySum: 8
0 0 0 0 0 0 0 0 0 0 1 2 0 0 0 6 , mySum: 9
0 0 0 0 0 0 0 0 0 0 1 3 0 0 0 5 , mySum: 9
0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 6 , mySum: 9
0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 5 , mySum: 9
0 0 0 0 0 0 0 0 0 0 1 4 0 0 0 4 , mySum: 9
0 0 0 0 0 0 0 0 0 0 1 3 0 0 0 6 , mySum: 10
0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 6 , mySum: 10
0 0 0 0 0 0 0 0 0 0 1 4 0 0 0 5 , mySum: 10
0 0 0 0 0 0 0 0 0 0 1 4 0 0 0 6 , mySum: 11
thread: 1, maxBlockLvlSize: 10
thread: 1, maxInBlockLvlSize: 26
thread: 1, AllTableSize: 8960, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 10
thread: 0, maxInBlockLvlSize: 26
thread: 0, AllTableSize: 8960, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 1 0 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 1 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 mySum: 2
thread: 0, blockNoZero[4]: 0 0 0 0 0 0 2 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[5]: 0 1 0 0 0 0 1 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 mySum: 2
thread: 0, blockNoZero[6]: 0 0 1 0 0 0 1 
Thread: 2, gpu_BlockDP is done.
thread: 0, allBlocks[7]: 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 0 1 1 0 0 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 mySum: 2
thread: 0, blockNoZero[8]: 0 0 2 0 0 0 0 
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
thread: 0, allBlocks[9]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 mySum: 3
thread: 0, blockNoZero[9]: 0 0 0 0 0 0 3 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 2 mySum: 3
thread: 0, blockNoZero[10]: 0 0 1 0 0 0 2 
thread: 0, allBlocks[11]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 2 mySum: 3
thread: 0, blockNoZero[11]: 0 1 0 0 0 0 2 
thread: 0, allBlocks[12]: 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 1 mySum: 3
thread: 0, blockNoZero[12]: 0 0 2 0 0 0 1 
thread: 0, allBlocks[13]: 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 1 mySum: 3
thread: 0, blockNoZero[13]: 0 1 1 0 0 0 1 
thread: 0, allBlocks[14]: 0 0 0 0 0 0 0 0 0 0 1 2 0 0 0 0 mySum: 3
thread: 0, blockNoZero[14]: 0 1 2 0 0 0 0 
thread: 0, allBlocks[15]: 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 mySum: 3
thread: 0, blockNoZero[15]: 0 0 3 0 0 0 0 
copy the latest feasible solution to instance takes time: 0.211268
thread: 2, sOPT: 10
thread: 0, allBlocks[16]: 0 0 0 0 0 0 0 0 0 0 1 2 0 0 0 1 mySum: 4
thread: 0, blockNoZero[16]: 0 1 2 0 0 0 1 
thread: 0, allBlocks[17]: 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 mySum: 4
thread: 0, blockNoZero[17]: 0 0 4 0 0 0 0 
thread: 0, allBlocks[18]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 3 mySum: 4
thread: 0, blockNoZero[18]: 0 1 0 0 0 0 3 
thread: 0, allBlocks[19]: 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 1 mySum: 4
thread: 0, blockNoZero[19]: 0 0 3 0 0 0 1 
thread: 0, allBlocks[20]: 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 2 mySum: 4
thread: 0, blockNoZero[20]: 0 1 1 0 0 0 2 
thread: 0, allBlocks[21]: 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 2 mySum: 4
thread: 0, blockNoZero[21]: 0 0 2 0 0 0 2 
thread: 0, allBlocks[22]: 0 0 0 0 0 0 0 0 0 0 1 3 0 0 0 0 mySum: 4
thread: 0, blockNoZero[22]: 0 1 3 0 0 0 0 
thread: 0, allBlocks[23]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 3 mySum: 4
thread: 0, blockNoZero[23]: 0 0 1 0 0 0 3 
thread: 0, allBlocks[24]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 mySum: 4
thread: 0, blockNoZero[24]: 0 0 0 0 0 0 4 
thread: 0, allBlocks[25]: 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 3 mySum: 5
thread: 0, blockNoZero[25]: 0 1 1 0 0 0 3 
thread: 0, allBlocks[26]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5 mySum: 5
thread: 0, blockNoZero[26]: 0 0 0 0 0 0 5 
thread: 0, allBlocks[27]: 0 0 0 0 0 0 0 0 0 0 1 2 0 0 0 2 mySum: 5
thread: 0, blockNoZero[27]: 0 1 2 0 0 0 2 
thread: 0, allBlocks[28]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 4 mySum: 5
thread: 0, blockNoZero[28]: 0 1 0 0 0 0 4 
thread: 0, allBlocks[29]: 0 0 0 0 0 0 0 0 0 0 1 3 0 0 0 1 mySum: 5
thread: 0, blockNoZero[29]: 0 1 3 0 0 0 1 
thread: 0, allBlocks[30]: 0 0 0 0 0 0 0 0 0 0 1 4 0 0 0 0 mySum: 5
thread: 0, blockNoZero[30]: 0 1 4 0 0 0 0 
thread: 0, allBlocks[31]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 4 mySum: 5
thread: 0, blockNoZero[31]: 0 0 1 0 0 0 4 
thread: 0, allBlocks[32]: 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 3 mySum: 5
thread: 0, blockNoZero[32]: 0 0 2 0 0 0 3 
thread: 0, allBlocks[33]: 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 1 mySum: 5
thread: 0, blockNoZero[33]: 0 0 4 0 0 0 1 
thread: 0, allBlocks[34]: 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 2 mySum: 5
thread: 0, blockNoZero[34]: 0 0 3 0 0 0 2 
thread: 0, allBlocks[35]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 5 mySum: 6
thread: 0, blockNoZero[35]: 0 0 1 0 0 0 5 
thread: 0, allBlocks[36]: 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 4 mySum: 6
thread: 0, blockNoZero[36]: 0 0 2 0 0 0 4 
thread: 0, allBlocks[37]: 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 4 mySum: 6
thread: 0, blockNoZero[37]: 0 1 1 0 0 0 4 
thread: 0, allBlocks[38]: 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 3 mySum: 6
thread: 0, blockNoZero[38]: 0 0 3 0 0 0 3 
thread: 0, allBlocks[39]: 0 0 0 0 0 0 0 0 0 0 1 2 0 0 0 3 mySum: 6
thread: 0, blockNoZero[39]: 0 1 2 0 0 0 3 
thread: 0, allBlocks[40]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 5 mySum: 6
thread: 0, blockNoZero[40]: 0 1 0 0 0 0 5 
thread: 0, allBlocks[41]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6 mySum: 6
thread: 0, blockNoZero[41]: 0 0 0 0 0 0 6 
thread: 0, allBlocks[42]: 0 0 0 0 0 0 0 0 0 0 1 4 0 0 0 1 mySum: 6
thread: 0, blockNoZero[42]: 0 1 4 0 0 0 1 
thread: 0, allBlocks[43]: 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 2 mySum: 6
thread: 0, blockNoZero[43]: 0 0 4 0 0 0 2 
thread: 0, allBlocks[44]: 0 0 0 0 0 0 0 0 0 0 1 3 0 0 0 2 mySum: 6
thread: 0, blockNoZero[44]: 0 1 3 0 0 0 2 
thread: 0, allBlocks[45]: 0 0 0 0 0 0 0 0 0 0 1 2 0 0 0 4 mySum: 7
thread: 0, blockNoZero[45]: 0 1 2 0 0 0 4 
thread: 0, allBlocks[46]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 6 mySum: 7
thread: 0, blockNoZero[46]: 0 0 1 0 0 0 6 
thread: 0, allBlocks[47]: 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 3 mySum: 7
thread: 0, blockNoZero[47]: 0 0 4 0 0 0 3 
thread: 0, allBlocks[48]: 0 0 0 0 0 0 0 0 0 0 1 3 0 0 0 3 mySum: 7
thread: 0, blockNoZero[48]: 0 1 3 0 0 0 3 
thread: 0, allBlocks[49]: 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 5 mySum: 7
thread: 0, blockNoZero[49]: 0 1 1 0 0 0 5 
thread: 0, allBlocks[50]: 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 5 mySum: 7
thread: 0, blockNoZero[50]: 0 0 2 0 0 0 5 
thread: 0, allBlocks[51]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 6 mySum: 7
thread: 0, blockNoZero[51]: 0 1 0 0 0 0 6 
thread: 0, allBlocks[52]: 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 4 mySum: 7
thread: 0, blockNoZero[52]: 0 0 3 0 0 0 4 
thread: 0, allBlocks[53]: 0 0 0 0 0 0 0 0 0 0 1 4 0 0 0 2 mySum: 7
thread: 0, blockNoZero[53]: 0 1 4 0 0 0 2 
thread: 0, allBlocks[54]: 0 0 0 0 0 0 0 0 0 0 1 3 0 0 0 4 mySum: 8
thread: 0, blockNoZero[54]: 0 1 3 0 0 0 4 
thread: 0, allBlocks[55]: 0 0 0 0 0 0 0 0 0 0 1 4 0 0 0 3 mySum: 8
thread: 0, blockNoZero[55]: 0 1 4 0 0 0 3 
thread: 0, allBlocks[56]: 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 4 mySum: 8
thread: 0, blockNoZero[56]: 0 0 4 0 0 0 4 
thread: 0, allBlocks[57]: 0 0 0 0 0 0 0 0 0 0 1 2 0 0 0 5 mySum: 8
thread: 0, blockNoZero[57]: 0 1 2 0 0 0 5 
thread: 0, allBlocks[58]: 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 6 mySum: 8
thread: 0, blockNoZero[58]: 0 1 1 0 0 0 6 
thread: 0, allBlocks[59]: 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 6 mySum: 8
thread: 0, blockNoZero[59]: 0 0 2 0 0 0 6 
thread: 0, allBlocks[60]: 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 5 mySum: 8
thread: 0, blockNoZero[60]: 0 0 3 0 0 0 5 
thread: 0, allBlocks[61]: 0 0 0 0 0 0 0 0 0 0 1 2 0 0 0 6 mySum: 9
thread: 0, blockNoZero[61]: 0 1 2 0 0 0 6 
thread: 0, allBlocks[62]: 0 0 0 0 0 0 0 0 0 0 1 3 0 0 0 5 mySum: 9
thread: 0, blockNoZero[62]: 0 1 3 0 0 0 5 
thread: 0, allBlocks[63]: 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 6 mySum: 9
thread: 0, blockNoZero[63]: 0 0 3 0 0 0 6 
thread: 0, allBlocks[64]: 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 5 mySum: 9
thread: 0, blockNoZero[64]: 0 0 4 0 0 0 5 
thread: 0, allBlocks[65]: 0 0 0 0 0 0 0 0 0 0 1 4 0 0 0 4 mySum: 9
thread: 0, blockNoZero[65]: 0 1 4 0 0 0 4 
thread: 0, allBlocks[66]: 0 0 0 0 0 0 0 0 0 0 1 3 0 0 0 6 mySum: 10
thread: 0, blockNoZero[66]: 0 1 3 0 0 0 6 
thread: 0, allBlocks[67]: 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 6 mySum: 10
thread: 0, blockNoZero[67]: 0 0 4 0 0 0 6 
thread: 0, allBlocks[68]: 0 0 0 0 0 0 0 0 0 0 1 4 0 0 0 5 mySum: 10
thread: 0, blockNoZero[68]: 0 1 4 0 0 0 5 
thread: 0, allBlocks[69]: 0 0 0 0 0 0 0 0 0 0 1 4 0 0 0 6 mySum: 11
thread: 0, blockNoZero[69]: 0 1 4 0 0 0 6 
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 3e-06
thread: 0, sOPT: 11
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 11
copy the latest feasible solution to instance takes time: 1e-06
thread: 1, sOPT: 11
BKID: 0, LB: 32, UB: 32, OPT: 10
Dynamic Programming Runtime: 2.69892
Execution time between LB and UB is: 2
By far, all LB UB calculation runtime: 2
********************************************************
Total execution on UB and LB is: 2
OUT of Bk while loop  
UB    32
LB    32
T1    32
T2    32
OPT   10
nMachines   10
BkID	0
AllProbData.size()    2
ck :   1
AllProbData[ck].Ttable    32
ck :   0
AllProbData[ck].Ttable    32
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan34
Main Scheduling is Done
File 1-16 is Done.
******************************
Reading File...
File 1-17 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 51, LB: 32start at time: 1505254738
thread: 0, MlBk is called with LB: 32, UB: 37
thread: 3, MlBk is called with LB: 47, UB: 52
 thread: 0, LongJobs.size() thread: 21
2, MlBk is called with LB: 42, UB: 47
 thread: 3, LongJobs.size() 16
thread: 1, MlBk is called with LB: 37, UB: 42
 thread: 2, LongJobs.size() 18
 thread: 1, LongJobs.size() 21
thread: 3, NSTable size: 18
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 5
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 7
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 4
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 6, maxN[i].idx: 0, blockDimSize[i]: 6
thread: 3, i: 1, maxN[i].weit: 8, maxN[i].idx: 1, blockDimSize[i]: 8
thread: 3, i: 2, maxN[i].weit: 5, maxN[i].idx: 2, blockDimSize[i]: 5
thread: 3, i: 0, divisor[i]: 2, blockDimSize[i]: 3
thread: 3, i: 1, divisor[i]: 2, blockDimSize[i]: 4
thread: 3, i: 2, divisor[i]: 5, blockDimSize[i]: 1
thread: 3, largestBlockVec.elm: 0 0 0 1 1 4 0 0 0 0 0 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 3 4 1 0 0 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 2 2 5 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 1 1 4 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 1 1 4 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 3 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 1 0 3 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 1 1 2 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 4 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 1 0 4 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 1 1 3 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 1 1 4 0 0 0 0 0 0 0 0 0 0 , mySum: 6
thread: 3, maxBlockLvlSize: 4
thread: 3, maxInBlockLvlSize: 3
thread: 3, AllTableSize: 240, maxSubsetsSize: 64
thread: 2, NSTable size: 24
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 5
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 5
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 5, maxN[i].idx: 0, blockDimSize[i]: 5
thread: 2, i: 1, maxN[i].weit: 6, maxN[i].idx: 1, blockDimSize[i]: 6
thread: 2, i: 2, maxN[i].weit: 6, maxN[i].idx: 2, blockDimSize[i]: 6
thread: 2, i: 3, maxN[i].weit: 5, maxN[i].idx: 3, blockDimSize[i]: 5
thread: 2, i: 0, divisor[i]: 5, blockDimSize[i]: 1
thread: 2, i: 1, divisor[i]: 2, blockDimSize[i]: 3
thread: 2, i: 2, divisor[i]: 2, blockDimSize[i]: 3
thread: 2, i: 3, divisor[i]: 1, blockDimSize[i]: 5
thread: 2, largestBlockVec.elm: 0 0 0 0 0 4 1 1 0 0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 0 0 1 3 3 5 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 0 5 2 2 1 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 4 1 1 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 4 1 1 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 1 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 3 0 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 3 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 3 1 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 4 0 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 4 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 4 1 1 0 0 0 0 0 0 0 0 , mySum: 6
thread: 2, maxBlockLvlSize: 4
thread: 2, maxInBlockLvlSize: 9
thread: 2, AllTableSize: 900, maxSubsetsSize: 64
thread: 1, NSTable size: 31
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 5
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 5
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 1, i: 1, maxN[i].weit: 5, maxN[i].idx: 1, blockDimSize[i]: 5
thread: 1, i: 2, maxN[i].weit: 6, maxN[i].idx: 2, blockDimSize[i]: 6
thread: 1, i: 3, maxN[i].weit: 6, maxN[i].idx: 3, blockDimSize[i]: 6
thread: 1, i: 4, maxN[i].weit: 5, maxN[i].idx: 4, blockDimSize[i]: 5
thread: 1, i: 0, divisor[i]: 1, blockDimSize[i]: 4
thread: 1, i: 1, divisor[i]: 5, blockDimSize[i]: 1
thread: 1, i: 2, divisor[i]: 2, blockDimSize[i]: 3
thread: 1, i: 3, divisor[i]: 2, blockDimSize[i]: 3
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 5
thread: 1, largestBlockVec.elm: 0 0 0 0 0 4 1 1 0 0 0 0 0 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 0 4 1 3 3 5 0 0 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 1 5 2 2 1 0 0 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 4 1 1 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 4 1 1 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 1 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 3 0 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 3 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 3 1 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 4 0 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 4 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 4 1 1 0 0 0 0 0 0 0 0 , mySum: 6
thread: 0, NSTable size: 23
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 5
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 5
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 0, i: 1, maxN[i].weit: 5, maxN[i].idx: 1, blockDimSize[i]: 5
thread: 0, i: 2, maxN[i].weit: 6, maxN[i].idx: 2, blockDimSize[i]: 6
thread: 0, i: 3, maxN[i].weit: 6, maxN[i].idx: 3, blockDimSize[i]: 6
thread: 0, i: 4, maxN[i].weit: 5, maxN[i].idx: 4, blockDimSize[i]: 5
thread: 0, i: 0, divisor[i]: 1, blockDimSize[i]: 4
thread: 0, i: 1, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, i: 2, divisor[i]: 2, blockDimSize[i]: 3
thread: 0, i: 3, divisor[i]: 2, blockDimSize[i]: 3
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 5
thread: 0, largestBlockVec.elm: 0 0 0 0 0 4 1 1 0 0 0 0 0 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 0 4 1 3 3 5 0 0 0 0 0 0 0 
thread: 0, divisorComp: 0 0 0 0 1 5 2 2 1 0 0 0 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 4 1 1 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 4 1 1 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 1 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 3 0 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 3 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 3 1 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 4 0 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 4 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 4 1 1 0 0 0 0 0 0 0 0 , mySum: 6
thread: 1, maxBlockLvlSize: 4
thread: 1, maxInBlockLvlSize: 31
thread: 1, AllTableSize: 3600, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 4
thread: 0, maxInBlockLvlSize: 31
thread: 0, AllTableSize: 3600, maxSubsetsSize: 64
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 6
copy the latest feasible solution to instance takes time: 0.014368
thread: 3, sOPT: 6
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 1 0 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 1 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 1 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 1 1 0 
Thread: 2, gpu_BlockDP is done.
thread: 0, allBlocks[5]: 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 1 0 1 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 1 1 0 0 
thread: 0, allBlocks[7]: 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 0 2 0 0 0 
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 7
copy the latest feasible solution to instance takes time: 0.046849
thread: 2, sOPT: 7
thread: 0, allBlocks[8]: 0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[8]: 0 2 1 0 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[9]: 0 3 0 0 0 
thread: 0, allBlocks[10]: 0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 0 2 0 1 0 
thread: 0, allBlocks[11]: 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 0 1 1 1 0 
thread: 0, allBlocks[12]: 0 0 0 0 0 2 1 1 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[12]: 0 2 1 1 0 
thread: 0, allBlocks[13]: 0 0 0 0 0 3 0 1 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[13]: 0 3 0 1 0 
thread: 0, allBlocks[14]: 0 0 0 0 0 3 1 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[14]: 0 3 1 0 0 
thread: 0, allBlocks[15]: 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[15]: 0 4 0 0 0 
thread: 0, allBlocks[16]: 0 0 0 0 0 3 1 1 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[16]: 0 3 1 1 0 
thread: 0, allBlocks[17]: 0 0 0 0 0 4 0 1 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[17]: 0 4 0 1 0 
thread: 0, allBlocks[18]: 0 0 0 0 0 4 1 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[18]: 0 4 1 0 0 
thread: 0, allBlocks[19]: 0 0 0 0 0 4 1 1 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[19]: 0 4 1 1 0 
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 9
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.167598
thread: 1, sOPT: 9
copy the latest feasible solution to instance takes time: 0.134256
thread: 0, sOPT: 10
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: 1, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 2, MlBk function is done, and BkID for all processes are collected.
3, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 32, UB: 35
BKID: 0, LB: 32, UB: 35, OPT: 10
Dynamic Programming Runtime: 1.3998
Execution time between LB and UB is: 0
By far, all LB UB calculation runtime: 0
Iteration: 2, UB: 35, LB: 32start at time: 1505254738
thread: 0, MlBk is called with LB: 32, UB: 33
 thread: 0, LongJobs.size() 21
thread: thread: 2, MlBk is called with LB: 34, UB: 1, MlBk is called with LB: 3533, UB: 34

 thread: 2, LongJobs.size() 21
 thread: 1, LongJobs.size() 21
thread: 2, NSTable size: 23
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 5
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 5
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 2, i: 1, maxN[i].weit: 5, maxN[i].idx: 1, blockDimSize[i]: 5
thread: 2, i: 2, maxN[i].weit: 6, maxN[i].idx: 2, blockDimSize[i]: 6
thread: 2, i: 3, maxN[i].weit: 6, maxN[i].idx: 3, blockDimSize[i]: 6
thread: 2, i: 4, maxN[i].weit: 5, maxN[i].idx: 4, blockDimSize[i]: 5
thread: 2, i: 0, divisor[i]: 1, blockDimSize[i]: 4
thread: 2, i: 1, divisor[i]: 5, blockDimSize[i]: 1
thread: 2, i: 2, divisor[i]: 2, blockDimSize[i]: 3
thread: 2, i: 3, divisor[i]: 2, blockDimSize[i]: 3
thread: 2, i: 4, divisor[i]: 1, blockDimSize[i]: 5
thread: 2, largestBlockVec.elm: 0 0 0 0 0 4 1 1 0 0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 0 4 1 3 3 5 0 0 0 0 0 0 0 
thread: thread: 12, NSTable size: , divisorComp: 200
 thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 5
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 5
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 00 0 0 1 5 2 2 1 0 0 0
 0 0thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 1, i: 1, maxN[i].weit:  5, maxN[i].idx: 1, blockDimSize[i]: 05
thread: 1, i: 2, maxN[i].weit: 6, maxN[i].idx: 2, blockDimSize[i]: 6
thread: 1, i:  0 
thread: 2, largestBlockVec: 0 0 0 30, maxN[i].weit:  06 , maxN[i].idx: 34, blockDimSize[i]: 6 
thread: 1, i: 4, maxN[i].weit: 5, maxN[i].idx: 4, blockDimSize[i]: 5
1thread: 1, i:  0, divisor[i]: 1, blockDimSize[i]: 14
thread: 1, i: 1, divisor[i]: 5, blockDimSize[i]: 1
thread: 1, i: 2, divisor[i]: 2, blockDimSize[i]: 3
thread: 1, i: 3, divisor[i]: 2, blockDimSize[i]: 3
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 5
thread: 1 , largestBlockVec.elm: 0 00  0 0 0 00  0 0 0
 thread: 2, largestNoZeroBlockVec: 0 4 1 1 0 
0 0 4 1 1 0 0 0 0 0 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 0 4 1 3 3 5 0 0 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 1 5 2 2 1 0 0 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 4 1 1 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 4 1 1 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0thread: 1 , allBlocks: 00  0 01  0 10  00  00  00  00  0 0 00  00  00 0  0, mySum:  20 
00 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0  , mySum: 02 
, mySum: 00 0 0 0 0 2 0 0 0 0 0 0 0 
0 00 0 0 0 0 0 0 1 0 0 0 0 0  0 00  0 , mySum: , mySum: 2
0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 , mySum: 3
10 0 0 0
 00 0 0 0 0 0 1 0 0 0 0 0 0  3 0 0 0 0 0 0 0 0 0 0 , mySum: 3
00 0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 1 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0  , mySum: 0 03
 0 0 0 0 0 2 1 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 3 0 1 0 0 0 00 , mySum: 1
0 0 0 0 0 0 1 1 0 0 0 0 0  0 00 0  0 00  , mySum: 4, mySum: 
20 0 0 0 0 3 1 0 0 0 0 0 0 0 0 0
 , mySum: 0 0 0 0 0 1 0 1 0 0 0 04 0 0
 0 0 0 0 0 4 0 0 0 0 0 0 0 00 0 0  0, mySum:  4
, mySum: 0 0 0 0 0 3 1 1 0 0 0 0 0 0 02 0 , mySum: 
50 0 0 0 0 1 1 0 0 0 0 0 0
 0 0 0 0 0 0 4 0 1 0 0 0 0 0 0 , mySum: 2
00 0 0 0 0 2 0 0 0 0 0 0 0 0  0 00  0, mySum:  0 2, mySum: 5

0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 0 4 1 0 0 0 0 0 00 0  00  0 , mySum: 50
0 0 0 0 0 4 1 1 0 0 0 0 0  0 , mySum: 03 
0 , mySum: 0 0 0 0 0 3 0 0 0 0 0 0 0 06
 0 0 , mySum: 3
0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 1 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 3 0 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 3 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 3 1 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 4 0 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 4 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 4 1 1 0 0 0 0 0 0 0 0 , mySum: 6
thread: 0, NSTable size: 20
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 5
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 5
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 0, i: 1, maxN[i].weit: 5, maxN[i].idx: 1, blockDimSize[i]: 5
thread: 0, i: 2, maxN[i].weit: 6, maxN[i].idx: 2, blockDimSize[i]: 6
thread: 0, i: 3, maxN[i].weit: 6, maxN[i].idx: 3, blockDimSize[i]: 6
thread: 0, i: 4, maxN[i].weit: 5, maxN[i].idx: 4, blockDimSize[i]: 5
thread: 0, i: 0, divisor[i]: 1, blockDimSize[i]: 4
thread: 0, i: 1, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, i: 2, divisor[i]: 2, blockDimSize[i]: 3
thread: 0, i: 3, divisor[i]: 2, blockDimSize[i]: 3
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 5
thread: 0, largestBlockVec.elm: 0 0 0 0 0 4 1 1 0 0 0 0 0 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 0 4 1 3 3 5 0 0 0 0 0 0 0 
thread: 0, divisorComp: 0 0 0 0 1 5 2 2 1 0 0 0 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 4 1 1 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 4 1 1 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 1 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 3 0 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 3 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 3 1 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 4 0 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 4 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 4 1 1 0 0 0 0 0 0 0 0 , mySum: 6
thread: 2, maxBlockLvlSize: 4
thread: 2, maxInBlockLvlSize: 31
thread: 2, AllTableSize: 3600, maxSubsetsSize: 64
thread: 1, maxBlockLvlSize: 4
thread: 1, maxInBlockLvlSize: 31
thread: 1, AllTableSize: 3600, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 4
thread: 0, maxInBlockLvlSize: 31
thread: 0, AllTableSize: 3600, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 1 0 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 1 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 1 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 1 1 0 
thread: 0, allBlocks[5]: 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 1 0 1 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 1 1 0 0 
thread: 0, allBlocks[7]: 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 0 2 0 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[8]: 0 2 1 0 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[9]: 0 3 0 0 0 
thread: 0, allBlocks[10]: 0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 0 2 0 1 0 
thread: 0, allBlocks[11]: 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 0 1 1 1 0 
thread: 0, allBlocks[12]: 0 0 0 0 0 2 1 1 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[12]: 0 2 1 1 0 
thread: 0, allBlocks[13]: 0 0 0 0 0 3 0 1 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[13]: 0 3 0 1 0 
thread: 0, allBlocks[14]: 0 0 0 0 0 3 1 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[14]: 0 3 1 0 0 
thread: 0, allBlocks[15]: 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[15]: 0 4 0 0 0 
thread: 0, allBlocks[16]: 0 0 0 0 0 3 1 1 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[16]: 0 3 1 1 0 
thread: 0, allBlocks[17]: 0 0 0 0 0 4 0 1 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[17]: 0 4 0 1 0 
thread: 0, allBlocks[18]: 0 0 0 0 0 4 1 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[18]: 0 4 1 0 0 
thread: 0, allBlocks[19]: 0 0 0 0 0 4 1 1 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[19]: 0 4 1 1 0 
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.243862
thread: 2, sOPT: 10
copy the latest feasible solution to instance takes time: 0.243356
thread: 1, sOPT: 10
copy the latest feasible solution to instance takes time: 0.207994
thread: 0, sOPT: 10
BKID: 0, LB: 32, UB: 32, OPT: 10
Dynamic Programming Runtime: 1.84391
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 1
********************************************************
Total execution on UB and LB is: 1
OUT of Bk while loop  
UB    32
LB    32
T1    32
T2    32
OPT   10
nMachines   10
BkID	0
AllProbData.size()    2
ck :   1
AllProbData[ck].Ttable    32
ck :   0
AllProbData[ck].Ttable    34
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan34
Main Scheduling is Done
File 1-17 is Done.
******************************
Reading File...
File 1-18 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 48, LB: 29start at time: 1505254739
thread: 0, MlBk is called with LB: 29, UB: 34
thread: 3, MlBk is called with LB: 44, UB: 49
thread: 1, MlBk is called with LB: 34, UB: 39thread: 
2, MlBk is called with LB:  thread: 0 thread: 3, LongJobs.size() 14
, LongJobs.size() 21
39, UB: 44
 thread: 1, LongJobs.size() 21
 thread: 2, LongJobs.size() 17
thread: 3, NSTable size: 27
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 5
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 6, maxN[i].idx: 0, blockDimSize[i]: 6
thread: 3, i: 1, maxN[i].weit: 4, maxN[i].idx: 1, blockDimSize[i]: 4
thread: 3, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 3, i: 3, maxN[i].weit: 5, maxN[i].idx: 3, blockDimSize[i]: 5
thread: 3, i: 0, divisor[i]: 2, blockDimSize[i]: 3
thread: 3, i: 1, divisor[i]: 2, blockDimSize[i]: 2
thread: 3, i: 2, divisor[i]: 1, blockDimSize[i]: 3
thread: 3, i: 3, divisor[i]: 5, blockDimSize[i]: 1
thread: 3, largestBlockVec.elm: 0 0 0 0 0 1 1 0 4 0 0 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 0 0 3 2 3 1 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 0 0 2 2 1 5 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 1 1 0 4 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 1 1 0 4 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 1 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 0 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 0 0 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 1 0 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 0 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 0 0 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 1 0 3 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 1 0 4 0 0 0 0 0 0 0 , mySum: 6
thread: 3, maxBlockLvlSize: 4
thread: 3, maxInBlockLvlSize: 5
thread: 3, AllTableSize: 360, maxSubsetsSize: 64
thread: 2, NSTable size: 35
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 5
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 2, i: 1, maxN[i].weit: 6, maxN[i].idx: 1, blockDimSize[i]: 6
thread: 2, i: 2, maxN[i].weit: 4, maxN[i].idx: 2, blockDimSize[i]: 4
thread: 2, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 2, i: 4, maxN[i].weit: 5, maxN[i].idx: 4, blockDimSize[i]: 5
thread: 2, i: 0, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, i: 1, divisor[i]: 2, blockDimSize[i]: 3
thread: 2, i: 2, divisor[i]: 1, blockDimSize[i]: 4
thread: 2, i: 3, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 4, divisor[i]: 5, blockDimSize[i]: 1
thread: 2, largestBlockVec.elm: 0 0 0 0 1 1 0 0 4 0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 0 2 3 4 3 1 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 2 2 1 1 5 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 1 1 0 0 4 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 1 1 0 0 4 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 0 0 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 0 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 1 0 0 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 0 0 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 0 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 1 0 0 3 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 1 0 0 4 0 0 0 0 0 0 0 , mySum: 6
thread: 2, maxBlockLvlSize: 4
thread: 2, maxInBlockLvlSize: 16
thread: 2, AllTableSize: 1440, maxSubsetsSize: 64
thread: 1, NSTable size: 27
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 7
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 5
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 8, maxN[i].idx: 0, blockDimSize[i]: 8
thread: 1, i: 1, maxN[i].weit: 6, maxN[i].idx: 1, blockDimSize[i]: 6
thread: 1, i: 2, maxN[i].weit: 4, maxN[i].idx: 2, blockDimSize[i]: 4
thread: 1, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 1, i: 4, maxN[i].weit: 5, maxN[i].idx: 4, blockDimSize[i]: 5
thread: 1, i: 0, divisor[i]: 2, blockDimSize[i]: 4
thread: 1, i: 1, divisor[i]: 2, blockDimSize[i]: 3
thread: 1, i: 2, divisor[i]: 1, blockDimSize[i]: 4
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 4, divisor[i]: 5, blockDimSize[i]: 1
thread: 1, largestBlockVec.elm: 0 0 0 0 1 1 0 0 4 0 0 0 0 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 0 4 3 4 3 1 0 0 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 2 2 1 1 5 0 0 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 1 1 0 0 4 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 1 1 0 0 4 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 0 0 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 0 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 1 0 0 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 0 0 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 0 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 1 0 0 3 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 1 0 0 4 0 0 0 0 0 0 0 , mySum: 6
thread: 1, maxBlockLvlSize: 4
thread: 1, maxInBlockLvlSize: 28
thread: 1, AllTableSize: 2880, maxSubsetsSize: 64
thread: 0, NSTable size: 28
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 6
thread: 0, i: 0, maxN[i].weit: 5, maxN[i].idx: 0, blockDimSize[i]: 5
thread: 0, i: 1, maxN[i].weit: 4, maxN[i].idx: 1, blockDimSize[i]: 4
thread: 0, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 0, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 0, i: 4, maxN[i].weit: 4, maxN[i].idx: 4, blockDimSize[i]: 4
thread: 0, i: 5, maxN[i].weit: 7, maxN[i].idx: 5, blockDimSize[i]: 7
thread: 0, i: 0, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, i: 1, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 2, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 4
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 4
thread: 0, i: 5, divisor[i]: 7, blockDimSize[i]: 1
thread: 0, largestBlockVec.elm: 0 0 0 0 0 0 0 0 0 4 1 0 0 0 0 6 
thread: 0, blockDimSizeComp: 0 0 0 0 0 0 0 0 0 1 2 3 4 0 4 1 
thread: 0, divisorComp: 0 0 0 0 0 0 0 0 0 5 2 1 1 0 1 7 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 4 1 0 0 0 0 6 
thread: 0, largestNoZeroBlockVec: 4 1 0 0 0 6 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 , mySum: 2
0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 2 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 , mySum: 3
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 2 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 , mySum: 4
0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 3 1 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 2 , mySum: 4
0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 2 , mySum: 4
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 3 , mySum: 4
0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 3 , mySum: 4
0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 3 , mySum: 5
0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 1 , mySum: 5
0 0 0 0 0 0 0 0 0 4 1 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 2 , mySum: 5
0 0 0 0 0 0 0 0 0 3 1 0 0 0 0 1 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5 , mySum: 5
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 4 , mySum: 5
0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 3 , mySum: 5
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 4 , mySum: 5
0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 2 , mySum: 5
0 0 0 0 0 0 0 0 0 3 1 0 0 0 0 2 , mySum: 6
0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 3 , mySum: 6
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 5 , mySum: 6
0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 2 , mySum: 6
0 0 0 0 0 0 0 0 0 4 1 0 0 0 0 1 , mySum: 6
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 5 , mySum: 6
0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 3 , mySum: 6
0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 4 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6 , mySum: 6
0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 4 , mySum: 6
0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 4 , mySum: 7
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 6 , mySum: 7
0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 5 , mySum: 7
0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 4 , mySum: 7
0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 3 , mySum: 7
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 6 , mySum: 7
0 0 0 0 0 0 0 0 0 3 1 0 0 0 0 3 , mySum: 7
0 0 0 0 0 0 0 0 0 4 1 0 0 0 0 2 , mySum: 7
0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 5 , mySum: 7
0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 6 , mySum: 8
0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 4 , mySum: 8
0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 5 , mySum: 8
0 0 0 0 0 0 0 0 0 3 1 0 0 0 0 4 , mySum: 8
0 0 0 0 0 0 0 0 0 4 1 0 0 0 0 3 , mySum: 8
0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 5 , mySum: 8
0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 6 , mySum: 8
0 0 0 0 0 0 0 0 0 3 1 0 0 0 0 5 , mySum: 9
0 0 0 0 0 0 0 0 0 4 1 0 0 0 0 4 , mySum: 9
0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 5 , mySum: 9
0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 6 , mySum: 9
0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 6 , mySum: 9
0 0 0 0 0 0 0 0 0 4 1 0 0 0 0 5 , mySum: 10
0 0 0 0 0 0 0 0 0 3 1 0 0 0 0 6 , mySum: 10
0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 6 , mySum: 10
0 0 0 0 0 0 0 0 0 4 1 0 0 0 0 6 , mySum: 11
thread: 0, maxBlockLvlSize: 10
thread: 0, maxInBlockLvlSize: 19
thread: 0, AllTableSize: 6720, maxSubsetsSize: 64
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 5
copy the latest feasible solution to instance takes time: 0.02404
thread: 3, sOPT: 5
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 6
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 1 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 1 0 0 0 0 0 
copy the latest feasible solution to instance takes time: 0.075562
thread: 2, sOPT: 6
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 mySum: 2
thread: 0, blockNoZero[4]: 0 0 0 0 0 2 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 2 0 0 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[6]: 0 1 0 0 0 1 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 1 1 0 0 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[8]: 1 0 0 0 0 1 
thread: 0, allBlocks[9]: 0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[9]: 2 1 0 0 0 0 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 3 0 0 0 0 0 
thread: 0, allBlocks[11]: 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 1 mySum: 3
thread: 0, blockNoZero[11]: 2 0 0 0 0 1 
thread: 0, allBlocks[12]: 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 1 mySum: 3
thread: 0, blockNoZero[12]: 1 1 0 0 0 1 
thread: 0, allBlocks[13]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 2 mySum: 3
thread: 0, blockNoZero[13]: 1 0 0 0 0 2 
thread: 0, allBlocks[14]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 mySum: 3
thread: 0, blockNoZero[14]: 0 0 0 0 0 3 
thread: 0, allBlocks[15]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 2 mySum: 3
thread: 0, blockNoZero[15]: 0 1 0 0 0 2 
thread: 0, allBlocks[16]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 mySum: 4
thread: 0, blockNoZero[16]: 0 0 0 0 0 4 
thread: 0, allBlocks[17]: 0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 1 mySum: 4
thread: 0, blockNoZero[17]: 2 1 0 0 0 1 
thread: 0, allBlocks[18]: 0 0 0 0 0 0 0 0 0 3 1 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[18]: 3 1 0 0 0 0 
thread: 0, allBlocks[19]: 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 2 mySum: 4
thread: 0, blockNoZero[19]: 2 0 0 0 0 2 
thread: 0, allBlocks[20]: 0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[20]: 4 0 0 0 0 0 
thread: 0, allBlocks[21]: 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 2 mySum: 4
thread: 0, blockNoZero[21]: 1 1 0 0 0 2 
thread: 0, allBlocks[22]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 3 mySum: 4
thread: 0, blockNoZero[22]: 0 1 0 0 0 3 
thread: 0, allBlocks[23]: 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 1 mySum: 4
thread: 0, blockNoZero[23]: 3 0 0 0 0 1 
thread: 0, allBlocks[24]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 3 mySum: 4
thread: 0, blockNoZero[24]: 1 0 0 0 0 3 
thread: 0, allBlocks[25]: 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 3 mySum: 5
thread: 0, blockNoZero[25]: 1 1 0 0 0 3 
thread: 0, allBlocks[26]: 0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 1 mySum: 5
thread: 0, blockNoZero[26]: 4 0 0 0 0 1 
thread: 0, allBlocks[27]: 0 0 0 0 0 0 0 0 0 4 1 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[27]: 4 1 0 0 0 0 
thread: 0, allBlocks[28]: 0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 2 mySum: 5
thread: 0, blockNoZero[28]: 2 1 0 0 0 2 
thread: 0, allBlocks[29]: 0 0 0 0 0 0 0 0 0 3 1 0 0 0 0 1 mySum: 5
thread: 0, blockNoZero[29]: 3 1 0 0 0 1 
thread: 0, allBlocks[30]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5 mySum: 5
thread: 0, blockNoZero[30]: 0 0 0 0 0 5 
thread: 0, allBlocks[31]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 4 mySum: 5
thread: 0, blockNoZero[31]: 1 0 0 0 0 4 
thread: 0, allBlocks[32]: 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 3 mySum: 5
thread: 0, blockNoZero[32]: 2 0 0 0 0 3 
thread: 0, allBlocks[33]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 4 mySum: 5
thread: 0, blockNoZero[33]: 0 1 0 0 0 4 
thread: 0, allBlocks[34]: 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 2 mySum: 5
thread: 0, blockNoZero[34]: 3 0 0 0 0 2 
thread: 0, allBlocks[35]: 0 0 0 0 0 0 0 0 0 3 1 0 0 0 0 2 mySum: 6
thread: 0, blockNoZero[35]: 3 1 0 0 0 2 
thread: 0, allBlocks[36]: 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 3 mySum: 6
thread: 0, blockNoZero[36]: 3 0 0 0 0 3 
thread: 0, allBlocks[37]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 5 mySum: 6
thread: 0, blockNoZero[37]: 0 1 0 0 0 5 
thread: 0, allBlocks[38]: 0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 2 mySum: 6
thread: 0, blockNoZero[38]: 4 0 0 0 0 2 
thread: 0, allBlocks[39]: 0 0 0 0 0 0 0 0 0 4 1 0 0 0 0 1 mySum: 6
thread: 0, blockNoZero[39]: 4 1 0 0 0 1 
thread: 0, allBlocks[40]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 5 mySum: 6
thread: 0, blockNoZero[40]: 1 0 0 0 0 5 
thread: 0, allBlocks[41]: 0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 3 mySum: 6
thread: 0, blockNoZero[41]: 2 1 0 0 0 3 
thread: 0, allBlocks[42]: 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 4 mySum: 6
thread: 0, blockNoZero[42]: 2 0 0 0 0 4 
thread: 0, allBlocks[43]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6 mySum: 6
thread: 0, blockNoZero[43]: 0 0 0 0 0 6 
thread: 0, allBlocks[44]: 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 4 mySum: 6
thread: 0, blockNoZero[44]: 1 1 0 0 0 4 
thread: 0, allBlocks[45]: 0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 4 mySum: 7
thread: 0, blockNoZero[45]: 2 1 0 0 0 4 
thread: 0, allBlocks[46]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 6 mySum: 7
thread: 0, blockNoZero[46]: 0 1 0 0 0 6 
thread: 0, allBlocks[47]: 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 5 mySum: 7
thread: 0, blockNoZero[47]: 2 0 0 0 0 5 
Thread: 1, gpu_BlockDP is done.
thread: 0, allBlocks[48]: 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 4 mySum: 7
thread: 0, blockNoZero[48]: 3 0 0 0 0 4 
thread: 0, allBlocks[49]: 0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 3 mySum: 7
thread: 0, blockNoZero[49]: 4 0 0 0 0 3 
thread: 0, allBlocks[50]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 6 mySum: 7
thread: 0, blockNoZero[50]: 1 0 0 0 0 6 
thread: 0, allBlocks[51]: 0 0 0 0 0 0 0 0 0 3 1 0 0 0 0 3 mySum: 7
thread: 0, blockNoZero[51]: 3 1 0 0 0 3 
thread: 0, allBlocks[52]: 0 0 0 0 0 0 0 0 0 4 1 0 0 0 0 2 mySum: 7
thread: 0, blockNoZero[52]: 4 1 0 0 0 2 
thread: 0, allBlocks[53]: 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 5 mySum: 7
thread: 0, blockNoZero[53]: 1 1 0 0 0 5 
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 8
thread: 0, allBlocks[54]: 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 6 mySum: 8
thread: 0, blockNoZero[54]: 1 1 0 0 0 6 
thread: 0, allBlocks[55]: 0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 4 mySum: 8
thread: 0, blockNoZero[55]: 4 0 0 0 0 4 
thread: 0, allBlocks[56]: 0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 5 mySum: 8
thread: 0, blockNoZero[56]: 2 1 0 0 0 5 
thread: 0, allBlocks[57]: 0 0 0 0 0 0 0 0 0 3 1 0 0 0 0 4 mySum: 8
thread: 0, blockNoZero[57]: 3 1 0 0 0 4 
thread: 0, allBlocks[58]: 0 0 0 0 0 0 0 0 0 4 1 0 0 0 0 3 mySum: 8
thread: 0, blockNoZero[58]: 4 1 0 0 0 3 
thread: 0, allBlocks[59]: 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 5 mySum: 8
thread: 0, blockNoZero[59]: 3 0 0 0 0 5 
thread: 0, allBlocks[60]: 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 6 mySum: 8
thread: 0, blockNoZero[60]: 2 0 0 0 0 6 
copy the latest feasible solution to instance takes time: 0.107495
thread: 1, sOPT: 8
thread: 0, allBlocks[61]: 0 0 0 0 0 0 0 0 0 3 1 0 0 0 0 5 mySum: 9
thread: 0, blockNoZero[61]: 3 1 0 0 0 5 
thread: 0, allBlocks[62]: 0 0 0 0 0 0 0 0 0 4 1 0 0 0 0 4 mySum: 9
thread: 0, blockNoZero[62]: 4 1 0 0 0 4 
thread: 0, allBlocks[63]: 0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 5 mySum: 9
thread: 0, blockNoZero[63]: 4 0 0 0 0 5 
thread: 0, allBlocks[64]: 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 6 mySum: 9
thread: 0, blockNoZero[64]: 3 0 0 0 0 6 
thread: 0, allBlocks[65]: 0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 6 mySum: 9
thread: 0, blockNoZero[65]: 2 1 0 0 0 6 
thread: 0, allBlocks[66]: 0 0 0 0 0 0 0 0 0 4 1 0 0 0 0 5 mySum: 10
thread: 0, blockNoZero[66]: 4 1 0 0 0 5 
thread: 0, allBlocks[67]: 0 0 0 0 0 0 0 0 0 3 1 0 0 0 0 6 mySum: 10
thread: 0, blockNoZero[67]: 3 1 0 0 0 6 
thread: 0, allBlocks[68]: 0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 6 mySum: 10
thread: 0, blockNoZero[68]: 4 0 0 0 0 6 
thread: 0, allBlocks[69]: 0 0 0 0 0 0 0 0 0 4 1 0 0 0 0 6 mySum: 11
thread: 0, blockNoZero[69]: 4 1 0 0 0 6 
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.124406
thread: 0, sOPT: 10
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: Thread: 12, MlBk function is done, and BkID for all processes are collected.3, MlBk function is done, and BkID for all processes are collected., MlBk function is done, and BkID for all processes are collected.


sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 29, UB: 32
BKID: 0, LB: 29, UB: 32, OPT: 10
Dynamic Programming Runtime: 1.59275
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 1
Iteration: 2, UB: 32, LB: 29start at time: 1505254740
thread: 0, MlBk is called with LB: 29, UB: 30
 thread: 0, LongJobs.size() 21
thread: thread: 1, MlBk is called with LB: 2, MlBk is called with LB: 3031, UB: , UB: 3231

 thread:  thread: 12, LongJobs.size() , LongJobs.size() 21
21
thread: 2, NSTable size: 28
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 6
thread: 2, i: 0, maxN[i].weit: 5, maxN[i].idx: 0, blockDimSize[i]: 5
thread: 2, i: 1, maxN[i].weit: 4, maxN[i].idx: 1, blockDimSize[i]: 4
thread: 2, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 2, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 2, i: 4, maxN[i].weit: 4, maxN[i].idx: 4, blockDimSize[i]: 4
thread: 2, i: 5, maxN[i].weit: 7, maxN[i].idx: 5, blockDimSize[i]: 7
thread: 2, i: 0, divisor[i]: 5, blockDimSize[i]: 1
thread: 2, i: 1, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, i: 2, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 3, divisor[i]: 1, blockDimSize[i]: 4
thread: 2, i: 4, divisor[i]: 1, blockDimSize[i]: 4
thread: 2, i: 5, divisor[i]: 7, blockDimSize[i]: 1
thread: 2, largestBlockVec.elm: 0 0 0 0 0 0 0 0 0 4 1 0 0 0 0 6 
thread: 2, blockDimSizeComp: 0 0 0 0 0 0 0 0 0 1 2 3 4 0 4 1 
thread: 2, divisorComp: 0 0 0 0 0 0 0 0 0 5 2 1 1 0 1 7 
thread: 2, largestBlockVec: 0 0 0 0 0 0 0 0 0 4 1 0 0 0 0 6 
thread: 2, largestNoZeroBlockVec: 4 1 0 0 0 6 
thread: 1, NSTable size: 26
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 6
thread: 1, i: 0, maxN[i].weit: 5, maxN[i].idx: 0, blockDimSize[i]: 5
thread: 1, i: 1, maxN[i].weit: 4, maxN[i].idx: 1, blockDimSize[i]: 4
thread: 1, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 1, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 1, i: 4, maxN[i].weit: 4, maxN[i].idx: 4, blockDimSize[i]: 4
thread: 1, i: 5, maxN[i].weit: 7, maxN[i].idx: 5, blockDimSize[i]: 7
thread: 2, allBlocks: 0 0 0 thread: 10, i:  00, divisor[i]:  5, blockDimSize[i]: 0 0 10
thread: 1, i: 1, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, i: 2, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 4
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 4
 thread: 1, i: 05 0, divisor[i]:  07 , blockDimSize[i]: 10
 thread: 1, largestBlockVec.elm: 0 00 0 0  00  0 00  00 , mySum:  0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 00  14  01 0  0 0 00  0, mySum:  1
0 0 0 0 0 0 0 0 0 1 0 0 0 00 0 0  , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 , mySum: 2
0 6 
thread: 1, blockDimSizeComp: 0 0 0 0 0 0 0 0 0 1 2 3 4 0 4 1 
thread: 1, divisorComp: 0 0 0 0 0 0 0 0 0 5 2 1 1 0 1 7 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0 4 1 0 0 0 0 6 
thread: 1, largestNoZeroBlockVec: 4 1 0 0 0 6 
0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 2 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 , mySum: 3
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 2 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 , mySum: 4
0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 3 1 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 2 , mySum: 4
0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 thread: 01 1, allBlocks:  01 0  00  0 00  00 2  , mySum: 4
0 00 0 0 0 0 0 0 0 0 0 1 0 0 0 0  3 , mySum: 4
0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 1 , mySum: 4
00 0 0  0 0 00  0 00  00 0  0 00  1 , mySum: 00 
00 0 0 0 0 0 0 0 0 0 0 0 0 0  0 01 0  0 3 , mySum: , mySum: 1
40 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 3 , mySum: 5
, mySum: 0 10
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 4 0  00  00  00 0 0  01 0  0 , mySum: 0 05 0 
00 0 0 0 0 0 0 0 0 4 1 0 0 0  0 00  0 , mySum: 25 
, mySum: 0 0 0 0 0 0 0 0 0 2 1 0 0 02 0 2 
, mySum: 5
0 0 0 0 0 0 0 0 0 3 1 0 0 00 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 1  0 1 , mySum: 50
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 00 5  , mySum: 5
0 0 0 0 0 0 0 0 0 1 0 0 0 0 00 4  0 , mySum: 1 5, mySum: 
20 0 0 0 0 0 0 0 0 2 0 0 0 0
 0 0 0 0 0 0 0 0 0 30  , mySum: 15 
1 00 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum:  20 
4 0 0 0 0 0 0 0 0 0 1 0 0 , mySum: 5
0 0 0 0 0 0 0 0 0 3 0 0 00 0 0  20  0, mySum: 5 1
 , mySum: 0 0 0 0 0 0 0 0 0 3 1 0 0 2
0 0 0 0 0 0 0 0 0 2 1 0 0 0 2 , mySum: 60
 0 0 0 0 0 0 0 0 0 3 0 0 0 0 00 3  , mySum: 6
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 30
 0 0 0 0 0 0 0 0 0 3 0 0 0 0 00 0  , mySum: 3
50 0 0 0 0 0 0 0 0 2 0 0 0  , mySum: 6
0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 1 , mySum: 3
00 0 0 0 0 0 0 0 0 1 1 0 0  0 2 , mySum: 6
0 0 0 0 0 0 0 0 0 4 1 0 0 0 0 1 , mySum: 03 
0 0 0 0 0 0 0 0 0 1 0 0 0 00 0  21 , mySum:  6
, mySum: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 30 5 
, mySum: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 60 3
 0 0 0 0 0 0 0 0 0 2 1 0 0 0 0, mySum:  3 3, mySum: 6

0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 00 0  0 04  , mySum: 62
0 0 0 0 0 0 0 0 0 0 0 0 0 0  0, mySum:  6 , mySum: 36
0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 1 1 0 00 0  04  , mySum: 4
40 0 0 0 0 0 0 0 0 2 1 0 0 0 , mySum: 6
0 0 0 0 0 0 0 0 0 2 1 0 0 0  0 4 0, mySum:  7
0 0 0 0 0 0 0 0 0 0 1 0 0 10 0 , mySum:  46
 0 0 0 0 0 0 0 0 0 3 1 0 0 0, mySum:  0 70
 , mySum: 4
0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 5 , mySum: 70
0 0 0 0 0 0 0 0 0 3 0 0 0 0  0 4 0, mySum:  70 
00 0 0 0 0 0 0 0 0 4 0 0 0  2 , mySum: 4
0 0 0 0 0 0 0 0 0 4 0 0 0 00  00  3 0, mySum: 7 
, mySum: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 04 6 , mySum: 
70 0 0 0 0 0 0 0 0 1 1 0 0 0
 0 0 0 0 0 0 0 0 0 3 1 00 0 0  02 , mySum:  4
30 0 0 0 0 0 0 0 0 0 1 0 0 0  0 , mySum: 3 , mySum: 74
0 0 0 0 0 0 0 0 0 3 0 0 0 
0 0 0 0 0 0 0 0 0 0 4 1 00 0  0 0 12  , mySum: 7, mySum: 
40 0 0 0 0 0 0 0 0 1 1 0 0 0 
0 0 0 0 0 0 0 0 0 0 1 0 0 0 05 , mySum: 7
0 0 0 0 0 0 0 0 0 1 1 0 0  0 0 06  3 , mySum: , mySum: 84
0 0 0 0 0 0 0 0 0 4 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 1 1 0 0 40  , mySum: 08 3
 0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 5, mySum:  , mySum: 8
0 0 0 0 0 0 0 0 0 3 1 0 0 5
0 0 0 0 0 0 0 0 0 4 0 0 0 00 0  10  , mySum: 45
0 0 0 0 0 0 0 0 0 4 1 0 0 , mySum: 8
0 0 0 0 0 0 0 0 0 4 1 0 0 0  0 03 0  0 , mySum: , mySum: 58

0 0 0 0 0 0 0 0 0 3 0 0 0 0 00 0 0 0 0 0 0 0 0 2 1 0  0 50 , mySum: 8 
0 0 0 0 0 0 0 0 0 2 0 0 0 00 0 6  , mySum: 2 8, mySum: 
0 0 0 0 0 0 0 0 0 3 1 0 0 0 05 5 , mySum: 9

0 0 0 0 0 0 0 0 0 4 1 0 0 00 0 0 0 0 0 0 0 0 3 1 0 4 , mySum: 9 
0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 00 5  , mySum: 09
 0 0 0 0 0 0 0 0 0 3 0 0 0 00  01 , mySum:  5
0 0 0 0 0 0 0 0 0 0 0 0 0 60 0  5 , mySum: , mySum: 5
0 0 0 0 0 0 0 0 0 1 0 0 09
0 0 0 0 0 0 0 0 0  20 1  00  0 40 , mySum:  5
0 0 0 0 0 0 0 0 0 0 2 0 0 0 06 , mySum: 9
0 0 0 0 0 0 0 0 0 4 1 0 0  0 3 , mySum: 5
00 0 0 0 0 0 0 0 0 0 1 0 0 0 0  4 , mySum: 05
0 0 0 0 0 0 0 0 0 3 0 0 0  5 , mySum: 10
0 0 0 0 0 0 0 0 0 3 1 0 0 0 0 2 , mySum: 50
0 0 0 0 0 0 0 0 0 3 1 0 0 0  0 02 6 , mySum:  10
, mySum: 0 0 0 0 0 0 0 0 0 4 0 0 0 0 60 6 , mySum: 
100 0 0 0 0 0 0 0 0 3 0 0 0 
0 00 0 0 0 0 0 0 0 0 4 1 0 0  0 30 , mySum:  6
60 0 0 0 0 0 0 0 0 0 1 0 0 0 0  5, mySum:  , mySum: 6
0 0 0 0 0 0 0 0 0 4 0 0 0 011
 0 2 , mySum: 6
0 0 0 0 0 0 0 0 0 4 1 0 0 0 0 1 , mySum: 6
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 5 , mySum: 6
0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 3 , mySum: 6
0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 4 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6 , mySum: 6
0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 4 , mySum: 6
0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 4 , mySum: 7
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 6 , mySum: 7
0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 5 , mySum: 7
0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 4 , mySum: 7
0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 3 , mySum: 7
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 6 , mySum: 7
0 0 0 0 0 0 0 0 0 3 1 0 0 0 0 3 , mySum: 7
0 0 0 0 0 0 0 0 0 4 1 0 0 0 0 2 , mySum: 7
0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 5 , mySum: 7
0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 6 , mySum: 8
0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 4 , mySum: 8
0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 5 , mySum: 8
0 0 0 0 0 0 0 0 0 3 1 0 0 0 0 4 , mySum: 8
0 0 0 0 0 0 0 0 0 4 1 0 0 0 0 3 , mySum: 8
0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 5 , mySum: 8
0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 6 , mySum: 8
0 0 0 0 0 0 0 0 0 3 1 0 0 0 0 5 , mySum: 9
0 0 0 0 0 0 0 0 0 4 1 0 0 0 0 4 , mySum: 9
0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 5 , mySum: 9
0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 6 , mySum: 9
0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 6 , mySum: 9
0 0 0 0 0 0 0 0 0 4 1 0 0 0 0 5 , mySum: 10
0 0 0 0 0 0 0 0 0 3 1 0 0 0 0 6 , mySum: 10
0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 6 , mySum: 10
0 0 0 0 0 0 0 0 0 4 1 0 0 0 0 6 , mySum: 11
thread: 0, NSTable size: 24
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 6
thread: 0, i: 0, maxN[i].weit: 5, maxN[i].idx: 0, blockDimSize[i]: 5
thread: 0, i: 1, maxN[i].weit: 4, maxN[i].idx: 1, blockDimSize[i]: 4
thread: 0, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 0, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 0, i: 4, maxN[i].weit: 4, maxN[i].idx: 4, blockDimSize[i]: 4
thread: 0, i: 5, maxN[i].weit: 7, maxN[i].idx: 5, blockDimSize[i]: 7
thread: 0, i: 0, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, i: 1, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 2, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 4
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 4
thread: 0, i: 5, divisor[i]: 7, blockDimSize[i]: 1
thread: 0, largestBlockVec.elm: 0 0 0 0 0 0 0 0 0 4 1 0 0 0 0 6 
thread: 0, blockDimSizeComp: 0 0 0 0 0 0 0 0 0 1 2 3 4 0 4 1 
thread: 0, divisorComp: 0 0 0 0 0 0 0 0 0 5 2 1 1 0 1 7 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 4 1 0 0 0 0 6 
thread: 0, largestNoZeroBlockVec: 4 1 0 0 0 6 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 , mySum: 2
0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 2 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 , mySum: 3
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 2 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 , mySum: 4
0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 3 1 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 2 , mySum: 4
0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 2 , mySum: 4
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 3 , mySum: 4
0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 3 , mySum: 4
0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 3 , mySum: 5
0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 1 , mySum: 5
0 0 0 0 0 0 0 0 0 4 1 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 2 , mySum: 5
0 0 0 0 0 0 0 0 0 3 1 0 0 0 0 1 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5 , mySum: 5
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 4 , mySum: 5
0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 3 , mySum: 5
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 4 , mySum: 5
0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 2 , mySum: 5
0 0 0 0 0 0 0 0 0 3 1 0 0 0 0 2 , mySum: 6
0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 3 , mySum: 6
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 5 , mySum: 6
0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 2 , mySum: 6
0 0 0 0 0 0 0 0 0 4 1 0 0 0 0 1 , mySum: 6
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 5 , mySum: 6
0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 3 , mySum: 6
0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 4 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6 , mySum: 6
0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 4 , mySum: 6
0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 4 , mySum: 7
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 6 , mySum: 7
0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 5 , mySum: 7
0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 4 , mySum: 7
0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 3 , mySum: 7
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 6 , mySum: 7
0 0 0 0 0 0 0 0 0 3 1 0 0 0 0 3 , mySum: 7
0 0 0 0 0 0 0 0 0 4 1 0 0 0 0 2 , mySum: 7
0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 5 , mySum: 7
0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 6 , mySum: 8
0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 4 , mySum: 8
0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 5 , mySum: 8
0 0 0 0 0 0 0 0 0 3 1 0 0 0 0 4 , mySum: 8
0 0 0 0 0 0 0 0 0 4 1 0 0 0 0 3 , mySum: 8
0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 5 , mySum: 8
0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 6 , mySum: 8
0 0 0 0 0 0 0 0 0 3 1 0 0 0 0 5 , mySum: 9
0 0 0 0 0 0 0 0 0 4 1 0 0 0 0 4 , mySum: 9
0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 5 , mySum: 9
0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 6 , mySum: 9
0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 6 , mySum: 9
0 0 0 0 0 0 0 0 0 4 1 0 0 0 0 5 , mySum: 10
0 0 0 0 0 0 0 0 0 3 1 0 0 0 0 6 , mySum: 10
0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 6 , mySum: 10
0 0 0 0 0 0 0 0 0 4 1 0 0 0 0 6 , mySum: 11
thread: 2, maxBlockLvlSize: 10
thread: 2, maxInBlockLvlSize: 19
thread: 2, AllTableSize: 6720, maxSubsetsSize: 64
thread: 1, maxBlockLvlSize: 10
thread: 1, maxInBlockLvlSize: 19
thread: 1, AllTableSize: 6720, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 10
thread: 0, maxInBlockLvlSize: 19
thread: 0, AllTableSize: 6720, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 1 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 1 0 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 mySum: 2
thread: 0, blockNoZero[4]: 0 0 0 0 0 2 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 2 0 0 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[6]: 0 1 0 0 0 1 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 1 1 0 0 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[8]: 1 0 0 0 0 1 
thread: 0, allBlocks[9]: 0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[9]: 2 1 0 0 0 0 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 3 0 0 0 0 0 
thread: 0, allBlocks[11]: 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 1 mySum: 3
thread: 0, blockNoZero[11]: 2 0 0 0 0 1 
thread: 0, allBlocks[12]: 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 1 mySum: 3
thread: 0, blockNoZero[12]: 1 1 0 0 0 1 
thread: 0, allBlocks[13]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 2 mySum: 3
thread: 0, blockNoZero[13]: 1 0 0 0 0 2 
thread: 0, allBlocks[14]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 mySum: 3
thread: 0, blockNoZero[14]: 0 0 0 0 0 3 
thread: 0, allBlocks[15]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 2 mySum: 3
thread: 0, blockNoZero[15]: 0 1 0 0 0 2 
thread: 0, allBlocks[16]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 mySum: 4
thread: 0, blockNoZero[16]: 0 0 0 0 0 4 
thread: 0, allBlocks[17]: 0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 1 mySum: 4
thread: 0, blockNoZero[17]: 2 1 0 0 0 1 
thread: 0, allBlocks[18]: 0 0 0 0 0 0 0 0 0 3 1 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[18]: 3 1 0 0 0 0 
thread: 0, allBlocks[19]: 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 2 mySum: 4
thread: 0, blockNoZero[19]: 2 0 0 0 0 2 
thread: 0, allBlocks[20]: 0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[20]: 4 0 0 0 0 0 
thread: 0, allBlocks[21]: 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 2 mySum: 4
thread: 0, blockNoZero[21]: 1 1 0 0 0 2 
thread: 0, allBlocks[22]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 3 mySum: 4
thread: 0, blockNoZero[22]: 0 1 0 0 0 3 
thread: 0, allBlocks[23]: 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 1 mySum: 4
thread: 0, blockNoZero[23]: 3 0 0 0 0 1 
thread: 0, allBlocks[24]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 3 mySum: 4
thread: 0, blockNoZero[24]: 1 0 0 0 0 3 
thread: 0, allBlocks[25]: 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 3 mySum: 5
thread: 0, blockNoZero[25]: 1 1 0 0 0 3 
thread: 0, allBlocks[26]: 0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 1 mySum: 5
thread: 0, blockNoZero[26]: 4 0 0 0 0 1 
thread: 0, allBlocks[27]: 0 0 0 0 0 0 0 0 0 4 1 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[27]: 4 1 0 0 0 0 
thread: 0, allBlocks[28]: 0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 2 mySum: 5
thread: 0, blockNoZero[28]: 2 1 0 0 0 2 
thread: 0, allBlocks[29]: 0 0 0 0 0 0 0 0 0 3 1 0 0 0 0 1 mySum: 5
thread: 0, blockNoZero[29]: 3 1 0 0 0 1 
thread: 0, allBlocks[30]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5 mySum: 5
thread: 0, blockNoZero[30]: 0 0 0 0 0 5 
thread: 0, allBlocks[31]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 4 mySum: 5
thread: 0, blockNoZero[31]: 1 0 0 0 0 4 
thread: 0, allBlocks[32]: 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 3 mySum: 5
thread: 0, blockNoZero[32]: 2 0 0 0 0 3 
thread: 0, allBlocks[33]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 4 mySum: 5
thread: 0, blockNoZero[33]: 0 1 0 0 0 4 
thread: 0, allBlocks[34]: 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 2 mySum: 5
thread: 0, blockNoZero[34]: 3 0 0 0 0 2 
thread: 0, allBlocks[35]: 0 0 0 0 0 0 0 0 0 3 1 0 0 0 0 2 mySum: 6
thread: 0, blockNoZero[35]: 3 1 0 0 0 2 
thread: 0, allBlocks[36]: 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 3 mySum: 6
thread: 0, blockNoZero[36]: 3 0 0 0 0 3 
thread: 0, allBlocks[37]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 5 mySum: 6
thread: 0, blockNoZero[37]: 0 1 0 0 0 5 
thread: 0, allBlocks[38]: 0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 2 mySum: 6
thread: 0, blockNoZero[38]: 4 0 0 0 0 2 
thread: 0, allBlocks[39]: 0 0 0 0 0 0 0 0 0 4 1 0 0 0 0 1 mySum: 6
thread: 0, blockNoZero[39]: 4 1 0 0 0 1 
thread: 0, allBlocks[40]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 5 mySum: 6
thread: 0, blockNoZero[40]: 1 0 0 0 0 5 
thread: 0, allBlocks[41]: 0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 3 mySum: 6
thread: 0, blockNoZero[41]: 2 1 0 0 0 3 
thread: 0, allBlocks[42]: 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 4 mySum: 6
thread: 0, blockNoZero[42]: 2 0 0 0 0 4 
thread: 0, allBlocks[43]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6 mySum: 6
thread: 0, blockNoZero[43]: 0 0 0 0 0 6 
thread: 0, allBlocks[44]: 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 4 mySum: 6
thread: 0, blockNoZero[44]: 1 1 0 0 0 4 
thread: 0, allBlocks[45]: 0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 4 mySum: 7
thread: 0, blockNoZero[45]: 2 1 0 0 0 4 
thread: 0, allBlocks[46]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 6 mySum: 7
thread: 0, blockNoZero[46]: 0 1 0 0 0 6 
thread: 0, allBlocks[47]: 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 5 mySum: 7
thread: 0, blockNoZero[47]: 2 0 0 0 0 5 
thread: 0, allBlocks[48]: 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 4 mySum: 7
thread: 0, blockNoZero[48]: 3 0 0 0 0 4 
thread: 0, allBlocks[49]: 0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 3 mySum: 7
thread: 0, blockNoZero[49]: 4 0 0 0 0 3 
thread: 0, allBlocks[50]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 6 mySum: 7
thread: 0, blockNoZero[50]: 1 0 0 0 0 6 
thread: 0, allBlocks[51]: 0 0 0 0 0 0 0 0 0 3 1 0 0 0 0 3 mySum: 7
thread: 0, blockNoZero[51]: 3 1 0 0 0 3 
thread: 0, allBlocks[52]: 0 0 0 0 0 0 0 0 0 4 1 0 0 0 0 2 mySum: 7
thread: 0, blockNoZero[52]: 4 1 0 0 0 2 
thread: 0, allBlocks[53]: 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 5 mySum: 7
thread: 0, blockNoZero[53]: 1 1 0 0 0 5 
thread: 0, allBlocks[54]: 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 6 mySum: 8
thread: 0, blockNoZero[54]: 1 1 0 0 0 6 
thread: 0, allBlocks[55]: 0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 4 mySum: 8
thread: 0, blockNoZero[55]: 4 0 0 0 0 4 
thread: 0, allBlocks[56]: 0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 5 mySum: 8
thread: 0, blockNoZero[56]: 2 1 0 0 0 5 
thread: 0, allBlocks[57]: 0 0 0 0 0 0 0 0 0 3 1 0 0 0 0 4 mySum: 8
thread: 0, blockNoZero[57]: 3 1 0 0 0 4 
thread: 0, allBlocks[58]: 0 0 0 0 0 0 0 0 0 4 1 0 0 0 0 3 mySum: 8
thread: 0, blockNoZero[58]: 4 1 0 0 0 3 
thread: 0, allBlocks[59]: 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 5 mySum: 8
thread: 0, blockNoZero[59]: 3 0 0 0 0 5 
thread: 0, allBlocks[60]: 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 6 mySum: 8
thread: 0, blockNoZero[60]: 2 0 0 0 0 6 
thread: 0, allBlocks[61]: 0 0 0 0 0 0 0 0 0 3 1 0 0 0 0 5 mySum: 9
thread: 0, blockNoZero[61]: 3 1 0 0 0 5 
thread: 0, allBlocks[62]: 0 0 0 0 0 0 0 0 0 4 1 0 0 0 0 4 mySum: 9
thread: 0, blockNoZero[62]: 4 1 0 0 0 4 
thread: 0, allBlocks[63]: 0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 5 mySum: 9
thread: 0, blockNoZero[63]: 4 0 0 0 0 5 
thread: 0, allBlocks[64]: 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 6 mySum: 9
thread: 0, blockNoZero[64]: 3 0 0 0 0 6 
thread: 0, allBlocks[65]: 0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 6 mySum: 9
thread: 0, blockNoZero[65]: 2 1 0 0 0 6 
thread: 0, allBlocks[66]: 0 0 0 0 0 0 0 0 0 4 1 0 0 0 0 5 mySum: 10
thread: 0, blockNoZero[66]: 4 1 0 0 0 5 
thread: 0, allBlocks[67]: 0 0 0 0 0 0 0 0 0 3 1 0 0 0 0 6 mySum: 10
thread: 0, blockNoZero[67]: 3 1 0 0 0 6 
thread: 0, allBlocks[68]: 0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 6 mySum: 10
thread: 0, blockNoZero[68]: 4 0 0 0 0 6 
thread: 0, allBlocks[69]: 0 0 0 0 0 0 0 0 0 4 1 0 0 0 0 6 mySum: 11
thread: 0, blockNoZero[69]: 4 1 0 0 0 6 
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 3e-06
thread: 0, sOPT: 11
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.444449
thread: 1, sOPT: 10
copy the latest feasible solution to instance takes time: 0.25
thread: 2, sOPT: 10
BKID: 0, LB: 30, UB: 30, OPT: 10
Dynamic Programming Runtime: 3.23311
Execution time between LB and UB is: 2
By far, all LB UB calculation runtime: 3
********************************************************
Total execution on UB and LB is: 3
OUT of Bk while loop  
UB    30
LB    30
T1    30
T2    30
OPT   10
nMachines   10
BkID	0
AllProbData.size()    2
ck :   1
AllProbData[ck].Ttable    30
ck :   0
AllProbData[ck].Ttable    31
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan31
Main Scheduling is Done
File 1-18 is Done.
******************************
Reading File...
File 1-19 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 49, LB: 30start at time: 1505254742
thread: 0, MlBk is called with LB: 30, UB: 35
thread: 3, MlBk is called with LB: 45, UB: 50
 thread: 0, LongJobs.size() 21
thread: 1, MlBk is called with LB: 35, UB: 40thread: 
 thread: 3, LongJobs.size() 15
2, MlBk is called with LB: 40, UB: 45
 thread: 1, LongJobs.size() 21
 thread: 2, LongJobs.size() 18
thread: 3, NSTable size: 22
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 5
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 6
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 6, maxN[i].idx: 0, blockDimSize[i]: 6
thread: 3, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 3, i: 2, maxN[i].weit: 7, maxN[i].idx: 2, blockDimSize[i]: 7
thread: 3, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 3, i: 0, divisor[i]: 2, blockDimSize[i]: 3
thread: 3, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 2, divisor[i]: 7, blockDimSize[i]: 1
thread: 3, i: 3, divisor[i]: 2, blockDimSize[i]: 2
thread: 3, largestBlockVec.elm: 0 0 0 0 0 1 0 6 1 0 0 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 0 0 3 2 1 2 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 0 0 2 1 7 2 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 1 0 6 1 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 1 0 6 1 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 0 3 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 0 2 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 3 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 4 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 0 3 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 0 4 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 5 1 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 0 4 1 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 0 5 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 6 1 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 0 5 1 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 0 6 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 0 6 1 0 0 0 0 0 0 0 , mySum: 8
thread: 3, maxBlockLvlSize: 4
thread: 3, maxInBlockLvlSize: 4
thread: 3, AllTableSize: 336, maxSubsetsSize: 64
thread: 2, NSTable size: 37
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 5
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 6
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 2, i: 1, maxN[i].weit: 6, maxN[i].idx: 1, blockDimSize[i]: 6
thread: 2, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 2, i: 3, maxN[i].weit: 7, maxN[i].idx: 3, blockDimSize[i]: 7
thread: 2, i: 4, maxN[i].weit: 4, maxN[i].idx: 4, blockDimSize[i]: 4
thread: 2, i: 0, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, i: 1, divisor[i]: 2, blockDimSize[i]: 3
thread: 2, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 3, divisor[i]: 7, blockDimSize[i]: 1
thread: 2, i: 4, divisor[i]: 1, blockDimSize[i]: 4
thread: 2, largestBlockVec.elm: 0 0 0 0 1 1 0 6 0 0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 0 2 3 2 1 4 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 2 2 1 7 1 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 1 1 0 6 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 1 1 0 6 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 1 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 0 3 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 1 0 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 3 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 1 0 3 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 4 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 0 4 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 5 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 0 5 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 1 0 4 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 0 0 6 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 0 6 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 1 0 5 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 1 0 6 0 0 0 0 0 0 0 0 , mySum: 8
thread: 2, maxBlockLvlSize: 4
thread: 2, maxInBlockLvlSize: 11
thread: 2, AllTableSize: 1344, maxSubsetsSize: 64
thread: 1, NSTable size: 26
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 6
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 5
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 6
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 7, maxN[i].idx: 0, blockDimSize[i]: 7
thread: 1, i: 1, maxN[i].weit: 6, maxN[i].idx: 1, blockDimSize[i]: 6
thread: 1, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 1, i: 3, maxN[i].weit: 7, maxN[i].idx: 3, blockDimSize[i]: 7
thread: 1, i: 4, maxN[i].weit: 4, maxN[i].idx: 4, blockDimSize[i]: 4
thread: 1, i: 0, divisor[i]: 7, blockDimSize[i]: 1
thread: 1, i: 1, divisor[i]: 2, blockDimSize[i]: 3
thread: 1, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 3, divisor[i]: 7, blockDimSize[i]: 1
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 4
thread: 1, largestBlockVec.elm: 0 0 0 0 6 1 0 6 0 0 0 0 0 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 0 1 3 2 1 4 0 0 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 7 2 1 7 1 0 0 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 6 1 0 6 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 6 1 0 6 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 1 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 3 0 0 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 1 0 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 0 0 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 1 0 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 3 1 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 3 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 0 3 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 3 0 0 2 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 5 0 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 4 1 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 4 0 0 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 3 1 0 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 1 0 2 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 0 4 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 0 0 3 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 4 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 1 0 3 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 5 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 5 1 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 1 0 4 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 3 1 0 2 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 4 0 0 2 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 6 0 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 3 0 0 3 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 5 0 0 1 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 4 1 0 1 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 1 0 3 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 0 0 4 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 0 5 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 5 0 0 2 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 0 0 6 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 4 0 0 3 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 4 1 0 2 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 1 0 5 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 6 1 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 5 1 0 1 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 3 1 0 3 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 3 0 0 4 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 0 6 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 6 0 0 1 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 2 1 0 4 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 2 0 0 5 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 5 0 0 3 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 6 1 0 1 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 5 1 0 2 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 4 0 0 4 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 6 0 0 2 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 2 0 0 6 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 1 1 0 6 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 4 1 0 3 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 2 1 0 5 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 3 0 0 5 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 3 1 0 4 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 3 0 0 6 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 6 0 0 3 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 2 1 0 6 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 6 1 0 2 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 4 1 0 4 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 5 1 0 3 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 3 1 0 5 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 5 0 0 4 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 4 0 0 5 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 5 1 0 4 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 6 1 0 3 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 5 0 0 5 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 3 1 0 6 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 4 0 0 6 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 6 0 0 4 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 4 1 0 5 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 5 1 0 5 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 6 1 0 4 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 6 0 0 5 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 5 0 0 6 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 4 1 0 6 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 6 0 0 6 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 5 1 0 6 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 6 1 0 5 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 6 1 0 6 0 0 0 0 0 0 0 0 , mySum: 13
thread: 0, NSTable size: 19
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 6
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 5
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 6
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 0, maxN[i].weit: 7, maxN[i].idx: 0, blockDimSize[i]: 7
thread: 0, i: 1, maxN[i].weit: 6, maxN[i].idx: 1, blockDimSize[i]: 6
thread: 0, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 0, i: 3, maxN[i].weit: 7, maxN[i].idx: 3, blockDimSize[i]: 7
thread: 0, i: 4, maxN[i].weit: 4, maxN[i].idx: 4, blockDimSize[i]: 4
thread: 0, i: 0, divisor[i]: 7, blockDimSize[i]: 1
thread: 0, i: 1, divisor[i]: 2, blockDimSize[i]: 3
thread: 0, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 3, divisor[i]: 7, blockDimSize[i]: 1
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 4
thread: 0, largestBlockVec.elm: 0 0 0 0 6 1 0 6 0 0 0 0 0 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 0 1 3 2 1 4 0 0 0 0 0 0 0 
thread: 0, divisorComp: 0 0 0 0 7 2 1 7 1 0 0 0 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 6 1 0 6 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 6 1 0 6 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 1 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 3 0 0 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 1 0 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 0 0 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 1 0 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 3 1 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 3 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 0 3 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 3 0 0 2 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 5 0 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 4 1 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 4 0 0 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 3 1 0 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 1 0 2 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 0 4 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 0 0 3 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 4 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 1 0 3 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 5 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 5 1 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 1 0 4 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 3 1 0 2 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 4 0 0 2 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 6 0 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 3 0 0 3 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 5 0 0 1 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 4 1 0 1 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 1 0 3 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 0 0 4 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 0 5 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 5 0 0 2 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 0 0 6 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 4 0 0 3 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 4 1 0 2 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 1 0 5 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 6 1 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 5 1 0 1 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 3 1 0 3 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 3 0 0 4 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 0 6 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 6 0 0 1 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 2 1 0 4 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 2 0 0 5 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 5 0 0 3 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 6 1 0 1 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 5 1 0 2 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 4 0 0 4 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 6 0 0 2 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 2 0 0 6 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 1 1 0 6 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 4 1 0 3 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 2 1 0 5 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 3 0 0 5 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 3 1 0 4 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 3 0 0 6 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 6 0 0 3 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 2 1 0 6 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 6 1 0 2 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 4 1 0 4 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 5 1 0 3 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 3 1 0 5 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 5 0 0 4 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 4 0 0 5 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 5 1 0 4 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 6 1 0 3 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 5 0 0 5 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 3 1 0 6 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 4 0 0 6 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 6 0 0 4 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 4 1 0 5 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 5 1 0 5 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 6 1 0 4 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 6 0 0 5 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 5 0 0 6 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 4 1 0 6 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 6 0 0 6 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 5 1 0 6 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 6 1 0 5 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 6 1 0 6 0 0 0 0 0 0 0 0 , mySum: 13
thread: 1, maxBlockLvlSize: 13
thread: 1, maxInBlockLvlSize: 6
thread: 1, AllTableSize: 2352, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 13
thread: 0, maxInBlockLvlSize: 6
thread: 0, AllTableSize: 2352, maxSubsetsSize: 64
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 5
copy the latest feasible solution to instance takes time: 0.021781
thread: 3, sOPT: 5
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 1 0 
thread: 0, allBlocks[2]: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 1 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 1 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 1 1 0 0 0 
thread: 0, allBlocks[5]: 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 2 0 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 1 0 0 1 0 
thread: 0, allBlocks[7]: 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 0 1 0 1 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[8]: 0 0 0 2 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[9]: 0 1 0 2 0 
thread: 0, allBlocks[10]: 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 3 0 0 0 0 
thread: 0, allBlocks[11]: 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 2 1 0 0 0 
thread: 0, allBlocks[12]: 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[12]: 0 0 0 3 0 
thread: 0, allBlocks[13]: 0 0 0 0 1 0 0 2 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[13]: 1 0 0 2 0 
thread: 0, allBlocks[14]: 0 0 0 0 2 0 0 1 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[14]: 2 0 0 1 0 
thread: 0, allBlocks[15]: 0 0 0 0 1 1 0 1 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[15]: 1 1 0 1 0 
thread: 0, allBlocks[16]: 0 0 0 0 3 0 0 1 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[16]: 3 0 0 1 0 
thread: 0, allBlocks[17]: 0 0 0 0 2 1 0 1 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[17]: 2 1 0 1 0 
thread: 0, allBlocks[18]: 0 0 0 0 2 0 0 2 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[18]: 2 0 0 2 0 
thread: 0, allBlocks[19]: 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[19]: 4 0 0 0 0 
thread: 0, allBlocks[20]: 0 0 0 0 1 1 0 2 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[20]: 1 1 0 2 0 
thread: 0, allBlocks[21]: 0 0 0 0 3 1 0 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[21]: 3 1 0 0 0 
thread: 0, allBlocks[22]: 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[22]: 0 0 0 4 0 
thread: 0, allBlocks[23]: 0 0 0 0 1 0 0 3 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[23]: 1 0 0 3 0 
thread: 0, allBlocks[24]: 0 0 0 0 0 1 0 3 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[24]: 0 1 0 3 0 
thread: 0, allBlocks[25]: 0 0 0 0 3 0 0 2 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[25]: 3 0 0 2 0 
thread: 0, allBlocks[26]: 0 0 0 0 5 0 0 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[26]: 5 0 0 0 0 
thread: 0, allBlocks[27]: 0 0 0 0 4 1 0 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[27]: 4 1 0 0 0 
thread: 0, allBlocks[28]: 0 0 0 0 4 0 0 1 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[28]: 4 0 0 1 0 
thread: 0, allBlocks[29]: 0 0 0 0 3 1 0 1 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[29]: 3 1 0 1 0 
thread: 0, allBlocks[30]: 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[30]: 0 0 0 5 0 
thread: 0, allBlocks[31]: 0 0 0 0 2 1 0 2 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[31]: 2 1 0 2 0 
thread: 0, allBlocks[32]: 0 0 0 0 0 1 0 4 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[32]: 0 1 0 4 0 
thread: 0, allBlocks[33]: 0 0 0 0 2 0 0 3 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[33]: 2 0 0 3 0 
thread: 0, allBlocks[34]: 0 0 0 0 1 0 0 4 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[34]: 1 0 0 4 0 
thread: 0, allBlocks[35]: 0 0 0 0 1 1 0 3 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[35]: 1 1 0 3 0 
thread: 0, allBlocks[36]: 0 0 0 0 1 0 0 5 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[36]: 1 0 0 5 0 
thread: 0, allBlocks[37]: 0 0 0 0 5 1 0 0 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[37]: 5 1 0 0 0 
thread: 0, allBlocks[38]: 0 0 0 0 1 1 0 4 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[38]: 1 1 0 4 0 
thread: 0, allBlocks[39]: 0 0 0 0 3 1 0 2 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[39]: 3 1 0 2 0 
thread: 0, allBlocks[40]: 0 0 0 0 4 0 0 2 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[40]: 4 0 0 2 0 
thread: 0, allBlocks[41]: 0 0 0 0 6 0 0 0 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[41]: 6 0 0 0 0 
thread: 0, allBlocks[42]: 0 0 0 0 3 0 0 3 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[42]: 3 0 0 3 0 
thread: 0, allBlocks[43]: 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[43]: 0 0 0 6 0 
thread: 0, allBlocks[44]: 0 0 0 0 5 0 0 1 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[44]: 5 0 0 1 0 
thread: 0, allBlocks[45]: 0 0 0 0 4 1 0 1 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[45]: 4 1 0 1 0 
thread: 0, allBlocks[46]: 0 0 0 0 2 1 0 3 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[46]: 2 1 0 3 0 
thread: 0, allBlocks[47]: 0 0 0 0 2 0 0 4 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[47]: 2 0 0 4 0 
thread: 0, allBlocks[48]: 0 0 0 0 0 1 0 5 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[48]: 0 1 0 5 0 
thread: 0, allBlocks[49]: 0 0 0 0 5 0 0 2 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[49]: 5 0 0 2 0 
thread: 0, allBlocks[50]: 0 0 0 0 1 0 0 6 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[50]: 1 0 0 6 0 
thread: 0, allBlocks[51]: 0 0 0 0 4 0 0 3 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[51]: 4 0 0 3 0 
thread: 0, allBlocks[52]: 0 0 0 0 4 1 0 2 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[52]: 4 1 0 2 0 
thread: 0, allBlocks[53]: 0 0 0 0 1 1 0 5 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[53]: 1 1 0 5 0 
thread: 0, allBlocks[54]: 0 0 0 0 6 1 0 0 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[54]: 6 1 0 0 0 
thread: 0, allBlocks[55]: 0 0 0 0 5 1 0 1 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[55]: 5 1 0 1 0 
thread: 0, allBlocks[56]: 0 0 0 0 3 1 0 3 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[56]: 3 1 0 3 0 
thread: 0, allBlocks[57]: 0 0 0 0 3 0 0 4 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[57]: 3 0 0 4 0 
thread: 0, allBlocks[58]: 0 0 0 0 0 1 0 6 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[58]: 0 1 0 6 0 
thread: 0, allBlocks[59]: 0 0 0 0 6 0 0 1 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[59]: 6 0 0 1 0 
thread: 0, allBlocks[60]: 0 0 0 0 2 1 0 4 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[60]: 2 1 0 4 0 
thread: 0, allBlocks[61]: 0 0 0 0 2 0 0 5 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[61]: 2 0 0 5 0 
thread: 0, allBlocks[62]: 0 0 0 0 5 0 0 3 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[62]: 5 0 0 3 0 
thread: 0, allBlocks[63]: 0 0 0 0 6 1 0 1 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[63]: 6 1 0 1 0 
thread: 0, allBlocks[64]: 0 0 0 0 5 1 0 2 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[64]: 5 1 0 2 0 
thread: 0, allBlocks[65]: 0 0 0 0 4 0 0 4 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[65]: 4 0 0 4 0 
thread: 0, allBlocks[66]: 0 0 0 0 6 0 0 2 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[66]: 6 0 0 2 0 
thread: 0, allBlocks[67]: 0 0 0 0 2 0 0 6 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[67]: 2 0 0 6 0 
thread: 0, allBlocks[68]: 0 0 0 0 1 1 0 6 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[68]: 1 1 0 6 0 
thread: 0, allBlocks[69]: 0 0 0 0 4 1 0 3 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[69]: 4 1 0 3 0 
thread: 0, allBlocks[70]: 0 0 0 0 2 1 0 5 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[70]: 2 1 0 5 0 
thread: 0, allBlocks[71]: 0 0 0 0 3 0 0 5 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[71]: 3 0 0 5 0 
thread: 0, allBlocks[72]: 0 0 0 0 3 1 0 4 0 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[72]: 3 1 0 4 0 
thread: 0, allBlocks[73]: 0 0 0 0 3 0 0 6 0 0 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[73]: 3 0 0 6 0 
thread: 0, allBlocks[74]: 0 0 0 0 6 0 0 3 0 0 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[74]: 6 0 0 3 0 
thread: 0, allBlocks[75]: 0 0 0 0 2 1 0 6 0 0 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[75]: 2 1 0 6 0 
thread: 0, allBlocks[76]: 0 0 0 0 6 1 0 2 0 0 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[76]: 6 1 0 2 0 
thread: 0, allBlocks[77]: 0 0 0 0 4 1 0 4 0 0 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[77]: 4 1 0 4 0 
thread: 0, allBlocks[78]: 0 0 0 0 5 1 0 3 0 0 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[78]: 5 1 0 3 0 
thread: 0, allBlocks[79]: 0 0 0 0 3 1 0 5 0 0 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[79]: 3 1 0 5 0 
thread: 0, allBlocks[80]: 0 0 0 0 5 0 0 4 0 0 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[80]: 5 0 0 4 0 
thread: 0, allBlocks[81]: 0 0 0 0 4 0 0 5 0 0 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[81]: 4 0 0 5 0 
thread: 0, allBlocks[82]: 0 0 0 0 5 1 0 4 0 0 0 0 0 0 0 0 mySum: 10
thread: 0, blockNoZero[82]: 5 1 0 4 0 
thread: 0, allBlocks[83]: 0 0 0 0 6 1 0 3 0 0 0 0 0 0 0 0 mySum: 10
thread: 0, blockNoZero[83]: 6 1 0 3 0 
thread: 0, allBlocks[84]: 0 0 0 0 5 0 0 5 0 0 0 0 0 0 0 0 mySum: 10
thread: 0, blockNoZero[84]: 5 0 0 5 0 
thread: 0, allBlocks[85]: 0 0 0 0 3 1 0 6 0 0 0 0 0 0 0 0 mySum: 10
thread: 0, blockNoZero[85]: 3 1 0 6 0 
thread: 0, allBlocks[86]: 0 0 0 0 4 0 0 6 0 0 0 0 0 0 0 0 mySum: 10
thread: 0, blockNoZero[86]: 4 0 0 6 0 
thread: 0, allBlocks[87]: 0 0 0 0 6 0 0 4 0 0 0 0 0 0 0 0 mySum: 10
thread: 0, blockNoZero[87]: 6 0 0 4 0 
thread: 0, allBlocks[88]: 0 0 0 0 4 1 0 5 0 0 0 0 0 0 0 0 mySum: 10
thread: 0, blockNoZero[88]: 4 1 0 5 0 
thread: 0, allBlocks[89]: 0 0 0 0 5 1 0 5 0 0 0 0 0 0 0 0 mySum: 11
thread: 0, blockNoZero[89]: 5 1 0 5 0 
thread: 0, allBlocks[90]: 0 0 0 0 6 1 0 4 0 0 0 0 0 0 0 0 mySum: 11
thread: 0, blockNoZero[90]: 6 1 0 4 0 
thread: 0, allBlocks[91]: 0 0 0 0 6 0 0 5 0 0 0 0 0 0 0 0 mySum: 11
thread: 0, blockNoZero[91]: 6 0 0 5 0 
thread: 0, allBlocks[92]: 0 0 0 0 5 0 0 6 0 0 0 0 0 0 0 0 mySum: 11
thread: 0, blockNoZero[92]: 5 0 0 6 0 
thread: 0, allBlocks[93]: 0 0 0 0 4 1 0 6 0 0 0 0 0 0 0 0 mySum: 11
thread: 0, blockNoZero[93]: 4 1 0 6 0 
thread: 0, allBlocks[94]: 0 0 0 0 6 0 0 6 0 0 0 0 0 0 0 0 mySum: 12
thread: 0, blockNoZero[94]: 6 0 0 6 0 
thread: 0, allBlocks[95]: 0 0 0 0 5 1 0 6 0 0 0 0 0 0 0 0 mySum: 12
thread: 0, blockNoZero[95]: 5 1 0 6 0 
thread: 0, allBlocks[96]: 0 0 0 0 6 1 0 5 0 0 0 0 0 0 0 0 mySum: 12
thread: 0, blockNoZero[96]: 6 1 0 5 0 
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 7
thread: 0, allBlocks[97]: 0 0 0 0 6 1 0 6 0 0 0 0 0 0 0 0 mySum: 13
thread: 0, blockNoZero[97]: 6 1 0 6 0 
copy the latest feasible solution to instance takes time: 0.076748
thread: 2, sOPT: 7
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.097036
thread: 1, sOPT: 9
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.039958
thread: 0, sOPT: 9
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: Thread: 3, MlBk function is done, and BkID for all processes are collected.12, MlBk function is done, and BkID for all processes are collected., MlBk function is done, and BkID for all processes are collected.


sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 30, UB: 33
BKID: 0, LB: 30, UB: 33, OPT: 9
Dynamic Programming Runtime: 0.975214
Execution time between LB and UB is: 0
By far, all LB UB calculation runtime: 0
Iteration: 2, UB: 33, LB: 30start at time: 1505254742
thread: 0, MlBk is called with LB: 30, UB: 31
 thread: 0, LongJobs.size() 21
thread: thread: 1, MlBk is called with LB: 312, UB: 32, MlBk is called with LB: 32, UB: 
33
 thread: 2, LongJobs.size() 21
 thread: 1, LongJobs.size() 21
thread: 2, NSTable size: 19
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 6
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 5
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 6
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 7, maxN[i].idx: 0, blockDimSize[i]: 7
thread: 2, i: 1, maxN[i].weit: 6, maxN[i].idx: 1, blockDimSize[i]: 6
thread: 2, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 2, i: 3, maxN[i].weit: 7, maxN[i].idx: 3, blockDimSize[i]: 7
thread: 2, i: 4, maxN[i].weit: 4, maxN[i].idx: 4, blockDimSize[i]: 4
thread: 2, i: 0, divisor[i]: 7, blockDimSize[i]: 1
thread: 2, i: 1, divisor[i]: 2, blockDimSize[i]: 3
thread: 2, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 3, divisor[i]: 7, blockDimSize[i]: 1
thread: 2, i: 4, divisor[i]: 1, blockDimSize[i]: 4
thread: 2, largestBlockVec.elm: 0 0 0 0 6 1 0 6 0 0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 0 1 3 2 1 4 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 7 2 1 7 1 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 6 1 0 6 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 6 1 0 6 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 1 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 3 0 0 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 1 0 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 0 0 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 1 0 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 3 1 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 3 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 0 3 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 3 0 0 2 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 5 0 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 4 1 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 4 0 0 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 3 1 0 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 1 0 2 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 0 4 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 0 0 3 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 4 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 1 0 3 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 5 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 5 1 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 1 0 4 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 3 1 0 2 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 4 0 0 2 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 6 0 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 3 0 0 3 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 5 0 0 1 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 4 1 0 1 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 1 0 3 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 0 0 4 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 0 5 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 5 0 0 2 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 0 0 6 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 4 0 0 3 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 4 1 0 2 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 1 0 5 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 6 1 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 5 1 0 1 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 3 1 0 3 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 3 0 0 4 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 0 6 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 6 0 0 1 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 2 1 0 4 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 2 0 0 5 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 5 0 0 3 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 6 1 0 1 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 5 1 0 2 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 4 0 0 4 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 6 0 0 2 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 2 0 0 6 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 1 1 0 6 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 4 1 0 3 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 2 1 0 5 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 3 0 0 5 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 3 1 0 4 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 3 0 0 6 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 6 0 0 3 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 2 1 0 6 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 6 1 0 2 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 4 1 0 4 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 5 1 0 3 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 3 1 0 5 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 5 0 0 4 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 4 0 0 5 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 5 1 0 4 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 6 1 0 3 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 5 0 0 5 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 3 1 0 6 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 4 0 0 6 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 6 0 0 4 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 4 1 0 5 0 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 5 1 0 5 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 6 1 0 4 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 6 0 0 5 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 5 0 0 6 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 4 1 0 6 0 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 6 0 0 6 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 5 1 0 6 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 6 1 0 5 0 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 6 1 0 6 0 0 0 0 0 0 0 0 , mySum: 13
thread: 1, NSTable size: 26
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 9
thread: 1, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 1, i: 1, maxN[i].weit: 4, maxN[i].idx: 1, blockDimSize[i]: 4
thread: 1, i: 2, maxN[i].weit: 5, maxN[i].idx: 2, blockDimSize[i]: 5
thread: 1, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 1, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 1, i: 5, maxN[i].weit: 10, maxN[i].idx: 5, blockDimSize[i]: 10
thread: 1, i: 0, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 4
thread: 1, i: 2, divisor[i]: 5, blockDimSize[i]: 1
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 5, divisor[i]: 2, blockDimSize[i]: 5
thread: 1, largestBlockVec.elm: 0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 1 
thread: 1, blockDimSizeComp: 0 0 0 0 0 0 0 0 0 2 4 1 2 0 2 5 
thread: 1, divisorComp: 0 0 0 0 0 0 0 0 0 2 1 5 1 0 1 2 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 1 
thread: 1, largestNoZeroBlockVec: 1 0 4 0 0 1 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 1 0 2 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 1 0 2 0 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 1 0 3 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 1 , mySum: 5
0 0 0 0 0 0 0 0 0 1 0 3 0 0 0 1 , mySum: 5
0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 1 , mySum: 6
thread: 0, NSTable size: 24
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 9
thread: 0, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 0, i: 1, maxN[i].weit: 4, maxN[i].idx: 1, blockDimSize[i]: 4
thread: 0, i: 2, maxN[i].weit: 5, maxN[i].idx: 2, blockDimSize[i]: 5
thread: 0, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 0, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 0, i: 5, maxN[i].weit: 10, maxN[i].idx: 5, blockDimSize[i]: 10
thread: 0, i: 0, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 4
thread: 0, i: 2, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 5, divisor[i]: 2, blockDimSize[i]: 5
thread: 0, largestBlockVec.elm: 0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 1 
thread: 0, blockDimSizeComp: 0 0 0 0 0 0 0 0 0 2 4 1 2 0 2 5 
thread: 0, divisorComp: 0 0 0 0 0 0 0 0 0 2 1 5 1 0 1 2 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 1 
thread: 0, largestNoZeroBlockVec: 1 0 4 0 0 1 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 1 0 2 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 1 0 2 0 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 1 0 3 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 1 , mySum: 5
0 0 0 0 0 0 0 0 0 1 0 3 0 0 0 1 , mySum: 5
0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 1 , mySum: 6
thread: 2, maxBlockLvlSize: 13
thread: 2, maxInBlockLvlSize: 6
thread: 2, AllTableSize: 2352, maxSubsetsSize: 64
thread: 1, maxBlockLvlSize: 4
thread: 1, maxInBlockLvlSize: 30
thread: 1, AllTableSize: 3200, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 4
thread: 0, maxInBlockLvlSize: 30
thread: 0, AllTableSize: 3200, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 1 0 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 1 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 2 0 0 0 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 1 0 1 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[6]: 1 0 0 0 0 1 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 mySum: 2
thread: 0, blockNoZero[7]: 0 0 1 0 0 1 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 mySum: 3
thread: 0, blockNoZero[8]: 0 0 3 0 0 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 1 mySum: 3
thread: 0, blockNoZero[9]: 0 0 2 0 0 1 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 mySum: 3
thread: 0, blockNoZero[10]: 1 0 1 0 0 1 
thread: 0, allBlocks[11]: 0 0 0 0 0 0 0 0 0 1 0 2 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 1 0 2 0 0 0 
thread: 0, allBlocks[12]: 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 1 mySum: 4
thread: 0, blockNoZero[12]: 0 0 3 0 0 1 
thread: 0, allBlocks[13]: 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 mySum: 4
thread: 0, blockNoZero[13]: 0 0 4 0 0 0 
thread: 0, allBlocks[14]: 0 0 0 0 0 0 0 0 0 1 0 2 0 0 0 1 mySum: 4
thread: 0, blockNoZero[14]: 1 0 2 0 0 1 
thread: 0, allBlocks[15]: 0 0 0 0 0 0 0 0 0 1 0 3 0 0 0 0 mySum: 4
thread: 0, blockNoZero[15]: 1 0 3 0 0 0 
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 9
thread: 0, allBlocks[16]: 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 1 mySum: 5
thread: 0, blockNoZero[16]: 0 0 4 0 0 1 
thread: 0, allBlocks[17]: 0 0 0 0 0 0 0 0 0 1 0 3 0 0 0 1 mySum: 5
thread: 0, blockNoZero[17]: 1 0 3 0 0 1 
thread: 0, allBlocks[18]: 0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 0 mySum: 5
thread: 0, blockNoZero[18]: 1 0 4 0 0 0 
copy the latest feasible solution to instance takes time: 0.147097
thread: 2, sOPT: 9
thread: 0, allBlocks[19]: 0 0 0 0 0 0 0 0 0 1 0 4 0 0 0 1 mySum: 6
thread: 0, blockNoZero[19]: 1 0 4 0 0 1 
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 5e-06
thread: 0, sOPT: 11
copy the latest feasible solution to instance takes time: 0.137953
thread: 1, sOPT: 10
BKID: 0, LB: 31, UB: 31, OPT: 10
Dynamic Programming Runtime: 1.49158
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 1
********************************************************
Total execution on UB and LB is: 1
OUT of Bk while loop  
UB    31
LB    31
T1    31
T2    31
OPT   10
nMachines   10
BkID	0
AllProbData.size()    2
ck :   1
AllProbData[ck].Ttable    31
ck :   0
AllProbData[ck].Ttable    32
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan31
Main Scheduling is Done
File 1-19 is Done.
******************************
Reading File...
File 1-20 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 50, LB: 31start at time: 1505254743
thread: 0, MlBk is called with LB: 31, UB: 36
thread: 3, MlBk is called with LB: 46, UB: 51
 thread: 0, LongJobs.size() 21
thread: 1, MlBk is called with LB: 36, UB: 41
 thread: 3, LongJobs.size() 14
thread: 2, MlBk is called with LB: 41, UB: 46
 thread: 1, LongJobs.size() 21
 thread: 2, LongJobs.size() 20
thread: 3, NSTable size: 16
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 8
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 4
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 3, i: 1, maxN[i].weit: 9, maxN[i].idx: 1, blockDimSize[i]: 9
thread: 3, i: 2, maxN[i].weit: 5, maxN[i].idx: 2, blockDimSize[i]: 5
thread: 3, i: 0, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, i: 1, divisor[i]: 3, blockDimSize[i]: 3
thread: 3, i: 2, divisor[i]: 5, blockDimSize[i]: 1
thread: 3, largestBlockVec.elm: 0 0 0 2 2 4 0 0 0 0 0 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 1 3 1 0 0 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 3 3 5 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 2 2 4 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 2 2 4 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 2 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 1 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 2 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 2 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 1 1 2 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 1 0 3 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 3 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 1 1 3 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 1 0 4 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 1 2 2 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 2 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 3 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 2 0 3 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 4 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 2 1 2 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 1 1 4 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 2 2 2 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 2 1 3 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 2 0 4 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 4 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 1 2 3 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 2 1 4 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 1 2 4 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 2 2 3 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 2 2 4 0 0 0 0 0 0 0 0 0 0 , mySum: 8
thread: 3, maxBlockLvlSize: 9
thread: 3, maxInBlockLvlSize: 1
thread: 3, AllTableSize: 135, maxSubsetsSize: 64
thread: 2, NSTable size: 39
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 5
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 5
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 2, i: 1, maxN[i].weit: 6, maxN[i].idx: 1, blockDimSize[i]: 6
thread: 2, i: 2, maxN[i].weit: 5, maxN[i].idx: 2, blockDimSize[i]: 5
thread: 2, i: 3, maxN[i].weit: 6, maxN[i].idx: 3, blockDimSize[i]: 6
thread: 2, i: 4, maxN[i].weit: 5, maxN[i].idx: 4, blockDimSize[i]: 5
thread: 2, i: 0, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 1, divisor[i]: 2, blockDimSize[i]: 3
thread: 2, i: 2, divisor[i]: 5, blockDimSize[i]: 1
thread: 2, i: 3, divisor[i]: 2, blockDimSize[i]: 3
thread: 2, i: 4, divisor[i]: 1, blockDimSize[i]: 5
thread: 2, largestBlockVec.elm: 0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 0 3 3 1 3 5 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 1 2 5 2 1 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 1 4 1 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 3 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 2 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 4 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 3 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 0 , mySum: 6
thread: 1, NSTable size: 31
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 5
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 5
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 1, i: 1, maxN[i].weit: 6, maxN[i].idx: 1, blockDimSize[i]: 6
thread: 1, i: 2, maxN[i].weit: 5, maxN[i].idx: 2, blockDimSize[i]: 5
thread: 1, i: 3, maxN[i].weit: 6, maxN[i].idx: 3, blockDimSize[i]: 6
thread: 1, i: 4, maxN[i].weit: 5, maxN[i].idx: 4, blockDimSize[i]: 5
thread: 1, i: 0, divisor[i]: 1, blockDimSize[i]: 4
thread: 1, i: 1, divisor[i]: 2, blockDimSize[i]: 3
thread: 1, i: 2, divisor[i]: 5, blockDimSize[i]: 1
thread: 1, i: 3, divisor[i]: 2, blockDimSize[i]: 3
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 5
thread: 1, largestBlockVec.elm: 0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 0 4 3 1 3 5 0 0 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 1 2 5 2 1 0 0 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 1 4 1 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 3 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 2 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 4 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 3 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 0 , mySum: 6
thread: 0, NSTable size: 20
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 5
thread: 0, i: thread: 6, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 5
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
2thread: 0, i: , maxBlockLvlSize: 114, alltableelemets[maxindex].elm[i]: 
0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, maxInBlockLvlSize: 25
thread: 2, AllTableSize: 2700, maxSubsetsSize: 64
thread: 0, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 0, i: 1, maxN[i].weit: 6, maxN[i].idx: 1, blockDimSize[i]: 6
thread: 0, i: 2, maxN[i].weit: 5, maxN[i].idx: 2, blockDimSize[i]: 5
thread: 0, i: 3, maxN[i].weit: 6, maxN[i].idx: 3, blockDimSize[i]: 6
thread: 0, i: 4, maxN[i].weit: 5, maxN[i].idx: 4, blockDimSize[i]: 5
thread: 0, i: 0, divisor[i]: 1, blockDimSize[i]: 4
thread: 0, i: 1, divisor[i]: 2, blockDimSize[i]: 3
thread: 0, i: 2, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, i: 3, divisor[i]: 2, blockDimSize[i]: 3
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 5
thread: 0, largestBlockVec.elm: 0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 0 4 3 1 3 5 0 0 0 0 0 0 0 
thread: 0, divisorComp: 0 0 0 0 1 2 5 2 1 0 0 0 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 1 4 1 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 3 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 2 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 4 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 3 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 0 , mySum: 6
thread: 1, maxBlockLvlSize: 4
thread: 1, maxInBlockLvlSize: 31
thread: 1, AllTableSize: 3600, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 4
thread: 0, maxInBlockLvlSize: 31
thread: 0, AllTableSize: 3600, maxSubsetsSize: 64
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 5
copy the latest feasible solution to instance takes time: 0.004677
thread: 3, sOPT: 5
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 1 0 
thread: 0, allBlocks[2]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 1 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 1 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 2 0 0 
thread: 0, allBlocks[5]: 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 1 1 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 1 0 1 0 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 0 0 1 1 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[8]: 0 0 3 0 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[9]: 0 0 2 1 0 
thread: 0, allBlocks[10]: 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 0 1 1 1 0 
thread: 0, allBlocks[11]: 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 0 1 2 0 0 
thread: 0, allBlocks[12]: 0 0 0 0 0 0 3 1 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[12]: 0 0 3 1 0 
thread: 0, allBlocks[13]: 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[13]: 0 0 4 0 0 
thread: 0, allBlocks[14]: 0 0 0 0 0 1 2 1 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[14]: 0 1 2 1 0 
thread: 0, allBlocks[15]: 0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[15]: 0 1 3 0 0 
thread: 0, allBlocks[16]: 0 0 0 0 0 0 4 1 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[16]: 0 0 4 1 0 
thread: 0, allBlocks[17]: 0 0 0 0 0 1 3 1 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[17]: 0 1 3 1 0 
thread: 0, allBlocks[18]: 0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[18]: 0 1 4 0 0 
thread: 0, allBlocks[19]: 0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[19]: 0 1 4 1 0 
Thread: 0, gpu_BlockDP is done.
Thread: 2, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 7
copy the latest feasible solution to instance takes time: 0.200483
thread: 2, sOPT: 7
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.284421
thread: 0, sOPT: 10
copy the latest feasible solution to instance takes time: 0.103341
thread: 1, sOPT: 9
Thread: 1, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: Thread: 30, MlBk function is done, and BkID for all processes are collected., MlBk function is done, and BkID for all processes are collected.2
, MlBk function is done, and BkID for all processes are collected.

sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 31, UB: 34
BKID: 0, LB: 31, UB: 34, OPT: 10
Dynamic Programming Runtime: 1.72135
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 1
Iteration: 2, UB: 34, LB: 31start at time: 1505254744
thread: 0, MlBk is called with LB: 31, UB: 32
 thread: 0, LongJobs.size() 21
thread: thread: 1, MlBk is called with LB: 322, UB: 33, MlBk is called with LB: 33, UB: 
34
 thread: 1, LongJobs.size() 21
 thread: 2, LongJobs.size() 21
thread: 1, NSTable size: 20
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 5
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 5
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 1, i: 1, maxN[i].weit: 6, maxN[i].idx: 1, blockDimSize[i]: 6
thread: 1, i: 2, maxN[i].weit: 5, maxN[i].idx: 2, blockDimSize[i]: 5
thread: 1, i: 3, maxN[i].weit: 6, maxN[i].idx: 3, blockDimSize[i]: 6
thread: 1, i: 4, maxN[i].weit: 5, maxN[i].idx: 4, blockDimSize[i]: 5
thread: 1, i: 0, divisor[i]: 1, blockDimSize[i]: 4
thread: 1, i: 1, divisor[i]: 2, blockDimSize[i]: 3
thread: 1, i: 2, divisor[i]: 5, blockDimSize[i]: 1
thread: 1, i: 3, divisor[i]: 2, blockDimSize[i]: 3
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 5
thread: 1, largestBlockVec.elm: 0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 0 4 3 1 3 5 0 0 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 1 2 5 2 1 0 0 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 1 4 1 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 3 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 2 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 4 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 3 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 0 , mySum: 6
thread: 2, NSTable size: 20
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 5
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 5
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 2, i: 1, maxN[i].weit: 6, maxN[i].idx: 1, blockDimSize[i]: 6
thread: 2, i: 2, maxN[i].weit: 5, maxN[i].idx: 2, blockDimSize[i]: 5
thread: 2, i: 3, maxN[i].weit: 6, maxN[i].idx: 3, blockDimSize[i]: 6
thread: 2, i: 4, maxN[i].weit: 5, maxN[i].idx: 4, blockDimSize[i]: 5
thread: 2, i: 0, divisor[i]: 1, blockDimSize[i]: 4
thread: 2, i: 1, divisor[i]: 2, blockDimSize[i]: 3
thread: 2, i: 2, divisor[i]: 5, blockDimSize[i]: 1
thread: 2, i: 3, divisor[i]: 2, blockDimSize[i]: 3
thread: 2, i: 4, divisor[i]: 1, blockDimSize[i]: 5
thread: 2, largestBlockVec.elm: 0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 0 4 3 1 3 5 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 1 2 5 2 1 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 1 4 1 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 3 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 2 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 4 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 3 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 0 , mySum: 6
thread: 1, maxBlockLvlSize: 4
thread: 1, maxInBlockLvlSize: 31
thread: 1, AllTableSize: 3600, maxSubsetsSize: 64
thread: 0, NSTable size: 31
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 9
thread: 0, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 0, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 0, i: 2, maxN[i].weit: 5, maxN[i].idx: 2, blockDimSize[i]: 5
thread: 0, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 0, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 0, i: 5, maxN[i].weit: 4, maxN[i].idx: 5, blockDimSize[i]: 4
thread: 0, i: 6, maxN[i].weit: 10, maxN[i].idx: 6, blockDimSize[i]: 10
thread: 0, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 2, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 5, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 6, divisor[i]: 2, blockDimSize[i]: 5
thread: 0, largestBlockVec.elm: 0 0 0 0 0 0 0 0 0 0 0 4 0 0 1 1 
thread: 0, blockDimSizeComp: 0 0 0 0 0 0 0 0 0 2 3 1 2 2 2 5 
thread: 0, divisorComp: 0 0 0 0 0 0 0 0 0 1 1 5 1 1 2 2 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 4 0 0 1 1 
thread: 0, largestNoZeroBlockVec: 0 0 4 0 0 1 1 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 2 0 0 1 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 2 0 0 1 1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 3 0 0 1 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 3 0 0 1 1 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 1 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 4 0 0 1 0 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 4 0 0 1 1 , mySum: 6
thread: 2, maxBlockLvlSize: 4
thread: 2, maxInBlockLvlSize: 31
thread: 2, AllTableSize: 3600, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 4
thread: 0, maxInBlockLvlSize: 46
thread: 0, AllTableSize: 4800, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 0 0 0 1 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 1 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 mySum: 2
thread: 0, blockNoZero[4]: 0 0 0 0 0 1 1 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 mySum: 2
thread: 0, blockNoZero[5]: 0 0 1 0 0 0 1 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 mySum: 2
thread: 0, blockNoZero[6]: 0 0 1 0 0 1 0 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 0 0 2 0 0 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 0 0 0 0 2 0 0 1 0 mySum: 3
thread: 0, blockNoZero[8]: 0 0 2 0 0 1 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 mySum: 3
thread: 0, blockNoZero[9]: 0 0 3 0 0 0 0 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 1 mySum: 3
thread: 0, blockNoZero[10]: 0 0 2 0 0 0 1 
thread: 0, allBlocks[11]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 mySum: 3
thread: 0, blockNoZero[11]: 0 0 1 0 0 1 1 
thread: 0, allBlocks[12]: 0 0 0 0 0 0 0 0 0 0 0 2 0 0 1 1 mySum: 4
thread: 0, blockNoZero[12]: 0 0 2 0 0 1 1 
thread: 0, allBlocks[13]: 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 1 mySum: 4
thread: 0, blockNoZero[13]: 0 0 3 0 0 0 1 
thread: 0, allBlocks[14]: 0 0 0 0 0 0 0 0 0 0 0 3 0 0 1 0 mySum: 4
thread: 0, blockNoZero[14]: 0 0 3 0 0 1 0 
thread: 0, allBlocks[15]: 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 mySum: 4
thread: 0, blockNoZero[15]: 0 0 4 0 0 0 0 
thread: 0, allBlocks[16]: 0 0 0 0 0 0 0 0 0 0 0 3 0 0 1 1 mySum: 5
thread: 0, blockNoZero[16]: 0 0 3 0 0 1 1 
thread: 0, allBlocks[17]: 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 1 mySum: 5
thread: 0, blockNoZero[17]: 0 0 4 0 0 0 1 
thread: 0, allBlocks[18]: 0 0 0 0 0 0 0 0 0 0 0 4 0 0 1 0 mySum: 5
thread: 0, blockNoZero[18]: 0 0 4 0 0 1 0 
thread: 0, allBlocks[19]: 0 0 0 0 0 0 0 0 0 0 0 4 0 0 1 1 mySum: 6
thread: 0, blockNoZero[19]: 0 0 4 0 0 1 1 
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.230797
thread: 2, sOPT: 10
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.167462
thread: 1, sOPT: 10
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 2e-06
thread: 0, sOPT: 11
BKID: 0, LB: 32, UB: 32, OPT: 10
Dynamic Programming Runtime: 2.22559
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 2
********************************************************
Total execution on UB and LB is: 2
OUT of Bk while loop  
UB    32
LB    32
T1    32
T2    32
OPT   10
nMachines   10
BkID	0
AllProbData.size()    2
ck :   1
AllProbData[ck].Ttable    32
ck :   0
AllProbData[ck].Ttable    33
No Problem until here 11-6
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan34
Main Scheduling is Done
File 1-20 is Done.
******************************
Reading File...
File 2-1 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 42, LB: 24start at time: 1505254745
thread: 0, MlBk is called with LB: 24, UB: 28
thread: 3, MlBk is called with LB: 36, UB: 42
 thread: 0, LongJobs.size() 17
thread: 2, MlBk is called with LB: 32, UB: 36
thread:  thread: 3, LongJobs.size() 12
1, MlBk is called with LB: 28, UB: 32
 thread: 2, LongJobs.size() 12
 thread: 1, LongJobs.size() 13
thread: 3, NSTable size: 24
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: thread: 31, i: , NSTable size: 916, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, NSTable size: thread: 193, i: 14
, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 30
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 
1thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
, i: 7, alltableelemets[maxindex].elm[i]: 1
, i: thread: 10, i: , maxN[i].weit: 28, maxN[i].idx: , alltableelemets[maxindex].elm[i]: thread: 0
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 2
0, blockDimSize[i]: 2thread: 1, i: 
12thread: 3, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 3, i: 2, maxN[i].weit: 4, maxN[i].idx: 2, blockDimSize[i]: 4
thread: 3, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 3, i: 4, maxN[i].weit: 4, maxN[i].idx: 4, blockDimSize[i]: 4
2thread: 3, i: 0, divisor[i]: 1, blockDimSize[i]: 2, i: 
thread: 3, i: 1, divisor[i]: 1, blockDimSize[i]: 3
thread: 3, i: 2, divisor[i]: 2, blockDimSize[i]: 2
thread: 3, i: 3, divisor[i]: 2, blockDimSize[i]: 2
thread: 3, i: 4, divisor[i]: 2, blockDimSize[i]: 2
thread: 3, largestBlockVec.elm: 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 0 2 3 2 2 2 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 0 1 1 2 2 2 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 0 1 1 1 
3thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1, alltableelemets[maxindex].elm[i]:  0 0 0 0 0 00 0
 , mySum: thread: , alltableelemets[maxindex].elm[i]: 102

thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 6
thread: 1, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 1, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 1, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 1, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 1, i: 4, maxN[i].weit: 7, maxN[i].idx: 4, blockDimSize[i]: 7
thread: 1, i: 0, divisor[i]: 1, blockDimSize[i]: , i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 20
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2
, i: thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 3, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, i: 4, divisor[i]: 7, blockDimSize[i]: 1
0thread: 1, largestBlockVec.elm: 0 , maxN[i].weit: 02 , maxN[i].idx: 00, blockDimSize[i]: 2
 thread: 2, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
0 0 0 0 0 0 1 0 0 00 0 0 0thread: 2 0 , i: 02 , maxN[i].weit:  400 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0  0 0 0 0 , mySum: 01 
, maxN[i].idx: 0 0 0 0 0 0 0 1 1 0 0 0 20 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 1 0 0 0 0  0 0 0 , mySum: 2
0 0 0 0 0 0 1 1 0 0 0 0 0 00 0 0 , mySum: 2
0 0 0 0 0 0 1 1 1 0 0 0 0  00  01 02  , blockDimSize[i]: , mySum: 46
 3

thread: 2, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 2, i: 4thread: 1, blockDimSizeComp: 0 0 0 0 0 0 0 , maxN[i].weit: 2 0 0 42 , maxN[i].idx: 1 4, blockDimSize[i]: 04
 0thread: 2, i: 0 , divisor[i]: 2 1, blockDimSize[i]: 12
thread: 2, i: 1, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 2, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, i: 3, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, i: 4, divisor[i]: 2, blockDimSize[i]: 2
 thread: 2
, largestBlockVec.elm: thread: 1, divisorComp: 0 0 0 0 0 0 0 1 00 0 0  00  1 3 0 0 2 07  
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 1 01  2 0 0 11  0 60  0
thread: 1, largestNoZeroBlockVec: 0 0 2 1 6 
 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 0 2 3 2 2 2 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 1 1 2 2 2 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 1 1 1 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0thread:  01 , allBlocks: 00  00  1 00  1 00  00  0 0 00  00  00 0  , mySum: 20
 00 0 0 0 0 0 1 1 0 0 0 0 0 0 0  00  0, mySum: 2 
0 0 0 0 0 0 1 1 1 0 0 0 0 0 00  00 0  , mySum: , mySum: 03

0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 2 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 2 0 0 1 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 2 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 3 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 2 0 0 1 1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 2 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 2 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 3 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 4 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 2 0 0 1 2 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 4 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 3 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 3 , mySum: 5
0thread:  0 03 , maxBlockLvlSize: 03 
thread: 3, maxInBlockLvlSize: 14
thread: 3, AllTableSize: 384, maxSubsetsSize: 64
0 0 0 0 0 0 0 2 0 0 1 3 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 4 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 4 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 5 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 5 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 5 , mySum: 7
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 5 , mySum: 7
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 6 , mySum: 7
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 6 , mySum: 7
0 0 0 0 0 0 0 0 0 0 0 2 0 0 1 4 , mySum: 7
0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 6 , mySum: 8
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 6 , mySum: 8
0 0 0 0 0 0 0 0 0 0 0 2 0 0 1 5 , mySum: 8
0 0 0 0 0 0 0 0 0 0 0 2 0 0 1 6 , mySum: 9
thread: 0, NSTable size: 24
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 6
thread: 0, i: 0, maxN[i].weit: 5, maxN[i].idx: 0, blockDimSize[i]: 5
thread: 0, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 0, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 0, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 0, i: 4, maxN[i].weit: 4, maxN[i].idx: 4, blockDimSize[i]: 4
thread: 0, i: 5, maxN[i].weit: 7, maxN[i].idx: 5, blockDimSize[i]: 7
thread: 0, i: 0, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 4, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 5, divisor[i]: 7, blockDimSize[i]: 1
thread: 0, largestBlockVec.elm: 0 0 0 0 0 0 4 0 0 0 0 0 0 0 1 6 
thread: 0, blockDimSizeComp: 0 0 0 0 0 0 1 2 0 0 2 3 0 0 2 1 
thread: 0, divisorComp: 0 0 0 0 0 0 5 1 0 0 1 1 0 0 2 7 
thread: 0, largestBlockVec: 0 0 0 0 0 0 4 0 0 0 0 0 0 0 1 6 
thread: 0, largestNoZeroBlockVec: 4 0 0 0 1 6 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 , mySum: 2
0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 1 0 , mySum: 3
0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 , mySum: 3
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 2 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 2 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 , mySum: 4
0 0 0 0 0 0 2 0 0 0 0 0 0 0 1 1 , mySum: 4
0 0 0 0 0 0 3 0 0 0 0 0 0 0 1 0 , mySum: 4
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 2 , mySum: 4
0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 2 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 3 , mySum: 4
0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 1 , mySum: 4
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 3 , mySum: 4
0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 3 , mySum: 5
0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 1 , mySum: 5
0 0 0 0 0 0 4 0 0 0 0 0 0 0 1 0 , mySum: 5
0 0 0 0 0 0 2 0 0 0 0 0 0 0 1 2 , mySum: 5
0 0 0 0 0 0 3 0 0 0 0 0 0 0 1 1 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5 , mySum: 5
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 thread: 4 , mySum: 1, maxBlockLvlSize: 56

0 0 0 0 0 0 2 0 0 0 0 0 0 0 0thread: 1, maxInBlockLvlSize: 3
thread: 1, AllTableSize: 336, maxSubsetsSize: 64
 3 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 4 , mySum: 5
0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 2 , mySum: 5
0 0 0 0 0 0 3 0 0 0 0 0 0 0 1 2 , mySum: 6
0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 3 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 5 , mySum: 6
0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 2 , mySum: 6
0 0 0 0 0 0 4 0 0 0 0 0 0 0 1 1 , mySum: 6
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 5 , mySum: 6
0 0 0 0 0 0 2 0 0 0 0 0 0 0 1 3 , mySum: 6
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 4 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6 , mySum: 6
0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 4 , mySum: 6
0 0 0 0 0 0 2 0 0 0 0 0 0 0 1 4 , mySum: 7
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 6 , mySum: 7
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 5 , mySum: 7
0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 4 , mySum: 7
0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 3 , mySum: 7
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 6 , mySum: 7
0 0 0 0 0 0 3 0 0 0 0 0 0 0 1 3 , mySum: 7
0 0 0 0 0 0 4 0 0 0 0 0 0 0 1 2 , mySum: 7
0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 5 , mySum: 7
0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 6 , mySum: 8
0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 4 , mySum: 8
0 0 0 0 0 0 2 0 0 0 0 0 0 0 1 5 , mySum: 8
0 0 0 0 0 0 3 0 0 0 0 0 0 0 1 4 , mySum: 8
0 0 0 0 0 0 4 0 0 0 0 0 0 0 1 3 , mySum: 8
0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 5 , mySum: 8
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 6 , mySum: 8
0 0 0 0 0 0 3 0 0 0 0 0 0 0 1 5 , mySum: 9
0 0 0 0 0 0 4 0 0 0 0 0 0 0 1 4 , mySum: 9
0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 5 , mySum: 9
0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 6 , mySum: 9
0 0 0 0 0 0 2 0 0 0 0 0 0 0 1 6 , mySum: 9
0 0 0 0 0 0 4 0 0 0 0 0 0 0 1 5 , mySum: 10
0 0 0 0 0 0 3 0 0 0 0 0 0 0 1 6 , mySum: 10
0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 6 , mySum: 10
0 0 0 0 0 0 4 0 0 0 0 0 0 0 1 6 , mySum: 11
thread: 2, maxBlockLvlSize: 3
thread: 2, maxInBlockLvlSize: 14
thread: 2, AllTableSize: 384, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 10
thread: 0, maxInBlockLvlSize: 7
thread: 0, AllTableSize: 1680, maxSubsetsSize: 64
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 8
copy the latest feasible solution to instance takes time: 0.014
thread: 1, sOPT: 8
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 0 0 1 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 1 0 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 mySum: 2
thread: 0, blockNoZero[4]: 0 0 0 0 0 2 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 2 0 0 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 mySum: 2
thread: 0, blockNoZero[6]: 0 0 0 0 1 1 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 mySum: 2
thread: 0, blockNoZero[7]: 1 0 0 0 1 0 
Thread: 2, gpu_BlockDP is done.
thread: 0, allBlocks[8]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[8]: 1 0 0 0 0 1 
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 6
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 5
thread: 0, allBlocks[9]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 1 0 mySum: 3
thread: 0, blockNoZero[9]: 2 0 0 0 1 0 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 3 0 0 0 0 0 
thread: 0, allBlocks[11]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 1 mySum: 3
thread: 0, blockNoZero[11]: 2 0 0 0 0 1 
thread: 0, allBlocks[12]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 mySum: 3
thread: 0, blockNoZero[12]: 1 0 0 0 1 1 
thread: 0, allBlocks[13]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 2 mySum: 3
thread: 0, blockNoZero[13]: 1 0 0 0 0 2 
thread: 0, allBlocks[14]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 mySum: 3
thread: 0, blockNoZero[14]: 0 0 0 0 0 3 
thread: 0, allBlocks[15]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 2 mySum: 3
thread: 0, blockNoZero[15]: 0 0 0 0 1 2 
copy the latest feasible solution to instance takes time: 0.016349
thread: 2, sOPT: 6
thread: 0, allBlocks[16]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 mySum: 4
thread: 0, blockNoZero[16]: 0 0 0 0 0 4 
thread: 0, allBlocks[17]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 1 1 mySum: 4
thread: 0, blockNoZero[17]: 2 0 0 0 1 1 
thread: 0, allBlocks[18]: 0 0 0 0 0 0 3 0 0 0 0 0 0 0 1 0 mySum: 4
thread: 0, blockNoZero[18]: 3 0 0 0 1 0 
thread: 0, allBlocks[19]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 2 mySum: 4
thread: 0, blockNoZero[19]: 2 0 0 0 0 2 
thread: 0, allBlocks[20]: 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[20]: 4 0 0 0 0 0 
thread: 0, allBlocks[21]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 2 mySum: 4
thread: 0, blockNoZero[21]: 1 0 0 0 1 2 
thread: 0, allBlocks[22]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 3 mySum: 4
thread: 0, blockNoZero[22]: 0 0 0 0 1 3 
thread: 0, allBlocks[23]: 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 1 mySum: 4
thread: 0, blockNoZero[23]: 3 0 0 0 0 1 
thread: 0, allBlocks[24]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 3 mySum: 4
thread: 0, blockNoZero[24]: 1 0 0 0 0 3 
copy the latest feasible solution to instance takes time: 0.020604
thread: 3, sOPT: 5
thread: 0, allBlocks[25]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 3 mySum: 5
thread: 0, blockNoZero[25]: 1 0 0 0 1 3 
thread: 0, allBlocks[26]: 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 1 mySum: 5
thread: 0, blockNoZero[26]: 4 0 0 0 0 1 
thread: 0, allBlocks[27]: 0 0 0 0 0 0 4 0 0 0 0 0 0 0 1 0 mySum: 5
thread: 0, blockNoZero[27]: 4 0 0 0 1 0 
thread: 0, allBlocks[28]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 1 2 mySum: 5
thread: 0, blockNoZero[28]: 2 0 0 0 1 2 
thread: 0, allBlocks[29]: 0 0 0 0 0 0 3 0 0 0 0 0 0 0 1 1 mySum: 5
thread: 0, blockNoZero[29]: 3 0 0 0 1 1 
thread: 0, allBlocks[30]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5 mySum: 5
thread: 0, blockNoZero[30]: 0 0 0 0 0 5 
thread: 0, allBlocks[31]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 4 mySum: 5
thread: 0, blockNoZero[31]: 1 0 0 0 0 4 
thread: 0, allBlocks[32]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 3 mySum: 5
thread: 0, blockNoZero[32]: 2 0 0 0 0 3 
thread: 0, allBlocks[33]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 4 mySum: 5
thread: 0, blockNoZero[33]: 0 0 0 0 1 4 
thread: 0, allBlocks[34]: 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 2 mySum: 5
thread: 0, blockNoZero[34]: 3 0 0 0 0 2 
thread: 0, allBlocks[35]: 0 0 0 0 0 0 3 0 0 0 0 0 0 0 1 2 mySum: 6
thread: 0, blockNoZero[35]: 3 0 0 0 1 2 
thread: 0, allBlocks[36]: 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 3 mySum: 6
thread: 0, blockNoZero[36]: 3 0 0 0 0 3 
thread: 0, allBlocks[37]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 5 mySum: 6
thread: 0, blockNoZero[37]: 0 0 0 0 1 5 
thread: 0, allBlocks[38]: 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 2 mySum: 6
thread: 0, blockNoZero[38]: 4 0 0 0 0 2 
thread: 0, allBlocks[39]: 0 0 0 0 0 0 4 0 0 0 0 0 0 0 1 1 mySum: 6
thread: 0, blockNoZero[39]: 4 0 0 0 1 1 
thread: 0, allBlocks[40]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 5 mySum: 6
thread: 0, blockNoZero[40]: 1 0 0 0 0 5 
thread: 0, allBlocks[41]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 1 3 mySum: 6
thread: 0, blockNoZero[41]: 2 0 0 0 1 3 
thread: 0, allBlocks[42]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 4 mySum: 6
thread: 0, blockNoZero[42]: 2 0 0 0 0 4 
thread: 0, allBlocks[43]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6 mySum: 6
thread: 0, blockNoZero[43]: 0 0 0 0 0 6 
thread: 0, allBlocks[44]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 4 mySum: 6
thread: 0, blockNoZero[44]: 1 0 0 0 1 4 
thread: 0, allBlocks[45]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 1 4 mySum: 7
thread: 0, blockNoZero[45]: 2 0 0 0 1 4 
thread: 0, allBlocks[46]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 6 mySum: 7
thread: 0, blockNoZero[46]: 0 0 0 0 1 6 
thread: 0, allBlocks[47]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 5 mySum: 7
thread: 0, blockNoZero[47]: 2 0 0 0 0 5 
thread: 0, allBlocks[48]: 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 4 mySum: 7
thread: 0, blockNoZero[48]: 3 0 0 0 0 4 
thread: 0, allBlocks[49]: 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 3 mySum: 7
thread: 0, blockNoZero[49]: 4 0 0 0 0 3 
thread: 0, allBlocks[50]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 6 mySum: 7
thread: 0, blockNoZero[50]: 1 0 0 0 0 6 
thread: 0, allBlocks[51]: 0 0 0 0 0 0 3 0 0 0 0 0 0 0 1 3 mySum: 7
thread: 0, blockNoZero[51]: 3 0 0 0 1 3 
thread: 0, allBlocks[52]: 0 0 0 0 0 0 4 0 0 0 0 0 0 0 1 2 mySum: 7
thread: 0, blockNoZero[52]: 4 0 0 0 1 2 
thread: 0, allBlocks[53]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 5 mySum: 7
thread: 0, blockNoZero[53]: 1 0 0 0 1 5 
thread: 0, allBlocks[54]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 6 mySum: 8
thread: 0, blockNoZero[54]: 1 0 0 0 1 6 
thread: 0, allBlocks[55]: 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 4 mySum: 8
thread: 0, blockNoZero[55]: 4 0 0 0 0 4 
thread: 0, allBlocks[56]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 1 5 mySum: 8
thread: 0, blockNoZero[56]: 2 0 0 0 1 5 
thread: 0, allBlocks[57]: 0 0 0 0 0 0 3 0 0 0 0 0 0 0 1 4 mySum: 8
thread: 0, blockNoZero[57]: 3 0 0 0 1 4 
thread: 0, allBlocks[58]: 0 0 0 0 0 0 4 0 0 0 0 0 0 0 1 3 mySum: 8
thread: 0, blockNoZero[58]: 4 0 0 0 1 3 
thread: 0, allBlocks[59]: 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 5 mySum: 8
thread: 0, blockNoZero[59]: 3 0 0 0 0 5 
thread: 0, allBlocks[60]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 6 mySum: 8
thread: 0, blockNoZero[60]: 2 0 0 0 0 6 
thread: 0, allBlocks[61]: 0 0 0 0 0 0 3 0 0 0 0 0 0 0 1 5 mySum: 9
thread: 0, blockNoZero[61]: 3 0 0 0 1 5 
thread: 0, allBlocks[62]: 0 0 0 0 0 0 4 0 0 0 0 0 0 0 1 4 mySum: 9
thread: 0, blockNoZero[62]: 4 0 0 0 1 4 
thread: 0, allBlocks[63]: 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 5 mySum: 9
thread: 0, blockNoZero[63]: 4 0 0 0 0 5 
thread: 0, allBlocks[64]: 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 6 mySum: 9
thread: 0, blockNoZero[64]: 3 0 0 0 0 6 
thread: 0, allBlocks[65]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 1 6 mySum: 9
thread: 0, blockNoZero[65]: 2 0 0 0 1 6 
thread: 0, allBlocks[66]: 0 0 0 0 0 0 4 0 0 0 0 0 0 0 1 5 mySum: 10
thread: 0, blockNoZero[66]: 4 0 0 0 1 5 
thread: 0, allBlocks[67]: 0 0 0 0 0 0 3 0 0 0 0 0 0 0 1 6 mySum: 10
thread: 0, blockNoZero[67]: 3 0 0 0 1 6 
thread: 0, allBlocks[68]: 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 6 mySum: 10
thread: 0, blockNoZero[68]: 4 0 0 0 0 6 
thread: 0, allBlocks[69]: 0 0 0 0 0 0 4 0 0 0 0 0 0 0 1 6 mySum: 11
thread: 0, blockNoZero[69]: 4 0 0 0 1 6 
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.028415
thread: 0, sOPT: 10
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: Thread: 12, MlBk function is done, and BkID for all processes are collected.3, MlBk function is done, and BkID for all processes are collected.
, MlBk function is done, and BkID for all processes are collected.

sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 24, UB: 27
BKID: 0, LB: 24, UB: 27, OPT: 10
Dynamic Programming Runtime: 0.394464
Execution time between LB and UB is: 0
By far, all LB UB calculation runtime: 0
Iteration: 2, UB: 27, LB: 24start at time: 1505254745
thread: 0, MlBk is called with LB: 24, UB: 25
 thread: 0, LongJobs.size() 17
thread: thread: 1, MlBk is called with LB: 2, MlBk is called with LB: 2526, UB: , UB: 2726

 thread: 2, LongJobs.size() 17
 thread: 1, LongJobs.size() 17
thread: 0, NSTable size: 20
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 6
thread: 0, i: 0, maxN[i].weit: 5, maxN[i].idx: 0, blockDimSize[i]: 5
thread: 0, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 0, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 0, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 0, i: 4, maxN[i].weit: 4, maxN[i].idx: 4, blockDimSize[i]: 4
thread: 0, i: 5, maxN[i].weit: 7, maxN[i].idx: 5, blockDimSize[i]: 7
thread: 0, i: 0, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 4, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 5, divisor[i]: 7, blockDimSize[i]: 1
thread: 0, largestBlockVec.elm: 0 0 0 0 0 0 4 0 0 0 0 0 0 0 1 6 
thread: 0, blockDimSizeComp: 0 0 0 0 0 0 1 2 0 0 2 3 0 0 2 1 
thread: 0, divisorComp: 0 0 0 0 0 0 5 1 0 0 1 1 0 0 2 7 
thread: 0, largestBlockVec: 0 0 0 0 0 0 4 0 0 0 0 0 0 0 1 6 
thread: 0, largestNoZeroBlockVec: 4 0 0 0 1 6 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 , mySum: 2
0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 1 0 , mySum: 3
0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 , mySum: 3
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 2 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 2 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 , mySum: 4
0 0 0 0 0 0 2 0 0 0 0 0 0 0 1 1 , mySum: 4
0 0 0 0 0 0 3 0 0 0 0 0 0 0 1 0 , mySum: 4
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 2 , mySum: 4
0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 2 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 3 , mySum: 4
0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 1 , mySum: 4
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 3 , mySum: 4
0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 3 , mySum: 5
0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 1 , mySum: 5
0 0 0 0 0 0 4 0 0 0 0 0 0 0 1 0 , mySum: 5
0 0 0 0 0 0 2 0 0 0 0 0 0 0 1 2 , mySum: 5
0 0 0 0 0 0 3 0 0 0 0 0 0 0 1 1 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5 , mySum: 5
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 4 , mySum: 5
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 3 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 4 , mySum: 5
0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 2 , mySum: 5
0 0 0 0 0 0 3 0 0 0 0 0 0 0 1 2 , mySum: 6
0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 3 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 5 , mySum: 6
0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 2 , mySum: 6
0 0 0 0 0 0 4 0 0 0 0 0 0 0 1 1 , mySum: 6
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 5 , mySum: 6
0 0 0 0 0 0 2 0 0 0 0 0 0 0 1 3 , mySum: 6
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 4 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6 , mySum: 6
0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 4 , mySum: 6
0 0 0 0 0 0 2 0 0 0 0 0 0 0 1 4 , mySum: 7
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 6 , mySum: 7
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 5 , mySum: 7
0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 4 , mySum: 7
0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 3 , mySum: 7
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 6 , mySum: 7
0 0 0 0 0 0 3 0 0 0 0 0 0 0 1 3 , mySum: 7
0 0 0 0 0 0 4 0 0 0 0 0 0 0 1 2 , mySum: 7
0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 5 , mySum: 7
0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 6 , mySum: 8
0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 4 , mySum: 8
0 0 0 0 0 0 2 0 0 0 0 0 0 0 1 5 , mySum: 8
0 0 0 0 0 0 3 0 0 0 0 0 0 0 1 4 , mySum: 8
0 0 0 0 0 0 4 0 0 0 0 0 0 0 1 3 , mySum: 8
0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 5 , mySum: 8
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 6 , mySum: 8
0 0 0 0 0 0 3 0 0 0 0 0 0 0 1 5 , mySum: 9
0 0 0 0 0 0 4 0 0 0 0 0 0 0 1 4 , mySum: 9
0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 5 , mySum: 9
0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 6 , mySum: 9
0 0 0 0 0 0 2 0 0 0 0 0 0 0 1 6 , mySum: 9
0 0 0 0 0 0 4 0 0 0 0 0 0 0 1 5 , mySum: 10
0 0 0 0 0 0 3 0 0 0 0 0 0 0 1 6 , mySum: 10
0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 6 , mySum: 10
0 0 0 0 0 0 4 0 0 0 0 0 0 0 1 6 , mySum: 11
thread: 0, maxBlockLvlSize: 10
thread: 0, maxInBlockLvlSize: 7
thread: 0, AllTableSize: 1680, maxSubsetsSize: 64
thread: 1, NSTable size: 21
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 6
thread: 1, i: 0, maxN[i].weit: 5, maxN[i].idx: 0, blockDimSize[i]: 5
thread: 1, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 1, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 1, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 1, i: 4, maxN[i].weit: 4, maxN[i].idx: 4, blockDimSize[i]: 4
thread: 1, i: 5, maxN[i].weit: 7, maxN[i].idx: 5, blockDimSize[i]: 7
thread: 1, i: 0, divisor[i]: 5, blockDimSize[i]: 1
thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 4, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, i: 5, divisor[i]: 7, blockDimSize[i]: 1
thread: 1, largestBlockVec.elm: 0 0 0 0 0 0 4 0 0 0 0 0 0 0 1 6 
thread: 1, blockDimSizeComp: 0 0 0 0 0 0 1 2 0 0 2 3 0 0 2 1 
thread: 1, divisorComp: 0 0 0 0 0 0 5 1 0 0 1 1 0 0 2 7 
thread: 1, largestBlockVec: 0 0 0 0 0 0 4 0 0 0 0 0 0 0 1 6 
thread: 1, largestNoZeroBlockVec: 4 0 0 0 1 6 
thread: 2, NSTable size: 24
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 6
thread: 2, i: 0, maxN[i].weit: 5, maxN[i].idx: 0, blockDimSize[i]: 5
thread: 2, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 2, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 2, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 2, i: 4, maxN[i].weit: 4, maxN[i].idx: 4, blockDimSize[i]: 4
thread: 2, i: 5, maxN[i].weit: 7, maxN[i].idx: 5, blockDimSize[i]: 7
thread: 2, i: 0, divisor[i]: 5, blockDimSize[i]: 1
thread: 2, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: thread: 1, allBlocks: 20, i:  30, divisor[i]:  1, blockDimSize[i]: 03 0 
0thread: 2, i: 4, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, i: 5, divisor[i]: 7, blockDimSize[i]: 1
 thread: 0 02 , largestBlockVec.elm: 0 00  0 00  0 0 0 00  0 0, mySum:  0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 00  00 0  0 0 40 1  0 , mySum: 10
 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 00  0 02  , mySum: 20 
00 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0  0 0 0 1 1 , mySum: 2
00 0 0 0 0 0 1 0 0 0 0  0 0 0 01  61  
0thread: 2, blockDimSizeComp: 0 0 0 0 0 0 1 2 0 0 2 3 , mySum: 2
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 2  1, mySum:  2
thread: 2, divisorComp: 0 0 0 0 0 0 5 1 0 0 1 1 0 0 2 7 

thread: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 1 0 , mySum: 3
0 0 0 0 0 0 3 0 0 0 0 0 2, largestBlockVec: 0 00 0 0  00 0 0  , mySum: 03 
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 1 , mySum: 3
40 0  0 0 0 00  00  10  0 00 0  10  60  0
thread: 2, largestNoZeroBlockVec: 4 0 0 0 1 6 
 0 0 0 1 1 , mySum: 3
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 2 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 2 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 , mySum: 4
0 0 0 0 0 0 2 0 0 0 0 0 0 0 1 1 , mySum: 4
0 0 0 0 0 0 3 0 0 0 0 0 0 0 1 0 , mySum: 4
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 2 , mySum: 4
0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 2 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 3 , mySum: 4
0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 1 , mySum: 4
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 3 , mySum: 4
0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 3 , mySum: 5
0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 1 , mySum: 5
0 0 0 0 0 0 4 0 0 0 0 0 0 0 1 0 , mySum: 5
0 0 0 0 0 0 2 0 0 0 0 0 0 0 1 2 , mySum: 5
0 0 0 0 0 0 3 0 0 0 0 0 0 0 1 1 , mySum: 5
0 0 0 0 0 0 0 0 0 thread: 02 0 , allBlocks: 00  00 0  00 0  50 , mySum:  5
0 0 0 0 0 0 0 1 0 0 0 0 0 00  00  0 00 0  40 , mySum:  5
00 0 0 0 0 0 2 0 0 0  00  0 00  , mySum: 00
 00 0 0 0 0 0 0 0 0 0  00  0 30 , mySum:  5
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 4 , mySum: 5
0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 00 0 0  0 0, mySum: 1
 0 0 0 0 0 0 0 0 0 0 0 0 0 00  00  2 , mySum: 02
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 3 0 0 0  00  00 , mySum:  2
0 0 0 0 0 0 0 0 0 0 0 0 0 00 0 0 2 , mySum: 5
0 0 0 0 0 0 3 0 0 0 0 0 0 0  1 1 21 , mySum:  2, mySum: 
0 0 0 0 0 0 1 0 0 0 0 0 0 0 6
0 0 0 0 0 0 3 0 0 0 0 0 01  0 0, mySum:  2
0 0 0 0 0 0 1 0 0 0 0 0 0 0 00 3 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 0 0  0 1 15  , mySum: 2, mySum: 
60 0 0 0 0 0 2 0 0 0 0 0 0 0 
1 0 0 0 0 0 0 4 0 0 0 0 0 00 0  0 , mySum: 23
 , mySum: 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 60 , mySum: 
30 0 0 0 0 0 4 0 0 0 0 0 0 
0 0 0 0 0 0 0 2 0 0 0 0 0 01 0  01  1 , mySum: , mySum: 6
30 0 0 0 0 0 1 0 0 0 0 0 0 0 
00 0 0 0 0 0 1 0 0 0 0 0 0  0 1 51  , mySum: , mySum: 36
0 0 0 0 0 0 1 0 0 0 0 0 0 
0 0 0 0 0 0 0 2 0 0 0 0 0 0 00  12  , mySum: 3 , mySum: 36
0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 2 0 0 0 0 03 0  0, mySum:  30 4
 , mySum: 60 0 0 0 0 0 0 0 0 0 0 0 0 0 
1 20 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 0  0 04  , mySum: 4
00 0 0 0 0 0 2 0 0 0 0 0 0 0 0 6 , mySum: 6
0 0 0 0 0 0 1 0 0 0 0 0 0  1 1 , mySum: 4
0 0 0 0 0 0 3 0 0 0 0 0 0 0 1 4 , mySum: 60
 0 0 0 0 0 0 2 0 0 0 0 0 0 0 11 4  , mySum: 0 7, mySum: 
4
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 00 0 0  1 26 , mySum: 4 
0 0 0 0 0 0 4 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 2 0 0 0 0 0 0 0 00  5 , mySum: 07 , mySum: 4

0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 01 0 0  02  , mySum: 44
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 3  , mySum: , mySum: 4
0 0 0 0 0 0 3 0 0 0 0 0 0 0 70 1 
, mySum: 40 0 0 0 0 0 4 0 0 0 0 0 0
 0 0 0 0 0 0 1 0 0 0 0 0 0 0 3 , mySum: 7
0 0 0 0 0 0 1 0 0 0 0 0 0 00 0  6 , mySum: 07 
0 0 0 0 0 0 3 0 0 0 0 0 00 0  13  , mySum: 3 4, mySum: 
7
0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 00 0 0 1 3  1, mySum:  52
 0 0 0 0 0 0 4 0 0 0 0 0 0 0, mySum: 7
0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 , mySum: 5
 0 0 0 0 0 0 4 0 0 0 0 0 0 0 01 0  , mySum: 5
0 0 0 0 0 0 2 0 0 0 0 0 0 01 1  25  , mySum: , mySum: 57

0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 01 0  1 61  , mySum: , mySum: 85

0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 0, mySum:  8
00 0 0 0 0 0 2 0 0 0 0 0 0 0  1 5 0, mySum:  8
50 0 0 0 0 0 3 0 0 0 0 0 0 0  , mySum: 15 
40 0 0 0 0 0 1 0 0 0 0 0 0 0  , mySum: 8
0 0 0 0 0 0 4 0 0 0 0 0 0 00 1  3 4, mySum: 8 , mySum: 
5
0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 00 0 5 , mySum: 8
0 0 0 0 0 0 2 0 0 0 0 0 0 0  0 60  0 , mySum: 08 3
 0 0 0 0 0 0 3 0 0 0 0 0 0, mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1  4 0 , mySum: 1 55 
, mySum: 90 0 0 0 0 0 3 0 0 0 0 0 0 0 
00 0 0 0 0 0 4 0 0 0 0 0  2 , mySum: 5
0 0 0 0 0 0 3 0 0 0 0 0 00 0 1 4 , mySum:  90 
10 0 0 0 0 0 4 0 0 0 0 0 0  2 , mySum: 6
0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 5 , mySum: 09 0 
30 0 0 0 0 0 3 0 0 0 0 0 0 0  , mySum: 06 6
 , mySum: 90 0 0 0 0 0 0 0 0 0 0 0 0 0 1 5
 0 0 0 0 0 0 2 0 0 0 0 0, mySum: 6
0 0 0 0 0 0 4 0 0 0 0 0 0 0  0 20 , mySum:  6
0 0 0 0 0 0 4 0 0 0 0 0 0 0 01  11  6 , mySum: , mySum: 96
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 4 0 0 0 0 0 05 0  , mySum: 16
 0 0 0 0 0 0 2 0 0 0 0 0 0 05 , mySum: 10
0 0 0 0 0 0 3 0 0 0 0 0 0 1 3 , mySum: 6 
0 1 0 0 0 0 0 0 2 0 0 0 0 0 0 6 , mySum: 10
0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 4 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 0 00 0 6 , mySum:  100 
00 0 0 0 0 0 4 0 0 0 0 0 0  6 , mySum: 6
0 0 0 0 0 0 1 0 0 0 0 0 0 00  11  4 6, mySum:  6
0 0 0 0 0 0 2 0 0 0 0 0 0 0, mySum:  1 114
 , mySum: 7
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 6 , mySum: 7
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 5 , mySum: 7
0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 4 , mySum: 7
0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 3 , mySum: 7
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 6 , mySum: 7
0 0 0 0 0 0 3 0 0 0 0 0 0 0 1 3 , mySum: 7
0 0 0 0 0 0 4 0 0 0 0 0 0 0 1 2 , mySum: 7
0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 5 , mySum: 7
0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 6 , mySum: 8
0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 4 , mySum: 8
0 0 0 0 0 0 2 0 0 0 0 0 0 0 1 5 , mySum: 8
0 0 0 0 0 0 3 0 0 0 0 0 0 0 1 4 , mySum: 8
0 0 0 0 0 0 4 0 0 0 0 0 0 0 1 3 , mySum: 8
0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 5 , mySum: 8
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 6 , mySum: 8
0 0 0 0 0 0 3 0 0 0 0 0 0 0 1 5 , mySum: 9
0 0 0 0 0 0 4 0 0 0 0 0 0 0 1 4 , mySum: 9
0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 5 , mySum: 9
0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 6 , mySum: 9
0 0 0 0 0 0 2 0 0 0 0 0 0 0 1 6 , mySum: 9
0 0 0 0 0 0 4 0 0 0 0 0 0 0 1 5 , mySum: 10
0 0 0 0 0 0 3 0 0 0 0 0 0 0 1 6 , mySum: 10
0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 6 , mySum: 10
0 0 0 0 0 0 4 0 0 0 0 0 0 0 1 6 , mySum: 11
thread: 1, maxBlockLvlSize: 10
thread: 1, maxInBlockLvlSize: 7
thread: 1, AllTableSize: 1680, maxSubsetsSize: 64
thread: 2, maxBlockLvlSize: 10
thread: 2, maxInBlockLvlSize: 7
thread: 2, AllTableSize: 1680, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 0 0 1 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 1 0 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 mySum: 2
thread: 0, blockNoZero[4]: 0 0 0 0 0 2 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 2 0 0 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 mySum: 2
thread: 0, blockNoZero[6]: 0 0 0 0 1 1 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 mySum: 2
thread: 0, blockNoZero[7]: 1 0 0 0 1 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[8]: 1 0 0 0 0 1 
thread: 0, allBlocks[9]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 1 0 mySum: 3
thread: 0, blockNoZero[9]: 2 0 0 0 1 0 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 3 0 0 0 0 0 
thread: 0, allBlocks[11]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 1 mySum: 3
thread: 0, blockNoZero[11]: 2 0 0 0 0 1 
thread: 0, allBlocks[12]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 mySum: 3
thread: 0, blockNoZero[12]: 1 0 0 0 1 1 
thread: 0, allBlocks[13]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 2 mySum: 3
thread: 0, blockNoZero[13]: 1 0 0 0 0 2 
thread: 0, allBlocks[14]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 mySum: 3
thread: 0, blockNoZero[14]: 0 0 0 0 0 3 
thread: 0, allBlocks[15]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 2 mySum: 3
thread: 0, blockNoZero[15]: 0 0 0 0 1 2 
thread: 0, allBlocks[16]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 mySum: 4
thread: 0, blockNoZero[16]: 0 0 0 0 0 4 
thread: 0, allBlocks[17]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 1 1 mySum: 4
thread: 0, blockNoZero[17]: 2 0 0 0 1 1 
thread: 0, allBlocks[18]: 0 0 0 0 0 0 3 0 0 0 0 0 0 0 1 0 mySum: 4
thread: 0, blockNoZero[18]: 3 0 0 0 1 0 
thread: 0, allBlocks[19]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 2 mySum: 4
thread: 0, blockNoZero[19]: 2 0 0 0 0 2 
thread: 0, allBlocks[20]: 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[20]: 4 0 0 0 0 0 
thread: 0, allBlocks[21]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 2 mySum: 4
thread: 0, blockNoZero[21]: 1 0 0 0 1 2 
thread: 0, allBlocks[22]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 3 mySum: 4
thread: 0, blockNoZero[22]: 0 0 0 0 1 3 
thread: 0, allBlocks[23]: 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 1 mySum: 4
thread: 0, blockNoZero[23]: 3 0 0 0 0 1 
thread: 0, allBlocks[24]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 3 mySum: 4
thread: 0, blockNoZero[24]: 1 0 0 0 0 3 
thread: 0, allBlocks[25]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 3 mySum: 5
thread: 0, blockNoZero[25]: 1 0 0 0 1 3 
thread: 0, allBlocks[26]: 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 1 mySum: 5
thread: 0, blockNoZero[26]: 4 0 0 0 0 1 
thread: 0, allBlocks[27]: 0 0 0 0 0 0 4 0 0 0 0 0 0 0 1 0 mySum: 5
thread: 0, blockNoZero[27]: 4 0 0 0 1 0 
thread: 0, allBlocks[28]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 1 2 mySum: 5
thread: 0, blockNoZero[28]: 2 0 0 0 1 2 
thread: 0, allBlocks[29]: 0 0 0 0 0 0 3 0 0 0 0 0 0 0 1 1 mySum: 5
thread: 0, blockNoZero[29]: 3 0 0 0 1 1 
thread: 0, allBlocks[30]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5 mySum: 5
thread: 0, blockNoZero[30]: 0 0 0 0 0 5 
thread: 0, allBlocks[31]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 4 mySum: 5
thread: 0, blockNoZero[31]: 1 0 0 0 0 4 
thread: 0, allBlocks[32]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 3 mySum: 5
thread: 0, blockNoZero[32]: 2 0 0 0 0 3 
thread: 0, allBlocks[33]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 4 mySum: 5
thread: 0, blockNoZero[33]: 0 0 0 0 1 4 
thread: 0, allBlocks[34]: 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 2 mySum: 5
thread: 0, blockNoZero[34]: 3 0 0 0 0 2 
thread: 0, allBlocks[35]: 0 0 0 0 0 0 3 0 0 0 0 0 0 0 1 2 mySum: 6
thread: 0, blockNoZero[35]: 3 0 0 0 1 2 
thread: 0, allBlocks[36]: 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 3 mySum: 6
thread: 0, blockNoZero[36]: 3 0 0 0 0 3 
thread: 0, allBlocks[37]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 5 mySum: 6
thread: 0, blockNoZero[37]: 0 0 0 0 1 5 
thread: 0, allBlocks[38]: 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 2 mySum: 6
thread: 0, blockNoZero[38]: 4 0 0 0 0 2 
thread: 0, allBlocks[39]: 0 0 0 0 0 0 4 0 0 0 0 0 0 0 1 1 mySum: 6
thread: 0, blockNoZero[39]: 4 0 0 0 1 1 
thread: 0, allBlocks[40]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 5 mySum: 6
thread: 0, blockNoZero[40]: 1 0 0 0 0 5 
thread: 0, allBlocks[41]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 1 3 mySum: 6
thread: 0, blockNoZero[41]: 2 0 0 0 1 3 
thread: 0, allBlocks[42]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 4 mySum: 6
thread: 0, blockNoZero[42]: 2 0 0 0 0 4 
thread: 0, allBlocks[43]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6 mySum: 6
thread: 0, blockNoZero[43]: 0 0 0 0 0 6 
thread: 0, allBlocks[44]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 4 mySum: 6
thread: 0, blockNoZero[44]: 1 0 0 0 1 4 
thread: 0, allBlocks[45]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 1 4 mySum: 7
thread: 0, blockNoZero[45]: 2 0 0 0 1 4 
thread: 0, allBlocks[46]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 6 mySum: 7
thread: 0, blockNoZero[46]: 0 0 0 0 1 6 
thread: 0, allBlocks[47]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 5 mySum: 7
thread: 0, blockNoZero[47]: 2 0 0 0 0 5 
thread: 0, allBlocks[48]: 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 4 mySum: 7
thread: 0, blockNoZero[48]: 3 0 0 0 0 4 
thread: 0, allBlocks[49]: 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 3 mySum: 7
thread: 0, blockNoZero[49]: 4 0 0 0 0 3 
thread: 0, allBlocks[50]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 6 mySum: 7
thread: 0, blockNoZero[50]: 1 0 0 0 0 6 
thread: 0, allBlocks[51]: 0 0 0 0 0 0 3 0 0 0 0 0 0 0 1 3 mySum: 7
thread: 0, blockNoZero[51]: 3 0 0 0 1 3 
thread: 0, allBlocks[52]: 0 0 0 0 0 0 4 0 0 0 0 0 0 0 1 2 mySum: 7
thread: 0, blockNoZero[52]: 4 0 0 0 1 2 
thread: 0, allBlocks[53]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 5 mySum: 7
thread: 0, blockNoZero[53]: 1 0 0 0 1 5 
thread: 0, allBlocks[54]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 6 mySum: 8
thread: 0, blockNoZero[54]: 1 0 0 0 1 6 
thread: 0, allBlocks[55]: 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 4 mySum: 8
thread: 0, blockNoZero[55]: 4 0 0 0 0 4 
thread: 0, allBlocks[56]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 1 5 mySum: 8
thread: 0, blockNoZero[56]: 2 0 0 0 1 5 
thread: 0, allBlocks[57]: 0 0 0 0 0 0 3 0 0 0 0 0 0 0 1 4 mySum: 8
thread: 0, blockNoZero[57]: 3 0 0 0 1 4 
thread: 0, allBlocks[58]: 0 0 0 0 0 0 4 0 0 0 0 0 0 0 1 3 mySum: 8
thread: 0, blockNoZero[58]: 4 0 0 0 1 3 
thread: 0, allBlocks[59]: 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 5 mySum: 8
thread: 0, blockNoZero[59]: 3 0 0 0 0 5 
thread: 0, allBlocks[60]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 6 mySum: 8
thread: 0, blockNoZero[60]: 2 0 0 0 0 6 
thread: 0, allBlocks[61]: 0 0 0 0 0 0 3 0 0 0 0 0 0 0 1 5 mySum: 9
thread: 0, blockNoZero[61]: 3 0 0 0 1 5 
thread: 0, allBlocks[62]: 0 0 0 0 0 0 4 0 0 0 0 0 0 0 1 4 mySum: 9
thread: 0, blockNoZero[62]: 4 0 0 0 1 4 
thread: 0, allBlocks[63]: 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 5 mySum: 9
thread: 0, blockNoZero[63]: 4 0 0 0 0 5 
thread: 0, allBlocks[64]: 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 6 mySum: 9
thread: 0, blockNoZero[64]: 3 0 0 0 0 6 
thread: 0, allBlocks[65]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 1 6 mySum: 9
thread: 0, blockNoZero[65]: 2 0 0 0 1 6 
thread: 0, allBlocks[66]: 0 0 0 0 0 0 4 0 0 0 0 0 0 0 1 5 mySum: 10
thread: 0, blockNoZero[66]: 4 0 0 0 1 5 
thread: 0, allBlocks[67]: 0 0 0 0 0 0 3 0 0 0 0 0 0 0 1 6 mySum: 10
thread: 0, blockNoZero[67]: 3 0 0 0 1 6 
thread: 0, allBlocks[68]: 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 6 mySum: 10
thread: 0, blockNoZero[68]: 4 0 0 0 0 6 
thread: 0, allBlocks[69]: 0 0 0 0 0 0 4 0 0 0 0 0 0 0 1 6 mySum: 11
thread: 0, blockNoZero[69]: 4 0 0 0 1 6 
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 11
copy the latest feasible solution to instance takes time: 4e-06
thread: 1, sOPT: 11
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 2e-06
thread: 0, sOPT: 11
copy the latest feasible solution to instance takes time: 0.048918
thread: 2, sOPT: 10
BKID: 0, LB: 26, UB: 26, OPT: 10
Dynamic Programming Runtime: 0.692919
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 1
********************************************************
Total execution on UB and LB is: 1
OUT of Bk while loop  
UB    26
LB    26
T1    26
T2    26
OPT   10
nMachines   10
BkID	0
AllProbData.size()    2
ck :   1
AllProbData[ck].Ttable    26
ck :   0
AllProbData[ck].Ttable    26
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan26
Main Scheduling is Done
File 2-1 is Done.
******************************
Reading File...
File 2-2 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 41, LB: 22start at time: 1505254746
thread: 0, MlBk is called with LB: 22, UB: 27
thread: 3, MlBk is called with LB: 37, UB: 42
thread: 2, MlBk is called with LB: 32, UB: 37
thread: 1, MlBk is called with LB: 27, UB: 32
 thread:  thread: 3, LongJobs.size() 110
, LongJobs.size() 14
 thread: 2, LongJobs.size() 12
 thread: 1, LongJobs.size() 13
thread: 3, NSTable size: 19
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 3, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 3, i: 2, maxN[i].weit: 4, maxN[i].idx: 2, blockDimSize[i]: 4
thread: 3, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 3, i: 0, divisor[i]: 2, blockDimSize[i]: 2
thread: 3, i: 1, divisor[i]: 1, blockDimSize[i]: 3
thread: 3, i: 2, divisor[i]: 2, blockDimSize[i]: 2
thread: 3, i: 3, divisor[i]: 2, blockDimSize[i]: 2
thread: 3, largestBlockVec.elm: 0 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 0 2 0 3 2 2 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 0 2 0 1 2 2 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 1 0 1 1 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 , mySum: 3
thread: 3, maxBlockLvlSize: 3
thread: 3, maxInBlockLvlSize: 7
thread: 3, AllTableSize: 192, maxSubsetsSize: 64
thread: 2, NSTable size: 23
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 2, i: 1, maxN[i].weit: 4, maxN[i].idx: 1, blockDimSize[i]: 4
thread: 2, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 2, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 2, i: 4, maxN[i].weit: 4, maxN[i].idx: 4, blockDimSize[i]: 4
thread: 2, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 1, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, i: 2, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 3, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, i: 4, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, largestBlockVec.elm: 0 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 2 2 0 3 2 2 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 1 2 0 1 2 2 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 1 0 1 1 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 , mySum: 3
thread: 1, NSTable size: 30
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 6
thread: 1, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 1, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 1, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 1, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 1, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 1, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 1, i: 6, maxN[i].weit: 7, maxN[i].idx: 6, blockDimSize[i]: 7
thread: 1, i: 0, divisor[i]: 2, blockDimSize[i]: 1
thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 3, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 6, divisor[i]: 7, blockDimSize[i]: 1
thread: 1, largestBlockVec.elm: 0 0 0 0 0 0 0 1 0 0 2 0 0 0 0 6 
thread: 1, blockDimSizeComp: 0 0 0 0 0 0 0 1 2 2 1 0 0 2 2 1 
thread: 1, divisorComp: 0 0 0 0 0 0 0 2 1 1 3 0 0 1 1 7 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 1 0 0 2 0 0 0 0 6 
thread: 1, largestNoZeroBlockVec: 1 0 0 2 0 0 6 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 , mySum: 2
0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 2 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 , mySum: 3
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 2 , mySum: 3
0 0 0 0 0 0 0 1 0 0 2 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 3 , mySum: 4
0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 2 , mySum: 4
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 2 , mySum: 4
0 0 0 0 0 0 0 1 0 0 2 0 0 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 3 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 , mySum: 4
0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 3 , mySum: 5
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 4 , mySum: 5
0 0 0 0 0 0 0 1 0 0 2 0 0 0 0 2 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5 , mySum: 5
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 3 , mySum: 5
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 4 , mySum: 5
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 5 , mySum: 6
0 0 0 0 0 0 0 1 0 0 2 0 0 0 0 3 , mySum: 6
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 4 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6 , mySum: 6
0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 4 , mySum: 6
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 5 , mySum: 6
0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 5 , mySum: 7
0 0 0 0 0 0 0 1 0 0 2 0 0 0 0 4 , mySum: 7
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 6 , mySum: 7
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 5 , mySum: 7
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 6 , mySum: 7
0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 6 , mySum: 8
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 6 , mySum: 8
0 0 0 0 0 0 0 1 0 0 2 0 0 0 0 5 , mySum: 8
0 0 0 0 0 0 0 1 0 0 2 0 0 0 0 6 , mySum: 9
thread: 2, maxBlockLvlSize: 3
thread: 2, maxInBlockLvlSize: 14
thread: 2, AllTableSize: 384, maxSubsetsSize: 64
thread: 1, maxBlockLvlSize: 6
thread: 1, maxInBlockLvlSize: 6
thread: 1, AllTableSize: 672, maxSubsetsSize: 64
thread: 0, NSTable size: 29
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 6
thread: 0, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 0, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 0, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 0, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 0, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 0, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 0, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 0, i: 7, maxN[i].weit: 7, maxN[i].idx: 7, blockDimSize[i]: 7
thread: 0, i: 0, divisor[i]: 2, blockDimSize[i]: 1
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 7, divisor[i]: 7, blockDimSize[i]: 1
thread: 0, largestBlockVec.elm: 0 0 0 0 0 0 1 0 0 0 2 0 0 0 0 6 
thread: 0, blockDimSizeComp: 0 0 0 0 0 0 1 2 2 2 1 0 0 2 2 1 
thread: 0, divisorComp: 0 0 0 0 0 0 2 1 1 1 3 0 0 1 1 7 
thread: 0, largestBlockVec: 0 0 0 0 0 0 1 0 0 0 2 0 0 0 0 6 
thread: 0, largestNoZeroBlockVec: 1 0 0 0 2 0 0 6 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 , mySum: 2
0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 2 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 , mySum: 3
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 2 , mySum: 3
0 0 0 0 0 0 1 0 0 0 2 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 3 , mySum: 4
0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 2 , mySum: 4
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 2 , mySum: 4
0 0 0 0 0 0 1 0 0 0 2 0 0 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 3 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 , mySum: 4
0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 3 , mySum: 5
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 4 , mySum: 5
0 0 0 0 0 0 1 0 0 0 2 0 0 0 0 2 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5 , mySum: 5
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 3 , mySum: 5
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 4 , mySum: 5
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 5 , mySum: 6
0 0 0 0 0 0 1 0 0 0 2 0 0 0 0 3 , mySum: 6
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 4 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6 , mySum: 6
0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 4 , mySum: 6
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 5 , mySum: 6
0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 5 , mySum: 7
0 0 0 0 0 0 1 0 0 0 2 0 0 0 0 4 , mySum: 7
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 6 , mySum: 7
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 5 , mySum: 7
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 6 , mySum: 7
0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 6 , mySum: 8
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 6 , mySum: 8
0 0 0 0 0 0 1 0 0 0 2 0 0 0 0 5 , mySum: 8
0 0 0 0 0 0 1 0 0 0 2 0 0 0 0 6 , mySum: 9
thread: 0, maxBlockLvlSize: 6
thread: 0, maxInBlockLvlSize: 10
thread: 0, AllTableSize: 1344, maxSubsetsSize: 64
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 5
copy the latest feasible solution to instance takes time: 0.013064
thread: 3, sOPT: 5
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 6
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 0 
copy the latest feasible solution to instance takes time: 0.018422
thread: 2, sOPT: 6
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 1 0 0 0 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 0 0 1 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[4]: 1 0 0 0 0 0 0 1 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[5]: 0 0 0 0 1 0 0 1 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 mySum: 2
thread: 0, blockNoZero[6]: 0 0 0 0 0 0 0 2 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 1 0 0 0 1 0 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[8]: 0 0 0 0 2 0 0 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 2 mySum: 3
thread: 0, blockNoZero[9]: 1 0 0 0 0 0 0 2 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 mySum: 3
thread: 0, blockNoZero[10]: 0 0 0 0 0 0 0 3 
thread: 0, allBlocks[11]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 2 mySum: 3
thread: 0, blockNoZero[11]: 0 0 0 0 1 0 0 2 
thread: 0, allBlocks[12]: 0 0 0 0 0 0 1 0 0 0 2 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[12]: 1 0 0 0 2 0 0 0 
thread: 0, allBlocks[13]: 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 1 mySum: 3
thread: 0, blockNoZero[13]: 1 0 0 0 1 0 0 1 
thread: 0, allBlocks[14]: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 1 mySum: 3
thread: 0, blockNoZero[14]: 0 0 0 0 2 0 0 1 
thread: 0, allBlocks[15]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 3 mySum: 4
thread: 0, blockNoZero[15]: 1 0 0 0 0 0 0 3 
thread: 0, allBlocks[16]: 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 2 mySum: 4
thread: 0, blockNoZero[16]: 1 0 0 0 1 0 0 2 
thread: 0, allBlocks[17]: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 2 mySum: 4
thread: 0, blockNoZero[17]: 0 0 0 0 2 0 0 2 
thread: 0, allBlocks[18]: 0 0 0 0 0 0 1 0 0 0 2 0 0 0 0 1 mySum: 4
thread: 0, blockNoZero[18]: 1 0 0 0 2 0 0 1 
thread: 0, allBlocks[19]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 3 mySum: 4
thread: 0, blockNoZero[19]: 0 0 0 0 1 0 0 3 
thread: 0, allBlocks[20]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 mySum: 4
thread: 0, blockNoZero[20]: 0 0 0 0 0 0 0 4 
thread: 0, allBlocks[21]: 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 3 mySum: 5
thread: 0, blockNoZero[21]: 1 0 0 0 1 0 0 3 
thread: 0, allBlocks[22]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 4 mySum: 5
thread: 0, blockNoZero[22]: 1 0 0 0 0 0 0 4 
thread: 0, allBlocks[23]: 0 0 0 0 0 0 1 0 0 0 2 0 0 0 0 2 mySum: 5
thread: 0, blockNoZero[23]: 1 0 0 0 2 0 0 2 
thread: 0, allBlocks[24]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5 mySum: 5
thread: 0, blockNoZero[24]: 0 0 0 0 0 0 0 5 
thread: 0, allBlocks[25]: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 3 mySum: 5
thread: 0, blockNoZero[25]: 0 0 0 0 2 0 0 3 
thread: 0, allBlocks[26]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 4 mySum: 5
thread: 0, blockNoZero[26]: 0 0 0 0 1 0 0 4 
thread: 0, allBlocks[27]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 5 mySum: 6
thread: 0, blockNoZero[27]: 1 0 0 0 0 0 0 5 
thread: 0, allBlocks[28]: 0 0 0 0 0 0 1 0 0 0 2 0 0 0 0 3 mySum: 6
thread: 0, blockNoZero[28]: 1 0 0 0 2 0 0 3 
thread: 0, allBlocks[29]: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 4 mySum: 6
thread: 0, blockNoZero[29]: 0 0 0 0 2 0 0 Thread: 1, gpu_BlockDP is done.4 

thread: 0, allBlocks[30]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6 mySum: 6
thread: 0, blockNoZero[30]: 0 0 0 0 0 0 0 6 
thread: 0, allBlocks[31]: 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 4 mySum: 6
thread: 0, blockNoZero[31]: 1 0 0 0 1 0 0 4 
thread: 0, allBlocks[32]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 5 mySum: 6
thread: 0, blockNoZero[32]: 0 0 0 0 1 0 0 5 
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 7
thread: 0, allBlocks[33]: 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 5 mySum: 7
thread: 0, blockNoZero[33]: 1 0 0 0 1 0 0 5 
thread: 0, allBlocks[34]: 0 0 0 0 0 0 1 0 0 0 2 0 0 0 0 4 mySum: 7
thread: 0, blockNoZero[34]: 1 0 0 0 2 0 0 4 
thread: 0, allBlocks[35]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 6 mySum: 7
thread: 0, blockNoZero[35]: 0 0 0 0 1 0 0 6 
thread: 0, allBlocks[36]: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 5 mySum: 7
thread: 0, blockNoZero[36]: 0 0 0 0 2 0 0 5 
thread: 0, allBlocks[37]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 6 mySum: 7
thread: 0, blockNoZero[37]: 1 0 0 0 0 0 0 6 
copy the latest feasible solution to instance takes time: 0.023125
thread: 1, sOPT: 7
thread: 0, allBlocks[38]: 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 6 mySum: 8
thread: 0, blockNoZero[38]: 1 0 0 0 1 0 0 6 
thread: 0, allBlocks[39]: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 6 mySum: 8
thread: 0, blockNoZero[39]: 0 0 0 0 2 0 0 6 
thread: 0, allBlocks[40]: 0 0 0 0 0 0 1 0 0 0 2 0 0 0 0 5 mySum: 8
thread: 0, blockNoZero[40]: 1 0 0 0 2 0 0 5 
thread: 0, allBlocks[41]: 0 0 0 0 0 0 1 0 0 0 2 0 0 0 0 6 mySum: 9
thread: 0, blockNoZero[41]: 1 0 0 0 2 0 0 6 
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.022814
thread: 0, sOPT: 9
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 3, MlBk function is done, and BkID for all processes are collected.Thread: 
2, MlBk function is done, and BkID for all processes are collected.
1, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 22, UB: 25
BKID: 0, LB: 22, UB: 25, OPT: 9
Dynamic Programming Runtime: 0.376158
Execution time between LB and UB is: 0
By far, all LB UB calculation runtime: 0
Iteration: 2, UB: 25, LB: 22start at time: 1505254746
thread: 0, MlBk is called with LB: 22, UB: 23
 thread: 0, LongJobs.size() 15
thread: thread: 1, MlBk is called with LB: 232, MlBk is called with LB: , UB: 2424, UB: 25

 thread: 1, LongJobs.size() 15
 thread: 2, LongJobs.size() 14
thread: 2, NSTable size: 29
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 6
thread: 2, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 2, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 2, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 2, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 2, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 2, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 2, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 2, i: 7, maxN[i].weit: 7, maxN[i].idx: 7, blockDimSize[i]: 7
thread: 2, i: 0, divisor[i]: 2, blockDimSize[i]: 1
thread: 2, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 4, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 7, divisor[i]: 7, blockDimSize[i]: 1
thread: 2, largestBlockVec.elm: 0 0 0 0 0 0 1 0 0 0 2 0 0 0 0 6 
thread: 2, blockDimSizeComp: 0 0 0 0 0 0 1 2 2 2 1 0 0 2 2 1 
thread: 2, divisorComp: 0 0 0 0 0 0 2 1 1 1 3 0 0 1 1 7 
thread: 2, largestBlockVec: 0 0 0 0 0 0 1 0 0 0 2 0 0 0 0 6 
thread: 2, largestNoZeroBlockVec: 1 0 0 0 2 0 0 6 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 , mySum: 2
0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 2 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 , mySum: 3
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 2 , mySum: 3
0 0 0 0 0 0 1 0 0 0 2 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 3 , mySum: 4
0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 2 , mySum: 4
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 2 , mySum: 4
0 0 0 0 0 0 1 0 0 0 2 0 0 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 3 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 , mySum: 4
0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 3 , mySum: 5
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 4 , mySum: 5
0 0 0 0 0 0 1 0 0 0 2 0 0 0 0 2 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5 , mySum: 5
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 3 , mySum: 5
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 4 , mySum: 5
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 5 , mySum: 6
0 0 0 0 0 0 1 0 0 0 2 0 0 0 0 3 , mySum: 6
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 4 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6 , mySum: 6
0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 4 , mySum: 6
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 5 , mySum: 6
0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 5 , mySum: 7
0 0 0 0 0 0 1 0 0 0 2 0 0 0 0 4 , mySum: 7
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 6 , mySum: 7
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 5 , mySum: 7
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 6 , mySum: 7
0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 6 , mySum: 8
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 6 , mySum: 8
0 0 0 0 0 0 1 0 0 0 2 0 0 0 0 5 , mySum: 8
0 0 0 0 0 0 1 0 0 0 2 0 0 0 0 6 , mySum: 9
thread: 1, NSTable size: 38
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 6
thread: 1, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 1, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 1, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 1, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 1, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 1, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 1, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 1, i: 7, maxN[i].weit: 2, maxN[i].idx: 7, blockDimSize[i]: 2
thread: 1, i: 8, maxN[i].weit: 7, maxN[i].idx: 8, blockDimSize[i]: 7
thread: 1, i: 0, divisor[i]: 2, blockDimSize[i]: 1
thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 5, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 7, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 8, divisor[i]: 7, blockDimSize[i]: 1
thread: 1, largestBlockVec.elm: 0 0 0 0 0 1 0 0 0 0 2 0 0 0 0 6 
thread: 1, blockDimSizeComp: 0 0 0 0 0 1 2 2 2 2 1 0 0 2 2 1 
thread: 1, divisorComp: 0 0 0 0 0 2 1 1 1 1 3 0 0 1 1 7 
thread: 1, largestBlockVec: 0 0 0 0 0 1 0 0 0 0 2 0 0 0 0 6 
thread: 1, largestNoZeroBlockVec: 1 0 0 0 0 2 0 0 6 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 , mySum: 2
0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 2 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 , mySum: 3
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 2 , mySum: 3
0 0 0 0 0 1 0 0 0 0 2 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 1 , mySum: 3
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 3 , mySum: 4
0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 2 , mySum: 4
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 2 , mySum: 4
0 0 0 0 0 1 0 0 0 0 2 0 0 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 3 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 , mySum: 4
0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 3 , mySum: 5
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 4 , mySum: 5
0 0 0 0 0 1 0 0 0 0 2 0 0 0 0 2 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5 , mySum: 5
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 3 , mySum: 5
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 4 , mySum: 5
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 5 , mySum: 6
0 0 0 0 0 1 0 0 0 0 2 0 0 0 0 3 , mySum: 6
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 4 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6 , mySum: 6
0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 4 , mySum: 6
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 5 , mySum: 6
0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 5 , mySum: 7
0 0 0 0 0 1 0 0 0 0 2 0 0 0 0 4 , mySum: 7
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 6 , mySum: 7
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 5 , mySum: 7
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 6 , mySum: 7
0 0 0 thread: 02 , maxBlockLvlSize: 60 
1thread: 2, maxInBlockLvlSize: 10
thread: 2, AllTableSize: 1344, maxSubsetsSize: 64
 0 0 0 0 1 0 0 0 0 6 , mySum: 8
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 6 , mySum: 8
0 0 0 0 0 1 0 0 0 0 2 0 0 0 0 5 , mySum: 8
0 0 0 0 0 1 0 0 0 0 2 0 0 0 0 6 , mySum: 9
thread: 0, NSTable size: 33
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 6
thread: 0, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 0, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 0, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 0, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 0, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 0, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 0, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 0, i: 7, maxN[i].weit: 2, maxN[i].idx: 7, blockDimSize[i]: 2
thread: 0, i: 8, maxN[i].weit: 7, maxN[i].idx: 8, blockDimSize[i]: 7
thread: 0, i: 0, divisor[i]: 2, blockDimSize[i]: 1
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 5, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 7, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 8, divisor[i]: 7, blockDimSize[i]: 1
thread: 0, largestBlockVec.elm: 0 0 0 0 0 1 0 0 0 0 2 0 0 0 0 6 
thread: 0, blockDimSizeComp: 0 0 0 0 0 1 2 2 2 2 1 0 0 2 2 1 
thread: 0, divisorComp: 0 0 0 0 0 2 1 1 1 1 3 0 0 1 1 7 
thread: 0, largestBlockVec: 0 0 0 0 0 1 0 0 0 0 2 0 0 0 0 6 
thread: 0, largestNoZeroBlockVec: 1 0 0 0 0 2 0 0 6 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 , mySum: 2
0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 2 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 , mySum: 3
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 2 , mySum: 3
0 0 0 0 0 1 0 0 0 0 2 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 1 , mySum: 3
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 3 , mySum: 4
0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 2 , mySum: 4
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 2 , mySum: 4
0 0 0 0 0 1 0 0 0 0 2 0 0 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 3 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 , mySum: 4
0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 3 , mySum: 5
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 4 , mySum: 5
0 0 0 0 0 1 0 0 0 0 2 0 0 0 0 2 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5 , mySum: 5
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 3 , mySum: 5
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 4 , mySum: 5
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 5 , mySum: 6
0 0 0 0 0 1 0 0 0 0 2 0 0 0 0 3 , mySum: 6
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 4 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6 , mySum: 6
0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 4 , mySum: 6
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 5 , mySum: 6
0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 5 , mySum: 7
0 0 0 0 0 1 0 0 0 0 2 0 0 0 0 4 , mySum: 7
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 6 , mySum: 7
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 5 , mySum: 7
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 6 , mySum: 7
0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 6 , mySum: 8
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 6 , mySum: 8
0 0 0 0 0 1 0 0 0 0 2 0 0 0 0 5 , mySum: 8
0 0 0 0 0 1 0 0 0 0 2 0 0 0 0 6 , mySum: 9
thread: 0, maxBlockLvlSize: 6
thread: 0, maxInBlockLvlSize: 20
thread: 0, AllTableSize: 2688, maxSubsetsSize: 64
thread: 1, maxBlockLvlSize: 6
thread: 1, maxInBlockLvlSize: 20
thread: 1, AllTableSize: 2688, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 1 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 0 0 0 1 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[4]: 1 0 0 0 0 0 0 0 1 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[5]: 0 0 0 0 0 1 0 0 1 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 mySum: 2
thread: 0, blockNoZero[6]: 0 0 0 0 0 0 0 0 2 
thread: 0, allBlocks[7]: 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 1 0 0 0 0 1 0 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[8]: 0 0 0 0 0 2 0 0 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 2 mySum: 3
thread: 0, blockNoZero[9]: 1 0 0 0 0 0 0 0 2 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 mySum: 3
thread: 0, blockNoZero[10]: 0 0 0 0 0 0 0 0 3 
thread: 0, allBlocks[11]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 2 mySum: 3
thread: 0, blockNoZero[11]: 0 0 0 0 0 1 0 0 2 
thread: 0, allBlocks[12]: 0 0 0 0 0 1 0 0 0 0 2 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[12]: 1 0 0 0 0 2 0 0 0 
thread: 0, allBlocks[13]: 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 mySum: 3
thread: 0, blockNoZero[13]: 1 0 0 0 0 1 0 0 1 
thread: 0, allBlocks[14]: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 1 mySum: 3
thread: 0, blockNoZero[14]: 0 0 0 0 0 2 0 0 1 
thread: 0, allBlocks[15]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 3 mySum: 4
thread: 0, blockNoZero[15]: 1 0 0 0 0 0 0 0 3 
thread: 0, allBlocks[16]: 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 2 mySum: 4
thread: 0, blockNoZero[16]: 1 0 0 0 0 1 0 0 2 
thread: 0, allBlocks[17]: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 2 mySum: 4
thread: 0, blockNoZero[17]: 0 0 0 0 0 2 0 0 2 
thread: 0, allBlocks[18]: 0 0 0 0 0 1 0 0 0 0 2 0 0 0 0 1 mySum: 4
thread: 0, blockNoZero[18]: 1 0 0 0 0 2 0 0 1 
thread: 0, allBlocks[19]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 3 mySum: 4
thread: 0, blockNoZero[19]: 0 0 0 0 0 1 0 0 3 
thread: 0, allBlocks[20]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 mySum: 4
thread: 0, blockNoZero[20]: 0 0 0 0 0 0 0 0 4 
thread: 0, allBlocks[21]: 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 3 mySum: 5
thread: 0, blockNoZero[21]: 1 0 0 0 0 1 0 0 3 
thread: 0, allBlocks[22]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 4 mySum: 5
thread: 0, blockNoZero[22]: 1 0 0 0 0 0 0 0 4 
thread: 0, allBlocks[23]: 0 0 0 0 0 1 0 0 0 0 2 0 0 0 0 2 mySum: 5
thread: 0, blockNoZero[23]: 1 0 0 0 0 2 0 0 2 
thread: 0, allBlocks[24]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5 mySum: 5
thread: 0, blockNoZero[24]: 0 0 0 0 0 0 0 0 5 
thread: 0, allBlocks[25]: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 3 mySum: 5
thread: 0, blockNoZero[25]: 0 0 0 0 0 2 0 0 3 
Thread: 2, gpu_BlockDP is done.
thread: 0, allBlocks[26]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 4 mySum: 5
thread: 0, blockNoZero[26]: 0 0 0 0 0 1 0 0 4 
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 9
thread: 0, allBlocks[27]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 5 mySum: 6
thread: 0, blockNoZero[27]: 1 0 0 0 0 0 0 0 5 
thread: 0, allBlocks[28]: 0 0 0 0 0 1 0 0 0 0 2 0 0 0 0 3 mySum: 6
thread: 0, blockNoZero[28]: 1 0 0 0 0 2 0 0 3 
thread: 0, allBlocks[29]: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 4 mySum: 6
thread: 0, blockNoZero[29]: 0 0 0 0 0 2 0 0 4 
thread: 0, allBlocks[30]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6 mySum: 6
thread: 0, blockNoZero[30]: 0 0 0 0 0 0 0 0 6 
thread: 0, allBlocks[31]: 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 4 mySum: 6
thread: 0, blockNoZero[31]: 1 0 0 0 0 1 0 0 4 
thread: 0, allBlocks[32]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 5 mySum: 6
thread: 0, blockNoZero[32]: 0 0 0 0 0 1 0 0 5 
thread: 0, allBlocks[33]: 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 5 mySum: 7
thread: 0, blockNoZero[33]: 1 0 0 0 0 1 0 0 5 
thread: 0, allBlocks[34]: 0 0 0 0 0 1 0 0 0 0 2 0 0 0 0 4 mySum: 7
thread: 0, blockNoZero[34]: 1 0 0 0 0 2 0 0 4 
thread: 0, allBlocks[35]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 6 mySum: 7
thread: 0, blockNoZero[35]: 0 0 0 0 0 1 0 0 6 
thread: 0, allBlocks[36]: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 5 mySum: 7
thread: 0, blockNoZero[36]: 0 0 0 0 0 2 0 0 5 
thread: 0, allBlocks[37]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 6 mySum: 7
thread: 0, blockNoZero[37]: 1 0 0 0 0 0 0 0 6 
copy the latest feasible solution to instance takes time: 0.07129
thread: 2, sOPT: 9
thread: 0, allBlocks[38]: 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 6 mySum: 8
thread: 0, blockNoZero[38]: 1 0 0 0 0 1 0 0 6 
thread: 0, allBlocks[39]: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 6 mySum: 8
thread: 0, blockNoZero[39]: 0 0 0 0 0 2 0 0 6 
thread: 0, allBlocks[40]: 0 0 0 0 0 1 0 0 0 0 2 0 0 0 0 5 mySum: 8
thread: 0, blockNoZero[40]: 1 0 0 0 0 2 0 0 5 
thread: 0, allBlocks[41]: 0 0 0 0 0 1 0 0 0 0 2 0 0 0 0 6 mySum: 9
thread: 0, blockNoZero[41]: 1 0 0 0 0 2 0 0 6 
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.121337
thread: 1, sOPT: 10
copy the latest feasible solution to instance takes time: 0.073331
thread: 0, sOPT: 10
BKID: 0, LB: 22, UB: 22, OPT: 10
Dynamic Programming Runtime: 0.869865
Execution time between LB and UB is: 0
By far, all LB UB calculation runtime: 0
********************************************************
Total execution on UB and LB is: 0
OUT of Bk while loop  
UB    22
LB    22
T1    22
T2    22
OPT   10
nMachines   10
BkID	0
AllProbData.size()    2
ck :   1
AllProbData[ck].Ttable    22
ck :   0
AllProbData[ck].Ttable    24
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan23
Main Scheduling is Done
File 2-2 is Done.
******************************
Reading File...
File 2-3 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 40, LB: 22start at time: 1505254746
thread: 0, MlBk is called with LB: 22, UB: 26
thread: 3, MlBk is called with LB: 34, UB: 40 thread: 0, LongJobs.size() 
13
thread: 1, MlBk is called with LB: 26, UB: 30
 thread: 3, LongJobs.size() 10
thread: 2, MlBk is called with LB: 30, UB: 34
 thread: 1, LongJobs.size() 12
 thread: 2, LongJobs.size() 11
thread: 3, NSTable size: 12
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 4
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 3, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 3, i: 2, maxN[i].weit: 5, maxN[i].idx: 2, blockDimSize[i]: 5
thread: 3, i: 3, maxN[i].weit: 5, maxN[i].idx: 3, blockDimSize[i]: 5
thread: 3, i: 0, divisor[i]: 2, blockDimSize[i]: 1
thread: 3, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 2, divisor[i]: 5, blockDimSize[i]: 1
thread: 3, i: 3, divisor[i]: 5, blockDimSize[i]: 1
thread: 3, largestBlockVec.elm: 0 0 0 0 0 1 0 4 4 0 0 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 0 0 1 2 1 1 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 0 0 2 1 5 5 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 1 0 4 4 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 1 0 4 4 
thread: 1, NSTable size: 14
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: thread: 1, i: 37, allBlocks: , alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 8
thread: 1, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 02
thread: 1, i: 1, maxN[i].weit: 2, maxN[i].idx: 1 , blockDimSize[i]: 2
thread: 1, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 20
thread: 1, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 1, i: 4, maxN[i].weit: 9, maxN[i].idx: 4, blockDimSize[i]: 9
thread:  1, i: 00, divisor[i]:  20 , blockDimSize[i]: 01
thread: 1, i: 1, divisor[i]: 2, blockDimSize[i]: 1
thread: 2thread: , NSTable size: 115, i: 
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 4
2thread: 2, i: , divisor[i]: 8, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
1thread: , blockDimSize[i]: 2, i: 212
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 4, divisor[i]: 3, blockDimSize[i]: 3
thread: 1, largestBlockVec.elm: 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 2 
thread: 1, blockDimSizeComp: 0 0 0 0 0 0 0  0 0 0 10  0 10  0 , alltableelemets[maxindex].elm[i]: 00
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 2, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 2, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 2, i: 3, maxN[i].weit: 5, maxN[i].idx: 3, blockDimSize[i]: 5
thread: 2, i: 4, maxN[i].weit: 5, maxN[i].idx: thread: 4, blockDimSize[i]: 5
0, NSTable size: 18 
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 000
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
2thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 8
, i: thread: 0, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
 0 0 thread: 0  0, mySum: , i: 01, maxN[i].weit: 22 , maxN[i].idx: 01 , divisor[i]: 2, blockDimSize[i]:  00 3 
0 0 0 0 0 0 0 0 1 0 
0 0 0 0 0thread: 1, divisorComp: 0 0 0  00  0 , mySum: 01 
0 0 22 2 0 0 1 0 1 0 3 

0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: thread: 1, largestBlockVec: 0 0 0 0 0 0 10 1 1 0 0 0 0 0
 00 0 0 0 0 0 0 1 0 0 0 0 02 thread: 2 0
, i: 2, maxN[i].weit: thread: 1, largestNoZeroBlockVec: 1 1 0 0 2 
, blockDimSize[i]: 1
 thread: 2, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 3, divisor[i]: 5, blockDimSize[i]: 1
thread: 2, i: 4, divisor[i]: 5, blockDimSize[i]: 1
2thread: , maxN[i].idx: 22, blockDimSize[i]: thread: , largestBlockVec.elm: 12, allBlocks: 
0 0thread: 0, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 20
 thread: 00, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
 00 , mySum: 1 
0 0 0 0 0 0 0 1 1 0 0  0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 00 0 0 0 0 0 , mySum:  2
0 0 0 0 0 0 0 2 0 0 00 0 0  0 00 00 0 0 0 0  0  0thread: 0, i: 5, maxN[i].weit: 9, maxN[i].idx: 5, blockDimSize[i]: 9
 thread: 0, i: 0, divisor[i]: 2, blockDimSize[i]: 1
0thread: 0, i: 1, divisor[i]: 2, blockDimSize[i]: 1
 thread: 0, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 5, divisor[i]: 3, blockDimSize[i]: 3
thread: 10, largestBlockVec.elm: 0  00  0 00 0 0  0, mySum: 00 0  1 021  0  , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 40  2 
thread: 0, blockDimSizeComp: 0 0 0 0 0 0 1 1
 0 0 0 0 0 1 0 0 1 0 02 0 0 2 0 2 0 3 0
thread: 0, divisorComp: 0 0 0 0 0 0 2  2 1 0 0 1 0 11  40, mySum:  13
0 0 0 0 0 0 0 0 1 0 0 0 0  
thread: 0, largestBlockVec: 0 0 0 0 0 0 1 1  0 0 0 0 0 0 0 20  
thread: 0, largestNoZeroBlockVec: 1 1 0 0 0 2 
 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 00 0 0 0 0 0 0 thread: 
thread: 2, blockDimSizeComp: 0 0 0 1 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 2 0  0 00 0  000  0, mySum:  10, allBlocks: 
0 2 0  0 , mySum: 20 0 0 0 0 0 0 0 0 0 0 0 0  1 1 0 0 0 0 0 0 0 
20thread: 2, divisorComp:  00 0  
00 0 0 0 0 0 0 0 3 0 0 0 0 2 0 1 1 5 5 0 0 0 00  0 00  0 0 00 0 
0 thread: 2, largestBlockVec: 0 0 0 1 0 0 0 4 4 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0  0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 00 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0  0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 00 0 0  2 , mySum:  20
0 0 0 0 0 0 0 1 0 0 0 2 , mySum: 2
0 0 0 0 0 0 0 0 1 0 0 0  0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 1 0 0 0 00 0 0 0 1 , mySum:  , mySum: 2030
0 0 0 0 0 1 0 2 0 0 0 0  0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 1 0 0 4 4 
0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 1 1 0
 0 0 0 0 0 0 , mySum: 0 0 0 0 0 0 0 1 1 0 3
0 0 0 0 0 1 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 1 0 0 0 00 0 0 2 , mySum: 3
 0 0 0 00  1 0, mySum:   0 0 0 0 0 1 0 0 0 0 00 20  
0 02 0 , mySum: 0 0 0 0 0 0 1 0 0 0 0 3
0 0 0 0 0 0 0 1 1 0 0 0 0 00  0 1 , mySum:  thread: 0 0 , mySum: 3
30 0 0 0 0 0 0 3 0 0 0 0 0 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 1 1 0 0 0 0 0 00 0 0 , mySum: 2
0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 1 0
 0 0 0 0 0 0 , mySum: 0 0 0 0 0 0 0 1 1 0 30 
00 0 0 0 0 0 0 1 2 0  0 0 0 2 , mySum: 4
0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 2 , mySum: 3
0 0 0 0 0 0 1 0 0 0 0 0 0 0  0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 2 , mySum: 03
 0 0 0 0 0 0 1 1 0 0 0 0 0 00 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0  0 1 , mySum: 3
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 1 0 0 0 0 00 0 2 , mySum: 4
 0 0 , mySum: 2
0 0 0 1 0 0 0 1 0 0 0 00 0  00  0 00  , mySum: 2
00 0 0 0 0 0 0 2 0 0 0 0  0 0 00 , mySum:  3
0 0 0 0 0 0 0 3 1 0 0 0 0 0 00 0 , mySum: 4
thread: 1, maxBlockLvlSize: 40 
0thread: 1, maxInBlockLvlSize: 4
thread: 1, AllTableSize: 144, maxSubsetsSize: 64
 0 0 0 1 0 3 0 0 0 0 0  0 , mySum: 2
0 0 0 1 0 0 0 0 1 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 4 0 0 0 0 0 00 0  0 0, mySum:  4
0 0 0 0 0 1 0 2 1 0 0 0 00 0 0 , mySum: 2 
00 0 0 0 0 0 0 0 2 0 0  0 0 , mySum: 4
0 0 0 0 0 0 0 0 4 0 0 0 0 0 00  00  0 0 , mySum: 0 4, mySum: 2

0 0 0 0 0 1 0 1 2 0 0 0 0 0 0 0 0 0 0 0 3 00 0 0 0 , mySum: 4 
00 0 0 0 0 0 0 2 2 0 0 0 0 0  0 00  , mySum: 4
0 0 0 0 0 1 0 0 3 0 0 0 0 0 0 0 0 , mySum: 3
00 0 0 1 0 0 0 2 0 0 0 0 0 0 , mySum: 4 
0 0 0 0 0 0 0 0 0 1 3 0 0 0 00 0 0  00 , mySum:  3
, mySum: 40 0 0 1 0 0 0 1 1 0 0 0 
00 0 0 0 0 0 0 2 3 0 0 0  0 0 0 , mySum: 30
0 0 0 1 0 0 0 0 2 0 0 0  0 0 00 0  0 0, mySum:  , mySum: 53
0 0 0 0 0 1 0 4 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 3 0 0 00 , mySum: 5
0 0 0 0 0 1 0 3 1 0 0 0 0  0 0 0 00 0  0 , mySum: 50
0 0 0 0 0 1 0 2 2 0 0 0 0  0, mySum:  3
0 0 0 0 0 0 0 2 1 0 0 0 0 00  00  , mySum: 5
00 0 0 0 0 1 0 1 3 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 1 2 0 0  0 0 , mySum: 5
0 0 0 0 0 0 0 1 4 0 0 0 00 0 0  00 0  , mySum: 05 
00 0 0 0 0 0 0 3 2 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 3 1 0 0 0  0 0 0 , mySum: 5
0 0 0 0 0 0 0 4 1 0 0 0 00 0 0 0 , mySum: 4 
00 0 0 1 0 0 0 3 0 0 0 0 0  0 00 0  0, mySum:  , mySum: 45

0 0 0 0 0 0 0 4 0 0 0 00 0 0 0 0 1 0 0 4 0 0  0 0 0 0 , mySum: 4
0 0 0 1 0 0 0 2 1 0 0 00 0  0 0 00  0, mySum: 4 
0 00 0 0 0 0 0 0 0 4 0 0  , mySum: 5
0 0 0 0 0 0 0 3 3 0 0 0 0 00 0  00  , mySum: 60
 0 0 0 0 0 1 0 4 1 0 0 0 0 00 0  00  , mySum: 4, mySum: 
60 0 0 1 0 0 0 1 2 0 0 0 
0 00 0 0 0 0 0 0 2 4 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 2 2 0 0 0  0 00  0 00 , mySum: 4 
0 0 0 1 0 0 0 0 3 0 0 0 0 0 , mySum: 60
 0 0 0 0 0 1 0 3 2 0 0 0 00 0 0  00  0 0 , mySum: , mySum: 6
4
0 0 0 0 0 1 0 2 3 0 0 0 0 00 0 0 0 0 0 0 1 3 0 0 0 , mySum: 6
 0 0 0 0 0 0 0 4 2 0 0 0 0 00 0  00  0 , mySum: 06 0 
0 0 0 0 0 0 1 0 1 4 0 0 0 , mySum: 4
0 0 0 0 0 0 0 2 3 0 0 0 0 0 0 0, mySum:  0 60
 00 0 0 0 0 1 0 2 4 0 0 0  0 , mySum: 5
0 0 0 1 0 0 0 4 0 0 0 0 0 00 0  00 0  0 , mySum: , mySum: 75

0 0 0 0 0 0 0 3 4 0 0 0 0 0 0 0 1 0 0 0 3 1 0 00 0 0  0 0 00  0 , mySum: , mySum: 75
0 0 0 0 0 1 0 3 3 0 0 0 0 0 0
 0 0 0 1 0 0 0 2 2 0 00 0 0  0 , mySum: 07 0
 0 0 0 0 0 0 0 4 3 0 0 0 0 0, mySum: 5
0 0 0 1 0 0 0 1 3 0 0  0 0 , mySum: 7
0 0 0 0 0 1 0 4 2 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 1 4 0 0 00 0  00  00  00  , mySum: 7, mySum: 
0 0 0 0 0 1 0 3 4 0 0 0 0 0 50 0 , mySum: 
80 0 0 0 0 0 0 3 2 0 0 0
 0 0 0 0 0 0 0 4 4 0 0 0 00 0 0  00  0 0 , mySum: , mySum: 85

0 0 0 0 0 0 0 4 1 0 0 0 0 0 0 0 0 1 0 4 3 0 0 00 0  0 00 0  00  , mySum: 8, mySum: 
50 0 0 0 0 1 0 4 4 0 0 0 0 
00 0 0 1 0 0 0 0 4 0 0 0 0 , mySum: 9
 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 3 3 0 0 0 0 0 0 0 , mySum: 6
0 0 0 1 0 0 0 4 1 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 2 4 0 0 0 0 0 0 0 , mySum: 6
0 0 0 1 0 0 0 3 2 0 0 0 0 0 0 0 , mySum: 6
0 0 0 1 0 0 0 2 3 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 4 2 0 0 0 0 0 0 0 , mySum: 6
0 0 0 1 0 0 0 1 4 0 0 0 0 0 0 0 , mySum: 6
0 0 0 1 0 0 0 2 4 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 0 3 4 0 0 0 0 0 0 0 , mySum: 7
0 0 0 1 0 0 0 3 3 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 0 4 3 0 0 0 0 0 0 0 , mySum: 7
0 0 0 1 0 0 0 4 2 0 0 0 0 0 0 0 , mySum: 7
0 0 0 1 0 0 0 3 4 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 0 0 4 4 0 0 0 0 0 0 0 , mySum: 8
0 0 0 1 0 0 0 4 3 0 0 0 0 0 0 0 , mySum: 8
0 0 0 1 0 0 0 4 4 0 0 0 0 0 0 0 , mySum: 9
thread: 0, maxBlockLvlSize: 4
thread: 0, maxInBlockLvlSize: 7
thread: 0, AllTableSize: 288, maxSubsetsSize: 64
thread: 3, maxBlockLvlSize: 9
thread: 3, maxInBlockLvlSize: 1
thread: 3, AllTableSize: 100, maxSubsetsSize: 64
thread: 2, maxBlockLvlSize: 9
thread: 2, maxInBlockLvlSize: 2
thread: 2, AllTableSize: 200, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 1 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 1 0 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 mySum: 2
thread: 0, blockNoZero[4]: 0 0 0 0 0 2 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[5]: 0 1 0 0 0 1 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[6]: 1 0 0 0 0 1 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 1 1 0 0 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 2 mySum: 3
thread: 0, blockNoZero[8]: 0 1 0 0 0 2 
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 5
thread: 0, allBlocks[9]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 2 mySum: 3
thread: 0, blockNoZero[9]: 1 0 0 0 0 2 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 1 mySum: 3
thread: 0, blockNoZero[10]: 1 1 0 0 0 1 
copy the latest feasible solution to instance takes time: 0.006237
thread: 3, sOPT: 5
thread: 0, allBlocks[11]: 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 2 mySum: 4
thread: 0, blockNoZero[11]: 1 1 0 0 0 2 
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.004581
thread: 1, sOPT: 9
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 6
copy the latest feasible solution to instance takes time: 0.007477
thread: 2, sOPT: 6
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.005503
thread: 0, sOPT: 10
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 2, MlBk function is done, and BkID for all processes are collected.Thread: 
1, MlBk function is done, and BkID for all processes are collected.
3, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 22, UB: 25
BKID: 0, LB: 22, UB: 25, OPT: 10
Dynamic Programming Runtime: 0.143584
Execution time between LB and UB is: 0
By far, all LB UB calculation runtime: 0
Iteration: 2, UB: 25, LB: 22start at time: 1505254746
thread: 0, MlBk is called with LB: 22, UB: 23
 thread: 0, LongJobs.size() 16
thread: thread: 2, MlBk is called with LB: 1, MlBk is called with LB: 2423, UB: 24, UB: 25

 thread: 1, LongJobs.size() 16
 thread: 2, LongJobs.size() 13
thread: 0, NSTable size: 28
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 8
thread: 0, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 0, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 0, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 0, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 0, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 0, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 0, i: 6, maxN[i].weit: 9, maxN[i].idx: 6, blockDimSize[i]: 9
thread: 0, i: 0, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 1, divisor[i]: 2, blockDimSize[i]: 1
thread: 0, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 6, divisor[i]: 3, blockDimSize[i]: 3
thread: 0, largestBlockVec.elm: 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 2 
thread: 0, blockDimSizeComp: 0 0 0 0 0 2 1 2 2 0 0 2 0 2 0 3 
thread: 0, divisorComp: 0 0 0 0 0 2 2 1 1 0 0 1 0 1 0 3 
thread: 0, largestBlockVec: 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 2 
thread: 0, largestNoZeroBlockVec: 1 1 0 0 0 0 2 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 , mySum: 2
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 2 , mySum: 3
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 2 , mySum: 3
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 2 , mySum: 4
thread: 0, maxBlockLvlSize: 4
thread: 0, maxInBlockLvlSize: 25
thread: 0, AllTableSize: 1152, maxSubsetsSize: 64
thread: 2, NSTable size: 18
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 8
thread: 2, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 2, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 2, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 2, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 2, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 2, i: 5, maxN[i].weit: 9, maxN[i].idx: 5, blockDimSize[i]: 9
thread: 2, i: 0, divisor[i]: 2, blockDimSize[i]: 1
thread: 2, i: 1, divisor[i]: 2, blockDimSize[i]: 1
thread: 2, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 5, divisor[i]: 3, blockDimSize[i]: 3
thread: 2, largestBlockVec.elm: 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 2 
thread: 2, blockDimSizeComp: 0 0 0 0 0 0 1 1 2 0 0 2 0 2 0 3 
thread: 2, divisorComp: 0 0 0 0 0 0 2 2 1 0 0 1 0 1 0 3 
thread: 2, largestBlockVec: 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 2 
thread: 2, largestNoZeroBlockVec: 1 1 0 0 0 2 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 , mySum: 2
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 2 , mySum: 3
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 2 , mySum: 3
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 2 , mySum: 4
thread: 1, NSTable size: 31
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 8
thread: 1, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 1, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 1, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 1, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 1, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 1, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 1, i: 6, maxN[i].weit: 9, maxN[i].idx: 6, blockDimSize[i]: 9
thread: 1, i: 0, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, i: 1, divisor[i]: 2, blockDimSize[i]: 1
thread: 1, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 6, divisor[i]: 3, blockDimSize[i]: 3
thread: 1, largestBlockVec.elm: 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 2 
thread: 1, blockDimSizeComp: 0 0 0 0 0 2 1 2 2 0 0 2 0 2 0 3 
thread: 1, divisorComp: 0 0 0 0 0 2 2 1 1 0 0 1 0 1 0 3 
thread: 1, largestBlockVec: 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 2 
thread: 1, largestNoZeroBlockVec: 1 1 0 0 0 0 2 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 , mySum: 2
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 2 , mySum: 3
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 2 , mySum: 3
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 2 , mySum: 4
thread: 2, maxBlockLvlSize: 4
thread: 2, maxInBlockLvlSize: 7
thread: 2, AllTableSize: 288, maxSubsetsSize: 64
thread: 1, maxBlockLvlSize: 4
thread: 1, maxInBlockLvlSize: 25
thread: 1, AllTableSize: 1152, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 1 0 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 1 0 0 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 mySum: 2
thread: 0, blockNoZero[4]: 0 0 0 0 0 0 2 
Thread: 2, gpu_BlockDP is done.
thread: 0, allBlocks[5]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[5]: 0 1 0 0 0 0 1 
thread: 0, allBlocks[6]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[6]: 1 0 0 0 0 0 1 
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
thread: 0, allBlocks[7]: 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 1 1 0 0 0 0 0 
copy the latest feasible solution to instance takes time: 0.013368
thread: 2, sOPT: 10
thread: 0, allBlocks[8]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 2 mySum: 3
thread: 0, blockNoZero[8]: 0 1 0 0 0 0 2 
thread: 0, allBlocks[9]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 2 mySum: 3
thread: 0, blockNoZero[9]: 1 0 0 0 0 0 2 
thread: 0, allBlocks[10]: 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 1 mySum: 3
thread: 0, blockNoZero[10]: 1 1 0 0 0 0 1 
thread: 0, allBlocks[11]: 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 2 mySum: 4
thread: 0, blockNoZero[11]: 1 1 0 0 0 0 2 
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 3e-06
thread: 0, sOPT: 11
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.019729
thread: 1, sOPT: 10
BKID: 0, LB: 23, UB: 23, OPT: 10
Dynamic Programming Runtime: 0.424197
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 1
********************************************************
Total execution on UB and LB is: 1
OUT of Bk while loop  
UB    23
LB    23
T1    23
T2    23
OPT   10
nMachines   10
BkID	0
AllProbData.size()    2
ck :   1
AllProbData[ck].Ttable    23
ck :   0
AllProbData[ck].Ttable    24
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan24
Main Scheduling is Done
File 2-3 is Done.
******************************
Reading File...
File 2-4 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 43, LB: 24start at time: 1505254747
thread: 0, MlBk is called with LB: 24, UB: 29
thread: 3, MlBk is called with LB: 39, UB: 44
 thread: 0, LongJobs.size() 16
 thread: 3, LongJobs.size() 11
thread: 2, MlBk is called with LB: 34, UB: 39
thread: 1, MlBk is called with LB: 29, UB: 34
 thread: 2, LongJobs.size() 13
 thread: 1, LongJobs.size() 15
thread: 2, NSTable size: 16
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 5, maxN[i].idx: 0, blockDimSize[i]: 5
thread: 2, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 2, i: 2, maxN[i].weit: 5, maxN[i].idx: 2, blockDimSize[i]: 5
thread: 2, i: 3, maxN[i].weit: 5, maxN[i].idx: 3, blockDimSize[i]: 5
thread: 2, i: 0, divisor[i]: 5, blockDimSize[i]: 1
thread: 2, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 2, divisor[i]: 5, blockDimSize[i]: 1
thread: 2, i: 3, divisor[i]: 5, blockDimSize[i]: 1
thread: 2, largestBlockVec.elm: 0 0 0 0 4 0 0 4 4 0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 0 1 0 2 1 1 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 5 0 1 5 5 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 4 0 0 4 4 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 4 0 4 4 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 0 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 3 0 0 0 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 2 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 1 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 1 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 3 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 0 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 0 0 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 3 0 0 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 0 0 0 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 3 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 0 0 1 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 3 0 0 1 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 0 0 1 2 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 4 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 3 0 0 0 2 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 1 3 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 0 0 2 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 0 0 3 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 0 0 0 3 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 3 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 1 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 2 3 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 3 2 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 4 0 0 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 4 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 4 0 0 0 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 0 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 2 2 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 3 0 0 2 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 3 0 0 3 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 4 0 0 0 2 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 0 0 4 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 3 0 0 2 1 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 4 0 0 1 1 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 3 0 0 0 3 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 0 0 3 1 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 4 0 0 2 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 3 0 0 1 2 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 0 0 2 2 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 0 0 1 4 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 0 0 1 3 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 4 2 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 0 0 4 1 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 0 0 0 4 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 0 0 2 3 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 3 3 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 2 4 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 0 0 3 2 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 3 4 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 0 4 3 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 0 0 3 3 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 3 0 0 1 3 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 0 0 2 4 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 3 0 0 2 2 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 4 0 0 0 3 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 3 0 0 3 1 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 3 0 0 0 4 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 0 0 4 2 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 4 0 0 1 2 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 2 0 0 2 3 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 4 0 0 2 1 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 2 0 0 4 1 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 3 0 0 4 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 4 0 0 3 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 2 0 0 3 2 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 2 0 0 1 4 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 0 4 4 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 2 0 0 2 4 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 4 0 0 4 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 4 0 0 0 4 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 4 0 0 1 3 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 4 0 0 2 2 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 4 0 0 3 1 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 3 0 0 4 1 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 2 0 0 3 3 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 3 0 0 3 2 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 3 0 0 2 3 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 3 0 0 1 4 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 1 0 0 3 4 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 1 0 0 4 3 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 2 0 0 4 2 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 1 0 0 4 4 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 4 0 0 3 2 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 4 0 0 2 3 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 2 0 0 3 4 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 2 0 0 4 3 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 4 0 0 1 4 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 3 0 0 4 2 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 3 0 0 2 4 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 3 0 0 3 3 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 4 0 0 4 1 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 4 0 0 4 2 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 4 0 0 3 3 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 3 0 0 3 4 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 4 0 0 2 4 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 3 0 0 4 3 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 2 0 0 4 4 0 0 0 0 0 0 0 , mySum: 10
0 0 0 0 4 0 0 3 4 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 3 0 0 4 4 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 4 0 0 4 3 0 0 0 0 0 0 0 , mySum: 11
0 0 0 0 4 0 0 4 4 0 0 0 0 0 0 0 , mySum: 12
thread: 1, NSTable size: thread: 2, maxBlockLvlSize: 32
19
thread: 2, maxInBlockLvlSize: 1
thread: 2, AllTableSize: 250, maxSubsetsSize: 64
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 8
thread: 1, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 1, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 1, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 1, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 1, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 1, i: 5, maxN[i].weit: 9, maxN[i].idx: 5, blockDimSize[i]: 9
thread: 1, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 3, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 5, divisor[i]: 3, blockDimSize[i]: 3
thread: 1, largestBlockVec.elm: 0 0 0 0 0 0 0 0 0 2 2 0 0 0 0 2 
thread: 1, blockDimSizeComp: 0 0 0 0 0 0 0 2 2 1 1 0 0 0 2 3 
thread: 1, divisorComp: 0 0 0 0 0 0 0 1 1 3 3 0 0 0 1 3 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0 2 2 0 0 0 0 2 
thread: 1, largestNoZeroBlockVec: 0 0 2 2 0 2 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 , mySum: 2
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 1 2 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 2 , mySum: 3
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 2 , mySum: 3
0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 2 , mySum: 4
0 0 0 0 0 0 0 0 0 1 2 0 0 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 2 , mySum: 4
0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 2 , mySum: 4
0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 2 2 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 1 2 0 0 0 0 2 , mySum: 5
0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 2 , mySum: 5
0 0 0 0 0 0 0 0 0 2 2 0 0 0 0 1 , mySum: 5
0 0 0 0 0 0 0 0 0 2 2 0 0 0 0 2 , mySum: 6
thread: 3, NSTable size: 17
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 4
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 3, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 3, i: 2, maxN[i].weit: 5, maxN[i].idx: 2, blockDimSize[i]: 5
thread: 3, i: 3, maxN[i].weit: 5, maxN[i].idx: 3, blockDimSize[i]: 5
thread: 3, i: 0, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 2, divisor[i]: 5, blockDimSize[i]: 1
thread: 3, i: 3, divisor[i]: 5, blockDimSize[i]: 1
thread: 3, largestBlockVec.elm: 0 0 0 0 2 0 0 4 4 0 0 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 0 1 0 2 1 1 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 0 3 0 1 5 5 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 2 0 0 4 4 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 2 0 4 4 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 0 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 0 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 1 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 0 0 0 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 3 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 0 0 1 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 3 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 0 0 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 2 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 2 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 1 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 3 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 2 2 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 4 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 0 0 0 3 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 0 0 1 2 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 0 0 2 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 0 0 3 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 3 2 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 1 3 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 2 3 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 0 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 4 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 1 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 2 4 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 0 0 1 3 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 3 3 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 0 0 0 4 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 4 2 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 0 0 2 2 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 0 0 3 1 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 0 0 4 1 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 0 0 4 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 0 0 3 2 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 0 0 1 4 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 0 0 2 3 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 0 0 2 3 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 2 0 0 3 2 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 2 0 0 4 1 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 0 0 2 4 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 2 0 0 1 4 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 0 3 4 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 0 4 3 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 0 0 4 2 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 0 0 3 3 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 0 4 4 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 2 0 0 2 4 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 1 0 0 4 3 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 2 0 0 3 3 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 1 0 0 3 4 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 2 0 0 4 2 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 1 0 0 4 4 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 2 0 0 3 4 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 2 0 0 4 3 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 2 0 0 4 4 0 0 0 0 0 0 0 , mySum: 10
thread: 0, NSTable size: 32
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 8
thread: 0, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 0, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 0, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 0, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 0, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 0, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 0, i: 6, maxN[i].weit: 9, maxN[i].idx: 6, blockDimSize[i]: 9
thread: 0, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 3, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 4, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 6, divisor[i]: 3, blockDimSize[i]: 3
thread: 0, largestBlockVec.elm: 0 0 0 0 0 0 0 0 0 2 2 0 0 0 0 2 
thread: 0, blockDimSizeComp: 0 0 0 0 0 0 2 2 2 1 1 0 0 0 2 3 
thread: 0, divisorComp: 0 0 0 0 0 0 1 1 1 3 3 0 0 0 1 3 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 2 2 0 0 0 0 2 
thread: 0, largestNoZeroBlockVec: 0 0 0 2 2 0 2 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 , mySum: 2
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 1 2 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 2 , mySum: 3
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 2 , mySum: 3
0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 2 , mySum: 4
0 0 0 0 0 0 0 0 0 1 2 0 0 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 2 , mySum: 4
0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 2 , mySum: 4
0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 2 2 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 1 2 0 0 0 0 2 , mySum: 5
0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 2 , mySum: 5
0 0 0 0 0 0 0 0 0 2 2 0 0 0 0 1 , mySum: 5
0 0 0 0 0 0 0 0 0 2 2 0 0 0 0 2 , mySum: 6
thread: 3, maxBlockLvlSize: 13
thread: 3, maxInBlockLvlSize: 1
thread: 3, AllTableSize: 150, maxSubsetsSize: 64
thread: 1, maxBlockLvlSize: 7
thread: 1, maxInBlockLvlSize: 7
thread: 1, AllTableSize: 648, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 7
thread: 0, maxInBlockLvlSize: 14
thread: 0, AllTableSize: 1296, maxSubsetsSize: 64
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 5
copy the latest feasible solution to instance takes time: 0.008985
thread: 3, sOPT: 5
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 6
copy the latest feasible solution to instance takes time: 0.011527
thread: 2, sOPT: 6
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 0 0 1 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 0 1 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 mySum: 2
thread: 0, blockNoZero[4]: 0 0 0 0 0 0 2 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[5]: 0 0 0 0 1 0 1 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 0 0 0 2 0 0 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 0 0 0 2 0 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[8]: 0 0 0 1 0 0 1 
thread: 0, allBlocks[9]: 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[9]: 0 0 0 1 1 0 0 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 1 mySum: 3
thread: 0, blockNoZero[10]: 0 0 0 1 1 0 1 
thread: 0, allBlocks[11]: 0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 0 0 0 2 1 0 0 
thread: 0, allBlocks[12]: 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 1 mySum: 3
thread: 0, blockNoZero[12]: 0 0 0 2 0 0 1 
thread: 0, allBlocks[13]: 0 0 0 0 0 0 0 0 0 1 2 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[13]: 0 0 0 1 2 0 0 
thread: 0, allBlocks[14]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 2 mySum: 3
thread: 0, blockNoZero[14]: 0 0 0 1 0 0 2 
thread: 0, allBlocks[15]: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 1 mySum: 3
thread: 0, blockNoZero[15]: 0 0 0 0 2 0 1 
thread: 0, allBlocks[16]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 2 mySum: 3
thread: 0, blockNoZero[16]: 0 0 0 0 1 0 2 
thread: 0, allBlocks[17]: 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 2 mySum: 4
thread: 0, blockNoZero[17]: 0 0 0 1 1 0 2 
thread: 0, allBlocks[18]: 0 0 0 0 0 0 0 0 0 1 2 0 0 0 0 1 mySum: 4
thread: 0, blockNoZero[18]: 0 0 0 1 2 0 1 
thread: 0, allBlocks[19]: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 2 mySum: 4
thread: 0, blockNoZero[19]: 0 0 0 0 2 0 2 
Thread: 1, gpu_BlockDP is done.
thread: 0, allBlocks[20]: 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 2 mySum: 4
thread: 0, blockNoZero[20]: 0 0 0 2 0 0 2 
thread: 0, allBlocks[21]: 0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 1 mySum: 4
thread: 0, blockNoZero[21]: 0 0 0 2 1 0 1 
thread: 0, allBlocks[22]: 0 0 0 0 0 0 0 0 0 2 2 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[22]: 0 0 0 2 2 0 0 
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 8
thread: 0, allBlocks[23]: 0 0 0 0 0 0 0 0 0 1 2 0 0 0 0 2 mySum: 5
thread: 0, blockNoZero[23]: 0 0 0 1 2 0 2 
thread: 0, allBlocks[24]: 0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 2 mySum: 5
thread: 0, blockNoZero[24]: 0 0 0 2 1 0 2 
thread: 0, allBlocks[25]: 0 0 0 0 0 0 0 0 0 2 2 0 0 0 0 1 mySum: 5
thread: 0, blockNoZero[25]: 0 0 0 2 2 0 1 
copy the latest feasible solution to instance takes time: 0.022554
thread: 1, sOPT: 8
thread: 0, allBlocks[26]: 0 0 0 0 0 0 0 0 0 2 2 0 0 0 0 2 mySum: 6
thread: 0, blockNoZero[26]: 0 0 0 2 2 0 2 
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.022067
thread: 0, sOPT: 10
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: Thread: 32, MlBk function is done, and BkID for all processes are collected., MlBk function is done, and BkID for all processes are collected.1
, MlBk function is done, and BkID for all processes are collected.

sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 24, UB: 27
BKID: 0, LB: 24, UB: 27, OPT: 10
Dynamic Programming Runtime: 0.357135
Execution time between LB and UB is: 0
By far, all LB UB calculation runtime: 0
Iteration: 2, UB: 27, LB: 24start at time: 1505254747
thread: 0, MlBk is called with LB: 24, UB: 25
 thread: 0, LongJobs.size() 16
thread: thread: 12, MlBk is called with LB: , MlBk is called with LB: 26, UB: 2725, UB: 26

 thread: 2, LongJobs.size() 16
 thread: 1, LongJobs.size() 16
thread: 0, NSTable size: 25
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 8
thread: 0, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 0, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 0, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 0, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 0, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 0, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 0, i: 6, maxN[i].weit: 9, maxN[i].idx: 6, blockDimSize[i]: 9
thread: 0, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 3, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 4, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 6, divisor[i]: 3, blockDimSize[i]: 3
thread: 0, largestBlockVec.elm: 0 0 0 0 0 0 0 0 0 2 2 0 0 0 0 2 
thread: 0, blockDimSizeComp: 0 0 0 0 0 0 2 2 2 1 1 0 0 0 2 3 
thread: 0, divisorComp: 0 0 0 0 0 0 1 1 1 3 3 0 0 0 1 3 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 2 2 0 0 0 0 2 
thread: 0, largestNoZeroBlockVec: 0 0 0 2 2 0 2 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 , mySum: 2
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 1 2 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 2 , mySum: 3
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 2 , mySum: 3
0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 2 , mySum: 4
0 0 0 0 0thread:  0 0 0 0 11 2 0, NSTable size:  280 
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 00 
0 thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 8
thread: 1, i: 0, maxN[i].weit: 2, maxN[i].idx: 1 , mySum: 4
00 0 0 0 0 0 0 0 0 0 2 0 0 0, blockDimSize[i]:  2
0 thread: 1, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
2thread: 1, i: 2, maxN[i].weit: 2, maxN[i].idx:  , mySum: 24
, blockDimSize[i]: 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 2 , mySum: 4
0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 2 2 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 1 2 0 0 0 0 2 , mySum: 5
0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 2 , mySum: 5
0 0 0 0 0 0 0 0 0 2 2 0 0 0 0 1 , mySum: 5
0 0 0 0 0 0 0 0 0 2 2 0 0 0 0 2 , mySum: 6
2
thread: 1, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 1, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 1, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 1, i: 6, maxN[i].weit: 9, maxN[i].idx: 6, blockDimSize[i]: 9
thread: 1, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 3, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 4, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 6, divisor[i]: 3, blockDimSize[i]: 3
thread: 1, largestBlockVec.elm: 0 0 0 0 0 0 0 0 0 2 2 0 0 0 0 2 
thread: 1, blockDimSizeComp: 0 0 0 0 0 0 2 2 2 1 1 0 0 0 2 3 
thread: 1, divisorComp: 0 0 0 0 0 0 1 1 1 3 3 0 0 0 1 3 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0 2 2 0 0 0 0 2 
thread: 1, largestNoZeroBlockVec: 0 0 0 2 2 0 2 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 , mySum: 2
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 1 2 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 2 , mySum: 3
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 2 , mySum: 3
0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 2 , mySum: 4
0 0 0 0 0 0 0 0 0 1 2 0 0 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 2 , mySum: 4
0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 2 , mySum: 4
0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 2 2 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 1 2 0 0 0 0 2 , mySum: 5
0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 2 , mySum: 5
0 0 0 0 0 0 0 0 0 2 2 0 0 0 0 1 , mySum: 5
0 0 0 0 0 0 0 0 0 2 2 0 0 0 0 2 , mySum: 6
thread: 0, maxBlockLvlSize: 7
thread: 0, maxInBlockLvlSize: 14
thread: 0, AllTableSize: 1296, maxSubsetsSize: 64
thread: 2, NSTable size: 32
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 8
thread: 2, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 2, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 2, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 2, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 2, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 2, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 2, i: 6, maxN[i].weit: 9, maxN[i].idx: 6, blockDimSize[i]: 9
thread: 2, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 3, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 4, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 6, divisor[i]: 3, blockDimSize[i]: 3
thread: 2, largestBlockVec.elm: 0 0 0 0 0 0 0 0 0 2 2 0 0 0 0 2 
thread: 2, blockDimSizeComp: 0 0 0 0 0 0 2 2 2 1 1 0 0 0 2 3 
thread: 2, divisorComp: 0 0 0 0 0 0 1 1 1 3 3 0 0 0 1 3 
thread: 2, largestBlockVec: 0 0 0 0 0 0 0 0 0 2 2 0 0 0 0 2 
thread: 2, largestNoZeroBlockVec: 0 0 0 2 2 0 2 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 , mySum: 2
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 1 2 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 2 , mySum: 3
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 2 , mySum: 3
0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 2 , mySum: 4
0 0 0 0 0 0 0 0 0 1 2 0 0 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 2 , mySum: 4
0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 2 , mySum: 4
0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 2 2 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 1 2 0 0 0 0 2 , mySum: 5
0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 2 , mySum: 5
0 0 0 0 0 0 0 0 0 2 2 0 0 0 0 1 , mySum: 5
0 0 0 0 0 0 0 0 0 2 2 0 0 0 0 2 , mySum: 6
thread: 1, maxBlockLvlSize: 7
thread: 1, maxInBlockLvlSize: 14
thread: 1, AllTableSize: 1296, maxSubsetsSize: 64
thread: 2, maxBlockLvlSize: 7
thread: 2, maxInBlockLvlSize: 14
thread: 2, AllTableSize: 1296, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 0 0 1 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 0 1 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 mySum: 2
thread: 0, blockNoZero[4]: 0 0 0 0 0 0 2 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[5]: 0 0 0 0 1 0 1 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 0 0 0 2 0 0 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 0 0 0 2 0 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[8]: 0 0 0 1 0 0 1 
thread: 0, allBlocks[9]: 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[9]: 0 0 0 1 1 0 0 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 1 mySum: 3
thread: 0, blockNoZero[10]: 0 0 0 1 1 0 1 
thread: 0, allBlocks[11]: 0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 0 0 0 2 1 0 0 
thread: 0, allBlocks[12]: 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 1 mySum: 3
thread: 0, blockNoZero[12]: 0 0 0 2 0 0 1 
thread: 0, allBlocks[13]: 0 0 0 0 0 0 0 0 0 1 2 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[13]: 0 0 0 1 2 0 0 
thread: 0, allBlocks[14]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 2 mySum: 3
thread: 0, blockNoZero[14]: 0 0 0 1 0 0 2 
thread: 0, allBlocks[15]: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 1 mySum: 3
thread: 0, blockNoZero[15]: 0 0 0 0 2 0 1 
thread: 0, allBlocks[16]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 2 mySum: 3
thread: 0, blockNoZero[16]: 0 0 0 0 1 0 2 
thread: 0, allBlocks[17]: 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 2 mySum: 4
thread: 0, blockNoZero[17]: 0 0 0 1 1 0 2 
thread: 0, allBlocks[18]: 0 0 0 0 0 0 0 0 0 1 2 0 0 0 0 1 mySum: 4
thread: 0, blockNoZero[18]: 0 0 0 1 2 0 1 
thread: 0, allBlocks[19]: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 2 mySum: 4
thread: 0, blockNoZero[19]: 0 0 0 0 2 0 2 
thread: 0, allBlocks[20]: 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 2 mySum: 4
thread: 0, blockNoZero[20]: 0 0 0 2 0 0 2 
thread: 0, allBlocks[21]: 0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 1 mySum: 4
thread: 0, blockNoZero[21]: 0 0 0 2 1 0 1 
thread: 0, allBlocks[22]: 0 0 0 0 0 0 0 0 0 2 2 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[22]: 0 0 0 2 2 0 0 
thread: 0, allBlocks[23]: 0 0 0 0 0 0 0 0 0 1 2 0 0 0 0 2 mySum: 5
thread: 0, blockNoZero[23]: 0 0 0 1 2 0 2 
thread: 0, allBlocks[24]: 0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 2 mySum: 5
thread: 0, blockNoZero[24]: 0 0 0 2 1 0 2 
thread: 0, allBlocks[25]: 0 0 0 0 0 0 0 0 0 2 2 0 0 0 0 1 mySum: 5
thread: 0, blockNoZero[25]: 0 0 0 2 2 0 1 
thread: 0, allBlocks[26]: 0 0 0 0 0 0 0 0 0 2 2 0 0 0 0 2 mySum: 6
thread: 0, blockNoZero[26]: 0 0 0 2 2 0 2 
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 11
copy the latest feasible solution to instance takes time: 5e-06
thread: 1, sOPT: 11
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 3e-06
thread: 0, sOPT: 11
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.022303
thread: 2, sOPT: 10
BKID: 0, LB: 26, UB: 26, OPT: 10
Dynamic Programming Runtime: 0.517743
Execution time between LB and UB is: 0
By far, all LB UB calculation runtime: 0
********************************************************
Total execution on UB and LB is: 0
OUT of Bk while loop  
UB    26
LB    26
T1    26
T2    26
OPT   10
nMachines   10
BkID	0
AllProbData.size()    2
ck :   1
AllProbData[ck].Ttable    26
ck :   0
AllProbData[ck].Ttable    26
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan29
Main Scheduling is Done
File 2-4 is Done.
******************************
Reading File...
File 2-5 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 37, LB: 19start at time: 1505254747
thread: 0, MlBk is called with LB: 19, UB: 23
thread: 3, MlBk is called with LB: 31, UB: 37
 thread: 0, LongJobs.size() 14
thread: 2, MlBk is called with LB: 27, UB: 31
 thread: 3, LongJobs.size() 9
thread: 1, MlBk is called with LB: 23, UB: 27
 thread: 2, LongJobs.size() 11
 thread: 1, LongJobs.size() 12
thread: 3, NSTable size: 30
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 3, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 3, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 3, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 3, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 3, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 3, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, i: 3, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, i: 4, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, largestBlockVec.elm: 0 0 0 0 0 2 2 2 0 0 0 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 2 2 1 1 1 2 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 1 1 3 3 3 1 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 2 2 2 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 0 2 2 2 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 1 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 2 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 0 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 1 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 2 2 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 1 2 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 2 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 2 2 0 0 0 0 0 0 0 0 , mySum: 6
thread: 3, maxBlockLvlSize: 7
thread: 3, maxInBlockLvlSize: 3
thread: 3, AllTableSize: 216, maxSubsetsSize: 64
thread: 2, NSTable size: 34
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 2, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 2, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 2, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 2, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 2, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 2, i: 6, maxN[i].weit: 4, maxN[i].idx: 6, blockDimSize[i]: 4
thread: 2, i: 0, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 5, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 6, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, largestBlockVec.elm: 0 0 0 0 0 0 0 2 0 0 0 0 0 0 2 1 
thread: 2, blockDimSizeComp: 0 0 0 0 0 0 0 1 2 2 0 2 2 0 1 2 
thread: 2, divisorComp: 0 0 0 0 0 0 0 3 1 1 0 1 1 0 3 2 
thread: 2, largestBlockVec: 0 0 0 0 0 0 0 2 0 0 0 0 0 0 2 1 
thread: 2, largestNoZeroBlockVec: 2 0 0 0 0 2 1 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 , mySum: 2
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 , mySum: 3
0 0 0 0 0 0 0 2 0 0 0 0 0 0 1 0 , mySum: 3
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 1 0 0 0 0 0 0 2 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 1 , mySum: 3
0 0 0 0 0 0 0 1 0 0 0 0 0 0 2 1 , mySum: 4
0 0 0 0 0 0 0 2 0 0 0 0 0 0 1 1 , mySum: 4
0 0 0 0 0 0 0 2 0 0 0 0 0 0 2 0 , mySum: 4
0 0 0 0 0 0 0 2 0 0 0 0 0 0 2 1 , mySum: 5
thread: 2, maxBlockLvlSize: 5
thread: 2, maxInBlockLvlSize: 10
thread: 2, AllTableSize: 576, maxSubsetsSize: 64
thread: 1, NSTable size: 35
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 1, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 1, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 1, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 1, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 1, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 1, i: 6, maxN[i].weit: 3, maxN[i].idx: 6, blockDimSize[i]: 3
thread: 1, i: 7, maxN[i].weit: 4, maxN[i].idx: 7, blockDimSize[i]: 4
thread: 1, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 6, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 7, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, largestBlockVec.elm: 0 0 0 0 0 0 0 2 0 0 0 0 0 0 2 1 
thread: 1, blockDimSizeComp: 0 0 0 0 0 0 2 1 2 2 0 2 2 0 1 2 
thread: 1, divisorComp: 0 0 0 0 0 0 1 3 1 1 0 1 1 0 3 2 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 2 0 0 0 0 0 0 2 1 
thread: 1, largestNoZeroBlockVec: 0 2 0 0 0 0 2 1 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 , mySum: 2
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 , mySum: 3
0 0 0 0 0 0 0 2 0 0 0 0 0 0 1 0 , mySum: 3
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 1 0 0 0 0 0 0 2 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 1 , mySum: 3
0 0 0 0 0 0 0 1 0 0 0 0 0 0 2 1 , mySum: 4
0 0 0 0 0 0 0 2 0 0 0 0 0 0 1 1 , mySum: 4
0 0 0 0 0 0 0 2 0 0 0 0 0 0 2 0 , mySum: 4
0 0 0 0 0 0 0 2 0 0 0 0 0 0 2 1 , mySum: 5
thread: 1, maxBlockLvlSize: 5
thread: 1, maxInBlockLvlSize: 20
thread: 1, AllTableSize: 1152, maxSubsetsSize: 64
thread: 0, NSTable size: 33
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 0, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 0, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 0, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 0, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 0, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 0, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 0, i: 7, maxN[i].weit: 3, maxN[i].idx: 7, blockDimSize[i]: 3
thread: 0, i: 8, maxN[i].weit: 4, maxN[i].idx: 8, blockDimSize[i]: 4
thread: 0, i: 0, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 7, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 8, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, largestBlockVec.elm: 0 0 0 0 0 2 0 2 0 0 0 0 0 0 0 1 
thread: 0, blockDimSizeComp: 0 0 0 0 0 1 2 1 2 2 0 2 2 0 3 2 
thread: 0, divisorComp: 0 0 0 0 0 3 1 3 1 1 0 1 1 0 1 2 
thread: 0, largestBlockVec: 0 0 0 0 0 2 0 2 0 0 0 0 0 0 0 1 
thread: 0, largestNoZeroBlockVec: 2 0 2 0 0 0 0 0 1 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 1 , mySum: 4
0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 1 , mySum: 4
0 0 0 0 0 2 0 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 0 2 0 0 0 0 0 0 0 1 , mySum: 5
thread: 0, maxBlockLvlSize: 5
thread: 0, maxInBlockLvlSize: 50
thread: 0, AllTableSize: 3456, maxSubsetsSize: 64
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 4
copy the latest feasible solution to instance takes time: 0.013531
thread: 3, sOPT: 4
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 6
copy the latest feasible solution to instance takes time: 0.030899
thread: 2, sOPT: 6
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 1 0 0 0 0 0 0 
Thread: 1, gpu_BlockDP is done.
thread: 0, allBlocks[3]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 1 0 0 0 0 0 0 0 0 
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 7
copy the latest feasible solution to instance takes time: 0.039442
thread: 1, sOPT: 7
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[4]: 0 0 1 0 0 0 0 0 1 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 0 2 0 0 0 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[6]: 1 0 0 0 0 0 0 0 1 
thread: 0, allBlocks[7]: 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 1 0 1 0 0 0 0 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[8]: 2 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 1 mySum: 3
thread: 0, blockNoZero[9]: 1 0 1 0 0 0 0 0 1 
thread: 0, allBlocks[10]: 0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 2 0 1 0 0 0 0 0 0 
thread: 0, allBlocks[11]: 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 1 mySum: 3
thread: 0, blockNoZero[11]: 2 0 0 0 0 0 0 0 1 
thread: 0, allBlocks[12]: 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[12]: 1 0 2 0 0 0 0 0 0 
thread: 0, allBlocks[13]: 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 1 mySum: 3
thread: 0, blockNoZero[13]: 0 0 2 0 0 0 0 0 1 
thread: 0, allBlocks[14]: 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 1 mySum: 4
thread: 0, blockNoZero[14]: 1 0 2 0 0 0 0 0 1 
thread: 0, allBlocks[15]: 0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 1 mySum: 4
thread: 0, blockNoZero[15]: 2 0 1 0 0 0 0 0 1 
thread: 0, allBlocks[16]: 0 0 0 0 0 2 0 2 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[16]: 2 0 2 0 0 0 0 0 0 
thread: 0, allBlocks[17]: 0 0 0 0 0 2 0 2 0 0 0 0 0 0 0 1 mySum: 5
thread: 0, blockNoZero[17]: 2 0 2 0 0 0 0 0 1 
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.058725
thread: 0, sOPT: 9
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 2, MlBk function is done, and BkID for all processes are collected.
1, MlBk function is done, and BkID for all processes are collected.
Thread: 3, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 19, UB: 22
BKID: 0, LB: 19, UB: 22, OPT: 9
Dynamic Programming Runtime: 0.893075
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 1
Iteration: 2, UB: 22, LB: 19start at time: 1505254748
thread: 0, MlBk is called with LB: 19, UB: 20
 thread: 0, LongJobs.size() 15
thread: thread: 1, MlBk is called with LB: 202, UB: 21, MlBk is called with LB: 21
, UB: 22
 thread:  thread: 1, LongJobs.size() 2, LongJobs.size() 14
14
thread: 1, NSTable size: 28
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: thread: 12, NSTable size: 33
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0

thread: thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 1, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
2thread: 1, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, i: , blockDimSize[i]: 33
, alltableelemets[maxindex].elm[i]: thread: 1, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 1, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 20
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 2

thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 2, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 2, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 2, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 2, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 2, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 2, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 2, i: 7, maxN[i].weit: 3, maxN[i].idx: 7, blockDimSize[i]: 3
thread: 2, i: 8, maxN[i].weit: 4thread: 1, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 1, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 1, i: 7, maxN[i].weit: 3, maxN[i].idx: 7, blockDimSize[i]: 3
, maxN[i].idx: 8, blockDimSize[i]: 4
thread: thread: 12, i: 8, maxN[i].weit: , i: 40, maxN[i].idx: , divisor[i]: 8, blockDimSize[i]: 34, blockDimSize[i]: 
1thread: 1, i: 0, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 7, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 8, divisor[i]: 2, blockDimSize[i]: 2

thread: 2, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: thread: 1, largestBlockVec.elm: 2, i: 3, divisor[i]: 01, blockDimSize[i]:  2
thread: 2, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 7, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 8, divisor[i]: 2, blockDimSize[i]: 2
0 thread: 2, largestBlockVec.elm: 0 00  0 0 02  0 0 2 0 2 00  0 0 20  0 0 00  1 0 
0thread: 1, blockDimSizeComp: 0 0 0 0 0 1 2 1 2 2 0 2 2  0 3 02  
0thread: 1, divisorComp: 0 0 0 0 0 3 1 3 1 1 0 0  1 0
 thread: 2, blockDimSizeComp: 0 0 0 0 0 1 2 1 2 12 0  21 2  00  1 32 2  

thread: 2, divisorComp: 0 0 0 0 0 3 1 3 1 1 0thread: 1, largestBlockVec: 0 0 0 0 0 2 0 2  0 0 10  01  00 1  2 0 
0 1thread: 2, largestBlockVec: 0 0 0 0 0 2 0 2 0 0 0  0 
0thread: 1, largestNoZeroBlockVec: 2 0 2 0 0 0 0 0 1 
 0 0 1 
thread: 2, largestNoZeroBlockVec: 2 0 2 0 0 0 0 0 1 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 thread: 02, allBlocks:  00 0  00  00 0  0 00  00 0  0 01  0 0, mySum:  1
00 0 0 0 0 0 0 1 0 0 0  00  00  00  00 0  , mySum: 00 
, mySum: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 11 , mySum: 
10 0 0 0 0 1 0 0 0 0 0 0 0 
00 0 0 0 0 0 0 1 0 0 0 0 0  0 00  0 0, mySum:  1, mySum: 1

0 0 0 0 0 0 0 1 0 0 0 0 0 0 00 0 0 0 0 1 0 0 0 0 0  1 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 00 0 0 0 0 , mySum: 1 
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 10 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0  0 00  01  , mySum: , mySum: 22

0 0 0 0 0 2 0 0 0 0 0 0 0 00 0 0 0 0 0 0 2 0 0 0 0  0 0 00  0 , mySum: 20
0 0 0 0 0 1 0 0 0 0 0 0 0  , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 00 0  01  1 , mySum: , mySum: 3
0 0 0 0 0 2 0 1 0 0 0 0 0 2
0 0 0 0 0 1 0 1 0 0 0 0 00 0 0 , mySum: 3
 0 0 0 0 0 2 0 0 0 0 0 0 0 00  00 0  , mySum: 21
 , mySum: 0 0 0 0 0 2 0 0 0 0 0 0 0 0 30 0 , mySum: 
0 0 0 0 0 1 0 2 0 0 0 0 0 02 0 
0 0 0 0 0 1 0 1 0 0 0 0 0 00 0  1, mySum:  3, mySum: 
0 0 0 0 0 0 0 2 0 0 0 0 0 03 0 1 
, mySum: 0 0 0 0 0 2 0 1 0 0 0 0 0 0 03 0 , mySum: 
30 0 0 0 0 1 0 2 0 0 0 0 0
 0 0 0 0 0 0 2 0 0 0 0 0 0 00 0  10 , mySum:  4
10 0 0 0 0 2 0 1 0 0 0 0 0  , mySum: 3
0 0 0 0 0 1 0 2 0 0 0 0 0 00 0  00  1 , mySum: 3, mySum: 
40 0 0 0 0 0 0 2 0 0 0 0 0 0 0
 0 0 0 0 0 2 0 2 0 0 0 01 0 0  , mySum: 0 30
 , mySum: 0 0 0 0 0 1 0 2 0 0 0 0 0 0 04 1 , mySum: 
4
0 0 0 0 0 2 0 1 0 0 0 0 0 00 0 0 0 0 2 0 2 0 0 0 0  0 0 00 1  , mySum: 51
 , mySum: 4
0 0 0 0 0 2 0 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 0 2 0 0 0 0 0 0 0 1 , mySum: 5
thread: 2, maxBlockLvlSize: 5
thread: 2, maxInBlockLvlSize: 50
thread: 2, AllTableSize: 3456, maxSubsetsSize: 64
thread: 1, maxBlockLvlSize: 5
thread: 1, maxInBlockLvlSize: 50
thread: 1, AllTableSize: 3456, maxSubsetsSize: 64
thread: 0, NSTable size: 36
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 0, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 0, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 0, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 0, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 0, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 0, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 0, i: 7, maxN[i].weit: 2, maxN[i].idx: 7, blockDimSize[i]: 2
thread: 0, i: 8, maxN[i].weit: 3, maxN[i].idx: 8, blockDimSize[i]: 3
thread: 0, i: 9, maxN[i].weit: 4, maxN[i].idx: 9, blockDimSize[i]: 4
thread: 0, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 3, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 7, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 8, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 9, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, largestBlockVec.elm: 0 0 0 0 0 2 0 2 0 0 0 0 0 0 0 1 
thread: 0, blockDimSizeComp: 0 0 0 0 2 1 2 1 2 2 0 2 2 0 3 2 
thread: 0, divisorComp: 0 0 0 0 1 3 1 3 1 1 0 1 1 0 1 2 
thread: 0, largestBlockVec: 0 0 0 0 0 2 0 2 0 0 0 0 0 0 0 1 
thread: 0, largestNoZeroBlockVec: 0 2 0 2 0 0 0 0 0 1 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 1 , mySum: 4
0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 1 , mySum: 4
0 0 0 0 0 2 0 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 0 2 0 0 0 0 0 0 0 1 , mySum: 5
thread: 0, maxBlockLvlSize: 5
thread: 0, maxInBlockLvlSize: 91
thread: 0, AllTableSize: 6912, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 0 1 0 0 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 1 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[4]: 0 0 0 1 0 0 0 0 0 1 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 0 0 2 0 0 0 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[6]: 0 1 0 0 0 0 0 0 0 1 
thread: 0, allBlocks[7]: 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 0 1 0 1 0 0 0 0 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[8]: 0 2 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 1 mySum: 3
thread: 0, blockNoZero[9]: 0 1 0 1 0 0 0 0 0 1 
thread: 0, allBlocks[10]: 0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 0 2 0 1 0 0 0 0 0 0 
thread: 0, allBlocks[11]: 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 1 mySum: 3
thread: 0, blockNoZero[11]: 0 2 0 0 0 0 0 0 0 1 
thread: 0, allBlocks[12]: 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[12]: 0 1 0 2 0 0 0 0 0 0 
thread: 0, allBlocks[13]: 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 1 mySum: 3
thread: 0, blockNoZero[13]: 0 0 0 2 0 0 0 0 0 1 
thread: 0, allBlocks[14]: 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 1 mySum: 4
thread: 0, blockNoZero[14]: 0 1 0 2 0 0 0 0 0 1 
thread: 0, allBlocks[15]: 0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 1 mySum: 4
thread: 0, blockNoZero[15]: 0 2 0 1 0 0 0 0 0 1 
thread: 0, allBlocks[16]: 0 0 0 0 0 2 0 2 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[16]: 0 2 0 2 0 0 0 0 0 0 
thread: 0, allBlocks[17]: 0 0 0 0 0 2 0 2 0 0 0 0 0 0 0 1 mySum: 5
thread: 0, blockNoZero[17]: 0 2 0 2 0 0 0 0 0 1 
Thread: 2, gpu_BlockDP is done.
Thread: 1, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 9
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.23742
thread: 1, sOPT: 9
copy the latest feasible solution to instance takes time: 0.308979
thread: 2, sOPT: 9
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.138146
thread: 0, sOPT: 10
BKID: 0, LB: 19, UB: 19, OPT: 10
Dynamic Programming Runtime: 2.72734
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 2
********************************************************
Total execution on UB and LB is: 2
OUT of Bk while loop  
UB    19
LB    19
T1    19
T2    19
OPT   10
nMachines   10
BkID	0
AllProbData.size()    2
ck :   1
AllProbData[ck].Ttable    19
ck :   0
AllProbData[ck].Ttable    21
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan20
Main Scheduling is Done
File 2-5 is Done.
******************************
Reading File...
File 2-6 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 43, LB: 24start at time: 1505254749
thread: 0, MlBk is called with LB: 24, UB: 29
thread: 3, MlBk is called with LB: 39, UB:  thread: 044
, LongJobs.size() thread: thread: 21, MlBk is called with LB: 1534, MlBk is called with LB: , UB: 
3929, UB: 34
 thread: 3, LongJobs.size() 11

 thread: 1, LongJobs.size() 14
 thread: 2, LongJobs.size() 12
thread: 3, NSTable size: 17
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 4
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 3, i: 1, maxN[i].weit: 5, maxN[i].idx: 1, blockDimSize[i]: 5
thread: 3, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 3, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 3, i: 0, divisor[i]: 2, blockDimSize[i]: 2
thread: 3, i: 1, divisor[i]: 5, blockDimSize[i]: 1
thread: 3, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 3, divisor[i]: 2, blockDimSize[i]: 2
thread: 3, largestBlockVec.elm: 0 0 0 0 0 1 4 0 1 0 0 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 0 0 2 1 2 2 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 0 0 2 5 1 2 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 1 4 0 1 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 1 4 0 1 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 1 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 3 0 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 2 0 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 4 0 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 3 0 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 4 0 1 0 0 0 0 0 0 0 , mySum: 6
thread: 3, maxBlockLvlSize: 4
thread: 3, maxInBlockLvlSize: 3
thread: 3, AllTableSize: 160, maxSubsetsSize: 64
thread: 2, NSTable size: 21
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 2, i: 1, maxN[i].weit: 4, maxN[i].idx: 1, blockDimSize[i]: 4
thread: 2, i: 2, maxN[i].weit: 5, maxN[i].idx: 2, blockDimSize[i]: 5
thread: 2, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 2, i: 4, maxN[i].weit: 4, maxN[i].idx: 4, blockDimSize[i]: 4
thread: 2, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 1, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, i: 2, divisor[i]: 5, blockDimSize[i]: 1
thread: 2, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 4, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, largestBlockVec.elm: 0 0 0 0 0 1 4 0 1 0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 0 2 2 1 2 2 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 1 2 5 1 2 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 1 4 0 1 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 1 4 0 1 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 1 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 3 0 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 2 0 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 4 0 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 3 0 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 4 0 1 0 0 0 0 0 0 0 , mySum: 6
thread: 2, maxBlockLvlSize: 4
thread: 2, maxInBlockLvlSize: 6
thread: 2, AllTableSize: 320, maxSubsetsSize: 64
thread: 1, NSTable size: 36
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 1, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 1, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 1, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 1, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 1, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 1, i: 6, maxN[i].weit: 5, maxN[i].idx: 6, blockDimSize[i]: 5
thread: 1, i: 0, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 5, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 6, divisor[i]: 5, blockDimSize[i]: 1
thread: 1, largestBlockVec.elm: 0 0 0 0 0 0 0 0 2 0 0 2 0 0 0 4 
thread: 1, blockDimSizeComp: 0 0 0 0 0 0 0 0 1 2 0 1 2 3 3 1 
thread: 1, divisorComp: 0 0 0 0 0 0 0 0 3 1 0 3 1 1 1 5 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 2 0 0 2 0 0 0 4 
thread: 1, largestNoZeroBlockVec: 2 0 2 0 0 0 4 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 , mySum: 3
0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 1 0 0 2 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 2 , mySum: 3
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 2 0 0 1 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 2 , mySum: 3
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 2 , mySum: 4
0 0 0 0 0 0 0 0 1 0 0 2 0 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 2 0 0 1 0 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 2 0 0 2 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 2 , mySum: 4
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 3 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 2 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 3 , mySum: 4
0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 3 , mySum: 5
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 4 , mySum: 5
0 0 0 0 0 0 0 0 1 0 0 2 0 0 0 2 , mySum: 5
0 0 0 0 0 0 0 0 2 0 0 2 0 0 0 1 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 3 , mySum: 5
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 3 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 4 , mySum: 5
0 0 0 0 0 0 0 0 2 0 0 1 0 0 0 2 , mySum: 5
0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 4 , mySum: 6
0 0 0 0 0 0 0 0 2 0 0 2 0 0 0 2 , mySum: 6
0 0 0 0 0 0 0 0 2 0 0 1 0 0 0 3 , mySum: 6
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 4 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 4 , mySum: 6
0 0 0 0 0 0 0 0 1 0 0 2 0 0 0 3 , mySum: 6
0 0 0 0 0 0 0 0 2 0 0 1 0 0 0 4 , mySum: 7
0 0 0 0 0 0 0 0 1 0 0 2 0 0 0 4 , mySum: 7
0 0 0 0 0 0 0 0 2 0 0 2 0 0 0 3 , mySum: 7
0 0 0 0 0 0 0 0 2 0 0 2 0 0 0 4 , mySum: 8
thread: 1, maxBlockLvlSize: 9
thread: 1, maxInBlockLvlSize: 10
thread: 1, AllTableSize: 1620, maxSubsetsSize: 64
thread: 0, NSTable size: 32
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 0, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 0, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 0, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 0, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 0, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 0, i: 6, maxN[i].weit: 3, maxN[i].idx: 6, blockDimSize[i]: 3
thread: 0, i: 7, maxN[i].weit: 5, maxN[i].idx: 7, blockDimSize[i]: 5
thread: 0, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 3, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 5, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 6, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 7, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, largestBlockVec.elm: 0 0 0 0 0 0 0 0 2 0 0 2 0 0 0 4 
thread: 0, blockDimSizeComp: 0 0 0 0 0 0 2 0 1 2 0 1 2 3 3 1 
thread: 0, divisorComp: 0 0 0 0 0 0 1 0 3 1 0 3 1 1 1 5 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 2 0 0 2 0 0 0 4 
thread: 0, largestNoZeroBlockVec: 0 2 0 2 0 0 0 4 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 , mySum: 3
0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 1 0 0 2 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 2 , mySum: 3
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 2 0 0 1 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 2 , mySum: 3
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 2 , mySum: 4
0 0 0 0 0 0 0 0 1 0 0 2 0 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 2 0 0 1 0 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 2 0 0 2 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 2 , mySum: 4
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 3 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 2 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 3 , mySum: 4
0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 3 , mySum: 5
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 4 , mySum: 5
0 0 0 0 0 0 0 0 1 0 0 2 0 0 0 2 , mySum: 5
0 0 0 0 0 0 0 0 2 0 0 2 0 0 0 1 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 3 , mySum: 5
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 3 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 4 , mySum: 5
0 0 0 0 0 0 0 0 2 0 0 1 0 0 0 2 , mySum: 5
0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 4 , mySum: 6
0 0 0 0 0 0 0 0 2 0 0 2 0 0 0 2 , mySum: 6
0 0 0 0 0 0 0 0 2 0 0 1 0 0 0 3 , mySum: 6
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 4 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 4 , mySum: 6
0 0 0 0 0 0 0 0 1 0 0 2 0 0 0 3 , mySum: 6
0 0 0 0 0 0 0 0 2 0 0 1 0 0 0 4 , mySum: 7
0 0 0 0 0 0 0 0 1 0 0 2 0 0 0 4 , mySum: 7
0 0 0 0 0 0 0 0 2 0 0 2 0 0 0 3 , mySum: 7
0 0 0 0 0 0 0 0 2 0 0 2 0 0 0 4 , mySum: 8
thread: 0, maxBlockLvlSize: 9
thread: 0, maxInBlockLvlSize: 18
thread: 0, AllTableSize: 3240, maxSubsetsSize: 64
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 5
copy the latest feasible solution to instance takes time: 0.008134
thread: 3, sOPT: 5
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 6
copy the latest feasible solution to instance takes time: 0.011825
thread: 2, sOPT: 6
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 1 0 0 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 0 1 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 mySum: 2
thread: 0, blockNoZero[4]: 0 0 0 1 0 0 0 1 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 1 0 1 0 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 0 0 2 0 0 0 0 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[7]: 0 1 0 0 0 0 0 1 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 mySum: 2
thread: 0, blockNoZero[8]: 0 0 0 0 0 0 0 2 
thread: 0, allBlocks[9]: 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[9]: 0 2 0 0 0 0 0 0 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 mySum: 3
thread: 0, blockNoZero[10]: 0 0 0 0 0 0 0 3 
thread: 0, allBlocks[11]: 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 1 mySum: 3
thread: 0, blockNoZero[11]: 0 1 0 1 0 0 0 1 
thread: 0, allBlocks[12]: 0 0 0 0 0 0 0 0 1 0 0 2 0 0 0 0 mySum: 3
thread: 0, blockNoZero[12]: 0 1 0 2 0 0 0 0 
thread: 0, allBlocks[13]: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 2 mySum: 3
thread: 0, blockNoZero[13]: 0 1 0 0 0 0 0 2 
thread: 0, allBlocks[14]: 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 1 mySum: 3
thread: 0, blockNoZero[14]: 0 2 0 0 0 0 0 1 
thread: 0, allBlocks[15]: 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 1 mySum: 3
thread: 0, blockNoZero[15]: 0 0 0 2 0 0 0 1 
thread: 0, allBlocks[16]: 0 0 0 0 0 0 0 0 2 0 0 1 0 0 0 0 mySum: 3
thread: 0, blockNoZero[16]: 0 2 0 1 0 0 0 0 
thread: 0, allBlocks[17]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 2 mySum: 3
thread: 0, blockNoZero[17]: 0 0 0 1 0 0 0 2 
thread: 0, allBlocks[18]: 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 2 mySum: 4
thread: 0, blockNoZero[18]: 0 2 0 0 0 0 0 2 
thread: 0, allBlocks[19]: 0 0 0 0 0 0 0 0 1 0 0 2 0 0 0 1 mySum: 4
thread: 0, blockNoZero[19]: 0 1 0 2 0 0 0 1 
thread: 0, allBlocks[20]: 0 0 0 0 0 0 0 0 2 0 0 1 0 0 0 1 mySum: 4
thread: 0, blockNoZero[20]: 0 2 0 1 0 0 0 1 
thread: 0, allBlocks[21]: 0 0 0 0 0 0 0 0 2 0 0 2 0 0 0 0 mySum: 4
thread: 0, blockNoZero[21]: 0 2 0 2 0 0 0 0 
thread: 0, allBlocks[22]: 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 2 mySum: 4
thread: 0, blockNoZero[22]: 0 1 0 1 0 0 0 2 
thread: 0, allBlocks[23]: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 3 mySum: 4
thread: 0, blockNoZero[23]: 0 1 0 0 0 0 0 3 
thread: 0, allBlocks[24]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 mySum: 4
thread: 0, blockNoZero[24]: 0 0 0 0 0 0 0 4 
thread: 0, allBlocks[25]: 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 2 mySum: 4
thread: 0, blockNoZero[25]: 0 0 0 2 0 0 0 2 
thread: 0, allBlocks[26]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 3 mySum: 4
thread: 0, blockNoZero[26]: 0 0 0 1 0 0 0 3 
thread: 0, allBlocks[27]: 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 3 mySum: 5
thread: 0, blockNoZero[27]: 0 1 0 1 0 0 0 3 
thread: 0, allBlocks[28]: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 4 mySum: 5
thread: 0, blockNoZero[28]: 0 1 0 0 0 0 0 4 
thread: 0, allBlocks[29]: 0 0 0 0 0 0 0 0 1 0 0 2 0 0 0 2 mySum: 5
thread: 0, blockNoZero[29]: 0 1 0 2 0 0 0 2 
thread: 0, allBlocks[30]: 0 0 0 0 0 0 0 0 2 0 0 2 0 0 0 1 mySum: 5
thread: 0, blockNoZero[30]: 0 2 0 2 0 0 0 1 
thread: 0, allBlocks[31]: 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 3 mySum: 5
thread: 0, blockNoZero[31]: 0 0 0 2 0 0 0 3 
thread: 0, allBlocks[32]: 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 3 mySum: 5
thread: 0, blockNoZero[32]: 0 2 0 0 0 0 0 3 
thread: 0, allBlocks[33]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 4 mySum: 5
thread: 0, blockNoZero[33]: 0 0 0 1 0 0 0 4 
thread: 0, allBlocks[34]: 0 0 0 0 0 0 0 0 2 0 0 1 0 0 0 2 mySum: 5
thread: 0, blockNoZero[34]: 0 2 0 1 0 0 0 2 
thread: 0, allBlocks[35]: 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 4 mySum: 6
thread: 0, blockNoZero[35]: 0 1 0 1 0 0 0 4 
thread: 0, allBlocks[36]: 0 0 0 0 0 0 0 0 2 0 0 2 0 0 0 2 mySum: 6
thread: 0, blockNoZero[36]: 0 2 0 2 0 0 0 2 
thread: 0, allBlocks[37]: 0 0 0 0 0 0 0 0 2 0 0 1 0 0 0 3 mySum: 6
thread: 0, blockNoZero[37]: 0 2 0 1 0 0 0 3 
thread: 0, allBlocks[38]: 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 4 mySum: 6
thread: 0, blockNoZero[38]: 0 2 0 0 0 0 0 4 
Thread: 1, gpu_BlockDP is done.
thread: 0, allBlocks[39]: 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 4 mySum: 6
thread: 0, blockNoZero[39]: 0 0 0 2 0 0 0 4 
thread: 0, allBlocks[40]: 0 0 0 0 0 0 0 0 1 0 0 2 0 0 0 3 mySum: 6
thread: 0, blockNoZero[40]: 0 1 0 2 0 0 0 3 
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 7
thread: 0, allBlocks[41]: 0 0 0 0 0 0 0 0 2 0 0 1 0 0 0 4 mySum: 7
thread: 0, blockNoZero[41]: 0 2 0 1 0 0 0 4 
thread: 0, allBlocks[42]: 0 0 0 0 0 0 0 0 1 0 0 2 0 0 0 4 mySum: 7
thread: 0, blockNoZero[42]: 0 1 0 2 0 0 0 4 
thread: 0, allBlocks[43]: 0 0 0 0 0 0 0 0 2 0 0 2 0 0 0 3 mySum: 7
thread: 0, blockNoZero[43]: 0 2 0 2 0 0 0 3 
thread: 0, allBlocks[44]: 0 0 0 0 0 0 0 0 2 0 0 2 0 0 0 4 mySum: 8
thread: 0, blockNoZero[44]: 0 2 0 2 0 0 0 4 
copy the latest feasible solution to instance takes time: 0.055567
thread: 1, sOPT: 7
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.054877
thread: 0, sOPT: 9
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: Thread: 32, MlBk function is done, and BkID for all processes are collected., MlBk function is done, and BkID for all processes are collected.1
, MlBk function is done, and BkID for all processes are collected.

sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 24, UB: 27
BKID: 0, LB: 24, UB: 27, OPT: 9
Dynamic Programming Runtime: 0.695859
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 1
Iteration: 2, UB: 27, LB: 24start at time: 1505254750
thread: 0, MlBk is called with LB: 24, UB: 25
 thread: 0, LongJobs.size() 15
thread: 1, MlBk is called with LB: 25, UB: 26
thread: 2, MlBk is called with LB: 26, UB: 27
 thread: 1, LongJobs.size() 15
 thread: 2, LongJobs.size() 15
thread: 1, NSTable size: 29
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 1, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 1, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 1, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 1, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 1, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 1, i: 6, maxN[i].weit: 3, maxN[i].idx: 6, blockDimSize[i]: 3
thread: 1, i: 7, maxN[i].weit: 5, maxN[i].idx: 7, blockDimSize[i]: 5
thread: 1, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 3, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 5, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 6, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 7, divisor[i]: 5, blockDimSize[i]: 1
thread: 1, largestBlockVec.elm: 0 0 0 0 0 0 0 0 2 0 0 2 0 0 0 4 
thread: 1, blockDimSizeComp: 0 0 0 0 0 0 2 0 1 2 0 1 2 3 3 1 
thread: 1, divisorComp: 0 0 0 0 0 0 1 0 3 1 0 3 1 1 1 5 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 2 0 0 2 0 0 0 4 
thread: 1, largestNoZeroBlockVec: 0 2 0 2 0 0 0 4 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 , mySum: 3
0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 1 0 0 2 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 2 , mySum: 3
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 2 0 0 1 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 2 , mySum: 3
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 2 , mySum: 4
0 0 0 0 0 0 0 0 1 0 0 2 0 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 2 0 0 1 0 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 2 0 0 2 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 2 , mySum: 4
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 3 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 2 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 3 , mySum: 4
0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 3 , mySum: 5
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 4 , mySum: 5
0 0 0 0 0 0 0 0 1 0 0 2 0 0 0 2 , mySum: 5
0 0 0 0 0 0 0 0 2 0 0 2 0 0 0 1 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 3 , mySum: 5
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 3 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 4 , mySum: 5
0 0 0 0 0 0 0 0 2 0 0 1 0 0 0 2 , mySum: 5
0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 4 , mySum: 6
0 0 0 0 0 0 0 0 2 0 0 2 0 0 0 2 , mySum: 6
0 0 0 0 0 0 0 0 2 0 0 1 0 0 0 3 , mySum: 6
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 4 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 4 , mySum: 6
0 0 0 0 0 0 0 0 1 0 0 2 0 0 0 3 , mySum: 6
0 0 0 0 0 0 0 0 2 0 0 1 0 0 0 4 , mySum: 7
0 0 0 0 0 0 0 0 1 0 0 2 0 0 0 4 , mySum: 7
0 0 0 0 0 0 0 0 2 0 0 2 0 0 0 3 , mySum: 7
0 0 0 0 0 0 0 0 2 0 0 2 0 0 0 4 , mySum: 8
thread: 0, NSTable size: 25
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 0, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 0, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 0, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 0, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 0, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 0, i: 6, maxN[i].weit: 3, maxN[i].idx: 6, blockDimSize[i]: 3
thread: 0, i: 7, maxN[i].weit: 5, maxN[i].idx: 7, blockDimSize[i]: 5
thread: 0, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 3, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 5, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 6, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 7, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, largestBlockVec.elm: 0 0 0 0 0 0 0 0 2 0 0 2 0 0 0 4 
thread: 0, blockDimSizeComp: 0 0 0 0 0 0 2 0 1 2 0 1 2 3 3 1 
thread: 0, divisorComp: 0 0 0 0 0 0 1 0 3 1 0 3 1 1 1 5 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 2 0 0 2 0 0 0 4 
thread: 0, largestNoZeroBlockVec: 0 2 0 2 0 0 0 4 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 , mySum: 3
0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 1 0 0 2 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 2 , mySum: 3
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 2 0 0 1 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 2 , mySum: 3
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 2 , mySum: 4
0 0 0 0 0 0 0 0 1 0 0 2 0 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 2 0 0 1 0 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 2 0 0 2 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 2 , mySum: 4
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 3 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 2 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 3 , mySum: 4
0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 3 , mySum: 5
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 4 , mySum: 5
0 0 0 0 0 0 0 0 1 0 0 2 0 0 0 2 , mySum: 5
0 0 0 0 0 0 0 0 2 0 0 2 0 0 0 1 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 3 , mySum: 5
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 3 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 4 , mySum: 5
0 0 0 0 0 0 0 0 2 0 0 1 0 0 0 2 , mySum: 5
0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 4 , mySum: 6
0 0 0 0 0 0 0 0 2 0 0 2 0 0 0 2 , mySum: 6
0 0 0 0 0 0 0 0 2 0 0 1 0 0 0 3 , mySum: 6
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 4 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 4 , mySum: 6
0 0 0 0 0 0 0 0 1 0 0 2 0 0 0 3 , mySum: 6
0 0 0 0 0 0 0 0 2 0 0 1 0 0 0 4 , mySum: 7
0 0 0 0 0 0 0 0 1 0 0 2 0 0 0 4 , mySum: 7
0 0 0 0 0 0 0 0 2 0 0 2 0 0 0 3 , mySum: 7
0 0 0 0 0 0 0 0 2 0 0 2 0 0 0 4 , mySum: 8
thread: 2, NSTable size: 32
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 2, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 2, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 2, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 2, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 2, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 2, i: 6, maxN[i].weit: 3, maxN[i].idx: 6, blockDimSize[i]: 3
thread: 2, i: 7, maxN[i].weit: 5, maxN[i].idx: 7, blockDimSize[i]: 5
thread: 2, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 3, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 5, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 6, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 7, divisor[i]: 5, blockDimSize[i]: 1
thread: 2, largestBlockVec.elm: 0 0 0 0 0 0 0 0 2 0 0 2 0 0 0 4 
thread: 2, blockDimSizeComp: 0 0 0 0 0 0 2 0 1 2 0 1 2 3 3 1 
thread: 2, divisorComp: 0 0 0 0 0 0 1 0 3 1 0 3 1 1 1 5 
thread: 2, largestBlockVec: 0 0 0 0 0 0 0 0 2 0 0 2 0 0 0 4 
thread: 2, largestNoZeroBlockVec: 0 2 0 2 0 0 0 4 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 , mySum: 3
0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 1 0 0 2 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 2 , mySum: 3
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 2 0 0 1 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 2 , mySum: 3
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 2 , mySum: 4
0 0 0 0 0 0 0 0 1 0 0 2 0 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 2 0 0 1 0 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 2 0 0 2 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 2 , mySum: 4
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 3 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 2 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 3 , mySum: 4
0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 3 , mySum: 5
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 4 , mySum: 5
0 0 0 0 0 0 0 0 1 0 0 2 0 0 0 2 , mySum: 5
0 0 0 0 0 0 0 0 2 0 0 2 0 0 0 1 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 3 , mySum: 5
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 3 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 4 , mySum: 5
0 0 0 0 0 0 0 0 2 0 0 1 0 0 0 2 , mySum: 5
0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 4 , mySum: 6
0 0 0 0 0 0 0 0 2 0 0 2 0 0 0 2 , mySum: 6
0 0 0 0 0 0 0 0 2 0 0 1 0 0 0 3 , mySum: 6
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 4 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 4 , mySum: 6
0 0 0 0 0 0 0 0 1 0 0 2 0 0 0 3 , mySum: 6
0 0 0 0 0 0 0 0 2 0 0 1 0 0 0 4 , mySum: 7
0 0 0 0 0 0 0 0 1 0 0 2 0 0 0 4 , mySum: 7
0 0 0 0 0 0 0 0 2 0 0 2 0 0 0 3 , mySum: 7
0 0 0 0 0 0 0 0 2 0 0 2 0 0 0 4 , mySum: 8
thread: 1, maxBlockLvlSize: 9
thread: 1, maxInBlockLvlSize: 18
thread: 1, AllTableSize: 3240, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 9
thread: 0, maxInBlockLvlSize: 18
thread: 0, AllTableSize: 3240, maxSubsetsSize: 64
thread: 2, maxBlockLvlSize: 9
thread: 2, maxInBlockLvlSize: 18
thread: 2, AllTableSize: 3240, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 1 0 0 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 0 1 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 mySum: 2
thread: 0, blockNoZero[4]: 0 0 0 1 0 0 0 1 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 1 0 1 0 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 0 0 2 0 0 0 0 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[7]: 0 1 0 0 0 0 0 1 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 mySum: 2
thread: 0, blockNoZero[8]: 0 0 0 0 0 0 0 2 
thread: 0, allBlocks[9]: 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[9]: 0 2 0 0 0 0 0 0 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 mySum: 3
thread: 0, blockNoZero[10]: 0 0 0 0 0 0 0 3 
thread: 0, allBlocks[11]: 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 1 mySum: 3
thread: 0, blockNoZero[11]: 0 1 0 1 0 0 0 1 
thread: 0, allBlocks[12]: 0 0 0 0 0 0 0 0 1 0 0 2 0 0 0 0 mySum: 3
thread: 0, blockNoZero[12]: 0 1 0 2 0 0 0 0 
thread: 0, allBlocks[13]: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 2 mySum: 3
thread: 0, blockNoZero[13]: 0 1 0 0 0 0 0 2 
thread: 0, allBlocks[14]: 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 1 mySum: 3
thread: 0, blockNoZero[14]: 0 2 0 0 0 0 0 1 
thread: 0, allBlocks[15]: 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 1 mySum: 3
thread: 0, blockNoZero[15]: 0 0 0 2 0 0 0 1 
thread: 0, allBlocks[16]: 0 0 0 0 0 0 0 0 2 0 0 1 0 0 0 0 mySum: 3
thread: 0, blockNoZero[16]: 0 2 0 1 0 0 0 0 
thread: 0, allBlocks[17]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 2 mySum: 3
thread: 0, blockNoZero[17]: 0 0 0 1 0 0 0 2 
thread: 0, allBlocks[18]: 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 2 mySum: 4
thread: 0, blockNoZero[18]: 0 2 0 0 0 0 0 2 
thread: 0, allBlocks[19]: 0 0 0 0 0 0 0 0 1 0 0 2 0 0 0 1 mySum: 4
thread: 0, blockNoZero[19]: 0 1 0 2 0 0 0 1 
thread: 0, allBlocks[20]: 0 0 0 0 0 0 0 0 2 0 0 1 0 0 0 1 mySum: 4
thread: 0, blockNoZero[20]: 0 2 0 1 0 0 0 1 
thread: 0, allBlocks[21]: 0 0 0 0 0 0 0 0 2 0 0 2 0 0 0 0 mySum: 4
thread: 0, blockNoZero[21]: 0 2 0 2 0 0 0 0 
thread: 0, allBlocks[22]: 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 2 mySum: 4
thread: 0, blockNoZero[22]: 0 1 0 1 0 0 0 2 
thread: 0, allBlocks[23]: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 3 mySum: 4
thread: 0, blockNoZero[23]: 0 1 0 0 0 0 0 3 
thread: 0, allBlocks[24]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 mySum: 4
thread: 0, blockNoZero[24]: 0 0 0 0 0 0 0 4 
thread: 0, allBlocks[25]: 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 2 mySum: 4
thread: 0, blockNoZero[25]: 0 0 0 2 0 0 0 2 
thread: 0, allBlocks[26]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 3 mySum: 4
thread: 0, blockNoZero[26]: 0 0 0 1 0 0 0 3 
thread: 0, allBlocks[27]: 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 3 mySum: 5
thread: 0, blockNoZero[27]: 0 1 0 1 0 0 0 3 
thread: 0, allBlocks[28]: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 4 mySum: 5
thread: 0, blockNoZero[28]: 0 1 0 0 0 0 0 4 
thread: 0, allBlocks[29]: 0 0 0 0 0 0 0 0 1 0 0 2 0 0 0 2 mySum: 5
thread: 0, blockNoZero[29]: 0 1 0 2 0 0 0 2 
thread: 0, allBlocks[30]: 0 0 0 0 0 0 0 0 2 0 0 2 0 0 0 1 mySum: 5
thread: 0, blockNoZero[30]: 0 2 0 2 0 0 0 1 
thread: 0, allBlocks[31]: 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 3 mySum: 5
thread: 0, blockNoZero[31]: 0 0 0 2 0 0 0 3 
thread: 0, allBlocks[32]: 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 3 mySum: 5
thread: 0, blockNoZero[32]: 0 2 0 0 0 0 0 3 
thread: 0, allBlocks[33]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 4 mySum: 5
thread: 0, blockNoZero[33]: 0 0 0 1 0 0 0 4 
thread: 0, allBlocks[34]: 0 0 0 0 0 0 0 0 2 0 0 1 0 0 0 2 mySum: 5
thread: 0, blockNoZero[34]: 0 2 0 1 0 0 0 2 
thread: 0, allBlocks[35]: 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 4 mySum: 6
thread: 0, blockNoZero[35]: 0 1 0 1 0 0 0 4 
thread: 0, allBlocks[36]: 0 0 0 0 0 0 0 0 2 0 0 2 0 0 0 2 mySum: 6
thread: 0, blockNoZero[36]: 0 2 0 2 0 0 0 2 
thread: 0, allBlocks[37]: 0 0 0 0 0 0 0 0 2 0 0 1 0 0 0 3 mySum: 6
thread: 0, blockNoZero[37]: 0 2 0 1 0 0 0 3 
thread: 0, allBlocks[38]: 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 4 mySum: 6
thread: 0, blockNoZero[38]: 0 2 0 0 0 0 0 4 
thread: 0, allBlocks[39]: 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 4 mySum: 6
thread: 0, blockNoZero[39]: 0 0 0 2 0 0 0 4 
thread: 0, allBlocks[40]: 0 0 0 0 0 0 0 0 1 0 0 2 0 0 0 3 mySum: 6
thread: 0, blockNoZero[40]: 0 1 0 2 0 0 0 3 
thread: 0, allBlocks[41]: 0 0 0 0 0 0 0 0 2 0 0 1 0 0 0 4 mySum: 7
thread: 0, blockNoZero[41]: 0 2 0 1 0 0 0 4 
thread: 0, allBlocks[42]: 0 0 0 0 0 0 0 0 1 0 0 2 0 0 0 4 mySum: 7
thread: 0, blockNoZero[42]: 0 1 0 2 0 0 0 4 
thread: 0, allBlocks[43]: 0 0 0 0 0 0 0 0 2 0 0 2 0 0 0 3 mySum: 7
thread: 0, blockNoZero[43]: 0 2 0 2 0 0 0 3 
thread: 0, allBlocks[44]: 0 0 0 0 0 0 0 0 2 0 0 2 0 0 0 4 mySum: 8
thread: 0, blockNoZero[44]: 0 2 0 2 0 0 0 4 
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 9
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.266285
thread: 2, sOPT: 9
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.198668
thread: 1, sOPT: 10
copy the latest feasible solution to instance takes time: 0.094691
thread: 0, sOPT: 10
BKID: 0, LB: 24, UB: 24, OPT: 10
Dynamic Programming Runtime: 1.49438
Execution time between LB and UB is: 0
By far, all LB UB calculation runtime: 1
********************************************************
Total execution on UB and LB is: 1
OUT of Bk while loop  
UB    24
LB    24
T1    24
T2    24
OPT   10
nMachines   10
BkID	0
AllProbData.size()    2
ck :   1
AllProbData[ck].Ttable    24
ck :   0
AllProbData[ck].Ttable    26
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan25
Main Scheduling is Done
File 2-6 is Done.
******************************
Reading File...
File 2-7 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 34, LB: 18start at time: 1505254750
thread: 0, MlBk is called with LB: 18, UB: 22
thread: 3, MlBk is called with LB: 30, UB: 34
thread: 1, MlBk is called with LB: 22, UB: 26
 thread: 0, LongJobs.size() 13
 thread: 3, LongJobs.size() 6
thread: 2, MlBk is called with LB: 26, UB: 30
 thread: 1, LongJobs.size() 10
 thread: 2, LongJobs.size() 8
thread: 3, NSTable size: 15
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 3, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 3, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 3, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 3, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 3, i: 0, divisor[i]: 2, blockDimSize[i]: 1
thread: 3, i: 1, divisor[i]: 2, blockDimSize[i]: 1
thread: 3, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, largestBlockVec.elm: 0 0 0 0 1 1 2 0 0 0 0 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 0 1 1 1 2 2 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 0 2 2 3 1 1 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 1 1 2 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 1 1 2 0 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 1 2 0 0 0 0 0 0 0 0 0 , mySum: 4
thread: 3, maxBlockLvlSize: 4
thread: 3, maxInBlockLvlSize: 2
thread: 3, AllTableSize: 48, maxSubsetsSize: 64
thread: 2, NSTable size: 19
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 2, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 2, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 2, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 2, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 2, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 2, i: 0, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 1, divisor[i]: 2, blockDimSize[i]: 1
thread: 2, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 5, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, largestBlockVec.elm: 0 0 0 0 0 0 0 2 0 0 1 0 0 0 0 2 
thread: 2, blockDimSizeComp: 0 0 0 0 0 0 0 1 0 0 1 0 2 2 2 1 
thread: 2, divisorComp: 0 0 0 0 0 0 0 3 0 0 2 0 1 1 1 3 
thread: 2, largestBlockVec: 0 0 0 0 0 0 0 2 0 0 1 0 0 0 0 2 
thread: 2, largestNoZeroBlockVec: 2 1 0 0 0 2 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 , mySum: 2
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 2 , mySum: 3
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 2 , mySum: 3
0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 2 0 0 1 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 2 , mySum: 4
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 2 , mySum: 4
0 0 0 0 0 0 0 2 0 0 1 0 0 0 0 1 , mySum: 4
0 0 0 0 0 0 0 2 0 0 1 0 0 0 0 2 , mySum: 5
thread: 1, NSTable size: 23
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 1, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 1, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 1, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 1, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 1, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 1, i: 6, maxN[i].weit: 3, maxN[i].idx: 6, blockDimSize[i]: 3
thread: 1, i: 0, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 6, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, largestBlockVec.elm: 0 0 0 0 0 0 2 2 0 0 0 0 0 0 0 2 
thread: 1, blockDimSizeComp: 0 0 0 0 0 0 1 1 0 0 2 0 2 2 2 1 
thread: 1, divisorComp: 0 0 0 0 0 0 3 3 0 0 1 0 1 1 1 3 
thread: 1, largestBlockVec: 0 0 0 0 0 0 2 2 0 0 0 0 0 0 0 2 
thread: 1, largestNoZeroBlockVec: 2 2 0 0 0 0 2 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 , mySum: 2
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 2 , mySum: 3
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 2 , mySum: 3
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 2 , mySum: 4
0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 1 , mySum: 4
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 2 , mySum: 4
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 2 , mySum: 4
0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 1 , mySum: 4
0 0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 2 , mySum: 5
0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 2 , mySum: 5
0 0 0 0 0 0 2 2 0 0 0 0 0 0 0 1 , mySum: 5
0 0 0 0 0 0 2 2 0 0 0 0 0 0 0 2 , mySum: 6
thread: 2, maxBlockLvlSize: 5
thread: 2, maxInBlockLvlSize: 3
thread: 2, AllTableSize: 144, maxSubsetsSize: 64
thread: 1, maxBlockLvlSize: 7
thread: 1, maxInBlockLvlSize: 6
thread: 1, AllTableSize: 432, maxSubsetsSize: 64
thread: 0, NSTable size: 24
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 0, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 0, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 0, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 0, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 0, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 0, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 0, i: 7, maxN[i].weit: 3, maxN[i].idx: 7, blockDimSize[i]: 3
thread: 0, i: 0, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 7, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, largestBlockVec.elm: 0 0 0 0 0 1 2 2 0 0 0 0 0 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 0 0 2 1 1 0 0 2 0 2 2 2 3 
thread: 0, divisorComp: 0 0 0 0 0 2 3 3 0 0 1 0 1 1 1 1 
thread: 0, largestBlockVec: 0 0 0 0 0 1 2 2 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 1 2 2 0 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 1 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 2 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 2 2 0 0 0 0 0 0 0 0 , mySum: 5
thread: 0, maxBlockLvlSize: 5
thread: 0, maxInBlockLvlSize: 25
thread: 0, AllTableSize: 1728, maxSubsetsSize: 64
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 4
copy the latest feasible solution to instance takes time: 0.00275
thread: 3, sOPT: 4
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 4
copy the latest feasible solution to instance takes time: 0.006654
thread: 2, sOPT: 4
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 1 0 0 0 0 0 
thread: 0, allBlocks[2]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 1 0 0 0 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 1 0 0 0Thread: 1 , gpu_BlockDP is done.0 0 0 

Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 5
copy the latest feasible solution to instance takes time: 0.013659
thread: 1, sOPT: 5
thread: 0, allBlocks[4]: 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 1 1 0 0 0 0 0 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 2 0 0 0 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 0 2 0 0 0 0 0 
thread: 0, allBlocks[7]: 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 1 0 1 0 0 0 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[8]: 1 1 0 0 0 0 0 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[9]: 0 1 2 0 0 0 0 0 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 0 2 1 0 0 0 0 0 
thread: 0, allBlocks[11]: 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 1 0 2 0 0 0 0 0 
thread: 0, allBlocks[12]: 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[12]: 1 1 1 0 0 0 0 0 
thread: 0, allBlocks[13]: 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[13]: 1 2 0 0 0 0 0 0 
thread: 0, allBlocks[14]: 0 0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[14]: 0 2 2 0 0 0 0 0 
thread: 0, allBlocks[15]: 0 0 0 0 0 1 1 2 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[15]: 1 1 2 0 0 0 0 0 
thread: 0, allBlocks[16]: 0 0 0 0 0 1 2 1 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[16]: 1 2 1 0 0 0 0 0 
thread: 0, allBlocks[17]: 0 0 0 0 0 1 2 2 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[17]: 1 2 2 0 0 0 0 0 
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 8
copy the latest feasible solution to instance takes time: 0.02921
thread: 0, sOPT: 8
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: Thread: 23, MlBk function is done, and BkID for all processes are collected.1, MlBk function is done, and BkID for all processes are collected.
, MlBk function is done, and BkID for all processes are collected.

sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 18, UB: 21
BKID: 0, LB: 18, UB: 21, OPT: 8
Dynamic Programming Runtime: 0.355394
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 1
Iteration: 2, UB: 21, LB: 18start at time: 1505254751
thread: 0, MlBk is called with LB: 18, UB: 19
 thread: 0, LongJobs.size() 14
thread: thread: 1, MlBk is called with LB: 219, MlBk is called with LB: 20, UB: , UB: 2021

 thread: 2, LongJobs.size() 13
 thread: 1, LongJobs.size() 14
thread: 2, NSTable size: 24
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 2, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 2, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 2, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 2, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 2, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 2, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 2, i: 7, maxN[i].weit: 3, maxN[i].idx: 7, blockDimSize[i]: 3
thread: 2, i: 0, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 7, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, largestBlockVec.elm: 0 0 0 0 0 1 2 2 0 0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 0 0 2 1 1 0 0 2 0 2 2 2 3 
thread: 2, divisorComp: 0 0 0 0 0 2 3 3 0 0 1 0 1 1 1 1 
thread: 2, largestBlockVec: 0 0 0 0 0 1 2 2 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 1 2 2 0 0 0 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 1 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 2 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 2 2 0 0 0 0 0 0 0 0 , mySum: 5
thread: 0, NSTable size: 25
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 0, i: 1, maxN[i].weit: 4, maxN[i].idx: 1, blockDimSize[i]: 4
thread: 0, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 0, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 0, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 0, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 0, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 0, i: 7, maxN[i].weit: 2, maxN[i].idx: 7, blockDimSize[i]: 2
thread: 0, i: 8, maxN[i].weit: 3, maxN[i].idx: 8, blockDimSize[i]: 3
thread: 0, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 1, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 3, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 7, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 8, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, largestBlockVec.elm: 0 0 0 0 0 1 2 2 0 0 0 0 0 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 0 2 2 1 1 0 0 2 0 2 2 2 3 
thread: 0, divisorComp: 0 0 0 0 1 2 3 3 0 0 1 0 1 1 1 1 
thread: 0, largestBlockVec: 0 0 0 0 0 1 2 2 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 1 2 2 0 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 1 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 2 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 2 2 0 0 0 0 0 0 0 0 , mySum: 5
thread: 2, maxBlockLvlSize: 5
thread: 2, maxInBlockLvlSize: 25
thread: 2, AllTableSize: 1728, maxSubsetsSize: 64
thread: 1, NSTable size: 31
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 1, i: 1, maxN[i].weit: 4, maxN[i].idx: 1, blockDimSize[i]: 4
thread: 1, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 1, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 1, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 1, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 1, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 1, i: 7, maxN[i].weit: 2, maxN[i].idx: 7, blockDimSize[i]: 2
thread: 1, i: 8, maxN[i].weit: 3, maxN[i].idx: 8, blockDimSize[i]: 3
thread: 1, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 1, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 3, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 7, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 8, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, largestBlockVec.elm: 0 0 0 0 0 1 2 2 0 0 0 0 0 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 0 2 2 1 1 0 0 2 0 2 2 2 3 
thread: 1, divisorComp: 0 0 0 0 1 2 3 3 0 0 1 0 1 1 1 1 
thread: 1, largestBlockVec: 0 0 0 0 0 1 2 2 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 1 2 2 0 0 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 1 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 2 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 2 2 0 0 0 0 0 0 0 0 , mySum: 5
thread: 0, maxBlockLvlSize: 5
thread: 0, maxInBlockLvlSize: 50
thread: 0, AllTableSize: 3456, maxSubsetsSize: 64
thread: 1, maxBlockLvlSize: 5
thread: 1, maxInBlockLvlSize: 50
thread: 1, AllTableSize: 3456, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 1 0 0 0 0 0 
thread: 0, allBlocks[2]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 1 0 0 0 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 1 0 0 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 1 1 0 0 0 0 0 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 0 2 0 0 0 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 0 0 2 0 0 0 0 0 
thread: 0, allBlocks[7]: 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 0 1 0 1 0 0 0 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[8]: 0 1 1 0 0 0 0 0 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[9]: 0 0 1 2 0 0 0 0 0 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 0 0 2 1 0 0 0 0 0 
thread: 0, allBlocks[11]: 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 0 1 0 2 0 0 0 0 0 
Thread: 2, gpu_BlockDP is done.
thread: 0, allBlocks[12]: 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[12]: 0 1 1 1 0 0 0 0 0 
thread: 0, allBlocks[13]: 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[13]: 0 1 2 0 0 0 0 0 0 
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 8
copy the latest feasible solution to instance takes time: 0.097313
thread: 2, sOPT: 8
thread: 0, allBlocks[14]: 0 0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[14]: 0 0 2 2 0 0 0 0 0 
thread: 0, allBlocks[15]: 0 0 0 0 0 1 1 2 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[15]: 0 1 1 2 0 0 0 0 0 
thread: 0, allBlocks[16]: 0 0 0 0 0 1 2 1 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[16]: 0 1 2 1 0 0 0 0 0 
thread: 0, allBlocks[17]: 0 0 0 0 0 1 2 2 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[17]: 0 1 2 2 0 0 0 0 0 
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 9
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 8
copy the latest feasible solution to instance takes time: 0.162791
thread: 0, sOPT: 9
copy the latest feasible solution to instance takes time: 0.126586
thread: 1, sOPT: 8
BKID: 0, LB: 18, UB: 18, OPT: 9
Dynamic Programming Runtime: 1.43996
Execution time between LB and UB is: 0
By far, all LB UB calculation runtime: 1
********************************************************
Total execution on UB and LB is: 1
OUT of Bk while loop  
UB    18
LB    18
T1    18
T2    18
OPT   9
nMachines   10
BkID	0
AllProbData.size()    2
ck :   1
AllProbData[ck].Ttable    18
ck :   0
AllProbData[ck].Ttable    20
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan18
Main Scheduling is Done
File 2-7 is Done.
******************************
Reading File...
File 2-8 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 36, LB: 18start at time: 1505254752
thread: 0, MlBk is called with LB: 18, UB: 22
thread: 3, MlBk is called with LB: 30, UB: 36
 thread: 0, LongJobs.size() 14
 thread: 3thread: , LongJobs.size() 102, MlBk is called with LB: 
26, UB: 30
thread: 1, MlBk is called with LB: 22, UB: 26
 thread: 2, LongJobs.size() 10
 thread: 1, LongJobs.size() 13
thread: 2, NSTable size: 17
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 2, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 2, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 2, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 2, i: 4, maxN[i].weit: 4, maxN[i].idx: 4, blockDimSize[i]: 4
thread: 2, i: 0, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 2, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 4, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, largestBlockVec.elm: 0 0 0 0 0 0 0 0 2 2 0 0 0 0 0 1 
thread: 2, blockDimSizeComp: 0 0 0 0 0 0 0 0 1 1 0 0 3 0 2 2 
thread: 2, divisorComp: 0 0 0 0 0 0 0 0 3 3 0 0 1 0 1 2 
thread: 2, largestBlockVec: 0 0 0 0 0 0 0 0 2 2 0 0 0 0 0 1 
thread: 2, largestNoZeroBlockVec: 2 2 0 0 1 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 2 1 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 1 2 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 1 2 0 0 0 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 2 1 0 0 0 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 2 2 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 2 2 0 0 0 0 0 1 , mySum: 5
thread: 2, maxBlockLvlSize: 5
thread: 2, maxInBlockLvlSize: 4
thread: 2, AllTableSize: 216, maxSubsetsSize: 64
thread: 3, NSTable size: 32
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 3, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 3, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 3, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 3, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 3, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 3, i: 0, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 5, divisor[i]: 1, blockDimSize[i]: 3
thread: 3, largestBlockVec.elm: 0 thread: 0 10 , NSTable size: 221
 thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 02
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 9, alltableelemets[maxindex].elm[i]:  2
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
2thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 0, maxN[i].weit: 4, maxN[i].idx:  0, blockDimSize[i]: 40 
thread: 1, i: 1, maxN[i].weit: 03, maxN[i].idx:  1, blockDimSize[i]: 3
thread: 1, i: 2, maxN[i].weit: 30 0 0 , maxN[i].idx: 02, blockDimSize[i]:  03 0
thread: 1, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 1, i: 4, maxN[i].weit: 2 0 0 
thread: 3, blockDimSizeComp: 0 0 0 1 1 1 2 2 3 0 0 0 0 0 0 0 
, maxN[i].idx: thread: 3, divisorComp: 0 40, blockDimSize[i]: 2 
0thread: 1, i: 5, maxN[i].weit: 4, maxN[i].idx: 5, blockDimSize[i]:  4
3 thread: 1, i: 3 03 , divisor[i]: 12 , blockDimSize[i]: 1 2
1 thread: 1, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 2, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 5, divisor[i]: 2, blockDimSize[i]: 2
0thread: 1, largestBlockVec.elm:  0 00  0 0 0 0 0 
0thread: 3, largestBlockVec: 0 0 0 2 2 2 0 0 0 0  0 0 0 0 0 00  00  
1thread: 3, largestNoZeroBlockVec: 2 2 2 0 0 0 
 0 2 0 0 0 0 0 0 1 
thread: 1, blockDimSizeComp: 0 0 0 0 0 0 2 0 1 3 0 0 3 0 2 2 
thread: 1, divisorComp: 0 0 0 0 0 0 2 0 3 1 0 0 1 0 1 2 
thread: 1, largestBlockVec: 0 0 0 0 0 0 1 0 2 0 0 0 0 0 0 1 
thread: 1, largestNoZeroBlockVec: 1 2 0 0 0 1 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0thread: 1, allBlocks: 0 0  00  00 0  0 00  , mySum: 01
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2 
0 0 0 0 1 1 0 0 0 0 00 0 0  0 0 00  0, mySum:  20
 00 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 2 0 0 0 0 0 0 0 0  0 00 0  0 0, mySum:  20
0 0 0 1 0 1 0 0 0 0  00 0  , mySum: 00 0 
00 0 0 0 0 0 0 0 0 0  0 , mySum: 2
0 0 0 1 1 0 0 0 0 0 0 00  00  0 00  0 00 1  , mySum: , mySum: 1
20 0 0 0 0 0 0 0 1 0
 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 00 0  , mySum: 03
0 0 0 2 1 0 0 0 0 0 0 0  00  00  0 0, mySum: 1 
0 , mySum: 30 0 0 0 0 0 1 0 0 0
 0 0 0 2 0 1 0 0 0 0 00 0 0  0 00  0 0, mySum:  30 
00 0 0 1 2 0 0 0 0 0 0 0 0 0 0  0 0, mySum:  3
0 0 0 1 0 2 0 0 0 0 0 0 0, mySum: 1
0 0 0 0 0 0 0 0 1  0 0 0 , mySum: 30
 0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 00 0  , mySum: 3
0 0 0 0 1 2 0 0 0 0 0 0 00 0 0 1 , mySum:  20 
00 0 0 0 0 0 0 0 2 0  0 , mySum: 3
0 0 0 1 1 2 0 0 0 0 0 0 0 00 0 0  , mySum: 4
0 0 0 1 2 1 0 0 0 0 0 0 0 0 00  00  0 , mySum: 04 
00 0 0 0 2 2 0 0 0 0 0 0 0  0 , mySum: 02
 00 0 0 0 0 0 1 0 0 0 0 0  , mySum: 0 40
 0 0 0 2 0 2 0 0 0 0 0 0 0 0 00 0  1 , mySum: 4, mySum: 
0 0 0 2 1 1 0 0 0 0 0 0 0 02 0 
00 0 0 0 0 0 1 0 1 0 0  0 , mySum: 0 0 40
0 0 0 2 2 0 0 0 0 0 0 0 0 0 0  0 0, mySum:  4
, mySum: 0 0 0 1 2 2 0 0 0 0 0 0 0 20 0
 0 0 0 0 0 0 0 0 2 0 0 , mySum: 5
0 0 0 2 1 2 0 0 0 0 0 0 0 0 0 0 0 0 10 , mySum:  30 0 
, mySum: 5
0 0 0 0 0 0 1 0 1 00 0 0 2 2 1 0 0 0 0 0  0 0 0 0 00  1 0, mySum: 3 
00 0 0 0 0 0 1 0 2 0 0 0 , mySum: 5
0 0 0 2 2 2 0 0 0 0 0 0 0 0  0 00  0 , mySum: 0 60 0
 0 , mySum: 3
0 0 0 0 0 0 1 0 2 0 0 0 0 0 0 1 , mySum: 4
thread: 3, maxBlockLvlSize: 7
thread: 3, maxInBlockLvlSize: 4
thread: 3, AllTableSize: 324, maxSubsetsSize: 64
thread: 0, NSTable size: 19
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 0, i: 1, maxN[i].weit: 4, maxN[i].idx: 1, blockDimSize[i]: 4
thread: 0, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 0, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 0, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 0, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 0, i: 6, maxN[i].weit: 4, maxN[i].idx: 6, blockDimSize[i]: 4
thread: 0, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 1, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 6, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, largestBlockVec.elm: 0 0 0 0 0 0 1 0 2 0 0 0 0 0 0 1 
thread: 0, blockDimSizeComp: 0 0 0 0 0 2 2 0 1 3 0 0 3 0 2 2 
thread: 0, divisorComp: 0 0 0 0 0 1 2 0 3 1 0 0 1 0 1 2 
thread: 0, largestBlockVec: 0 0 0 0 0 0 1 0 2 0 0 0 0 0 0 1 
thread: 0, largestNoZeroBlockVec: 0 1 2 0 0 0 1 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 0 2 0 0 0 0 0 0 1 , mySum: 4
thread: 1, maxBlockLvlSize: 4
thread: 1, maxInBlockLvlSize: 18
thread: 1, AllTableSize: 864, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 4
thread: 0, maxInBlockLvlSize: 36
thread: 0, AllTableSize: 1728, maxSubsetsSize: 64
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 5
copy the latest feasible solution to instance takes time: 0.012879
thread: 2, sOPT: 5
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 4
copy the latest feasible solution to instance takes time: 0.019876
thread: 3, sOPT: 4
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 1 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 1 0 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[4]: 0 0 1 0 0 0 1 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 0 2 0 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[6]: 0 1 0 0 0 0 1 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 0 1 1 0 0 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 1 mySum: 3
thread: 0, blockNoZero[8]: 0 0 2 0 0 0 1 
Thread: 1, gpu_BlockDP is done.
thread: 0, allBlocks[9]: 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 1 mySum: 3
thread: 0, blockNoZero[9]: 0 1 1 0 0 0 1 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 0 1 2 0 0 0 0 
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 7
copy the latest feasible solution to instance takes time: 0.029377
thread: 1, sOPT: 7
thread: 0, allBlocks[11]: 0 0 0 0 0 0 1 0 2 0 0 0 0 0 0 1 mySum: 4
thread: 0, blockNoZero[11]: 0 1 2 0 0 0 1 
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.029312
thread: 0, sOPT: 9
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 2, MlBk function is done, and BkID for all processes are collected.
1, MlBk function is done, and BkID for all processes are collected.
Thread: 3, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 18, UB: 21
BKID: 0, LB: 18, UB: 21, OPT: 9
Dynamic Programming Runtime: 0.519556
Execution time between LB and UB is: 0
By far, all LB UB calculation runtime: 0
Iteration: 2, UB: 21, LB: 18start at time: 1505254752
thread: 0, MlBk is called with LB: 18, UB: 19
 thread: 0, LongJobs.size() 14
thread: thread: 1, MlBk is called with LB: 219, UB: , MlBk is called with LB: 20, UB: 2021

 thread: 2, LongJobs.size() 14
 thread: 1, LongJobs.size() 14
thread: 0, NSTable size: 14
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 10
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
, NSTable size: thread: 0, i: 1611
, alltableelemets[maxindex].elm[i]: 0thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 3

thread: thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 1, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
0, i: 1, maxN[i].weit: 4, maxN[i].idx: 1, blockDimSize[i]: thread: 41, i: 
1thread: 0, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 0, i: 3, maxN[i].weit: , maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 43, maxN[i].idx: 
1, blockDimSize[i]: thread: 0, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 34
thread: 0, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 0, i: 6, maxN[i].weit: 4, maxN[i].idx: 6, blockDimSize[i]: 4

thread: thread: 1, i: 20, maxN[i].weit: , i: 3, maxN[i].idx: 02, divisor[i]: 1, blockDimSize[i]: , blockDimSize[i]: 32
thread: 1, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 1, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 1, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 1, i: 6, maxN[i].weit: 4, maxN[i].idx: 6, blockDimSize[i]: 4
thread: 
1, i: thread: 0, i: 1, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 6, divisor[i]: 2, blockDimSize[i]: 2
0, divisor[i]: 1, blockDimSize[i]: 2thread: 0
, largestBlockVec.elm: thread: 1, i: 1, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 6, divisor[i]: 2, blockDimSize[i]: 2
0thread:  1, largestBlockVec.elm: 0 0 0 0 0 0 0 0 0 01  00  1 0 2 0 0 0 20  0 00  0 10  
0 thread: 1, blockDimSizeComp: 0 0 0 0 0 2 2 0 1 03 0  0 01  3
thread: 0, blockDimSizeComp: 0 0 0 0 0 2 2 0 1 3 0 0  3 00  22  22  
thread: 0, divisorComp: 0 0 0 0 0 1 2 0 3 1 
0 thread: 1, divisorComp: 0 0 0 0 0 1 2 0 3 1 0 1 0 1 2 
thread: 0, largestBlockVec: 0 0 0 0 0 0 1 0 2 0 0 00 0  00 1  0 01  
thread: 0, largestNoZeroBlockVec: 0 1 2 0 0 0 1 
1 2 
thread: 1, largestBlockVec: 0 0 0 0 0 0 1 0 2 0 0 0 0 0 0 1 
thread: 1, largestNoZeroBlockVec: 0 1 2 0 0 0 1 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
thread: 0 10, allBlocks:  0 0 00 0  0 0 00 0 0  10  00  00  00  00 0  0 00  0 0 00  , mySum: 10
 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 00 
, mySum: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 01 1 , mySum: 
1
0 0 0 0 0 0 0 0 1 0 0 0 0 0 00 0 0 0 0 0 0 0 1 0 0 0  0 00  0 1 , mySum: , mySum: 1
20 0 0 0 0 0 1 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 2 0 0 0 00 0  0 , mySum: 01 
, mySum: 2
0 0 0 0 0 0 0 0 1 0 0 0 0 0 00 0 0 0 0 0 1 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0  0 0 0 1 0, mySum:  20 
00 0 0 0 0 0 1 0 1 0 0 0 0 0  0, mySum:  20
 , mySum: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 02 1 
, mySum: 0 0 0 0 0 0 0 0 2 0 0 0 0 0 02 1 , mySum: 
3
0 0 0 0 0 0 1 0 1 0 0 0 0 00 0 0 0 0 0 1 0 1 0  0 1 , mySum: 3
0 0 0 0 0 0 1 0 2 0 0 0 0 00 0 0  0, mySum:  30 0
 00 0 0 0 0 0 1 0 2 0 0 0 0  0 , mySum: 2
00 0 0 0 0 0 0 0 2 0 0 0 0 0 0  1 0, mySum:  1 3, mySum: 
4
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 0 2 0 0 0 0 0 0 1 , mySum: 4
thread: 1, maxBlockLvlSize: 4
thread: 1, maxInBlockLvlSize: 36
thread: 1, AllTableSize: 1728, maxSubsetsSize: 64
thread: 2, NSTable size: 19
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 2, i: 1, maxN[i].weit: 4, maxN[i].idx: 1, blockDimSize[i]: 4
thread: 2, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 2, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 2, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 2, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 2, i: 6, maxN[i].weit: 4, maxN[i].idx: 6, blockDimSize[i]: 4
thread: 2, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 1, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 3, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 6, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, largestBlockVec.elm: 0 0 0 0 0 0 1 0 2 0 0 0 0 0 0 1 
thread: 2, blockDimSizeComp: 0 0 0 0 0 2 2 0 1 3 0 0 3 0 2 2 
thread: 2, divisorComp: 0 0 0 0 0 1 2 0 3 1 0 0 1 0 1 2 
thread: 2, largestBlockVec: 0 0 0 0 0 0 1 0 2 0 0 0 0 0 0 1 
thread: 2, largestNoZeroBlockVec: 0 1 2 0 0 0 1 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 0 2 0 0 0 0 0 0 1 , mySum: 4
thread: 0, maxBlockLvlSize: 4
thread: 0, maxInBlockLvlSize: 36
thread: 0, AllTableSize: 1728, maxSubsetsSize: 64
thread: 2, maxBlockLvlSize: 4
thread: 2, maxInBlockLvlSize: 36
thread: 2, AllTableSize: 1728, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 1 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 1 0 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[4]: 0 0 1 0 0 0 1 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 0 2 0 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[6]: 0 1 0 0 0 0 1 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 0 1 1 0 0 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 1 mySum: 3
thread: 0, blockNoZero[8]: 0 0 2 0 0 0 1 
thread: 0, allBlocks[9]: 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 1 mySum: 3
thread: 0, blockNoZero[9]: 0 1 1 0 0 0 1 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 0 1 2 0 0 0 0 
thread: 0, allBlocks[11]: 0 0 0 0 0 0 1 0 2 0 0 0 0 0 0 1 mySum: 4
thread: 0, blockNoZero[11]: 0 1 2 0 0 0 1 
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.114642
thread: 1, sOPT: 10
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.108655
thread: 2, sOPT: 9
copy the latest feasible solution to instance takes time: 0.040984
thread: 0, sOPT: 10
BKID: 0, LB: 18, UB: 18, OPT: 10
Dynamic Programming Runtime: 0.880653
Execution time between LB and UB is: 0
By far, all LB UB calculation runtime: 0
********************************************************
Total execution on UB and LB is: 0
OUT of Bk while loop  
UB    18
LB    18
T1    18
T2    18
OPT   10
nMachines   10
BkID	0
AllProbData.size()    2
ck :   1
AllProbData[ck].Ttable    18
ck :   0
AllProbData[ck].Ttable    20
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan18
Main Scheduling is Done
File 2-8 is Done.
******************************
Reading File...
File 2-9 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 39, LB: 20start at time: 1505254752
thread: 0, MlBk is called with LB: 20, UB: 25
thread: 3, MlBk is called with LB: 35, UB: 40
 thread: 0, LongJobs.size() 16
thread: 1, MlBk is called with LB: 25, UB: 30
 thread: 3, LongJobs.size() 10
thread: 2, MlBk is called with LB: 30, UB: 35
 thread: 1, LongJobs.size() 14
 thread: 2, LongJobs.size() 11
thread: 3, NSTable size: 25
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 3, i: 1, maxN[i].weit: 4, maxN[i].idx: 1, blockDimSize[i]: 4
thread: 3, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 3, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 3, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 3, i: 0, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, i: 1, divisor[i]: 2, blockDimSize[i]: 2
thread: 3, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, i: 3, divisor[i]: 1, blockDimSize[i]: 3
thread: 3, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, largestBlockVec.elm: 0 0 0 0 2 1 2 0 0 0 0 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 0 1 2 1 3 2 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 0 3 2 3 1 1 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 2 1 2 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 2 1 2 0 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 1 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 0 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 1 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 1 2 0 0 0 0 0 0 0 0 0 , mySum: 5
thread: 3, maxBlockLvlSize: 5
thread: 3, maxInBlockLvlSize: 4
thread: 3, AllTableSize: 216, maxSubsetsSize: 64
thread: 2, NSTable size: 29
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 2, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 2, i: 2, maxN[i].weit: 4, maxN[i].idx: 2, blockDimSize[i]: 4
thread: 2, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 2, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 2, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 2, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 2, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, i: 3, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, largestBlockVec.elm: 0 0 0 0 2 1 2 0 0 0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 2 1 2 1 3 2 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 1 3 2 3 1 1 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 2 1 2 0 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 2 1 2 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 1 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 0 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 1 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 1 2 0 0 0 0 0 0 0 0 0 , mySum: 5
thread: 2, maxBlockLvlSize: 5
thread: 2, maxInBlockLvlSize: 7
thread: 2, AllTableSize: 432, maxSubsetsSize: 64
thread: 1, NSTable size: 62
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 1, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 1, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 1, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 1, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 1, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 1, i: 6, maxN[i].weit: 3, maxN[i].idx: 6, blockDimSize[i]: 3
thread: 1, i: 7, maxN[i].weit: 2, maxN[i].idx: 7, blockDimSize[i]: 2
thread: 1, i: 8, maxN[i].weit: 2, maxN[i].idx: 8, blockDimSize[i]: 2
thread: 1, i: 9, maxN[i].weit: 4, maxN[i].idx: 9, blockDimSize[i]: 4
thread: 1, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 6, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 7, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 8, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 9, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, largestBlockVec.elm: 0 0 0 0 0 0 0 2 0 0 0 0 2 0 0 1 
thread: 1, blockDimSizeComp: 0 0 0 0 0 0 2 1 2 2 2 2 1 2 2 2 
thread: 1, divisorComp: 0 0 0 0 0 0 1 3 1 1 1 1 3 1 1 2 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 2 0 0 0 0 2 0 0 1 
thread: 1, largestNoZeroBlockVec: 0 2 0 0 0 0 2 0 0 1 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 1 , mySum: 3
0 0 0 0 0 0 0 2 0 0 0 0 1 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 1 0 0 0 0 2 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 1 , mySum: 3
0 0 0 0 0 0 0 1 0 0 0 0 2 0 0 1 , mySum: 4
0 0 0 0 0 0 0 2 0 0 0 0 1 0 0 1 , mySum: 4
0 0 0 0 0 0 0 2 0 0 0 0 2 0 0 0 , mySum: 4
0 0 0 0 0 0 0 2 0 0 0 0 2 0 0 1 , mySum: 5
thread: 1, maxBlockLvlSize: 5
thread: 1, maxInBlockLvlSize: 70
thread: 1, AllTableSize: 4608, maxSubsetsSize: 64
thread: 0, NSTable size: 50
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 0, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 0, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 0, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 0, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 0, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 0, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 0, i: 7, maxN[i].weit: 3, maxN[i].idx: 7, blockDimSize[i]: 3
thread: 0, i: 8, maxN[i].weit: 2, maxN[i].idx: 8, blockDimSize[i]: 2
thread: 0, i: 9, maxN[i].weit: 2, maxN[i].idx: 9, blockDimSize[i]: 2
thread: 0, i: 10, maxN[i].weit: 4, maxN[i].idx: 10, blockDimSize[i]: 4
thread: 0, i: 0, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 7, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 8, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 9, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 10, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, largestBlockVec.elm: 0 0 0 0 0 2 0 2 0 0 0 0 0 0 0 1 
thread: 0, blockDimSizeComp: 0 0 0 0 0 1 2 1 2 2 2 2 3 2 2 2 
thread: 0, divisorComp: 0 0 0 0 0 3 1 3 1 1 1 1 1 1 1 2 
thread: 0, largestBlockVec: 0 0 0 0 0 2 0 2 0 0 0 0 0 0 0 1 
thread: 0, largestNoZeroBlockVec: 2 0 2 0 0 0 0 0 0 0 1 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 1 , mySum: 4
0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 1 , mySum: 4
0 0 0 0 0 2 0 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 0 2 0 0 0 0 0 0 0 1 , mySum: 5
thread: 0, maxBlockLvlSize: 5
thread: 0, maxInBlockLvlSize: 182
thread: 0, AllTableSize: 13824, maxSubsetsSize: 64
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 4
copy the latest feasible solution to instance takes time: 0.010846
thread: 3, sOPT: 4
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 5
copy the latest feasible solution to instance takes time: 0.016117
thread: 2, sOPT: 5
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 0 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 1 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 1 0 0 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[4]: 0 0 1 0 0 0 0 0 0 0 1 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 0 2 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[6]: 1 0 0 0 0 0 0 0 0 0 1 
Thread: 1, gpu_BlockDP is done.
thread: 0, allBlocks[7]: 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 1 0 1 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[8]: 2 0 0 0 0 0 0 0 0 0 0 
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 7
copy the latest feasible solution to instance takes time: 0.195406
thread: 1, sOPT: 7
thread: 0, allBlocks[9]: 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 1 mySum: 3
thread: 0, blockNoZero[9]: 1 0 1 0 0 0 0 0 0 0 1 
thread: 0, allBlocks[10]: 0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 2 0 1 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[11]: 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 1 mySum: 3
thread: 0, blockNoZero[11]: 2 0 0 0 0 0 0 0 0 0 1 
thread: 0, allBlocks[12]: 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[12]: 1 0 2 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[13]: 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 1 mySum: 3
thread: 0, blockNoZero[13]: 0 0 2 0 0 0 0 0 0 0 1 
thread: 0, allBlocks[14]: 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 1 mySum: 4
thread: 0, blockNoZero[14]: 1 0 2 0 0 0 0 0 0 0 1 
thread: 0, allBlocks[15]: 0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 1 mySum: 4
thread: 0, blockNoZero[15]: 2 0 1 0 0 0 0 0 0 0 1 
thread: 0, allBlocks[16]: 0 0 0 0 0 2 0 2 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[16]: 2 0 2 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[17]: 0 0 0 0 0 2 0 2 0 0 0 0 0 0 0 1 mySum: 5
thread: 0, blockNoZero[17]: 2 0 2 0 0 0 0 0 0 0 1 
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.285493
thread: 0, sOPT: 9
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 2, MlBk function is done, and BkID for all processes are collected.
3, MlBk function is done, and BkID for all processes are collected.
Thread: 1, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 20, UB: 23
BKID: 0, LB: 20, UB: 23, OPT: 9
Dynamic Programming Runtime: 4.37646
Execution time between LB and UB is: 4
By far, all LB UB calculation runtime: 4
Iteration: 2, UB: 23, LB: 20start at time: 1505254756
thread: 0, MlBk is called with LB: 20, UB: 21
 thread: 0, LongJobs.size() 16
thread: thread: 1, MlBk is called with LB: 212, MlBk is called with LB: , UB: 2222, UB: 23

 thread: 1, LongJobs.size() 16
 thread: 2, LongJobs.size() 16
thread: 1, NSTable size: 42
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 1, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 1, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 1, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 1, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 1, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 1, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 1, i: 7, maxN[i].weit: 3, maxN[i].idx: 7, blockDimSize[i]: 3
thread: 1, i: 8, maxN[i].weit: 2, maxN[i].idx: 8, blockDimSize[i]: 2
thread: 1, i: 9, maxN[i].weit: 2, maxN[i].idx: 9, blockDimSize[i]: 2
thread: 1, i: 10, maxN[i].weit: 4, maxN[i].idx: 10, blockDimSize[i]: 4
thread: 1, i: 0, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 7, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 8, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 9, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 10, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, largestBlockVec.elm: 0 0 0 0 0 2 0 2 0 0 0 0 0 0 0 1 
thread: 1, blockDimSizeComp: 0 0 0 0 0 1 2 1 2 2 2 2 3 2 2 2 
thread: 1, divisorComp: 0 0 0 0 0 3 1 3 1 1 1 1 1 1 1 2 
thread: 1, largestBlockVec: 0 0 0 0 0 2 0 2 0 0 0 0 0 0 0 1 
thread: 1, largestNoZeroBlockVec: 2 0 2 0 0 0 0 0 0 0 1 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 1 , mySum: 4
0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 1 , mySum: 4
0 0 0 0 0 2 0 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 0 2 0 0 0 0 0 0 0 1 , mySum: 5
thread: 2, NSTable size: 50
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 2, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 2, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 2, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 2, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 2, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 2, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 2, i: 7, maxN[i].weit: 3, maxN[i].idx: 7, blockDimSize[i]: 3
thread: 2, i: 8, maxN[i].weit: 2, maxN[i].idx: 8, blockDimSize[i]: 2
thread: 2, i: 9, maxN[i].weit: 2, maxN[i].idx: 9, blockDimSize[i]: 2
thread: 2, i: 10, maxN[i].weit: 4, maxN[i].idx: 10, blockDimSize[i]: 4
thread: 2, i: 0, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 7, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 8, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 9, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 10, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, largestBlockVec.elm: 0 0 0 0 0 2 0 2 0 0 0 0 0 0 0 1 
thread: 2, blockDimSizeComp: 0 0 0 0 0 1 2 1 2 2 2 2 3 2 2 2 
thread: 2, divisorComp: 0 0 0 0 0 3 1 3 1 1 1 1 1 1 1 2 
thread: 2, largestBlockVec: 0 0 0 0 0 2 0 2 0 0 0 0 0 0 0 1 
thread: 2, largestNoZeroBlockVec: 2 0 2 0 0 0 0 0 0 0 1 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 1 , mySum: 4
0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 1 , mySum: 4
0 0 0 0 0 2 0 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 0 2 0 0 0 0 0 0 0 1 , mySum: 5
thread: 0, NSTable size: 35
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 0, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 0, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 0, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 0, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 0, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 0, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 0, i: 7, maxN[i].weit: 3, maxN[i].idx: 7, blockDimSize[i]: 3
thread: 0, i: 8, maxN[i].weit: 2, maxN[i].idx: 8, blockDimSize[i]: 2
thread: 0, i: 9, maxN[i].weit: 2, maxN[i].idx: 9, blockDimSize[i]: 2
thread: 0, i: 10, maxN[i].weit: 4, maxN[i].idx: 10, blockDimSize[i]: 4
thread: 0, i: 0, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 7, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 8, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 9, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 10, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, largestBlockVec.elm: 0 0 0 0 0 2 0 2 0 0 0 0 0 0 0 1 
thread: 0, blockDimSizeComp: 0 0 0 0 0 1 2 1 2 2 2 2 3 2 2 2 
thread: 0, divisorComp: 0 0 0 0 0 3 1 3 1 1 1 1 1 1 1 2 
thread: 0, largestBlockVec: 0 0 0 0 0 2 0 2 0 0 0 0 0 0 0 1 
thread: 0, largestNoZeroBlockVec: 2 0 2 0 0 0 0 0 0 0 1 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 1 , mySum: 4
0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 1 , mySum: 4
0 0 0 0 0 2 0 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 0 2 0 0 0 0 0 0 0 1 , mySum: 5
thread: 1, maxBlockLvlSize: 5
thread: 1, maxInBlockLvlSize: 182
thread: 1, AllTableSize: 13824, maxSubsetsSize: 64
thread: 2, maxBlockLvlSize: 5
thread: 2, maxInBlockLvlSize: 182
thread: 2, AllTableSize: 13824, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 5
thread: 0, maxInBlockLvlSize: 182
thread: 0, AllTableSize: 13824, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 0 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 1 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 1 0 0 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[4]: 0 0 1 0 0 0 0 0 0 0 1 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 0 2 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[6]: 1 0 0 0 0 0 0 0 0 0 1 
thread: 0, allBlocks[7]: 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 1 0 1 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[8]: 2 0 0 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 1 mySum: 3
thread: 0, blockNoZero[9]: 1 0 1 0 0 0 0 0 0 0 1 
thread: 0, allBlocks[10]: 0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 2 0 1 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[11]: 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 1 mySum: 3
thread: 0, blockNoZero[11]: 2 0 0 0 0 0 0 0 0 0 1 
thread: 0, allBlocks[12]: 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[12]: 1 0 2 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[13]: 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 1 mySum: 3
thread: 0, blockNoZero[13]: 0 0 2 0 0 0 0 0 0 0 1 
thread: 0, allBlocks[14]: 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 1 mySum: 4
thread: 0, blockNoZero[14]: 1 0 2 0 0 0 0 0 0 0 1 
thread: 0, allBlocks[15]: 0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 1 mySum: 4
thread: 0, blockNoZero[15]: 2 0 1 0 0 0 0 0 0 0 1 
thread: 0, allBlocks[16]: 0 0 0 0 0 2 0 2 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[16]: 2 0 2 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[17]: 0 0 0 0 0 2 0 2 0 0 0 0 0 0 0 1 mySum: 5
thread: 0, blockNoZero[17]: 2 0 2 0 0 0 0 0 0 0 1 
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 9
copy the latest feasible solution to instance takes time: 1.53853
thread: 0, sOPT: 10
copy the latest feasible solution to instance takes time: 1.60555
thread: 1, sOPT: 10
copy the latest feasible solution to instance takes time: 1.07572
thread: 2, sOPT: 9
BKID: 0, LB: 20, UB: 20, OPT: 10
Dynamic Programming Runtime: 14.7172
Execution time between LB and UB is: 5
By far, all LB UB calculation runtime: 9
********************************************************
Total execution on UB and LB is: 10
OUT of Bk while loop  
UB    20
LB    20
T1    20
T2    20
OPT   10
nMachines   10
BkID	0
AllProbData.size()    2
ck :   1
AllProbData[ck].Ttable    20
ck :   0
AllProbData[ck].Ttable    22
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan20
Main Scheduling is Done
File 2-9 is Done.
******************************
Reading File...
File 2-10 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 42, LB: 23start at time: 1505254762
thread: 0, MlBk is called with LB: 23, UB: 28
thread: 3, MlBk is called with LB: 38, UB: 43
 thread: 0, LongJobs.size() thread: 16
 thread: thread: 3, LongJobs.size() 112
, MlBk is called with LB: 33, UB: 38
1, MlBk is called with LB: 28, UB: 33
 thread: 2, LongJobs.size() 13
 thread: 1, LongJobs.size() 14
thread: 2, NSTable size: 21
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 5
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 2, i: 1, maxN[i].weit: 6, maxN[i].idx: 1, blockDimSize[i]: 6
thread: 2, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 2, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 2, i: 4, maxN[i].weit: 4, maxN[i].idx: 4, blockDimSize[i]: 4
thread: 2, i: 0, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, i: 1, divisor[i]: 2, blockDimSize[i]: 3
thread: 2, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 4, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, largestBlockVec.elm: 0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 0 2 3 2 2 2 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 2 2 1 1 2 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 1 1 0 0 1 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 , mySum: 3
thread: 2, maxBlockLvlSize: 3
thread: 2, maxInBlockLvlSize: 14
thread: 2, AllTableSize: 384, maxSubsetsSize: 64
thread: 1, NSTable size: 33
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 1, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 1, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 1, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 1, i: 4, maxN[i].weit: 4, maxN[i].idx: 4, blockDimSize[i]: 4
thread: 1, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 1, i: 6, maxN[i].weit: 5, maxN[i].idx: 6, blockDimSize[i]: 5
thread: 1, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 4, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 6, divisor[i]: 5, blockDimSize[i]: 1
thread: 1, largestBlockVec.elm: 0 0 0 0 0 0 0 0 0 2 0 0 1 0 0 4 
thread: 1, blockDimSizeComp: 0 0 0 0 0 0 0 2 0 1 2 3 2 0 2 1 
thread: 1, divisorComp: 0 0 0 0 0 0 0 1 0 3 1 1 2 0 1 5 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0 2 0 0 1 0 0 4 
thread: 1, largestNoZeroBlockVec: 0 2 0 0 1 0 4 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 2 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 , mySum: 3
0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 2 , mySum: 3
0 0 0 0 0 0 0 0 0 2 0 0 1 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 3 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 , mySum: 4
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 3 , mySum: 4
0 0 0 0 0 0 0 0 0 2 0 0 1 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 2 , mySum: 4
0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 2 , mySum: 4
0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 3 , mySum: 5
0 0 0 0 0 0 0 0 0 2 0 0 1 0 0 2 , mySum: 5
0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 3 , mySum: 5
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 4 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 4 , mySum: 5
0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 4 , mySum: 6
0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 4 , mySum: 6
0 0 0 0 0 0 0 0 0 2 0 0 1 0 0 3 , mySum: 6
0 0 0 0 0 0 0 0 0 2 0 0 1 0 0 4 , mySum: 7
thread: 3, NSTable size: 25
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 5
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 3, i: 1, maxN[i].weit: 6, maxN[i].idx: 1, blockDimSize[i]: 6
thread: 3, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 3, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 3, i: 4, maxN[i].weit: 4, maxN[i].idx: 4, blockDimSize[i]: 4
thread: 3, i: 0, divisor[i]: 2, blockDimSize[i]: 1
thread: 3, i: 1, divisor[i]: 2, blockDimSize[i]: 3
thread: 3, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 4, divisor[i]: 2, blockDimSize[i]: 2
thread: 3, largestBlockVec.elm: 0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 0 1 3 2 2 2 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 0 2 2 1 1 2 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 1 1 0 0 1 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 , mySum: 3
thread: 1, maxBlockLvlSize: 6
thread: 1, maxInBlockLvlSize: 14
thread: 1, AllTableSize: 1440, maxSubsetsSize: 64
thread: 3, maxBlockLvlSize: 3
thread: 3, maxInBlockLvlSize: 7
thread: 3, AllTableSize: 192, maxSubsetsSize: 64
thread: 0, NSTable size: 35
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 0, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 0, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 0, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 0, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 0, i: 5, maxN[i].weit: 4, maxN[i].idx: 5, blockDimSize[i]: 4
thread: 0, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 0, i: 7, maxN[i].weit: 5, maxN[i].idx: 7, blockDimSize[i]: 5
thread: 0, i: 0, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 2, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 5, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 7, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, largestBlockVec.elm: 0 0 0 0 0 0 2 0 0 0 0 0 1 0 0 4 
thread: 0, blockDimSizeComp: 0 0 0 0 0 0 1 2 0 3 2 3 2 0 2 1 
thread: 0, divisorComp: 0 0 0 0 0 0 3 1 0 1 1 1 2 0 1 5 
thread: 0, largestBlockVec: 0 0 0 0 0 0 2 0 0 0 0 0 1 0 0 4 
thread: 0, largestNoZeroBlockVec: 2 0 0 0 0 1 0 4 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 , mySum: 2
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 2 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 , mySum: 3
0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 2 , mySum: 3
0 0 0 0 0 0 2 0 0 0 0 0 1 0 0 0 , mySum: 3
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 3 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 , mySum: 4
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 3 , mySum: 4
0 0 0 0 0 0 2 0 0 0 0 0 1 0 0 1 , mySum: 4
0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 2 , mySum: 4
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 2 , mySum: 4
0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 3 , mySum: 5
0 0 0 0 0 0 2 0 0 0 0 0 1 0 0 2 , mySum: 5
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 3 , mySum: 5
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 4 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 4 , mySum: 5
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 4 , mySum: 6
0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 4 , mySum: 6
0 0 0 0 0 0 2 0 0 0 0 0 1 0 0 3 , mySum: 6
0 0 0 0 0 0 2 0 0 0 0 0 1 0 0 4 , mySum: 7
thread: 0, maxBlockLvlSize: 6
thread: 0, maxInBlockLvlSize: 36
thread: 0, AllTableSize: 4320, maxSubsetsSize: 64
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 4
copy the latest feasible solution to instance takes time: 0.011811
thread: 3, sOPT: 4
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 6
copy the latest feasible solution to instance takes time: 0.018483
thread: 2, sOPT: 6
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 0 0 0 1 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 1 0 0 0 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 1 0 0 0 0 1 0 0 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 2 0 0 0 0 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[6]: 1 0 0 0 0 0 0 1 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 mySum: 2
thread: 0, blockNoZero[7]: 0 0 0 0 0 1 0 1 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 mySum: 2
thread: 0, blockNoZero[8]: 0 0 0 0 0 0 0 2 
thread: 0, allBlocks[9]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 2 mySum: 3
thread: 0, blockNoZero[9]: 1 0 0 0 0 0 0 2 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 mySum: 3
thread: 0, blockNoZero[10]: 0 0 0 0 0 0 0 3 
thread: 0, allBlocks[11]: 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 1 mySum: 3
thread: 0, blockNoZero[11]: 1 0 0 0 0 1 0 1 
thread: 0, allBlocks[12]: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 2 mySum: 3
thread: 0, blockNoZero[12]: 0 0 0 0 0 1 0 2 
Thread: 1, gpu_BlockDP is done.
thread: 0, allBlocks[13]: 0 0 0 0 0 0 2 0 0 0 0 0 1 0 0 0 mySum: 3
thread: 0, blockNoZero[13]: 2 0 0 0 0 1 0 0 
thread: 0, allBlocks[14]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 1 mySum: 3
thread: 0, blockNoZero[14]: 2 0 0 0 0 0 0 1 
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 7
copy the latest feasible solution to instance takes time: 0.049509
thread: 1, sOPT: 7
thread: 0, allBlocks[15]: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 3 mySum: 4
thread: 0, blockNoZero[15]: 0 0 0 0 0 1 0 3 
thread: 0, allBlocks[16]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 mySum: 4
thread: 0, blockNoZero[16]: 0 0 0 0 0 0 0 4 
thread: 0, allBlocks[17]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 3 mySum: 4
thread: 0, blockNoZero[17]: 1 0 0 0 0 0 0 3 
thread: 0, allBlocks[18]: 0 0 0 0 0 0 2 0 0 0 0 0 1 0 0 1 mySum: 4
thread: 0, blockNoZero[18]: 2 0 0 0 0 1 0 1 
thread: 0, allBlocks[19]: 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 2 mySum: 4
thread: 0, blockNoZero[19]: 1 0 0 0 0 1 0 2 
thread: 0, allBlocks[20]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 2 mySum: 4
thread: 0, blockNoZero[20]: 2 0 0 0 0 0 0 2 
thread: 0, allBlocks[21]: 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 3 mySum: 5
thread: 0, blockNoZero[21]: 1 0 0 0 0 1 0 3 
thread: 0, allBlocks[22]: 0 0 0 0 0 0 2 0 0 0 0 0 1 0 0 2 mySum: 5
thread: 0, blockNoZero[22]: 2 0 0 0 0 1 0 2 
thread: 0, allBlocks[23]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 3 mySum: 5
thread: 0, blockNoZero[23]: 2 0 0 0 0 0 0 3 
thread: 0, allBlocks[24]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 4 mySum: 5
thread: 0, blockNoZero[24]: 1 0 0 0 0 0 0 4 
thread: 0, allBlocks[25]: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 4 mySum: 5
thread: 0, blockNoZero[25]: 0 0 0 0 0 1 0 4 
thread: 0, allBlocks[26]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 4 mySum: 6
thread: 0, blockNoZero[26]: 2 0 0 0 0 0 0 4 
thread: 0, allBlocks[27]: 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 4 mySum: 6
thread: 0, blockNoZero[27]: 1 0 0 0 0 1 0 4 
thread: 0, allBlocks[28]: 0 0 0 0 0 0 2 0 0 0 0 0 1 0 0 3 mySum: 6
thread: 0, blockNoZero[28]: 2 0 0 0 0 1 0 3 
thread: 0, allBlocks[29]: 0 0 0 0 0 0 2 0 0 0 0 0 1 0 0 4 mySum: 7
thread: 0, blockNoZero[29]: 2 0 0 0 0 1 0 4 
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.076107
thread: 0, sOPT: 9
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: 3, MlBk function is done, and BkID for all processes are collected.
Thread: 1, MlBk function is done, and BkID for all processes are collected.
Thread: 2, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 23, UB: 26
BKID: 0, LB: 23, UB: 26, OPT: 9
Dynamic Programming Runtime: 0.971551
Execution time between LB and UB is: 0
By far, all LB UB calculation runtime: 0
Iteration: 2, UB: 26, LB: 23start at time: 1505254762
thread: 0, MlBk is called with LB: 23, UB: 24
 thread: 0, LongJobs.size() 16
thread: thread: 12, MlBk is called with LB: , MlBk is called with LB: 2524, UB: 26, UB: 25

 thread: 1, LongJobs.size() 16
 thread: 2, LongJobs.size() 16
thread: 1, NSTable size: 31
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 1, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 1, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 1, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 1, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 1, i: 5, maxN[i].weit: 4, maxN[i].idx: 5, blockDimSize[i]: 4
thread: 1, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 1, i: 7, maxN[i].weit: 5, maxN[i].idx: 7, blockDimSize[i]: 5
thread: 1, i: 0, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 2, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 5, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 7, divisor[i]: 5, blockDimSize[i]: 1
thread: 1, largestBlockVec.elm: 0 0 0 0 0 0 2 0 0 0 0 0 1 0 0 4 
thread: 1, blockDimSizeComp: 0 0 0 0 0 0 1 2 0 3 2 3 2 0 2 1 
thread: 1, divisorComp: 0 0 0 0 0 0 3 1 0 1 1 1 2 0 1 5 
thread: 1, largestBlockVec: 0 0 0 0 0 0 2 0 0 0 0 0 1 0 0 4 
thread: 1, largestNoZeroBlockVec: 2 0 0 0 0 1 0 4 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 , mySum: 2
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 2 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 , mySum: 3
0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 2 , mySum: 3
0 0 0 0 0 0 2 0 0 0 0 0 1 0 0 0 , mySum: 3
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 3 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 , mySum: 4
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 3 , mySum: 4
0 0 0 0 0 0 2 0 0 0 0 0 1 0 0 1 , mySum: 4
0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 2 , mySum: 4
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 2 , mySum: 4
0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 3 , mySum: 5
0 0 0 0 0 0 2 0 0 0 0 0 1 0 0 2 , mySum: 5
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 3 , mySum: 5
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 4 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 4 , mySum: 5
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 4 , mySum: 6
0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 4 , mySum: 6
0 0 0 0 0 0 2 0 0 0 0 0 1 0 0 3 , mySum: 6
0 0 0 0 0 0 2 0 0 0 0 0 1 0 0 4 , mySum: 7
thread: 0, NSTable size: 27
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 0, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 0, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 0, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 0, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 0, i: 5, maxN[i].weit: 4, maxN[i].idx: 5, blockDimSize[i]: 4
thread: 0, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 0, i: 7, maxN[i].weit: 5, maxN[i].idx: 7, blockDimSize[i]: 5
thread: 0, i: 0, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 2, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 5, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 7, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, largestBlockVec.elm: 0 0 0 0 0 0 2 0 0 0 0 0 1 0 0 4 
thread: 0, blockDimSizeComp: 0 0 0 0 0 0 1 2 0 3 2 3 2 0 2 1 
thread: 0, divisorComp: 0 0 0 0 0 0 3 1 0 1 1 1 2 0 1 5 
thread: 0, largestBlockVec: 0 0 0 0 0 0 2 0 0 0 0 0 1 0 0 4 
thread: 0, largestNoZeroBlockVec: 2 0 0 0 0 1 0 4 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 , mySum: 2
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 2 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 , mySum: 3
0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 2 , mySum: 3
0 0 0 0 0 0 2 0 0 0 0 0 1 0 0 0 , mySum: 3
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 3 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 , mySum: 4
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 3 , mySum: 4
0 0 0 0 0 0 2 0 0 0 0 0 1 0 0 1 , mySum: 4
0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 2 , mySum: 4
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 2 , mySum: 4
0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 3 , mySum: 5
0 0 0 0 0 0 2 0 0 0 0 0 1 0 0 2 , mySum: 5
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 3 , mySum: 5
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 4 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 4 , mySum: 5
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 4 , mySum: 6
0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 4 , mySum: 6
0 0 0 0 0 0 2 0 0 0 0 0 1 0 0 3 , mySum: 6
0 0 0 0 0 0 2 0 0 0 0 0 1 0 0 4 , mySum: 7
thread: 2, NSTable size: 35
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 2, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 2, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 2, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 2, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 2, i: 5, maxN[i].weit: 4, maxN[i].idx: 5, blockDimSize[i]: 4
thread: 2, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 2, i: 7, maxN[i].weit: 5, maxN[i].idx: 7, blockDimSize[i]: 5
thread: 2, i: 0, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 2, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 5, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 7, divisor[i]: 5, blockDimSize[i]: 1
thread: 2, largestBlockVec.elm: 0 0 0 0 0 0 2 0 0 0 0 0 1 0 0 4 
thread: 2, blockDimSizeComp: 0 0 0 0 0 0 1 2 0 3 2 3 2 0 2 1 
thread: 2, divisorComp: 0 0 0 0 0 0 3 1 0 1 1 1 2 0 1 5 
thread: 2, largestBlockVec: 0 0 0 0 0 0 2 0 0 0 0 0 1 0 0 4 
thread: 2, largestNoZeroBlockVec: 2 0 0 0 0 1 0 4 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 , mySum: 2
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 2 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 , mySum: 3
0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 2 , mySum: 3
0 0 0 0 0 0 2 0 0 0 0 0 1 0 0 0 , mySum: 3
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 3 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 , mySum: 4
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 3 , mySum: 4
0 0 0 0 0 0 2 0 0 0 0 0 1 0 0 1 , mySum: 4
0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 2 , mySum: 4
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 2 , mySum: 4
0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 3 , mySum: 5
0 0 0 0 0 0 2 0 0 0 0 0 1 0 0 2 , mySum: 5
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 3 , mySum: 5
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 4 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 4 , mySum: 5
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 4 , mySum: 6
0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 4 , mySum: 6
0 0 0 0 0 0 2 0 0 0 0 0 1 0 0 3 , mySum: 6
0 0 0 0 0 0 2 0 0 0 0 0 1 0 0 4 , mySum: 7
thread: 1, maxBlockLvlSize: 6
thread: 1, maxInBlockLvlSize: 36
thread: 1, AllTableSize: 4320, maxSubsetsSize: 64
thread: 2, maxBlockLvlSize: 6
thread: 2, maxInBlockLvlSize: 36
thread: 2, AllTableSize: 4320, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 6
thread: 0, maxInBlockLvlSize: 36
thread: 0, AllTableSize: 4320, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 0 0 0 1 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 1 0 0 0 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 1 0 0 0 0 1 0 0 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 2 0 0 0 0 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[6]: 1 0 0 0 0 0 0 1 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 mySum: 2
thread: 0, blockNoZero[7]: 0 0 0 0 0 1 0 1 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 mySum: 2
thread: 0, blockNoZero[8]: 0 0 0 0 0 0 0 2 
thread: 0, allBlocks[9]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 2 mySum: 3
thread: 0, blockNoZero[9]: 1 0 0 0 0 0 0 2 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 mySum: 3
thread: 0, blockNoZero[10]: 0 0 0 0 0 0 0 3 
thread: 0, allBlocks[11]: 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 1 mySum: 3
thread: 0, blockNoZero[11]: 1 0 0 0 0 1 0 1 
thread: 0, allBlocks[12]: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 2 mySum: 3
thread: 0, blockNoZero[12]: 0 0 0 0 0 1 0 2 
thread: 0, allBlocks[13]: 0 0 0 0 0 0 2 0 0 0 0 0 1 0 0 0 mySum: 3
thread: 0, blockNoZero[13]: 2 0 0 0 0 1 0 0 
thread: 0, allBlocks[14]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 1 mySum: 3
thread: 0, blockNoZero[14]: 2 0 0 0 0 0 0 1 
thread: 0, allBlocks[15]: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 3 mySum: 4
thread: 0, blockNoZero[15]: 0 0 0 0 0 1 0 3 
thread: 0, allBlocks[16]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 mySum: 4
thread: 0, blockNoZero[16]: 0 0 0 0 0 0 0 4 
thread: 0, allBlocks[17]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 3 mySum: 4
thread: 0, blockNoZero[17]: 1 0 0 0 0 0 0 3 
thread: 0, allBlocks[18]: 0 0 0 0 0 0 2 0 0 0 0 0 1 0 0 1 mySum: 4
thread: 0, blockNoZero[18]: 2 0 0 0 0 1 0 1 
thread: 0, allBlocks[19]: 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 2 mySum: 4
thread: 0, blockNoZero[19]: 1 0 0 0 0 1 0 2 
thread: 0, allBlocks[20]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 2 mySum: 4
thread: 0, blockNoZero[20]: 2 0 0 0 0 0 0 2 
thread: 0, allBlocks[21]: 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 3 mySum: 5
thread: 0, blockNoZero[21]: 1 0 0 0 0 1 0 3 
thread: 0, allBlocks[22]: 0 0 0 0 0 0 2 0 0 0 0 0 1 0 0 2 mySum: 5
thread: 0, blockNoZero[22]: 2 0 0 0 0 1 0 2 
thread: 0, allBlocks[23]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 3 mySum: 5
thread: 0, blockNoZero[23]: 2 0 0 0 0 0 0 3 
thread: 0, allBlocks[24]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 4 mySum: 5
thread: 0, blockNoZero[24]: 1 0 0 0 0 0 0 4 
thread: 0, allBlocks[25]: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 4 mySum: 5
thread: 0, blockNoZero[25]: 0 0 0 0 0 1 0 4 
thread: 0, allBlocks[26]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 4 mySum: 6
thread: 0, blockNoZero[26]: 2 0 0 0 0 0 0 4 
thread: 0, allBlocks[27]: 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 4 mySum: 6
thread: 0, blockNoZero[27]: 1 0 0 0 0 1 0 4 
thread: 0, allBlocks[28]: 0 0 0 0 0 0 2 0 0 0 0 0 1 0 0 3 mySum: 6
thread: 0, blockNoZero[28]: 2 0 0 0 0 1 0 3 
thread: 0, allBlocks[29]: 0 0 0 0 0 0 2 0 0 0 0 0 1 0 0 4 mySum: 7
thread: 0, blockNoZero[29]: 2 0 0 0 0 1 0 4 
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 9
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 9
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.418246
thread: 1, sOPT: 9
copy the latest feasible solution to instance takes time: 0.298405
thread: 2, sOPT: 9
copy the latest feasible solution to instance takes time: 0.262373
thread: 0, sOPT: 10
BKID: 0, LB: 23, UB: 23, OPT: 10
Dynamic Programming Runtime: 2.38062
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 1
********************************************************
Total execution on UB and LB is: 2
OUT of Bk while loop  
UB    23
LB    23
T1    23
T2    23
OPT   10
nMachines   10
BkID	0
AllProbData.size()    2
ck :   1
AllProbData[ck].Ttable    23
ck :   0
AllProbData[ck].Ttable    25
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan25
Main Scheduling is Done
File 2-10 is Done.
******************************
Reading File...
File 2-11 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 43, LB: 24start at time: 1505254764
thread: 0, MlBk is called with LB: 24, UB: 29
thread: 3, MlBk is called with LB: 39, UB: 44
 thread: 0, LongJobs.size() 17
thread: thread: 1, MlBk is called with LB: 2 thread: , MlBk is called with LB: 29343, UB: 39
, LongJobs.size() 12
 thread: 2, LongJobs.size() , UB: 13
34
 thread: 1, LongJobs.size() 15
thread: 2, NSTable size: 23
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 5, maxN[i].idx: 0, blockDimSize[i]: 5
thread: 2, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 2, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 2, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 2, i: 4, maxN[i].weit: 5, maxN[i].idx: 4, blockDimSize[i]: 5
thread: 2, i: 0, divisor[i]: 5, blockDimSize[i]: 1
thread: 2, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 3, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, i: 4, divisor[i]: 5, blockDimSize[i]: 1
thread: 2, largestBlockVec.elm: 0 0 0 0 4 0 0 1 4 0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 0 1 2 2 2 1 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 5 1 1 2 5 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 4 0 0 1 4 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 4 0 0 1 4 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 0 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 1 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 1 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 0 0 0 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 3 0 0 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 0 0 1 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 3 0 0 0 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 0 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 4 0 0 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 4 0 0 0 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 0 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 3 0 0 1 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 3 0 0 0 2 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 0 0 1 2 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 1 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 1 3 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 0 0 0 3 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 0 0 1 3 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 4 0 0 1 1 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 4 0 0 0 2 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 0 0 1 4 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 3 0 0 1 2 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 0 0 0 4 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 3 0 0 0 3 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 3 0 0 1 3 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 3 0 0 0 4 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 4 0 0 0 3 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 2 0 0 1 4 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 4 0 0 1 2 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 3 0 0 1 4 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 4 0 0 0 4 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 4 0 0 1 3 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 4 0 0 1 4 0 0 0 0 0 0 0 , mySum: 9
thread: 2, maxBlockLvlSize: 9
thread: 2, maxInBlockLvlSize: 3
thread: 2, AllTableSize: 400, maxSubsetsSize: 64
thread: 1, NSTable size: 30
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 7
thread: 1, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 1, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 1, i: 2, maxN[i].weit: 4, maxN[i].idx: 2, blockDimSize[i]: 4
thread: 1, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 1, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 1, i: 5, maxN[i].weit: 8, maxN[i].idx: 5, blockDimSize[i]: 8
thread: 1, i: 0, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 2, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 5, divisor[i]: 2, blockDimSize[i]: 4
thread: 1, largestBlockVec.elm: 0 0 0 0 0 0 0 2 0 0 1 0 0 0 0 1 
thread: 1, blockDimSizeComp: 0 0 0 0 0 0 0 1 0 2 2 0 2 2 0 4 
thread: 1, divisorComp: 0 0 0 0 0 0 0 3 0 1 2 0 1 1 0 2 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 2 0 0 1 0 0 0 0 1 
thread: 1, largestNoZeroBlockVec: 2 0 1 0 0 1 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 2 0 0 1 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 0 0 1 0 0 0 0 1 , mySum: 4
thread: 1, maxBlockLvlSize: 4
thread: 1, maxInBlockLvlSize: 15
thread: 1, AllTableSize: 768, maxSubsetsSize: 64
thread: 3, NSTable size: 27
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 3, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 3, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 3, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 3, i: 4, maxN[i].weit: 5, maxN[i].idx: 4, blockDimSize[i]: 5
thread: 3, i: 0, divisor[i]: 2, blockDimSize[i]: 2
thread: 3, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 3, divisor[i]: 2, blockDimSize[i]: 2
thread: 3, i: 4, divisor[i]: 5, blockDimSize[i]: 1
thread: 3, largestBlockVec.elm: 0 0 0 0 1 0 0 1 4 0 0 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 0 2 2 2 2 1 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 0 2 1 1 2 5 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 1 0 0 1 4 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 1 0 0 1 4 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 1 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 0 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 1 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 1 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 0 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 1 3 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 1 4 0 0 0 0 0 0 0 , mySum: 6
thread: 0, NSTable size: 34
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 7
thread: 0, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 0, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 0, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 0, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 0, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 0, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 0, i: 6, maxN[i].weit: 8, maxN[i].idx: 6, blockDimSize[i]: 8
thread: 0, i: 0, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 3, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 6, divisor[i]: 2, blockDimSize[i]: 4
thread: 0, largestBlockVec.elm: 0 0 0 0 0 0 2 0 0 0 1 0 0 0 0 1 
thread: 0, blockDimSizeComp: 0 0 0 0 0 0 1 3 0 2 2 0 2 2 0 4 
thread: 0, divisorComp: 0 0 0 0 0 0 3 1 0 1 2 0 1 1 0 2 
thread: 0, largestBlockVec: 0 0 0 0 0 0 2 0 0 0 1 0 0 0 0 1 
thread: 0, largestNoZeroBlockVec: 2 0 0 1 0 0 1 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 2 0 0 0 1 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 0 0 0 1 0 0 0 0 1 , mySum: 4
thread: 3, maxBlockLvlSize: 4
thread: 3, maxInBlockLvlSize: 6
thread: 3, AllTableSize: 320, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 4
thread: 0, maxInBlockLvlSize: 41
thread: 0, AllTableSize: 2304, maxSubsetsSize: 64
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 5
copy the latest feasible solution to instance takes time: 0.013327
thread: 3, sOPT: 5
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 6
copy the latest feasible solution to instance takes time: 0.019548
thread: 2, sOPT: 6
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 0 1 
Thread: 1, gpu_BlockDP is done.
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 0 1 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 1 0 0 0 0 0 0 
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 8
copy the latest feasible solution to instance takes time: 0.026206
thread: 1, sOPT: 8
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[4]: 0 0 0 1 0 0 1 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[5]: 1 0 0 0 0 0 1 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 1 0 0 1 0 0 0 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 2 0 0 0 0 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 1 mySum: 3
thread: 0, blockNoZero[8]: 1 0 0 1 0 0 1 
thread: 0, allBlocks[9]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 1 mySum: 3
thread: 0, blockNoZero[9]: 2 0 0 0 0 0 1 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 2 0 0 0 1 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 2 0 0 1 0 0 0 
thread: 0, allBlocks[11]: 0 0 0 0 0 0 2 0 0 0 1 0 0 0 0 1 mySum: 4
thread: 0, blockNoZero[11]: 2 0 0 1 0 0 1 
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.039279
thread: 0, sOPT: 10
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 2Thread: , MlBk function is done, and BkID for all processes are collected.1
, MlBk function is done, and BkID for all processes are collected.3, MlBk function is done, and BkID for all processes are collected.

sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 24, UB: 27
BKID: 0, LB: 24, UB: 27, OPT: 10
Dynamic Programming Runtime: 0.750119
Execution time between LB and UB is: 0
By far, all LB UB calculation runtime: 0
Iteration: 2, UB: 27, LB: 24start at time: 1505254764
thread: 0, MlBk is called with LB: 24, UB: 25
 thread: 0, LongJobs.size() 17
thread: thread: 21, MlBk is called with LB: 25, MlBk is called with LB: , UB: 2626, UB: 27

 thread: 1, LongJobs.size() 17
 thread: 2, LongJobs.size() 17
thread: 1, NSTable size: 31
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 7
thread: 1, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 1, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 1, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 1, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 1, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 1, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 1, i: 6, maxN[i].weit: 8, maxN[i].idx: 6, blockDimSize[i]: 8
thread: 1, i: 0, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 3, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 6, divisor[i]: 2, blockDimSize[i]: 4
thread: 1, largestBlockVec.elm: 0 0 0 0 0 0 2 0 0 0 1 0 0 0 0 1 
thread: 1, blockDimSizeComp: 0 0 0 0 0 0 1 3 0 2 2 0 2 2 0 4 
thread: 1, divisorComp: 0 0 0 0 0 0 3 1 0 1 2 0 1 1 0 2 
thread: 1, largestBlockVec: 0 0 0 0 0 0 2 0 0 0 1 0 0 0 0 1 
thread: 1, largestNoZeroBlockVec: 2 0 0 1 0 0 1 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 2 0 0 0 1 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 0 0 0 1 0 0 0 0 1 , mySum: 4
thread: 0, NSTable size: 28
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 7
thread: 0, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 0, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 0, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 0, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 0, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 0, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 0, i: 6, maxN[i].weit: 8, maxN[i].idx: 6, blockDimSize[i]: 8
thread: 0, i: 0, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 3, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 6, divisor[i]: 2, blockDimSize[i]: 4
thread: 0, largestBlockVec.elm: 0 0 0 0 0 0 2 0 0 0 1 0 0 0 0 1 
thread: 0, blockDimSizeComp: 0 0 0 0 0 0 1 3 0 2 2 0 2 2 0 4 
thread: 0, divisorComp: 0 0 0 0 0 0 3 1 0 1 2 0 1 1 0 2 
thread: 0, largestBlockVec: 0 0 0 0 0 0 2 0 0 0 1 0 0 0 0 1 
thread: 0, largestNoZeroBlockVec: 2 0 0 1 0 0 1 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 2 0 0 0 1 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 0 0 0 1 0 0 0 0 1 , mySum: 4
thread: 2, NSTable size: 34
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 7
thread: 2, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 2, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 2, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 2, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 2, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 2, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 2, i: 6, maxN[i].weit: 8, maxN[i].idx: 6, blockDimSize[i]: 8
thread: 2, i: 0, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 1, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 3, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 6, divisor[i]: 2, blockDimSize[i]: 4
thread: 2, largestBlockVec.elm: 0 0 0 0 0 0 2 0 0 0 1 0 0 0 0 1 
thread: 2, blockDimSizeComp: 0 0 0 0 0 0 1 3 0 2 2 0 2 2 0 4 
thread: 2, divisorComp: 0 0 0 0 0 0 3 1 0 1 2 0 1 1 0 2 
thread: 2, largestBlockVec: 0 0 0 0 0 0 2 0 0 0 1 0 0 0 0 1 
thread: 2, largestNoZeroBlockVec: 2 0 0 1 0 0 1 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 2 0 0 0 1 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 0 0 0 1 0 0 0 0 1 , mySum: 4
thread: 1, maxBlockLvlSize: 4
thread: 1, maxInBlockLvlSize: 41
thread: 1, AllTableSize: 2304, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 4
thread: 0, maxInBlockLvlSize: 41
thread: 0, AllTableSize: 2304, maxSubsetsSize: 64
thread: 2, maxBlockLvlSize: 4
thread: 2, maxInBlockLvlSize: 41
thread: 2, AllTableSize: 2304, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 0 1 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 1 0 0 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[4]: 0 0 0 1 0 0 1 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[5]: 1 0 0 0 0 0 1 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 1 0 0 1 0 0 0 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 2 0 0 0 0 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 1 mySum: 3
thread: 0, blockNoZero[8]: 1 0 0 1 0 0 1 
thread: 0, allBlocks[9]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 1 mySum: 3
thread: 0, blockNoZero[9]: 2 0 0 0 0 0 1 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 2 0 0 0 1 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 2 0 0 1 0 0 0 
thread: 0, allBlocks[11]: 0 0 0 0 0 0 2 0 0 0 1 0 0 0 0 1 mySum: 4
thread: 0, blockNoZero[11]: 2 0 0 1 0 0 1 
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.169717
thread: 2, sOPT: 10
copy the latest feasible solution to instance takes time: 0.193114
thread: 1, sOPT: 10
copy the latest feasible solution to instance takes time: 0.118562
thread: 0, sOPT: 10
BKID: 0, LB: 24, UB: 24, OPT: 10
Dynamic Programming Runtime: 1.4679
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 1
********************************************************
Total execution on UB and LB is: 1
OUT of Bk while loop  
UB    24
LB    24
T1    24
T2    24
OPT   10
nMachines   10
BkID	0
AllProbData.size()    2
ck :   1
AllProbData[ck].Ttable    24
ck :   0
AllProbData[ck].Ttable    26
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan25
Main Scheduling is Done
File 2-11 is Done.
******************************
Reading File...
File 2-12 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 37, LB: 19start at time: 1505254765
thread: 0, MlBk is called with LB: 19, UB: 23
thread: 3, MlBk is called with LB: 31, UB: 37
thread: thread: 1, MlBk is called with LB: 23, UB: 27
2, MlBk is called with LB: 27, UB: 31
 thread: 0, LongJobs.size() 12
 thread: 3, LongJobs.size() 10
 thread: 1, LongJobs.size() 11
 thread: 2, LongJobs.size() 11
thread: 3, NSTable size: 28
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 3, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 3, i: 2, maxN[i].weit: 4, maxN[i].idx: 2, blockDimSize[i]: 4
thread: 3, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 3, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 3, i: 5, maxN[i].weit: 4, maxN[i].idx: 5, blockDimSize[i]: 4
thread: 3, i: 0, divisor[i]: 2, blockDimSize[i]: 1
thread: 3, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 2, divisor[i]: 2, blockDimSize[i]: 2
thread: 3, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 5, divisor[i]: 2, blockDimSize[i]: 2
thread: 3, largestBlockVec.elm: 0 0 0 1 0 1 0 0 1 0 0 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 1 2 2 2 2 2 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 2 1 2 1 1 2 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 1 0 1 0 0 1 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 1 0 1 0 0 1 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 3
thread: 3, maxBlockLvlSize: 3
thread: 3, maxInBlockLvlSize: 10
thread: 3, AllTableSize: 256, maxSubsetsSize: 64
thread: 1, NSTable size: 23
thread: thread: 21, i: , NSTable size: 0, alltableelemets[maxindex].elm[i]: 030
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 0

thread: thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 22, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 2

thread: 2, i: 12thread: 1, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 0, maxN[i].weit: 
2, maxN[i].idx: thread: 01, i: , blockDimSize[i]: 22
, maxN[i].weit: thread: 2, i: 21, maxN[i].idx: , maxN[i].weit: 22, blockDimSize[i]: 2, maxN[i].idx: 
1thread: 1, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 1, i: 4, maxN[i].weit: 2, maxN[i].idx: , blockDimSize[i]: 4, blockDimSize[i]: 22
thread: 1, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 1, i: 6, maxN[i].weit: 5, maxN[i].idx: 6, blockDimSize[i]: 5

thread: thread: 2, i: 2, maxN[i].weit: 2, maxN[i].idx: 12, blockDimSize[i]: 2, i: 
thread: 2, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 2, i: 4, maxN[i].weit: 2, maxN[i].idx: 04, divisor[i]: , blockDimSize[i]: 22, blockDimSize[i]: 
1
thread: 2, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 2, i: 6, maxN[i].weit: 5, maxN[i].idx: 6, blockDimSize[i]: 5
thread: 2thread: , i: 10, i: 1, divisor[i]: , divisor[i]: 21, blockDimSize[i]: , blockDimSize[i]: 1
thread: 2, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 3, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 6, divisor[i]: 5, blockDimSize[i]: 1
2thread: 
2thread: 1, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 3, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 6, divisor[i]: 5, blockDimSize[i]: 1
, largestBlockVec.elm: thread: 1, largestBlockVec.elm: 0 0 00  0 00 0  0 0 00 0  0 1 1 0 0 0 0 02  00  20  0 4 0
thread: 2, blockDimSizeComp: 0 0 0 0 0 0 0 1 2  2 0 1 02  0 40  
thread: 1, blockDimSizeComp: 0 0 0 0 0 0 0 1 2 2 0 21 2 0  2 1 1
thread: 1, divisorComp: 0 0 0 0 0 0 0 2 1 1 0 3  1
 thread: 2, divisorComp: 0 0 0 0 0 0 0 20 1  1 01 3  5 1
 thread: 1, largestBlockVec: 0 0 0 0 0 0 0 1 0 0 0 0 1 5 
2thread: 2, largestBlockVec: 0 0 0 0 0 0 0 1  0 0 0 4 
thread: 1, largestNoZeroBlockVec: 1 0 0 2 0 0 4 
0 0 0 2 0 0 0 4 
thread: 2, largestNoZeroBlockVec: 1 0 0 2 0 0 4 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0thread:  2, mySum: , allBlocks: 10 
00 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0  , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 10 0  0 , mySum: 0 02 
0 0 0 0 0 0 0 1 0 0 0 1 0 0 00  00  0, mySum: 2
 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 , mySum: 0 , mySum: 02
0 0 0 0 0 0 0 0 0 0 0 0 
00 0 0 0 0 0 0 1 0 0 0 0 0 0 0  1 , mySum: 02
0 0 0 0 0 0 0 0 0 0 0 0 0 0  0 1 , mySum: 10
 0 0 0 0 0 0 0 1 0 0 02 0  , mySum: 0 20 
00 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 , mySum:  3
0 0 0 0 0 0 0 1 0 0 0 2 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 1 00 0  00  0 , mySum: 03
0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 1  0 0 10 1  , mySum: , mySum: 23

0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 20  1 , mySum: 0 03 
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 10 , mySum:  30
 0 0 0 0 0 0 0 0 0 0 0 1 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 2 00 0  0 20  , mySum: 3, mySum: 
20 0 0 0 0 0 0 0 0 0 0 2 0 0 0
 20 0 0 0 0 0 0 1 0 0  , mySum: 4
0 0 0 0 0 0 0 1 0 00  00  00  0 0 00  10  3, mySum: 2 
, mySum: 0 0 0 0 0 0 0 0 0 0 0 0 0 04 0 
20 0 0 0 0 0 0 0 0 0 0 1 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 3 , mySum: 4
0 0 0 0 0 0 0 1 0 0 0 1 0 0 0  2 , mySum: 40 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 00 4 , mySum:  43
 0 0 0 0 0 0 0 1 0 0 0 2 0 0 , mySum: 0 31
 , mySum: 0 0 0 0 0 0 0 1 0 0 0 2 40 0
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0  3 , mySum: 05 
0 0 0 0 0 0 0 0 0 0 0 1 0 0 00 4  , mySum: 5
, mySum: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 03 4 
, mySum: 0 0 0 0 0 0 0 1 05 
0 0 0 0 0 0 0 1 0 0 0 1 0 00 0 1 0 0  0 01 3  , mySum: 3
, mySum: 0 0 0 0 0 0 0 1 0 0 0 0 05 0 
00 0 0 0 0 0 0 1 0 0 0 2 0 0 0 2 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 2 0  0 20  , mySum: 5
1 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 4 , mySum: , mySum: 6
30 0 0 0 0 0 0 1 0 0 0 2 0 0 0 3
 0 0 0 0 0 0 0 0 0 0 0, mySum: 6
0 0 0 0 0 0 0 1 0 0 0 1 0 0  1 0 0 0 02  4, mySum:  , mySum: 36

0 0 0 0 0 0 0 1 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 04 0  2 , mySum: 07
 0 0 2 , mySum: 4
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 3 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 3 , mySum: 4
0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 2 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 , mySum: 4
0 0 0 0 0 0 0 1 0 0 0 2 0 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 3 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 4 , mySum: 5
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 4 , mySum: 5
0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 3 , mySum: 5
0 0 0 0 0 0 0 1 0 0 0 2 0 0 0 2 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 4 , mySum: 6
0 0 0 0 0 0 0 1 0 0 0 2 0 0 0 3 , mySum: 6
0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 4 , mySum: 6
0 0 0 0 0 0 0 1 0 0 0 2 0 0 0 4 , mySum: 7
thread: 0, NSTable size: 20
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 0, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 0, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 0, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 0, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 0, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 0, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 0, i: 7, maxN[i].weit: 5, maxN[i].idx: 7, blockDimSize[i]: 5
thread: 0, i: 0, divisor[i]: 2, blockDimSize[i]: 1
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 7, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, largestBlockVec.elm: 0 0 0 0 0 1 0 0 0 0 0 2 0 0 0 4 
thread: 0, blockDimSizeComp: 0 0 0 0 0 1 0 2 2 2 0 1 2 0 2 1 
thread: 0, divisorComp: 0 0 0 0 0 2 0 1 1 1 0 3 1 0 1 5 
thread: 0, largestBlockVec: 0 0 0 0 0 1 0 0 0 0 0 2 0 0 0 4 
thread: 0, largestNoZeroBlockVec: 1 0 0 0 2 0 0 4 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 , mySum: 2
0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 , mySum: 3
0 0 0 0 0 1 0 0 0 0 0 2 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 1 , mySum: 3
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 2 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 2 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 2 , mySum: 4
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 3 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 3 , mySum: 4
0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 2 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 , mySum: 4
0 0 0 0 0 1 0 0 0 0 0 2 0 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 3 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 4 , mySum: 5
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 4 , mySum: 5
0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 3 , mySum: 5
0 0 0 0 0 1 0 0 0 0 0 2 0 0 0 2 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 4 , mySum: 6
0 0 0 0 0 1 0 0 0 0 0 2 0 0 0 3 , mySum: 6
0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 4 , mySum: 6
0 0 0 0 0 1 0 0 0 0 0 2 0 0 0 4 , mySum: 7
thread: 1, maxBlockLvlSize: 6
thread: 1, maxInBlockLvlSize: 6
thread: 1, AllTableSize: 480, maxSubsetsSize: 64
thread: 2, maxBlockLvlSize: 6
thread: 2, maxInBlockLvlSize: 6
thread: 2, AllTableSize: 480, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 6
thread: 0, maxInBlockLvlSize: 10
thread: 0, AllTableSize: 960, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 1 0 0 0 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 0 0 1 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 mySum: 2
thread: 0, blockNoZero[4]: 0 0 0 0 1 0 0 1 
thread: 0, allBlocks[5]: 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 1 0 0 0 1 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 0 0 0 2 0 0 0 
thread: 0, allBlocks[7]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[7]: 1 0 0 0 0 0 0 1 
Thread: 3, gpu_BlockDP is done.
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 mySum: 2
thread: 0, blockNoZero[8]: 0 0 0 0 0 0 0 2 
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 5
thread: 0, allBlocks[9]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 mySum: 3
thread: 0, blockNoZero[9]: 0 0 0 0 0 0 0 3 
copy the latest feasible solution to instance takes time: 0.01814
thread: 3, sOPT: 5
thread: 0, allBlocks[10]: 0 0 0 0 0 1 0 0 0 0 0 2 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 1 0 0 0 2 0 0 0 
thread: 0, allBlocks[11]: 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 1 mySum: 3
thread: 0, blockNoZero[11]: 1 0 0 0 1 0 0 1 
thread: 0, allBlocks[12]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 2 mySum: 3
thread: 0, blockNoZero[12]: 1 0 0 0 0 0 0 2 
thread: 0, allBlocks[13]: 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 1 mySum: 3
thread: 0, blockNoZero[13]: 0 0 0 0 2 0 0 1 
thread: 0, allBlocks[14]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 2 mySum: 3
thread: 0, blockNoZero[14]: 0 0 0 0 1 0 0 2 
thread: 0, allBlocks[15]: 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 2 mySum: 4
thread: 0, blockNoZero[15]: 0 0 0 0 2 0 0 2 
thread: 0, allBlocks[16]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 3 mySum: 4
thread: 0, blockNoZero[16]: 1 0 0 0 0 0 0 3 
thread: 0, allBlocks[17]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 3 mySum: 4
thread: 0, blockNoZero[17]: 0 0 0 0 1 0 0 3 
thread: 0, allBlocks[18]: 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 2 mySum: 4
thread: 0, blockNoZero[18]: 1 0 0 0 1 0 0 2 
thread: 0, allBlocks[19]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 mySum: 4
thread: 0, blockNoZero[19]: 0 0 0 0 0 0 0 4 
thread: 0, allBlocks[20]: 0 0 0 0 0 1 0 0 0 0 0 2 0 0 0 1 mySum: 4
thread: 0, blockNoZero[20]: 1 0 0 0 2 0 0 1 
thread: 0, allBlocks[21]: 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 3 mySum: 5
thread: 0, blockNoZero[21]: 0 0 0 0 2 0 0 3 
thread: 0, allBlocks[22]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 4 mySum: 5
thread: 0, blockNoZero[22]: 0 0 0 0 1 0 0 4 
thread: 0, allBlocks[23]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 4 mySum: 5
thread: 0, blockNoZero[23]: 1 0 0 0 0 0 0 4 
thread: 0, allBlocks[24]: 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 3 mySum: 5
thread: 0, blockNoZero[24]: 1 0 0 0 1 0 0 3 
thread: 0, allBlocks[25]: 0 0 0 0 0 1 0 0 0 0 0 2 0 0 0 2 mySum: 5
thread: 0, blockNoZero[25]: 1 0 0 0 2 0 0 2 
thread: 0, allBlocks[26]: 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 4 mySum: 6
thread: 0, blockNoZero[26]: 0 0 0 0 2 0 0 4 
thread: 0, allBlocks[27]: 0 0 0 0 0 1 0 0 0 0 0 2 0 0 0 3 mySum: 6
thread: 0, blockNoZero[27]: 1 0 0 0 2 0 0 3 
thread: 0, allBlocks[28]: 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 4 mySum: 6
thread: 0, blockNoZero[28]: 1 0 0 0 1 0 0 4 
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 7
thread: 0, allBlocks[29]: 0 0 0 0 0 1 0 0 0 0 0 2 0 0 0 4 mySum: 7
thread: 0, blockNoZero[29]: 1 0 0 0 2 0 0 4 
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 6
copy the latest feasible solution to instance takes time: 0.029315
thread: 1, sOPT: 7
copy the latest feasible solution to instance takes time: 0.025931
thread: 2, sOPT: 6
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.016535
thread: 0, sOPT: 9
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 1, MlBk function is done, and BkID for all processes are collected.
2, MlBk function is done, and BkID for all processes are collected.
Thread: 3, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 19, UB: 22
BKID: 0, LB: 19, UB: 22, OPT: 9
Dynamic Programming Runtime: 0.335825
Execution time between LB and UB is: 0
By far, all LB UB calculation runtime: 0
Iteration: 2, UB: 22, LB: 19start at time: 1505254765
thread: 0, MlBk is called with LB: 19, UB: 20
 thread: 0, LongJobs.size() 14
thread: thread: 2, MlBk is called with LB: 121, MlBk is called with LB: , UB: 2022, UB: 21

 thread: 1, LongJobs.size() 12
 thread: 2, LongJobs.size() 12
thread: 2, NSTable size: 20
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 2, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 2, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 2, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 2, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 2, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 2, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 2, i: 7, maxN[i].weit: 5, maxN[i].idx: 7, blockDimSize[i]: 5
thread: 2, i: 0, divisor[i]: 2, blockDimSize[i]: 1
thread: 2, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: thread: 21, i: 2, divisor[i]: 1, NSTable size: , blockDimSize[i]: 172

thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 1thread: 2, i: 3, divisor[i]: 1, blockDimSize[i]: 2

thread: thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 1, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 1, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 1, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 1, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 1, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 1, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 1, i: 7, maxN[i].weit: 5, maxN[i].idx: 7, blockDimSize[i]: 5
thread: 1, i: 0, divisor[i]: 2, blockDimSize[i]: 1
thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 4, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 6, divisor[i]: 1, blockDimSize[i]: 2
2, i: thread: 41, divisor[i]: 3, i: , blockDimSize[i]: 7, divisor[i]: 15, blockDimSize[i]: 1

thread: thread: 2, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 7, divisor[i]: 5, blockDimSize[i]: 1
thread: 12, largestBlockVec.elm: 0 , largestBlockVec.elm: 0 0 0 0 0 1 0 0 0 0 0 0 00 thread:  100 2 0 0 0 4 
 0 0 0 0 0 2thread:  2, blockDimSizeComp: 00  00 0 0 0 1 0 2 2 2 0 1 2 0 2 1 
 , NSTable size: 28
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: thread: 0, i: 27, divisorComp: 0, alltableelemets[maxindex].elm[i]:  1
0 thread: 04 , i: 
0thread: 1, blockDimSizeComp: 0 0 0 0 0 1 0 2 2 2 8, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 0, maxN[i].weit:  3, maxN[i].idx: 0, blockDimSize[i]: 3
0 1 2 0 2 1 
thread: 1, divisorComp: 0 0 0 0 0 2 0 1 1 1 thread: 00 , i: 1, maxN[i].weit: 32 1, maxN[i].idx: 01 , blockDimSize[i]: 0  210 
thread: 05 
thread: 1, largestBlockVec: 0 0 0 0 0 1, i:  0 0 0 0 0 2 0 20, maxN[i].weit:  20, maxN[i].idx:  2, blockDimSize[i]: 42 
 
thread: 1, largestNoZeroBlockVec: 1 0 0 0thread:  02, i:  0 0 4 
3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 0, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 20 2 0 1 1 1 0 3 1 0 1
 thread: 0, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 0, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 0, i: 7, maxN[i].weit: 2, maxN[i].idx: 7, blockDimSize[i]: 2
thread: 05thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0  , i: 
0thread: 2, largestBlockVec: 0 0 0 0 0 1 0 0 0 8, maxN[i].weit: 05 , maxN[i].idx: 8, blockDimSize[i]: 05
  thread: 0, i: 0, divisor[i]: 3, blockDimSize[i]: 1
2 0 0 0 4thread:  0
thread: 2, largestNoZeroBlockVec: 1 0 0 0 2 0 0 4 
0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 , i: 0 0 10, divisor[i]: 1 1, blockDimSize[i]:  2, mySum: 
1thread: 0, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 5, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 7, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 8, divisor[i]: 5, blockDimSize[i]: 1

thread: 0, largestBlockVec.elm: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 thread: 2 0 0 0 2, allBlocks: 00  000  0 0 0  0 0 20  0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 1 0 0 00  0 00  04 , mySum: 
1thread: 0, blockDimSizeComp: 0 0 0 0 1 2 0 2 2 2  0 1 2 0 2 1 
thread: 0, divisorComp: 0 0 0 0 3 1 0 1 1 1 00 0 0 0 0 0 0 0 0 0 , mySum: 0

0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0  0 1 0 0 0 1 , mySum: 2
0 0 0 0 0 1 0 0 0 0 0 1 03 0 0 0 , mySum: 2
0 0 01 0   , mySum: 011  0 1 5 
thread: 0, largestBlockVec: 0 0 0 0 2 0 0 0 0 0 0 0 20  00  
0 0 0 0 0 2 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 00 0 0 0 0 0 0 , mySum: 1
 0 0 0 0 0 0 0 0 0 0 0 1 0 0 4 0
 0thread: 0, largestNoZeroBlockVec: 2 0 0 0 0 2 0 0 4 
0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0  0 02  , mySum: 2, mySum: 
0 0 0 0 0 0 0 0 0 0 0 0 0 1
0 0 0 0 0 0 0 0 0 0 0 1 00 0 3 , mySum: 3
0 0 0 0 0 1 0 0 0 0 0 2 0 0  0 0 0, mySum: 3 
00 0 0 0 0 1 0 0 0 0 0 1 0 0  0 1 1, mySum: 3 
, mySum: 20 0 0 0 0 1 0 0 0 0 0 0 0 0
 thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 00 0 0 00 0 0 1 0 0 0 0 0 1 0 0 0 0  , mySum:  22 0
, mySum:  30 0 0 0 0 0 0 0 0 0 0 0 2 0 0 00  00 , mySum:  2
0 0 0 0 0 1 0 0 0 0 0 0 0, mySum: 0 
00 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0  00  20  1
, mySum: 2
0 0 0 0 0 0 0 00 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0  2 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 00 0  2, mySum:  1
 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 2 0 00 0 2 , mySum: 4
0 0 0 0 0 00  0 00  30   0 0, mySum: 31 0  0
00 0 0 0 0 1 0 0 0 0 0 2 0 0  0 0 , mySum: 3
 0 0 0 0 00  0 00 0 0 0 1 0 0 0 0 0 1  01  00 0 1 , mySum: 3
0 0 0 0 0 1 0 0 0 0  0 0 0 00 0 0 0 0 1 , mySum: 2
0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 3 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 1 0 00 0 3 , mySum: 4
 0 0 0 2 0, mySum: 3 
0 0 0 0 0 0 0 0 0 0 0 0 2 0  0 00 , mySum:  2
00 0 0 0 0 0 0 0 0 0 0 2 00 0 0 1 0 0 0 0 0 1 0 0 0  1 2, mySum: 3 
, mySum:  0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 0 0 0 0 0 04 0 1 , mySum: 2
0 0 0 0 00  00  0
00 0 0 0 0 0 0 0 0 0 0  0 0 0 0 1 0 0 0 2 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 4 , mySum: 4
0 0 0 0 0 1 0 0 0 0 0 2 0 0 0 2 , mySum: 4
0 0 0 0 0 1 0 0 0 0 0 0 0 00 1  , mySum: 40
  3 , mySum: 4
0 0 0 0 0 0 0 00 0 0 0  0 00  0 0 0 0 0 0 0 0 0 0 0 0 20 1 0 0 0 3 , mySum: 4
0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 3 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 1 0 0  0 20  , mySum: 44 , mySum: 05
0 0 0 0 0 1 0 0 0 0 0  00  00 0 2
 0 0 0 0 0 0 0 0 0 0 0 0  00  00  00, mySum:   02
4 4 , mySum: 5
0 0 0 0 0 1 0 0 0 0 0 1 0 0  , mySum: 4
0 0 0 0 0 1 0 0 0 0 0 2 0 00 3  , mySum: 5
00 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 02 0 0 0 2 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0  0 00  3 4, mySum:  3
, mySum: 6
0 0 0 0 0 1 0 0 0 0 0 2 0 0 00 0 0 0 1 0 0 0 0 0 0  11  , mySum: 40
  0 0 1 , mySum: 3
0 0 0 0 1 0 0 0 0 0 0 2 0 0 00  00  0, mySum: 33
 0 0 0 0 0 0 0 0 02  0  0 0 1 0 0 0 0 0 0 0, mySum:  006
0 0 0 0 0 1 0 0 0 0 0 1 0 0  00  4 0, mySum:  6 0 0 2 , mySum: 3
0 0 0 0 2 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 1 0 0 0 0 0 20  10  0, mySum: 33 
0 0 0 0 0 0 0 0 0 0 0 2 0 0  0 04  1, mySum:  , mySum: , mySum: 3
7
0 0 0 0 2 0 0 0 0 0 0 1 0 50 0
 0 0 0 0 0 0 0 0 0 0 0 1 00 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0  2 , mySum: 03
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 4 , mySum: 5
0 0 0 0 0 1 0 0 0 0 0 0 0 0  00  42 , mySum:  5
, mySum: 0 0 0 0 0 1 0 0 0 0 0 1 4
0 0 0 0 1 0 0 0 0 0 0 2 0 00 0 0 3 , mySum:  50
0 0 0 0 0 1 0 0 0 0 0 2  1 , mySum: 4
0 0 0 0 2 0 0 0 0 0 0 1 0 00 0 1  , mySum: 4
0 0 0 0 2 0 0 0 0 0 0 2 0 0 00  00  2, mySum: 4
 0 0 0 0 1 0 0 0 0 0 0 1 0 0, mySum: 5
0 0 0 0 0 0 0 0 0 0 0 2 0  0 0 0 42  , mySum: , mySum: 6
40 0 0 0 0 1 0 0 0 0 0 2 0
 0 0 0 0 1 0 0 0 0 0 0 0 0 0 3 , mySum: 06 
00 0 0 0 0 1 0 0 0 0 0 1 0  0 3 , mySum: 4
00 0 0 0 0 0 0 0 0 0 0 0 0 0 0  4 , mySum: 40
0 0 0 0 0 0 0 0 0 0 0 2 0 0 4 , mySum: 6
0 0 0 0 0 1 0 0 0 0 0 2 0  0 2 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 1 0 00 0 4 , mySum:  70 
3 , mySum: 4
0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 3 , mySum: 5
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 4 , mySum: 5
0 0 0 0 1 0 0 0 0 0 0 2 0 0 0 2 , mySum: 5
0 0 0 0 2 0 0 0 0 0 0 2 0 0 0 1 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 3 , mySum: 5
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 3 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 4 , mySum: 5
0 0 0 0 2 0 0 0 0 0 0 1 0 0 0 2 , mySum: 5
0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 4 , mySum: 6
0 0 0 0 2 0 0 0 0 0 0 2 0 0 0 2 , mySum: 6
0 0 0 0 2 0 0 0 0 0 0 1 0 0 0 3 , mySum: 6
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 4 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 4 , mySum: 6
0 0 0 0 1 0 0 0 0 0 0 2 0 0 0 3 , mySum: 6
0 0 0 0 2 0 0 0 0 0 0 1 0 0 0 4 , mySum: 7
0 0 0 0 1 0 0 0 0 0 0 2 0 0 0 4 , mySum: 7
0 0 0 0 2 0 0 0 0 0 0 2 0 0 0 3 , mySum: 7
0 0 0 0 2 0 0 0 0 0 0 2 0 0 0 4 , mySum: 8
thread: 1, maxBlockLvlSize: 6
thread: 1, maxInBlockLvlSize: 10
thread: 1, AllTableSize: 960, maxSubsetsSize: 64
thread: 2, maxBlockLvlSize: 6
thread: 2, maxInBlockLvlSize: 10
thread: 2, AllTableSize: 960, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 9
thread: 0, maxInBlockLvlSize: 20
thread: 0, AllTableSize: 2880, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 1 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 0 0 0 1 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 mySum: 2
thread: 0, blockNoZero[4]: 0 0 0 0 0 1 0 0 1 
thread: 0, allBlocks[5]: 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 1 0 0 0 0 1 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 0 0 0 0 2 0 0 0 
thread: 0, allBlocks[7]: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[7]: 1 0 0 0 0 0 0 0 1 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 mySum: 2
thread: 0, blockNoZero[8]: 0 0 0 0 0 0 0 0 2 
thread: 0, allBlocks[9]: 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[9]: 2 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 mySum: 3
thread: 0, blockNoZero[10]: 0 0 0 0 0 0 0 0 3 
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 9
thread: 0, allBlocks[11]: 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 1 mySum: 3
thread: 0, blockNoZero[11]: 1 0 0 0 0 1 0 0 1 
Thread: 1, gpu_BlockDP is done.
thread: 0, allBlocks[12]: 0 0 0 0 1 0 0 0 0 0 0 2 0 0 0 0 mySum: 3
thread: 0, blockNoZero[12]: 1 0 0 0 0 2 0 0 0 
thread: 0, allBlocks[13]: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 2 mySum: 3
thread: 0, blockNoZero[13]: 1 0 0 0 0 0 0 0 2 
thread: 0, allBlocks[14]: 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 1 mySum: 3
thread: 0, blockNoZero[14]: 2 0 0 0 0 0 0 0 1 
thread: 0, allBlocks[15]: 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 1 mySum: 3
thread: 0, blockNoZero[15]: 0 0 0 0 0 2 0 0 1 
thread: 0, allBlocks[16]: 0 0 0 0 2 0 0 0 0 0 0 1 0 0 0 0 mySum: 3
thread: 0, blockNoZero[16]: 2 0 0 0 0 1 0 0 0 
thread: 0, allBlocks[17]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 2 mySum: 3
thread: 0, blockNoZero[17]: 0 0 0 0 0 1 0 0 2 
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 9
thread: 0, allBlocks[18]: 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 2 mySum: 4
thread: 0, blockNoZero[18]: 2 0 0 0 0 0 0 0 2 
thread: 0, allBlocks[19]: 0 0 0 0 1 0 0 0 0 0 0 2 0 0 0 1 mySum: 4
thread: 0, blockNoZero[19]: 1 0 0 0 0 2 0 0 1 
thread: 0, allBlocks[20]: 0 0 0 0 2 0 0 0 0 0 0 1 0 0 0 1 mySum: 4
thread: 0, blockNoZero[20]: 2 0 0 0 0 1 0 0 1 
thread: 0, allBlocks[21]: 0 0 0 0 2 0 0 0 0 0 0 2 0 0 0 0 mySum: 4
thread: 0, blockNoZero[21]: 2 0 0 0 0 2 0 0 0 
thread: 0, allBlocks[22]: 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 2 mySum: 4
thread: 0, blockNoZero[22]: 1 0 0 0 0 1 0 0 2 
thread: 0, allBlocks[23]: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 3 mySum: 4
thread: 0, blockNoZero[23]: 1 0 0 0 0 0 0 0 3 
thread: 0, allBlocks[24]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 mySum: 4
thread: 0, blockNoZero[24]: 0 0 0 0 0 0 0 0 4 
thread: 0, allBlocks[25]: 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 2 mySum: 4
thread: 0, blockNoZero[25]: 0 0 0 0 0 2 0 0 2 
thread: 0, allBlocks[26]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 3 mySum: 4
thread: 0, blockNoZero[26]: 0 0 0 0 0 1 0 0 3 
copy the latest feasible solution to instance takes time: 0.047528
thread: 2, sOPT: 9
copy the latest feasible solution to instance takes time: 0.046726
thread: 1, sOPT: 9
thread: 0, allBlocks[27]: 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 3 mySum: 5
thread: 0, blockNoZero[27]: 1 0 0 0 0 1 0 0 3 
thread: 0, allBlocks[28]: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 4 mySum: 5
thread: 0, blockNoZero[28]: 1 0 0 0 0 0 0 0 4 
thread: 0, allBlocks[29]: 0 0 0 0 1 0 0 0 0 0 0 2 0 0 0 2 mySum: 5
thread: 0, blockNoZero[29]: 1 0 0 0 0 2 0 0 2 
thread: 0, allBlocks[30]: 0 0 0 0 2 0 0 0 0 0 0 2 0 0 0 1 mySum: 5
thread: 0, blockNoZero[30]: 2 0 0 0 0 2 0 0 1 
thread: 0, allBlocks[31]: 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 3 mySum: 5
thread: 0, blockNoZero[31]: 0 0 0 0 0 2 0 0 3 
thread: 0, allBlocks[32]: 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 3 mySum: 5
thread: 0, blockNoZero[32]: 2 0 0 0 0 0 0 0 3 
thread: 0, allBlocks[33]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 4 mySum: 5
thread: 0, blockNoZero[33]: 0 0 0 0 0 1 0 0 4 
thread: 0, allBlocks[34]: 0 0 0 0 2 0 0 0 0 0 0 1 0 0 0 2 mySum: 5
thread: 0, blockNoZero[34]: 2 0 0 0 0 1 0 0 2 
thread: 0, allBlocks[35]: 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 4 mySum: 6
thread: 0, blockNoZero[35]: 1 0 0 0 0 1 0 0 4 
thread: 0, allBlocks[36]: 0 0 0 0 2 0 0 0 0 0 0 2 0 0 0 2 mySum: 6
thread: 0, blockNoZero[36]: 2 0 0 0 0 2 0 0 2 
thread: 0, allBlocks[37]: 0 0 0 0 2 0 0 0 0 0 0 1 0 0 0 3 mySum: 6
thread: 0, blockNoZero[37]: 2 0 0 0 0 1 0 0 3 
thread: 0, allBlocks[38]: 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 4 mySum: 6
thread: 0, blockNoZero[38]: 2 0 0 0 0 0 0 0 4 
thread: 0, allBlocks[39]: 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 4 mySum: 6
thread: 0, blockNoZero[39]: 0 0 0 0 0 2 0 0 4 
thread: 0, allBlocks[40]: 0 0 0 0 1 0 0 0 0 0 0 2 0 0 0 3 mySum: 6
thread: 0, blockNoZero[40]: 1 0 0 0 0 2 0 0 3 
thread: 0, allBlocks[41]: 0 0 0 0 2 0 0 0 0 0 0 1 0 0 0 4 mySum: 7
thread: 0, blockNoZero[41]: 2 0 0 0 0 1 0 0 4 
thread: 0, allBlocks[42]: 0 0 0 0 1 0 0 0 0 0 0 2 0 0 0 4 mySum: 7
thread: 0, blockNoZero[42]: 1 0 0 0 0 2 0 0 4 
thread: 0, allBlocks[43]: 0 0 0 0 2 0 0 0 0 0 0 2 0 0 0 3 mySum: 7
thread: 0, blockNoZero[43]: 2 0 0 0 0 2 0 0 3 
thread: 0, allBlocks[44]: 0 0 0 0 2 0 0 0 0 0 0 2 0 0 0 4 mySum: 8
thread: 0, blockNoZero[44]: 2 0 0 0 0 2 0 0 4 
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.050091
thread: 0, sOPT: 10
BKID: 0, LB: 19, UB: 19, OPT: 10
Dynamic Programming Runtime: 0.567923
Execution time between LB and UB is: 0
By far, all LB UB calculation runtime: 0
********************************************************
Total execution on UB and LB is: 0
OUT of Bk while loop  
UB    19
LB    19
T1    19
T2    19
OPT   10
nMachines   10
BkID	0
AllProbData.size()    2
ck :   1
AllProbData[ck].Ttable    19
ck :   0
AllProbData[ck].Ttable    21
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan18
Main Scheduling is Done
File 2-12 is Done.
******************************
Reading File...
File 2-13 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 35, LB: 18start at time: 1505254765
thread: 0, MlBk is called with LB: 18, UB: 22
thread: 3, MlBk is called with LB: 30, UB: 35
thread: thread: 2, MlBk is called with LB: 26, UB: 30
1, MlBk is called with LB: 22, UB: 26
 thread: 3, LongJobs.size() 9
 thread: 0, LongJobs.size() 12
 thread: 2, LongJobs.size() 10
 thread: 1, LongJobs.size() 11
thread: 3, NSTable size: 19
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 3, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 3, i: 2, maxN[i].weit: 4, maxN[i].idx: 2, blockDimSize[i]: 4
thread: 3, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 3, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 3, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, i: 2, divisor[i]: 2, blockDimSize[i]: 2
thread: 3, i: 3, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, largestBlockVec.elm: 0 0 0 0 2 0 1 2 0 0 0 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 2 1 0 2 1 2 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 1 3 0 2 3 1 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 2 0 1 2 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 2 1 2 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 1 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 0 0 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 0 1 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 0 1 2 0 0 0 0 0 0 0 0 , mySum: 5
thread: 3, maxBlockLvlSize: 5
thread: 3, maxInBlockLvlSize: 3
thread: 3, AllTableSize: 144, maxSubsetsSize: 64
thread: 2, NSTable size: 22
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 2, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 2, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 2, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 2, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 2, i: 5, maxN[i].weit: 4, maxN[i].idx: 5, blockDimSize[i]: 4
thread: 2, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 3, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 5, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, largestBlockVec.elm: 0 0 0 0 0 0 0 0 0 2 0 0 0 2 0 1 
thread: 2, blockDimSizeComp: 0 0 0 0 0 0 0 2 2 1 0 0 0 1 2 2 
thread: 2, divisorComp: 0 0 0 0 0 0 0 1 1 3 0 0 0 3 1 2 
thread: 2, largestBlockVec: 0 0 0 0 0 0 0 0 0 2 0 0 0 2 0 1 
thread: 2, largestNoZeroBlockVec: 0 0 2 2 0 1 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 2 0 0 0 1 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 1 0 0 0 2 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 1 0 0 0 2 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 2 0 0 0 1 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 2 0 0 0 2 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 2 0 0 0 2 0 1 , mySum: 5
thread: 1, NSTable size: 24
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 1, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 1, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 1, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 1, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 1, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 1, i: 6, maxN[i].weit: 4, maxN[i].idx: 6, blockDimSize[i]: 4
thread: 1, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 3, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 4, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 6, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, largestBlockVec.elm: 0 0 0 0 0 0 0 0 0 2 0 0 0 2 0 1 
thread: 1, blockDimSizeComp: 0 0 0 0 0 0 2 2 2 1 0 0 0 1 2 2 
thread: 1, divisorComp: 0 0 0 0 0 0 1 1 1 3 0 0 0 3 1 2 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0 2 0 0 0 2 0 1 
thread: 1, largestNoZeroBlockVec: 0 0 0 2 2 0 1 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 2 0 0 0 1 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 1 0 0 0 2 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 1 0 0 0 2 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 2 0 0 0 1 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 2 0 0 0 2 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 2 0 0 0 2 0 1 , mySum: 5
thread: 2, maxBlockLvlSize: 5
thread: 2, maxInBlockLvlSize: 6
thread: 2, AllTableSize: 288, maxSubsetsSize: 64
thread: 0, NSTable size: 20
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 0, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 0, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 0, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 0, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 0, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 0, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 0, i: 7, maxN[i].weit: 4, maxN[i].idx: 7, blockDimSize[i]: 4
thread: 0, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 5, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 7, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, largestBlockVec.elm: 0 0 0 0 0 0 0 0 0 2 0 0 0 2 0 1 
thread: 0, blockDimSizeComp: 0 0 0 0 0 2 2 2 2 1 0 0 0 1 2 2 
thread: 0, divisorComp: 0 0 0 0 0 1 1 1 1 3 0 0 0 3 1 2 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 2 0 0 0 2 0 1 
thread: 0, largestNoZeroBlockVec: 0 0 0 0 2 2 0 1 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 2 0 0 0 1 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 1 0 0 0 2 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 1 0 0 0 2 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 2 0 0 0 1 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 2 0 0 0 2 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 2 0 0 0 2 0 1 , mySum: 5
thread: 1, maxBlockLvlSize: 5
thread: 1, maxInBlockLvlSize: 10
thread: 1, AllTableSize: 576, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 5
thread: 0, maxInBlockLvlSize: 20
thread: 0, AllTableSize: 1152, maxSubsetsSize: 64
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 4
copy the latest feasible solution to instance takes time: 0.009278
thread: 3, sOPT: 4
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 5
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 0 
copy the latest feasible solution to instance takes time: 0.014057
thread: 2, sOPT: 5
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 0 0 0 1 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 0 0 1 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 mySum: 2
thread: 0, blockNoZero[4]: 0 0 0 0 0 1 0 1 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 0 0 0 0 2 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[6]: 0 0 0 0 1 0 0 1 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 mySum: 2
thread: 0, blockNoZero[7]: 0 0 0 0 1 1 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[8]: 0 0 0 0 2 0 0 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 1 mySum: 3
thread: 0, blockNoZero[9]: 0 0 0 0 1 1 0 1 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 0 0 0 2 0 0 0 1 0 0 mySum: 3
thread: 0, blockNoZero[10]: 0 0 0 0 2 1 0 0 
thread: 0, allBlocks[11]: 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 1 mySum: 3
thread: 0, blockNoZero[11]: 0 0 0 0 2 0 0 1 
thread: 0, allBlocks[12]: 0 0 0 0 0 0 0 0 0 1 0 0 0 2 0 0 mySum: 3
thread: 0, blockNoZero[12]: 0 0 0 0 1 2 0 0 
thread: 0, allBlocks[13]: 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 1 mySum: 3
thread: 0, blockNoZero[13]: 0 0 0 0 0 2 0 1 
thread: 0, allBlocks[14]: 0 0 0 0 0 0 0 0 0 1 0 0 0 2 0 1 mySum: 4
thread: 0, blockNoZero[14]: 0 0 0 0 1 2 0 1 
thread: 0, allBlocks[15]: 0 0 0 0 0 0 0 0 0 2 0 0 0 1 0 1 mySum: 4
thread: 0, blockNoZero[15]: 0 0 0 0 2 1 0 1 
thread: 0, allBlocks[16]: 0 0 0 0 0 0 0 0 0 2 0 0 0 2 0 0 mySum: 4
thread: 0, blockNoZero[16]: 0 0 0 0 2 2 0 0 
thread: 0, allBlocks[17]: 0 0 0 0 0 0 0 0 0 2 0 0 0 2 0 1 mySum: 5
thread: 0, blockNoZero[17]: 0 0 0 0 2 2 0 1 
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 6
copy the latest feasible solution to instance takes time: 0.023099
thread: 1, sOPT: 6
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.019493
thread: 0, sOPT: 9
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 1, MlBk function is done, and BkID for all processes are collected.
2, MlBk function is done, and BkID for all processes are collected.
Thread: 3, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 18, UB: 21
BKID: 0, LB: 18, UB: 21, OPT: 9
Dynamic Programming Runtime: 0.313497
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 1
Iteration: 2, UB: 21, LB: 18start at time: 1505254766
thread: 0, MlBk is called with LB: 18, UB: 19
 thread: 0, LongJobs.size() 13
thread: thread: 2, MlBk is called with LB: 120, UB: , MlBk is called with LB: 2119, UB: 20

 thread: 1, LongJobs.size() 13
 thread: 2, LongJobs.size() 12
thread: 2, NSTable size: 20
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 2, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 2, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 2, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 2, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 2, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 2, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 2, i: 7, maxN[i].weit: 4, maxN[i].idx: 7, blockDimSize[i]: 4
thread: 2, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 4, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 5, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 7, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, largestBlockVec.elm: 0 0 0 0 0 0 0 0 0 2 0 0 0 2 0 1 
thread: 2, blockDimSizeComp: 0 0 0 0 0 2 2 2 2 1 0 0 0 1 2 2 
thread: 2, divisorComp: 0 0 0 0 0 1 1 1 1 3 0 0 0 3 1 2 
thread: 2, largestBlockVec: 0 0 0 0 0 0 0 0 0 2 0 0 0 2 0 1 
thread: 2, largestNoZeroBlockVec: 0 0 0 0 2 2 0 1 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 2 0 0 0 1 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 1 0 0 0 2 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 1 0 0 0 2 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 2 0 0 0 1 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 2 0 0 0 2 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 2 0 0 0 2 0 1 , mySum: 5
thread: 2, maxBlockLvlSize: 5
thread: 2, maxInBlockLvlSize: 20
thread: 2, AllTableSize: 1152, maxSubsetsSize: 64
thread: 1, NSTable size: 27
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 1, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 1, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 1, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 1, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 1, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 1, i: 6, maxN[i].weit: 3, maxN[i].idx: 6, blockDimSize[i]: 3
thread: 1, i: 7, maxN[i].weit: 2, maxN[i].idx: 7, blockDimSize[i]: 2
thread: 1, i: 8, maxN[i].weit: 4, maxN[i].idx: 8, blockDimSize[i]: 4
thread: 1, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 5, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 6, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 7, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 8, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, largestBlockVec.elm: 0 0 0 0 0 0 0 0 0 2 0 0 0 2 0 1 
thread: 1, blockDimSizeComp: 0 0 0 0 2 2 2 2 2 1 0 0 0 1 2 2 
thread: 1, divisorComp: 0 0 0 0 1 1 1 1 1 3 0 0 0 3 1 2 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0 2 0 0 0 2 0 1 
thread: 1, largestNoZeroBlockVec: 0 0 0 0 0 2 2 0 1 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 2 0 0 0 1 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 1 0 0 0 2 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 1 0 0 0 2 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 2 0 0 0 1 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 2 0 0 0 2 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 2 0 0 0 2 0 1 , mySum: 5
thread: 0, NSTable size: 24
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 0, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 0, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 0, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 0, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 0, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 0, i: 6, maxN[i].weit: 3, maxN[i].idx: 6, blockDimSize[i]: 3
thread: 0, i: 7, maxN[i].weit: 2, maxN[i].idx: 7, blockDimSize[i]: 2
thread: 0, i: 8, maxN[i].weit: 4, maxN[i].idx: 8, blockDimSize[i]: 4
thread: 0, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 5, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 6, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 7, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 8, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, largestBlockVec.elm: 0 0 0 0 0 0 0 0 0 2 0 0 0 2 0 1 
thread: 0, blockDimSizeComp: 0 0 0 0 2 2 2 2 2 1 0 0 0 1 2 2 
thread: 0, divisorComp: 0 0 0 0 1 1 1 1 1 3 0 0 0 3 1 2 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 2 0 0 0 2 0 1 
thread: 0, largestNoZeroBlockVec: 0 0 0 0 0 2 2 0 1 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 2 0 0 0 1 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 1 0 0 0 2 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 1 0 0 0 2 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 2 0 0 0 1 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 2 0 0 0 2 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 2 0 0 0 2 0 1 , mySum: 5
thread: 1, maxBlockLvlSize: 5
thread: 1, maxInBlockLvlSize: 35
thread: 1, AllTableSize: 2304, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 5
thread: 0, maxInBlockLvlSize: 35
thread: 0, AllTableSize: 2304, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 0 0 0 0 1 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 0 0 0 1 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 mySum: 2
thread: 0, blockNoZero[4]: 0 0 0 0 0 0 1 0 1 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 0 0 0 0 0 2 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[6]: 0 0 0 0 0 1 0 0 1 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 mySum: 2
thread: 0, blockNoZero[7]: 0 0 0 0 0 1 1 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[8]: 0 0 0 0 0 2 0 0 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 1 mySum: 3
thread: 0, blockNoZero[9]: 0 0 0 0 0 1 1 0 1 
Thread: 2, gpu_BlockDP is done.
thread: 0, allBlocks[10]: 0 0 0 0 0 0 0 0 0 2 0 0 0 1 0 0 mySum: 3
thread: 0, blockNoZero[10]: 0 0 0 0 0 2 1 0 0 
thread: 0, allBlocks[11]: 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 1 mySum: 3
thread: 0, blockNoZero[11]: 0 0 0 0 0 2 0 0 1 
thread: 0, allBlocks[12]: 0 0 0 0 0 0 0 0 0 1 0 0 0 2 0 0 mySum: 3
thread: 0, blockNoZero[12]: 0 0 0 0 0 1 2 0 0 
thread: 0, allBlocks[13]: 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 1 mySum: 3
thread: 0, blockNoZero[13]: 0 0 0 0 0 0 2 0 1 
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.059674
thread: 2, sOPT: 9
thread: 0, allBlocks[14]: 0 0 0 0 0 0 0 0 0 1 0 0 0 2 0 1 mySum: 4
thread: 0, blockNoZero[14]: 0 0 0 0 0 1 2 0 1 
thread: 0, allBlocks[15]: 0 0 0 0 0 0 0 0 0 2 0 0 0 1 0 1 mySum: 4
thread: 0, blockNoZero[15]: 0 0 0 0 0 2 1 0 1 
thread: 0, allBlocks[16]: 0 0 0 0 0 0 0 0 0 2 0 0 0 2 0 0 mySum: 4
thread: 0, blockNoZero[16]: 0 0 0 0 0 2 2 0 0 
thread: 0, allBlocks[17]: 0 0 0 0 0 0 0 0 0 2 0 0 0 2 0 1 mySum: 5
thread: 0, blockNoZero[17]: 0 0 0 0 0 2 2 0 1 
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 9
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.099639
thread: 1, sOPT: 9
copy the latest feasible solution to instance takes time: 0.080793
thread: 0, sOPT: 10
BKID: 0, LB: 18, UB: 18, OPT: 10
Dynamic Programming Runtime: 0.782608
Execution time between LB and UB is: 0
By far, all LB UB calculation runtime: 1
********************************************************
Total execution on UB and LB is: 1
OUT of Bk while loop  
UB    18
LB    18
T1    18
T2    18
OPT   10
nMachines   10
BkID	0
AllProbData.size()    2
ck :   1
AllProbData[ck].Ttable    18
ck :   0
AllProbData[ck].Ttable    20
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan18
Main Scheduling is Done
File 2-13 is Done.
******************************
Reading File...
File 2-14 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 40, LB: 21start at time: 1505254766
thread: 0, MlBk is called with LB: 21, UB: 26
thread: 3, MlBk is called with LB: 36, UB: 41
thread: 2, MlBk is called with LB: thread: 31, UB: 36
 thread: 0, LongJobs.size() 16
 thread: 3, LongJobs.size() 9
1, MlBk is called with LB: 26, UB: 31
 thread: 2, LongJobs.size() 10
 thread: 1, LongJobs.size() 12
thread: 3, NSTable size: 19
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 3, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 3, i: 2, maxN[i].weit: 4, maxN[i].idx: 2, blockDimSize[i]: 4
thread: 3, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 3, i: 0, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, i: 2, divisor[i]: 2, blockDimSize[i]: 2
thread: 3, i: 3, divisor[i]: 1, blockDimSize[i]: 3
thread: 3, largestBlockVec.elm: 0 0 0 0 2 2 0 1 0 0 0 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 0 1 1 0 2 3 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 0 3 3 0 2 1 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 2 2 0 1 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 2 2 1 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 2 0 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 1 0 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 2 0 1 0 0 0 0 0 0 0 0 , mySum: 5
thread: 2, NSTable size: 21
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0thread: 3, maxBlockLvlSize: 
5thread: 2, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 2, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3

thread: 3, maxInBlockLvlSize: 2
thread: 3, AllTableSize: 108, maxSubsetsSize: 64
thread: 2, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 2, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 2, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 2, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 3, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, largestBlockVec.elm: 0 0 0 0 2 2 0 1 0 0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 2 1 1 0 2 3 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 1 3 3 0 2 1 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 2 2 0 1 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 2 2 1 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 2 0 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 1 0 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 2 0 1 0 0 0 0 0 0 0 0 , mySum: 5
thread: 1, NSTable size: 26
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 5
thread: 1, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 1, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 1, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 1, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 1, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 1, i: 5, maxN[i].weit: 6, maxN[i].idx: 5, blockDimSize[i]: 6
thread: 1, i: 0, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 5, divisor[i]: 2, blockDimSize[i]: 3
thread: 1, largestBlockVec.elm: 0 0 0 0 0 0 0 2 0 0 2 0 0 0 0 1 
thread: 1, blockDimSizeComp: 0 0 0 0 0 0 0 1 2 0 1 2 2 0 0 3 
thread: 1, divisorComp: 0 0 0 0 0 0 0 3 1 0 3 1 1 0 0 2 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 2 0 0 2 0 0 0 0 1 
thread: 1, largestNoZeroBlockVec: 2 0 2 0 0 1 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 2 0 0 1 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 1 0 0 2 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 1 0 0 2 0 0 0 0 1 , mySum: 4
0 0 0 0 0 0 0 2 0 0 1 0 0 0 0 1 , mySum: 4
0 0 0 0 0 0 0 2 0 0 2 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 2 0 0 2 0 0 0 0 1 , mySum: 5
thread: 2, maxBlockLvlSize: 5
thread: 2, maxInBlockLvlSize: 4
thread: 2, AllTableSize: 216, maxSubsetsSize: 64
thread: 1, maxBlockLvlSize: 5
thread: 1, maxInBlockLvlSize: 7
thread: 1, AllTableSize: 432, maxSubsetsSize: 64
thread: 0, NSTable size: 42
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 5
thread: 0, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 0, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 0, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 0, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 0, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 0, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 0, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 0, i: 7, maxN[i].weit: 6, maxN[i].idx: 7, blockDimSize[i]: 6
thread: 0, i: 0, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 7, divisor[i]: 2, blockDimSize[i]: 3
thread: 0, largestBlockVec.elm: 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 1 
thread: 0, blockDimSizeComp: 0 0 0 0 0 2 2 1 2 0 3 2 2 0 0 3 
thread: 0, divisorComp: 0 0 0 0 0 2 1 3 1 0 1 1 1 0 0 2 
thread: 0, largestBlockVec: 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 1 
thread: 0, largestNoZeroBlockVec: 1 0 2 0 0 0 0 1 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 1 , mySum: 4
thread: 0, maxBlockLvlSize: 4
thread: 0, maxInBlockLvlSize: 66
thread: 0, AllTableSize: 3456, maxSubsetsSize: 64
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 4
copy the latest feasible solution to instance takes time: 0.007254
thread: 3, sOPT: 4
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 5
copy the latest feasible solution to instance takes time: 0.007293
thread: 2, sOPT: 5
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 6
copy the latest feasible solution to instance takes time: 0.013943
thread: 1, sOPT: 6
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 1 0 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 1 0 0 0 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[4]: 0 0 1 0 0 0 0 1 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 0 2 0 0 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[6]: 1 0 0 0 0 0 0 1 
thread: 0, allBlocks[7]: 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 1 0 1 0 0 0 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 1 mySum: 3
thread: 0, blockNoZero[8]: 0 0 2 0 0 0 0 1 
thread: 0, allBlocks[9]: 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 1 mySum: 3
thread: 0, blockNoZero[9]: 1 0 1 0 0 0 0 1 
thread: 0, allBlocks[10]: 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 1 0 2 0 0 0 0 0 
thread: 0, allBlocks[11]: 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 1 mySum: 4
thread: 0, blockNoZero[11]: 1 0 2 0 0 0 0 1 
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.058783
thread: 0, sOPT: 9
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: Thread: 13, MlBk function is done, and BkID for all processes are collected., MlBk function is done, and BkID for all processes are collected.2

, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 21, UB: 24
BKID: 0, LB: 21, UB: 24, OPT: 9
Dynamic Programming Runtime: 0.822813
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 1
Iteration: 2, UB: 24, LB: 21start at time: 1505254767
thread: 0, MlBk is called with LB: 21, UB: 22
 thread: 0, LongJobs.size() 16
thread: thread: 1, MlBk is called with LB: 222, UB: , MlBk is called with LB: 2323, UB: 24

 thread: 2, LongJobs.size() 16
 thread: 1, LongJobs.size() 16
thread: 0, NSTable size: 32
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 5
thread: 0, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 0, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 0, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 0, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 0, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 0, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 0, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 0, i: 7, maxN[i].weit: 6, maxN[i].idx: 7, blockDimSize[i]: 6
thread: 0, i: 0, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 7, divisor[i]: 2, blockDimSize[i]: 3
thread: 0, largestBlockVec.elm: 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 1 
thread: 0, blockDimSizeComp: 0 0 0 0 0 2 2 1 2 0 3 2 2 0 0 3 
thread: 0, divisorComp: 0 0 0 0 0 2 1 3 1 0 1 1 1 0 0 2 
thread: 0, largestBlockVec: 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 1 
thread: 0, largestNoZeroBlockVec: 1 0 2 0 0 0 0 1 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 1 , mySum: 4
thread: 1, NSTable size: 37
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 5
thread: 1, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 1, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 1, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 1, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 1, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 1, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 1, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 1, i: 7, maxN[i].weit: 6, maxN[i].idx: 7, blockDimSize[i]: 6
thread: 1, i: 0, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 7, divisor[i]: 2, blockDimSize[i]: 3
thread: 1, largestBlockVec.elm: 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 1 
thread: 1, blockDimSizeComp: 0 0 0 0 0 2 2 1 2 0 3 2 2 0 0 3 
thread: 1, divisorComp: 0 0 0 0 0 2 1 3 1 0 1 1 1 0 0 2 
thread: 1, largestBlockVec: 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 1 
thread: 1, largestNoZeroBlockVec: 1 0 2 0 0 0 0 1 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 1 , mySum: 4
thread: 2, NSTable size: 42
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 5
thread: 2, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 2, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 2, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 2, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 2, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 2, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 2, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 2, i: 7, maxN[i].weit: 6, maxN[i].idx: 7, blockDimSize[i]: 6
thread: 2, i: 0, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 7, divisor[i]: 2, blockDimSize[i]: 3
thread: 2, largestBlockVec.elm: 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 1 
thread: 2, blockDimSizeComp: 0 0 0 0 0 2 2 1 2 0 3 2 2 0 0 3 
thread: 2, divisorComp: 0 0 0 0 0 2 1 3 1 0 1 1 1 0 0 2 
thread: 2, largestBlockVec: 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 1 
thread: 2, largestNoZeroBlockVec: 1 0 2 0 0 0 0 1 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 1 , mySum: 4
thread: 0, maxBlockLvlSize: 4
thread: 0, maxInBlockLvlSize: 66
thread: 0, AllTableSize: 3456, maxSubsetsSize: 64
thread: 1, maxBlockLvlSize: 4
thread: 1, maxInBlockLvlSize: 66
thread: 1, AllTableSize: 3456, maxSubsetsSize: 64
thread: 2, maxBlockLvlSize: 4
thread: 2, maxInBlockLvlSize: 66
thread: 2, AllTableSize: 3456, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 1 0 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 1 0 0 0 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[4]: 0 0 1 0 0 0 0 1 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 0 2 0 0 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[6]: 1 0 0 0 0 0 0 1 
thread: 0, allBlocks[7]: 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 1 0 1 0 0 0 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 1 mySum: 3
thread: 0, blockNoZero[8]: 0 0 2 0 0 0 0 1 
thread: 0, allBlocks[9]: 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 1 mySum: 3
thread: 0, blockNoZero[9]: 1 0 1 0 0 0 0 1 
thread: 0, allBlocks[10]: 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 1 0 2 0 0 0 0 0 
thread: 0, allBlocks[11]: 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 1 mySum: 4
thread: 0, blockNoZero[11]: 1 0 2 0 0 0 0 1 
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 4
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.288241
thread: 0, sOPT: 10
copy the latest feasible solution to instance takes time: 0.252387
thread: 1, sOPT: 4
copy the latest feasible solution to instance takes time: 0.173737
thread: 2, sOPT: 9
BKID: 0, LB: 21, UB: 21, OPT: 10
Dynamic Programming Runtime: 2.35064
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 2
********************************************************
Total execution on UB and LB is: 2
OUT of Bk while loop  
UB    21
LB    21
T1    21
T2    21
OPT   10
nMachines   10
BkID	0
AllProbData.size()    2
ck :   1
AllProbData[ck].Ttable    21
ck :   0
AllProbData[ck].Ttable    23
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan22
Main Scheduling is Done
File 2-14 is Done.
******************************
Reading File...
File 2-15 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 34, LB: 18start at time: 1505254768
thread: 0, MlBk is called with LB: 18, UB: 22
thread: 3, MlBk is called with LB: 30, UB: 34 thread: 0, LongJobs.size() 
11
 thread: 3, LongJobs.size() 7
thread: 2, MlBk is called with LB: 26, UB: 30
thread: 1, MlBk is called with LB: 22, UB: 26
 thread: 2, LongJobs.size() 7
 thread: 1, LongJobs.size() 9
thread: 2, NSTable size: 9
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 2, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 2, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 2, i: 3, maxN[i].weit: 5, maxN[i].idx: 3, blockDimSize[i]: 5
thread: 2, i: 0, divisor[i]: 2, blockDimSize[i]: 1
thread: 2, i: 1, divisor[i]: 2, blockDimSize[i]: 1
thread: 2, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 3, divisor[i]: 5, blockDimSize[i]: 1
thread: 2, largestBlockVec.elm: 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 4 
thread: 2, blockDimSizeComp: 0 0 0 0 0 0 0 0 0 1 0 1 0 0 2 1 
thread: 2, divisorComp: 0 0 0 0 0 0 0 0 0 2 0 2 0 0 1 5 
thread: 2, largestBlockVec: 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 4 
thread: 2, largestNoZeroBlockVec: 1 1 0 4 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 2 , mySum: 3
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 2 , mySum: 3
0 0 0 0 0 0 0 0 0 1 0thread:  11, NSTable size:  120 
0thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 0 , maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 03 
thread: 1, i: 1, maxN[i].weit: 2, maxN[i].idx: 11, blockDimSize[i]:  2, mySum: 
thread: 1, i: 2, maxN[i].weit: 2, maxN[i].idx: 23, blockDimSize[i]: 2
thread: 1, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 1, i: 4, maxN[i].weit: 5, maxN[i].idx: 4, blockDimSize[i]: 5

thread: 0 0 0 0 0 0 0 0 0 01 , i: 00 , divisor[i]: 0 0 30, blockDimSize[i]: 1 
thread: 1, i: 1, divisor[i]: 2, blockDimSize[i]: 1
thread: 1, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 4, divisor[i]: 5, blockDimSize[i]: 1
0thread: 1, largestBlockVec.elm:  40  , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 1 0 00  0 3 , mySum: 04 
00 0 0 0 0 0 0 0 0 1  0 0 0 00  0 0 32  , mySum: 4
00 0 0 0 0 0 0 0 0 1 0 1 0 0 0 2 , mySum: 4
0 0 0 0 0  1 0 00  0 0 00  0 40  
0thread: 1, blockDimSizeComp: 0 0 0 0 0 0 1 0  0 0 1 0 0 0 4 , mySum: 05 1 
0 2 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 4 , mySum: 5
00 0 0  0 00 0  0 0 2 01  
1thread: 1, divisorComp: 0 0 0 0 0 0 3 0 0 2  0 01  0 1 00  0 10  53  
, mySum: 5
thread: 1, largestBlockVec: 0 0 0 0 0 0 2 0 00 0 0 0 0 0 0 0 0 1 0 1 0 0 0 4 , mySum: 6
 1 0 0 0 0 0 4 
thread: 1, largestNoZeroBlockVec: 2 1 0 0 4 
thread: 0, NSTable size: 15
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 2, maxBlockLvlSize: 4
thread: 2, maxInBlockLvlSize: 1
thread: 2, AllTableSize: 40, maxSubsetsSize: 64
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0thread:  , mySum: 00, i: 6
, alltableelemets[maxindex].elm[i]: 20 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1

0 0 0thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 0 
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 0, maxN[i].weit: 3, maxN[i].idx: 00, blockDimSize[i]:  30
 thread: 0, i: 1, maxN[i].weit: 3, maxN[i].idx: 10, blockDimSize[i]: 3
 thread: 0, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 0, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 0, i: 4, maxN[i].weit: 20 0 0 1 0 , maxN[i].idx: 04, blockDimSize[i]:  02
 thread: 0, i: 5, maxN[i].weit: 5, maxN[i].idx: 5, blockDimSize[i]: 5
0thread: 0, i: 0 , divisor[i]: 0 30 , blockDimSize[i]: , mySum: 11
thread: 0, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 5, divisor[i]: 5, blockDimSize[i]: 1

0 0 0 0 0 0 1 0 0 0 thread: 00 , largestBlockVec.elm: 0 0 0 0 00  , mySum: 1
0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 00  0 20  02  0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 00 0  0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 , mySum: 20 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 1 0 0 04 0 0  1 
, mySum: thread: 0, blockDimSizeComp: 0 0 0 0 0 1 1 0 0 22 0 
20 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 1  0 
0thread: 0, divisorComp: 0 0 0 0 0 3 3 0 0 1  2 , mySum: 2
0 0 0 0 0 0 1 0 0 0 0 0 0 0 00 2  1, mySum:  3
00 0 0 0 0 0 0 0 0 0 0 0 0 0  0 0 31 5  
thread: 0, largestBlockVec: 0 0 0 0 0 2 2 0 0 0 0, mySum: 3
0 0 0 0 0 0 1 0 0 1 0 0 0 0 0  1 0, mySum:  30 
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 00 2  , mySum: 3
0 0 0 0 0 0 2 0 0 1 0 0 0 0 04 0  , mySum: 
thread: 0, largestNoZeroBlockVec: 2 2 0 0 0 4 
3
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 3 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 , mySum: 4
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 3 , mySum: 4
0 0 0 0 0 0 2 0 0 1 0 0 0 0 0 1 , mySum: 4
0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 2 , mySum: 4
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 2 , mySum: 4
0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 3 , mySum: 5
0 0 0 0 0 0 2 0 0 1 0 0 0 0 0 2 , mySum: 5
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 3 , mySum: 5
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 4 , mySum: 5
0 0 0 0 0 0 0 0 thread: 0 1 00, allBlocks: 0  0 00  0 00  00  0 40 , mySum: 5
 0 0 0 0 0 0 2 0 0 0 0 0 00  00  00  0 40  , mySum: 0 60
 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 40 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0  , mySum: 6
0 0 0 0 0 0 2 0 0 1 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 00 0  , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 00 0 0  , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 3 , mySum: 6
0 0 0 0 0 0 2 0 0 1 0 0 0 0 0 4 0, mySum: 7 
1 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 , mySum: 3
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 2 , mySum: 3
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 2 , mySum: 3
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 2 , mySum: 4
0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 1 , mySum: 4
0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 1 , mySum: 4
0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 2 , mySum: 4
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 3 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 , mySum: 4
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 2 , mySum: 4
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 3 , mySum: 4
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 3 , mySum: 5
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 4 , mySum: 5
0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 2 , mySum: 5
0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 1 , mySum: 5
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 3 , mySum: 5
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 3 , mySum: 5
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 4 , mySum: 5
0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 2 , mySum: 5
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 4 , mySum: 6
0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 2 , mySum: 6
0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 3 , mySum: 6
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 4 , mySum: 6
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 4 , mySum: 6
0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 3 , mySum: 6
0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 4 , mySum: 7
0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 4 , mySum: 7
0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 3 , mySum: 7
0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 4 , mySum: 8
thread: 0, maxBlockLvlSize: 9
thread: 0, maxInBlockLvlSize: 3
thread: 0, AllTableSize: 360, maxSubsetsSize: 64
thread: 3, NSTable size: 15
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 3, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 3, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 3, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 3, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 3, i: 0, divisor[i]: 2, blockDimSize[i]: 1
thread: 3, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 3, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, i: 4, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, largestBlockVec.elm: 0 0 0 0 1 0 0 2 2 0 0 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 0 1 2 2 1 1 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 0 2 1 1 3 3 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 1 0 0 2 2 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 1 0 0 2 2 
thread: 1, maxBlockLvlSize: 6
thread: 1, maxInBlockLvlSize: 2
thread: 1, AllTableSize: 120, maxSubsetsSize: 64
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 1 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 2 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 2 2 0 0 0 0 0 0 0 , mySum: 5
thread: 3, maxBlockLvlSize: 5
thread: 3, maxInBlockLvlSize: 2
thread: 3, AllTableSize: 72, maxSubsetsSize: 64
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 5
copy the latest feasible solution to instance takes time: 0.00262
thread: 2, sOPT: 5
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 1 
Thread: 3, gpu_BlockDP is done.
thread: 0, allBlocks[2]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 1 0 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 1 0 0 0 0 
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 4
copy the latest feasible solution to instance takes time: 0.00347
thread: 3, sOPT: 4
thread: 0, allBlocks[4]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[4]: 0 1 0 0 0 1 
thread: 0, allBlocks[5]: 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 1 1 0 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 2 0 0 0 0 
thread: 0, allBlocks[7]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[7]: 1 0 0 0 0 1 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 mySum: 2
thread: 0, blockNoZero[8]: 0 0 0 0 0 2 
thread: 0, allBlocks[9]: 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[9]: 2 0 0 0 0 0 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 mySum: 3
thread: 0, blockNoZero[10]: 0 0 0 0 0 3 
thread: 0, allBlocks[11]: 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 1 mySum: 3
thread: 0, blockNoZero[11]: 1 1 0 0 0 1 
thread: 0, allBlocks[12]: 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[12]: 1 2 0 0 0 0 
thread: 0, allBlocks[13]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 2 mySum: 3
thread: 0, blockNoZero[13]: 1 0 0 0 0 2 
thread: 0, allBlocks[14]: 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 1 mySum: 3
thread: 0, blockNoZero[14]: 2 0 0 0 0 1 
thread: 0, allBlocks[15]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 1 mySum: 3
thread: 0, blockNoZero[15]: 0 2 0 0 0 1 
thread: 0, allBlocks[16]: 0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[16]: 2 1 0 0 0 0 
thread: 0, allBlocks[17]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 2 mySum: 3
thread: 0, blockNoZero[17]: 0 1 0 0 0 2 
thread: 0, allBlocks[18]: 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 2 mySum: 4
thread: 0, blockNoZero[18]: 2 0 0 0 0 2 
thread: 0, allBlocks[19]: 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 1 mySum: 4
thread: 0, blockNoZero[19]: 1 2 0 0 0 1 
thread: 0, allBlocks[20]: 0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 1 mySum: 4
thread: 0, blockNoZero[20]: 2 1 0 0 0 1 
Thread: 1, gpu_BlockDP is done.
thread: 0, allBlocks[21]: 0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[21]: 2 2 0 0 0 0 
thread: 0, allBlocks[22]: 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 2 mySum: 4
thread: 0, blockNoZero[22]: 1 1 0 0 0 2 
thread: 0, allBlocks[23]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 3 mySum: 4
thread: 0, blockNoZero[23]: 1 0 0 0 0 3 
thread: 0, allBlocks[24]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 mySum: 4
thread: 0, blockNoZero[24]: 0 0 0 0 0 4 
thread: 0, allBlocks[25]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 2 mySum: 4
thread: 0, blockNoZero[25]: 0 2 0 0 0 2 
thread: 0, allBlocks[26]: 0 0Thread:  1, find the NS table for a selected configuration.0
cpuId: 1, dpoptimal: 6 
0 0 0 1 0 0 0 0 0 0 0 0 3 mySum: 4
thread: 0, blockNoZero[26]: 0 1 0 0 0 3 
copy the latest feasible solution to instance takes time: 0.003557
thread: 0, allBlocks[27]: 0 0 0 0 0 1 1 0 0 0 0 thread: 01, sOPT: 6
 0 0 0 3 mySum: 5
thread: 0, blockNoZero[27]: 1 1 0 0 0 3 
thread: 0, allBlocks[28]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 4 mySum: 5
thread: 0, blockNoZero[28]: 1 0 0 0 0 4 
thread: 0, allBlocks[29]: 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 2 mySum: 5
thread: 0, blockNoZero[29]: 1 2 0 0 0 2 
thread: 0, allBlocks[30]: 0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 1 mySum: 5
thread: 0, blockNoZero[30]: 2 2 0 0 0 1 
thread: 0, allBlocks[31]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 3 mySum: 5
thread: 0, blockNoZero[31]: 0 2 0 0 0 3 
thread: 0, allBlocks[32]: 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 3 mySum: 5
thread: 0, blockNoZero[32]: 2 0 0 0 0 3 
thread: 0, allBlocks[33]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 4 mySum: 5
thread: 0, blockNoZero[33]: 0 1 0 0 0 4 
thread: 0, allBlocks[34]: 0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 2 mySum: 5
thread: 0, blockNoZero[34]: 2 1 0 0 0 2 
thread: 0, allBlocks[35]: 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 4 mySum: 6
thread: 0, blockNoZero[35]: 1 1 0 0 0 4 
thread: 0, allBlocks[36]: 0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 2 mySum: 6
thread: 0, blockNoZero[36]: 2 2 0 0 0 2 
thread: 0, allBlocks[37]: 0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 3 mySum: 6
thread: 0, blockNoZero[37]: 2 1 0 0 0 3 
thread: 0, allBlocks[38]: 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 4 mySum: 6
thread: 0, blockNoZero[38]: 2 0 0 0 0 4 
thread: 0, allBlocks[39]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 4 mySum: 6
thread: 0, blockNoZero[39]: 0 2 0 0 0 4 
thread: 0, allBlocks[40]: 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 3 mySum: 6
thread: 0, blockNoZero[40]: 1 2 0 0 0 3 
thread: 0, allBlocks[41]: 0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 4 mySum: 7
thread: 0, blockNoZero[41]: 2 1 0 0 0 4 
thread: 0, allBlocks[42]: 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 4 mySum: 7
thread: 0, blockNoZero[42]: 1 2 0 0 0 4 
thread: 0, allBlocks[43]: 0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 3 mySum: 7
thread: 0, blockNoZero[43]: 2 2 0 0 0 3 
thread: 0, allBlocks[44]: 0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 4 mySum: 8
thread: 0, blockNoZero[44]: 2 2 0 0 0 4 
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 8
copy the latest feasible solution to instance takes time: 0.005563
thread: 0, sOPT: 8
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 31, MlBk function is done, and BkID for all processes are collected.
, MlBk function is done, and BkID for all processes are collected.
Thread: 2, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 18, UB: 21
BKID: 0, LB: 18, UB: 21, OPT: 8
Dynamic Programming Runtime: 0.108061
Execution time between LB and UB is: 0
By far, all LB UB calculation runtime: 0
Iteration: 2, UB: 21, LB: 18start at time: 1505254768
thread: 0, MlBk is called with LB: 18, UB: 19
thread: thread: 12, MlBk is called with LB: 20, UB: 21, MlBk is called with LB: 
 thread: 190, UB: 20 thread: 2, LongJobs.size() 11

, LongJobs.size() 13
 thread: 1, LongJobs.size() 13
thread: 2, NSTable size: 15
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 2, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 2, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 2, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 2, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 2, i: 5, maxN[i].weit: 5, maxN[i].idx: 5, blockDimSize[i]: 5
thread: 2, i: 0, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 5, divisor[i]: 5, blockDimSize[i]: 1
thread: 2, largestBlockVec.elm: 0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 4 
thread: 2, blockDimSizeComp: 0 0 0 0 0 1 1 0 0 2 0 2 0 0 2 1 
thread: 2, divisorComp: 0 0 0 0 0 3 3 0 0 1 0 1 0 0 1 5 
thread: 2, largestBlockVec: 0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 4 
thread: 2, largestNoZeroBlockVec: 2 2 0 0 0 4 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 , mySum: 3
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 2 , mySum: 3
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 2 , mySum: 3
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 2 , mySum: 4
0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 1 , mySum: 4
0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 1 , mySum: 4
0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 2 , mySum: 4
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 3 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 , mySum: 4
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 2 , mySum: 4
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 3 , mySum: 4
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 3 , mySum: 5
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 4 , mySum: 5
0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 2 , mySum: 5
0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 1 , mySum: 5
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 3 , mySum: 5
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 3 , mySum: 5
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 4 , mySum: 5
0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 2 , mySum: 5
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 4 , mySum: 6
0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 2 , mySum: 6
0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 3 , mySum: 6
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 4 , mySum: 6
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 4 , mySum: 6
0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 3 , mySum: 6
0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 4 , mySum: 7
0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 4 , mySum: 7
0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 3 , mySum: 7
0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 4 , mySum: 8
thread: 0, NSTable size: 22
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 0, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 0, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 0, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 0, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 0, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 0, i: 6, maxN[i].weit: 5, maxN[i].idx: 6, blockDimSize[i]: 5
thread: 0, i: 0, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 2, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 6, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, largestBlockVec.elm: 0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 4 
thread: 0, blockDimSizeComp: 0 0 thread: 0 0 1 21, maxBlockLvlSize:  93 
0thread: 2, maxInBlockLvlSize: 3
 thread: 02 , AllTableSize: 2 3600 2, maxSubsetsSize:  0 640
 2 1 
thread: 0, divisorComp: 0 0 0 0 3 3 1 0 0 1 0 1 0 0 1 5 
thread: 0, largestBlockVec: 0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 4 
thread: 0, largestNoZeroBlockVec: 2 2 0 0 0 0 4 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 , mySum: 3
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 1 , mySum: 3
0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 2 , mySum: 3
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 1 , mySum: 3
0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 2 , mySum: 3
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 2 , mySum: 4
0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 1 , mySum: 4
0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 1 , mySum: 4
0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 2 , mySum: 4
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 3 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 , mySum: 4
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 2 , mySum: 4
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 3 , mySum: 4
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 3 , mySum: 5
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 4 , mySum: 5
0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 2 , mySum: 5
0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 1 , mySum: 5
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 3 , mySum: 5
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 3 , mySum: 5
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 4 , mySum: 5
0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 2 , mySum: 5
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 4 , mySum: 6
0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 2 , mySum: 6
0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 3 , mySum: 6
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 4 , mySum: 6
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 4 , mySum: 6
0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 3 , mySum: 6
0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 4 , mySum: 7
0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 4 , mySum: 7
0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 3 , mySum: 7
0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 4 , mySum: 8
thread: 0, maxBlockLvlSize: 9
thread: 0, maxInBlockLvlSize: 7
thread: 0, AllTableSize: 1080, maxSubsetsSize: 64
thread: 1, NSTable size: 25
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 1, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 1, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 1, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 1, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 1, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 1, i: 6, maxN[i].weit: 5, maxN[i].idx: 6, blockDimSize[i]: 5
thread: 1, i: 0, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 2, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 6, divisor[i]: 5, blockDimSize[i]: 1
thread: 1, largestBlockVec.elm: 0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 4 
thread: 1, blockDimSizeComp: 0 0 0 0 1 1 3 0 0 2 0 2 0 0 2 1 
thread: 1, divisorComp: 0 0 0 0 3 3 1 0 0 1 0 1 0 0 1 5 
thread: 1, largestBlockVec: 0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 4 
thread: 1, largestNoZeroBlockVec: 2 2 0 0 0 0 4 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 , mySum: 3
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 1 , mySum: 3
0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 2 , mySum: 3
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 1 , mySum: 3
0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 2 , mySum: 3
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 2 , mySum: 4
0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 1 , mySum: 4
0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 1 , mySum: 4
0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 2 , mySum: 4
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 3 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 , mySum: 4
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 2 , mySum: 4
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 3 , mySum: 4
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 3 , mySum: 5
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 4 , mySum: 5
0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 2 , mySum: 5
0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 1 , mySum: 5
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 3 , mySum: 5
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 3 , mySum: 5
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 4 , mySum: 5
0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 2 , mySum: 5
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 4 , mySum: 6
0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 2 , mySum: 6
0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 3 , mySum: 6
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 4 , mySum: 6
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 4 , mySum: 6
0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 3 , mySum: 6
0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 4 , mySum: 7
0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 4 , mySum: 7
0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 3 , mySum: 7
0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 4 , mySum: 8
thread: 1, maxBlockLvlSize: 9
thread: 1, maxInBlockLvlSize: 7
thread: 1, AllTableSize: 1080, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 1 0 0 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 1 0 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[4]: 0 1 0 0 0 0 1 
thread: 0, allBlocks[5]: 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 1 1 0 0 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 2 0 0 0 0 0 
thread: 0, allBlocks[7]: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[7]: 1 0 0 0 0 0 1 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 mySum: 2
thread: 0, blockNoZero[8]: 0 0 0 0 0 0 2 
thread: 0, allBlocks[9]: 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[9]: 2 0 0 0 0 0 0 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 mySum: 3
thread: 0, blockNoZero[10]: 0 0 0 0 0 0 3 
thread: 0, allBlocks[11]: 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 1 mySum: 3
thread: 0, blockNoZero[11]: 1 1 0 0 0 0 1 
thread: 0, allBlocks[12]: 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[12]: 1 2 0 0 0 0 0 
Thread: 2, gpu_BlockDP is done.
thread: 0, allBlocks[13]: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 2 mySum: 3
thread: 0, blockNoZero[13]: 1 0 0 0 0 0 2 
thread: 0, allBlocks[14]: 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 1 mySum: 3
thread: 0, blockNoZero[14]: 2 0 0 0 0 0 1 
thread: 0, allBlocks[15]: 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 1 mySum: 3
thread: 0, blockNoZero[15]: 0 2 0 0 0 0 1 
thread: Thread: 0, allBlocks[16]: 0 20 , find the NS table for a selected configuration.0 0 2 1
 cpuId: 20, dpoptimal: 8
 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[16]: 2 1 0 0 0 0 0 
thread: 0, allBlocks[17]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 2 mySum: 3
thread: 0, blockNoZero[17]: 0 1 0 0 0 0 2 
thread: 0, allBlocks[18]: 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 2 mySum: 4
thread: 0, blockNoZero[18]: 2 0 0 0 0 0 2 
thread: 0, allBlocks[19]: 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 1 mySum: 4
thread: 0, blockNoZero[19]: 1 2 0 0 0 0 1 
thread: 0, allBlocks[20]: 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 1 mySum: 4
thread: 0, blockNoZero[20]: 2 1 0 0 0 0 1 
thread: 0, allBlocks[21]: 0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[21]: 2 2 0 0 0 0 0 
thread: 0, allBlocks[22]: 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 2 mySum: 4
thread: 0, blockNoZero[22]: 1 1 0 0 0 0 2 
thread: 0, allBlocks[23]: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 3 mySum: 4
thread: 0, blockNoZero[23]: 1 0 0 0 0 0 3 
thread: 0, allBlocks[24]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 mySum: 4
thread: 0, blockNoZero[24]: 0 0 0 0 0 0 4 
thread: 0, allBlocks[25]: 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 2 mySum: 4
thread: 0, blockNoZero[25]: 0 2 0 0 0 0 2 
thread: 0, allBlocks[26]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 3 mySum: 4
thread: 0, blockNoZero[26]: 0 1 0 0 0 0 3 
copy the latest feasible solution to instance takes time: 0.016867
thread: 2, sOPT: 8
thread: 0, allBlocks[27]: 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 3 mySum: 5
thread: 0, blockNoZero[27]: 1 1 0 0 0 0 3 
thread: 0, allBlocks[28]: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 4 mySum: 5
thread: 0, blockNoZero[28]: 1 0 0 0 0 0 4 
thread: 0, allBlocks[29]: 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 2 mySum: 5
thread: 0, blockNoZero[29]: 1 2 0 0 0 0 2 
thread: 0, allBlocks[30]: 0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 1 mySum: 5
thread: 0, blockNoZero[30]: 2 2 0 0 0 0 1 
thread: 0, allBlocks[31]: 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 3 mySum: 5
thread: 0, blockNoZero[31]: 0 2 0 0 0 0 3 
thread: 0, allBlocks[32]: 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 3 mySum: 5
thread: 0, blockNoZero[32]: 2 0 0 0 0 0 3 
thread: 0, allBlocks[33]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 4 mySum: 5
thread: 0, blockNoZero[33]: 0 1 0 0 0 0 4 
thread: 0, allBlocks[34]: 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 2 mySum: 5
thread: 0, blockNoZero[34]: 2 1 0 0 0 0 2 
thread: 0, allBlocks[35]: 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 4 mySum: 6
thread: 0, blockNoZero[35]: 1 1 0 0 0 0 4 
thread: 0, allBlocks[36]: 0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 2 mySum: 6
thread: 0, blockNoZero[36]: 2 2 0 0 0 0 2 
thread: 0, allBlocks[37]: 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 3 mySum: 6
thread: 0, blockNoZero[37]: 2 1 0 0 0 0 3 
thread: 0, allBlocks[38]: 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 4 mySum: 6
thread: 0, blockNoZero[38]: 2 0 0 0 0 0 4 
thread: 0, allBlocks[39]: 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 4 mySum: 6
thread: 0, blockNoZero[39]: 0 2 0 0 0 0 4 
thread: 0, allBlocks[40]: 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 3 mySum: 6
thread: 0, blockNoZero[40]: 1 2 0 0 0 0 3 
thread: 0, allBlocks[41]: 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 4 mySum: 7
thread: 0, blockNoZero[41]: 2 1 0 0 0 0 4 
thread: 0, allBlocks[42]: 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 4 mySum: 7
thread: 0, blockNoZero[42]: 1 2 0 0 0 0 4 
thread: 0, allBlocks[43]: 0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 3 mySum: 7
thread: 0, blockNoZero[43]: 2 2 0 0 0 0 3 
thread: 0, allBlocks[44]: 0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 4 mySum: 8
thread: 0, blockNoZero[44]: 2 2 0 0 0 0 4 
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 9
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.045952
thread: 1, sOPT: 9
copy the latest feasible solution to instance takes time: 0.038013
thread: 0, sOPT: 9
BKID: 0, LB: 18, UB: 18, OPT: 9
Dynamic Programming Runtime: 0.344849
Execution time between LB and UB is: 0
By far, all LB UB calculation runtime: 0
********************************************************
Total execution on UB and LB is: 0
OUT of Bk while loop  
UB    18
LB    18
T1    18
T2    18
OPT   9
nMachines   10
BkID	0
AllProbData.size()    2
ck :   1
AllProbData[ck].Ttable    18
ck :   0
AllProbData[ck].Ttable    20
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan18
Main Scheduling is Done
File 2-15 is Done.
******************************
Reading File...
File 2-16 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 38, LB: 22start at time: 1505254768
thread: 0, MlBk is called with LB: 22, UB: 26
thread: 3, MlBk is called with LB: 34, UB: 38
 thread: 0, LongJobs.size() 18
thread: 1, MlBk is called with LB: 26, UB: 30
 thread: 3, LongJobs.size() 13
thread: 2, MlBk is called with LB: 30, UB: 34
 thread: 1, LongJobs.size() 17
 thread: 2, LongJobs.size() 14
thread: 2, NSTable size: 25
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 2, i: 1, maxN[i].weit: 5, maxN[i].idx: 1, blockDimSize[i]: 5
thread: 2, i: 2, maxN[i].weit: 5, maxN[i].idx: 2, blockDimSize[i]: 5
thread: 2, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 2, i: 4, maxN[i].weit: 4, maxN[i].idx: 4, blockDimSize[i]: 4
thread: 2, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 1, divisor[i]: 5, blockDimSize[i]: 1
thread: 2, i: 2, divisor[i]: 5, blockDimSize[i]: 1
thread: 2, i: 3, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 4, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, largestBlockVec.elm: 0 0 0 0 4 4 0 1 0 0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 2 1 1 3 2 0 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 1 5 5 1 2 0 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 4 4 0 1 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 4 4 0 1 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 1 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 2 0 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 3 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 3 0 0 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 3 1 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 3 0 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 1 0 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 2 0 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 3 1 0 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 3 2 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 4 0 0 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 4 1 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 3 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 4 0 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 3 0 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 4 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 4 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 4 2 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 4 1 0 1 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 3 3 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 3 2 0 1 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 4 0 1 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 3 0 1 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 3 3 0 1 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 3 4 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 2 4 0 1 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 4 2 0 1 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 4 3 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 3 4 0 1 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 4 3 0 1 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 4 4 0 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 4 4 0 1 0 0 0 0 0 0 0 0 , mySum: 9
thread: 3, NSTable size: 21
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 4
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 4
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 5, maxN[i].idx: 0, blockDimSize[i]: 5
thread: 3, i: 1, maxN[i].weit: 5, maxN[i].idx: 1, blockDimSize[i]: 5
thread: 3, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 3, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 3, i: 0, divisor[i]: 5, blockDimSize[i]: 1
thread: 3, i: 1, divisor[i]: 5, blockDimSize[i]: 1
thread: 3, i: 2, divisor[i]: 1, blockDimSize[i]: 3
thread: 3, i: 3, divisor[i]: 2, blockDimSize[i]: 2
thread: 3, largestBlockVec.elm: 0 0 0 0 4 4 0 1 0 0 0 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 0 1 1 3 2 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 0 5 5 1 2 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 4 4 0 1 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 4 4 0 1 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0thread:  22 1 0, maxBlockLvlSize:  90 0 
0thread: 2, maxInBlockLvlSize: 4
thread: 2, AllTableSize: 600, maxSubsetsSize: 64
 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 1 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 2 0 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 3 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 3 0 0 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 3 1 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 3 0 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 1 0 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 2 0 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 3 1 0 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 3 2 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 4 0 0 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 4 1 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 3 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 4 0 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 3 0 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 4 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 4 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 4 2 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 4 1 0 1 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 3 3 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 3 2 0 1 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 4 0 1 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 3 0 1 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 3 3 0 1 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 3 4 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 2 4 0 1 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 4 2 0 1 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 4 3 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 3 4 0 1 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 4 3 0 1 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 4 4 0 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 4 4 0 1 0 0 0 0 0 0 0 0 , mySum: 9
thread: 3, maxBlockLvlSize: 9
thread: 3, maxInBlockLvlSize: 2
thread: 3, AllTableSize: 300, maxSubsetsSize: 64
thread: 1, NSTable size: 51
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 1, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 1, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 1, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 1, i: 4, maxN[i].weit: 4, maxN[i].idx: 4, blockDimSize[i]: 4
thread: 1, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 1, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 1, i: 7, maxN[i].weit: 2, maxN[i].idx: 7, blockDimSize[i]: 2
thread: 1, i: 8, maxN[i].weit: 4, maxN[i].idx: 8, blockDimSize[i]: 4
thread: 1, i: 0, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 3, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, i: 4, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 7, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 8, divisor[i]: 1, blockDimSize[i]: 4
thread: 1, largestBlockVec.elm: 0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 0 0 0 0 2 2 2 2 2 2 2 2 4 
thread: 1, divisorComp: 0 0 0 0 0 0 0 2 1 1 2 2 1 1 1 1 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 1 0 0 1 1 0 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 0 , mySum: 3
thread: 1, maxBlockLvlSize: 3
thread: 1, maxInBlockLvlSize: 210
thread: 1, AllTableSize: 8192, maxSubsetsSize: 64
thread: 0, NSTable size: 45
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 0, i: 1, maxN[i].weit: 4, maxN[i].idx: 1, blockDimSize[i]: 4
thread: 0, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 0, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 0, i: 4, maxN[i].weit: 4, maxN[i].idx: 4, blockDimSize[i]: 4
thread: 0, i: 5, maxN[i].weit: 4, maxN[i].idx: 5, blockDimSize[i]: 4
thread: 0, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 0, i: 7, maxN[i].weit: 2, maxN[i].idx: 7, blockDimSize[i]: 2
thread: 0, i: 8, maxN[i].weit: 2, maxN[i].idx: 8, blockDimSize[i]: 2
thread: 0, i: 9, maxN[i].weit: 4, maxN[i].idx: 9, blockDimSize[i]: 4
thread: 0, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 1, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 5, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 7, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 8, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 9, divisor[i]: 1, blockDimSize[i]: 4
thread: 0, largestBlockVec.elm: 0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 0 0 0 2 2 2 2 2 2 2 2 2 4 
thread: 0, divisorComp: 0 0 0 0 0 0 1 2 1 1 2 2 1 1 1 1 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 1 0 0 1 1 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 0 , mySum: 3
thread: 0, maxBlockLvlSize: 3
thread: 0, maxInBlockLvlSize: 420
thread: 0, AllTableSize: 16384, maxSubsetsSize: 64
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 5
copy the latest feasible solution to instance takes time: 0.014646
thread: 3, sOPT: 5
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 6
copy the latest feasible solution to instance takes time: 0.023955
thread: 2, sOPT: 6
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 1 0 0 0 0 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 0 0 1 0 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 1 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 0 0 1 1 0 0 0 0 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 1 0 0 0 1 0 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 1 0 0 1 0 0 0 0 0 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 0 mySum: 3
thread: 0, blockNoZero[7]: 0 1 0 0 1 1 0 0 0 0 
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 8
copy the latest feasible solution to instance takes time: 0.462035
thread: 1, sOPT: 8
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.347896
thread: 0, sOPT: 9
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 1, MlBk function is done, and BkID for all processes are collected.
3, MlBk function is done, and BkID for all processes are collected.
Thread: 2, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 22, UB: 25
BKID: 0, LB: 22, UB: 25, OPT: 9
Dynamic Programming Runtime: 13.1442
Execution time between LB and UB is: 7
By far, all LB UB calculation runtime: 7
Iteration: 2, UB: 25, LB: 22start at time: 1505254775
thread: 0, MlBk is called with LB: 22, UB: 23
 thread: 0, LongJobs.size() 19
thread: thread: 1, MlBk is called with LB: 23, UB: 224, MlBk is called with LB: 24
, UB: 25
 thread: 2, LongJobs.size() 18
 thread: 1, LongJobs.size() 19
thread: 2, NSTable size: 45
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 2, i: 1, maxN[i].weit: 4, maxN[i].idx: 1, blockDimSize[i]: 4
thread: 2, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 2, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 2, i: 4, maxN[i].weit: 4, maxN[i].idx: 4, blockDimSize[i]: 4
thread: 2, i: 5, maxN[i].weit: 4, maxN[i].idx: 5, blockDimSize[i]: 4
thread: 2, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 2, i: 7, maxN[i].weit: 2, maxN[i].idx: 7, blockDimSize[i]: 2
thread: 2, i: 8, maxN[i].weit: 2, maxN[i].idx: 8, blockDimSize[i]: 2
thread: 2, i: 9, maxN[i].weit: 4, maxN[i].idx: 9, blockDimSize[i]: 4
thread: 2, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 1, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 4, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, i: 5, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 7, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 8, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 9, divisor[i]: 1, blockDimSize[i]: 4
thread: 2, largestBlockVec.elm: 0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 0 0 0 2 2 2 2 2 2 2 2 2 4 
thread: 2, divisorComp: 0 0 0 0 0 0 1 2 1 1 2 2 1 1 1 1 
thread: 2, largestBlockVec: 0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 1 0 0 1 1 0 0 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 0 , mySum: 3
thread: 2, maxBlockLvlSize: 3
thread: 2, maxInBlockLvlSize: 420
thread: 2, AllTableSize: 16384, maxSubsetsSize: 64
thread: 1, NSTable size: 54
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 1, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 1, i: 2, maxN[i].weit: 4, maxN[i].idx: 2, blockDimSize[i]: 4
thread: 1, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 1, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 1, i: 5, maxN[i].weit: 4, maxN[i].idx: 5, blockDimSize[i]: 4
thread: 1, i: 6, maxN[i].weit: 4, maxN[i].idx: 6, blockDimSize[i]: 4
thread: 1, i: 7, maxN[i].weit: 2, maxN[i].idx: 7, blockDimSize[i]: 2
thread: 1, i: 8, maxN[i].weit: 2, maxN[i].idx: 8, blockDimSize[i]: 2
thread: 1, i: 9, maxN[i].weit: 2, maxN[i].idx: 9, blockDimSize[i]: 2
thread: 1, i: 10, maxN[i].weit: 4, maxN[i].idx: 10, blockDimSize[i]: 4
thread: 1, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 2, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 5, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, i: 6, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, i: 7, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 8, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 9, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 10, divisor[i]: 1, blockDimSize[i]: 4
thread: 1, largestBlockVec.elm: 0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 0 0 2 2 2 2 2 2 2 2 2 2 4 
thread: 1, divisorComp: 0 0 0 0 0 1 1 2 1 1 2 2 1 1 1 1 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 1 0 0 1 1 0 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 0 , mySum: 3
thread: 0, NSTable size: 46
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 0, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 0, i: 2, maxN[i].weit: 4, maxN[i].idx: 2, blockDimSize[i]: 4
thread: 0, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 0, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 0, i: 5, maxN[i].weit: 4, maxN[i].idx: 5, blockDimSize[i]: 4
thread: 0, i: 6, maxN[i].weit: 4, maxN[i].idx: 6, blockDimSize[i]: 4
thread: 0, i: 7, maxN[i].weit: 2, maxN[i].idx: 7, blockDimSize[i]: 2
thread: 0, i: 8, maxN[i].weit: 2, maxN[i].idx: 8, blockDimSize[i]: 2
thread: 0, i: 9, maxN[i].weit: 2, maxN[i].idx: 9, blockDimSize[i]: 2
thread: 0, i: 10, maxN[i].weit: 4, maxN[i].idx: 10, blockDimSize[i]: 4
thread: 0, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 2, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 5, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 6, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 7, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 8, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 9, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 10, divisor[i]: 1, blockDimSize[i]: 4
thread: 0, largestBlockVec.elm: 0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 0 0 2 2 2 2 2 2 2 2 2 2 4 
thread: 0, divisorComp: 0 0 0 0 0 1 1 2 1 1 2 2 1 1 1 1 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 1 0 0 1 1 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 0 , mySum: 3
thread: 1, maxBlockLvlSize: 3
thread: 1, maxInBlockLvlSize: 792
thread: 1, AllTableSize: 32768, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 3
thread: 0, maxInBlockLvlSize: 792
thread: 0, AllTableSize: 32768, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 0 1 0 0 0 0 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 0 0 0 1 0 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 1 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 0 0 0 1 1 0 0 0 0 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 0 1 0 0 0 1 0 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 0 1 0 0 1 0 0 0 0 0 
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 9
copy the latest feasible solution to instance takes time: 1.14816
thread: 2, sOPT: 9
thread: 0, allBlocks[7]: 0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 0 mySum: 3
thread: 0, blockNoZero[7]: 0 0 1 0 0 1 1 0 0 0 0 
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 5e-06
thread: 0, sOPT: 11
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.788166
thread: 1, sOPT: 10
BKID: 0, LB: 23, UB: 23, OPT: 10
Dynamic Programming Runtime: 76.1354
Execution time between LB and UB is: 35
By far, all LB UB calculation runtime: 42
********************************************************
Total execution on UB and LB is: 42
OUT of Bk while loop  
UB    23
LB    23
T1    23
T2    23
OPT   10
nMachines   10
BkID	0
AllProbData.size()    2
ck :   1
AllProbData[ck].Ttable    23
ck :   0
AllProbData[ck].Ttable    24
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan23
Main Scheduling is Done
File 2-16 is Done.
******************************
Reading File...
File 2-17 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 37, LB: 19start at time: 1505254810
thread: 0, MlBk is called with LB: 19, UB: 23
thread: 3, MlBk is called with LB: 31, UB: 37
 thread: 0, LongJobs.size() 13
thread: 2, MlBk is called with LB: 27, UB: 31
 thread: 3, LongJobs.size() 10
thread: 1, MlBk is called with LB: 23, UB: 27
 thread: 2, LongJobs.size() 10
 thread: 1, LongJobs.size() 12
thread: 3, NSTable size: 22
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 4
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 3, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 3, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 3, i: 3, maxN[i].weit: 5, maxN[i].idx: 3, blockDimSize[i]: 5
thread: 3, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 3, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, i: 3, divisor[i]: 5, blockDimSize[i]: 1
thread: 3, i: 4, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, largestBlockVec.elm: 0 0 0 0 0 2 4 0 2 0 0 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 2 2 1 1 0 1 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 1 1 3 5 0 3 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 2 4 0 2 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 0 2 4 2 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 1 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 0 0 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 1 0 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 2 0 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 1 0 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 2 0 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 3 0 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 4 0 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 3 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 3 0 2 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 3 0 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 1 0 2 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 2 0 2 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 2 0 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 4 0 1 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 2 4 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 2 3 0 1 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 2 2 0 2 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 3 0 2 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 4 0 2 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 2 3 0 2 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 4 0 2 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 2 4 0 1 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 2 4 0 2 0 0 0 0 0 0 0 , mySum: 8
thread: 3, maxBlockLvlSize: 9
thread: 3, maxInBlockLvlSize: 2
thread: 3, AllTableSize: 180, maxSubsetsSize: 64
thread: 2, NSTable size: 27
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 2, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 2, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 2, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 2, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 2, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 2, i: 6, maxN[i].weit: 3, maxN[i].idx: 6, blockDimSize[i]: 3
thread: 2, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 4, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 5, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 6, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, largestBlockVec.elm: 0 0 0 0 0 0 0 0 0 0 0 0 0 2 2 2 
thread: 2, blockDimSizeComp: 0 0 0 0 0 0 0 0 2 2 0 2 2 1 1 1 
thread: 2, divisorComp: 0 0 0 0 0 0 0 0 1 1 0 1 1 3 3 3 
thread: 2, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 2 2 2 
thread: 2, largestNoZeroBlockVec: 0 0 0 0 2 2 2 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 2 1 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 1 2 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 2 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 2 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 2 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 1 2 1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 2 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 2 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 2 1 1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 2 2 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 1 2 2 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 0 2 1 2 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 0 2 2 1 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 0 2 2 2 , mySum: 6
thread: 2, maxBlockLvlSize: 7
thread: 2, maxInBlockLvlSize: 6
thread: 2, AllTableSize: 432, maxSubsetsSize: 64
thread: 1, NSTable size: 29
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 1, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 1, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 1, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 1, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 1, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 1, i: 6, maxN[i].weit: 3, maxN[i].idx: 6, blockDimSize[i]: 3
thread: 1, i: 7, maxN[i].weit: 3, maxN[i].idx: 7, blockDimSize[i]: 3
thread: 1, i: 0, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 5, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 6, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 7, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, largestBlockVec.elm: 0 0 0 0 0 0 2 0 0 0 0 0 0 2 2 0 
thread: 1, blockDimSizeComp: 0 0 0 0 0 0 1 0 2 2 0 2 2 1 1 3 
thread: 1, divisorComp: 0 0 0 0 0 0 3 0 1 1 0 1 1 3 3 1 
thread: 1, largestBlockVec: 0 0 0 0 0 0 2 0 0 0 0 0 0 2 2 0 
thread: 1, largestNoZeroBlockVec: 2 0 0 0 0 2 2 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 0 , mySum: 3
0 0 0 0 0 0 2 0 0 0 0 0 0 1 0 0 , mySum: 3
0 0 0 0 0 0 2 0 0 0 0 0 0 0 1 0 , mySum: 3
0 0 0 0 0 0 1 0 0 0 0 0 0 2 0 0 , mySum: 3
0 0 0 0 0 0 1 0 0 0 0 0 0 0 2 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 2 1 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 1 2 0 , mySum: 3
0 0 0 0 0 0 1 0 0 0 0 0 0 1 2 0 , mySum: 4
0 0 0 0 0 0 1 0 0 0 0 0 0 2 1 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 2 2 0 , mySum: 4
0 0 0 0 0 0 2 0 0 0 0 0 0 0 2 0 , mySum: 4
0 0 0 0 0 0 2 0 0 0 0 0 0 1 1 0 , mySum: 4
0 0 0 0 0 0 2 0 0 0 0 0 0 2 0 0 , mySum: 4
0 0 0 0 0 0 1 0 0 0 0 0 0 2 2 0 , mySum: 5
0 0 0 0 0 0 2 0 0 0 0 0 0 1 2 0 , mySum: 5
0 0 0 0 0 0 2 0 0 0 0 0 0 2 1 0 , mySum: 5
0 0 0 0 0 0 2 0 0 0 0 0 0 2 2 0 , mySum: 6
thread: 1, maxBlockLvlSize: 7
thread: 1, maxInBlockLvlSize: 14
thread: 1, AllTableSize: 1296, maxSubsetsSize: 64
thread: 0, NSTable size: 25
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 0, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 0, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 0, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 0, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 0, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 0, i: 6, maxN[i].weit: 3, maxN[i].idx: 6, blockDimSize[i]: 3
thread: 0, i: 7, maxN[i].weit: 3, maxN[i].idx: 7, blockDimSize[i]: 3
thread: 0, i: 8, maxN[i].weit: 3, maxN[i].idx: 8, blockDimSize[i]: 3
thread: 0, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 6, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 7, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 8, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, largestBlockVec.elm: 0 0 0 0 0 0 2 0 0 0 0 0 0 2 2 0 
thread: 0, blockDimSizeComp: 0 0 0 0 0 2 1 0 2 2 0 2 2 1 1 3 
thread: 0, divisorComp: 0 0 0 0 0 1 3 0 1 1 0 1 1 3 3 1 
thread: 0, largestBlockVec: 0 0 0 0 0 0 2 0 0 0 0 0 0 2 2 0 
thread: 0, largestNoZeroBlockVec: 0 2 0 0 0 0 2 2 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 0 , mySum: 3
0 0 0 0 0 0 2 0 0 0 0 0 0 1 0 0 , mySum: 3
0 0 0 0 0 0 2 0 0 0 0 0 0 0 1 0 , mySum: 3
0 0 0 0 0 0 1 0 0 0 0 0 0 2 0 0 , mySum: 3
0 0 0 0 0 0 1 0 0 0 0 0 0 0 2 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 2 1 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 1 2 0 , mySum: 3
0 0 0 0 0 0 1 0 0 0 0 0 0 1 2 0 , mySum: 4
0 0 0 0 0 0 1 0 0 0 0 0 0 2 1 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 2 2 0 , mySum: 4
0 0 0 0 0 0 2 0 0 0 0 0 0 0 2 0 , mySum: 4
0 0 0 0 0 0 2 0 0 0 0 0 0 1 1 0 , mySum: 4
0 0 0 0 0 0 2 0 0 0 0 0 0 2 0 0 , mySum: 4
0 0 0 0 0 0 1 0 0 0 0 0 0 2 2 0 , mySum: 5
0 0 0 0 0 0 2 0 0 0 0 0 0 1 2 0 , mySum: 5
0 0 0 0 0 0 2 0 0 0 0 0 0 2 1 0 , mySum: 5
0 0 0 0 0 0 2 0 0 0 0 0 0 2 2 0 , mySum: 6
thread: 0, maxBlockLvlSize: 7
thread: 0, maxInBlockLvlSize: 25
thread: 0, AllTableSize: 2592, maxSubsetsSize: 64
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 5
copy the latest feasible solution to instance takes time: 0.009934
thread: 3, sOPT: 5
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 6
copy the latest feasible solution to instance takes time: 0.020815
thread: 2, sOPT: 6
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 0 0 1 0 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 0 0 0 0 1 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 1 0 0 0 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 0 0 0 0 0 2 0 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 mySum: 2
thread: 0, blockNoZero[5]: 0 0 0 0 0 0 1 1 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 0 0 0 0 0 2 0 0 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 0 2 0 0 0 0 0 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 mySum: 2
thread: 0, blockNoZero[8]: 0 1 0 0 0 0 0 1 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 mySum: 2
thread: 0, blockNoZero[9]: 0 1 0 0 0 0 1 0 0 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 0 mySum: 3
thread: 0, blockNoZero[10]: 0 1 0 0 0 0 1 1 0 
thread: 0, allBlocks[11]: 0 0 0 0 0 0 2 0 0 0 0 0 0 1 0 0 mySum: 3
thread: 0, blockNoZero[11]: 0 2 0 0 0 0 1 0 0 
thread: 0, allBlocks[12]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 1 0 mySum: 3
thread: 0, blockNoZero[12]: 0 2 0 0 0 0 0 1 0 
thread: 0, allBlocks[13]: 0 0 0 0 0 0 1 0 0 0 0 0 0 2 0 0 mySum: 3
thread: 0, blockNoZero[13]: 0 1 0 0 0 0 2 0 0 
thread: 0, allBlocks[14]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 2 0 mySum: 3
thread: 0, blockNoZero[14]: 0 1 0 0 0 0 0 2 0 
thread: 0, allBlocks[15]: 0 0 0 0 0 0 0 0 0 0 0 0 0 2 1 0 mySum: 3
thread: 0, blockNoZero[15]: 0 0 0 0 0 0 2 1 0 
thread: 0, allBlocks[16]: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 2 0 mySum: 3
thread: 0, blockNoZero[16]: 0 0 0 0 0 0 1 2 0 
thread: 0, allBlocks[17]: 0 0 0 0 0 0 1 0 0 0 0 0 0 1 2 0 mySum: 4
thread: 0, blockNoZero[17]: 0 1 0 0 0 0 1 2 0 
thread: 0, allBlocks[18]: 0 0 0 0 0 0 1 0 0 0 0 0 0 2 1 0 mySum: 4
thread: 0, blockNoZero[18]: 0 1 0 0 0 0 2 1 0 
Thread: 1, gpu_BlockDP is done.
thread: 0, allBlocks[19]: 0 0 0 0 0 0 0 0 0 0 0 0 0 2 2 0 mySum: 4
thread: 0, blockNoZero[19]: 0 0 0 0 0 0 2 2 0 
thread: 0, allBlocks[20]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 2 0 mySum: 4
thread: 0, blockNoZero[20]: 0 2 0 0 0 0 0 2 0 
thread: 0, allBlocks[21]: 0 0 0 0 0 0 2 0 0 0 0 0 0 1 1 0 mySum: 4
thread: 0, blockNoZero[21]: 0 2 0 0 0 0 1 1 0 
thread: 0, allBlocks[22]: 0 0 0 0 0 0 2 0 0 0 0 0 0 2 0 0 mySum: 4
thread: 0, blockNoZero[22]: 0 2 0 0 0 0 2 0 0 
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 7
thread: 0, allBlocks[23]: 0 0 0 0 0 0 1 0 0 0 0 0 0 2 2 0 mySum: 5
thread: 0, blockNoZero[23]: 0 1 0 0 0 0 2 2 0 
thread: 0, allBlocks[24]: 0 0 0 0 0 0 2 0 0 0 0 0 0 1 2 0 mySum: 5
thread: 0, blockNoZero[24]: 0 2 0 0 0 0 1 2 0 
thread: 0, allBlocks[25]: 0 0 0 0 0 0 2 0 0 0 0 0 0 2 1 0 mySum: 5
thread: 0, blockNoZero[25]: 0 2 0 0 0 0 2 1 0 
copy the latest feasible solution to instance takes time: 0.044442
thread: 1, sOPT: 7
thread: 0, allBlocks[26]: 0 0 0 0 0 0 2 0 0 0 0 0 0 2 2 0 mySum: 6
thread: 0, blockNoZero[26]: 0 2 0 0 0 0 2 2 0 
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.043973
thread: 0, sOPT: 9
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 3, MlBk function is done, and BkID for all processes are collected.
1, MlBk function is done, and BkID for all processes are collected.
Thread: 2, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 19, UB: 22
BKID: 0, LB: 19, UB: 22, OPT: 9
Dynamic Programming Runtime: 0.594303
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 1
Iteration: 2, UB: 22, LB: 19start at time: 1505254811
thread: 0, MlBk is called with LB: 19, UB: 20
 thread: 0, LongJobs.size() 14
thread: thread: 1, MlBk is called with LB: 220, UB: , MlBk is called with LB: 2121, UB: 22

 thread: 1, LongJobs.size() 13
 thread: 2, LongJobs.size() 13
thread: 1, NSTable size: 22
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 1, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 1, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 1, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 1, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 1, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 1, i: 6, maxN[i].weit: 3, maxN[i].idx: 6, blockDimSize[i]: 3
thread: 1, i: 7, maxN[i].weit: 3, maxN[i].idx: 7, blockDimSize[i]: 3
thread: 1, i: 8, maxN[i].weit: 3, maxN[i].idx: 8, blockDimSize[i]: 3
thread: 1, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 6, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 7, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 8, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, largestBlockVec.elm: 0 0 0 0 0 0 2 0 0 0 0 0 0 2 2 0 
thread: 1, blockDimSizeComp: 0 0 0 0 0 2 1 0 2 2 0 2 2 1 1 3 
thread: 1, divisorComp: 0 0 0 0 0 1 3 0 1 1 0 1 1 3 3 1 
thread: 1, largestBlockVec: 0 0 0 0 0 0 2 0 0 0 0 0 0 2 2 0 
thread: 1, largestNoZeroBlockVec: 0 2 0 0 0 0 2 2 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 0 , mySum: 3
0 0 0 0 0 0 2 0 0 0 0 0 0 1 0 0 , mySum: 3
0 0 0 0 0 0 2 0 0 0 0 0 0 0 1 0 , mySum: 3
0 0 0 0 0 0 1 0 0 0 0 0 0 2 0 0 , mySum: 3
0 0 0 0 0 0 1 0 0 0 0 0 0 0 2 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 2 1 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 1 2 0 , mySum: 3
0 0 0 0 0 0 1 0 0 0 0 0 0 1 2 0 , mySum: 4
0 0 0 0 0 0 1 0 0 0 0 0 0 2 1 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 2 2 0 , mySum: 4
0 0 0 0 0 0 2 0 0 0 0 0 0 0 2 0 , mySum: 4
0 0 0 0 0 0 2 0 0 0 0 0 0 1 1 0 , mySum: 4
0 0 0 0 0 0 2 0 0 0 0 0 0 2 0 0 , mySum: 4
0 0 0 0 0 0 1 0 0 0 0 0 0 2 2 0 , mySum: 5
0 0 0 0 0 0 2 0 0 0 0 0 0 1 2 0 , mySum: 5
0 0 0 0 0 0 2 0 0 0 0 0 0 2 1 0 , mySum: 5
0 0 0 0 0 0 2 0 0 0 0 0 0 2 2 0 , mySum: 6
thread: 2, NSTable size: 25
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 2, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 2, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 2, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 2, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 2, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 2, i: 6, maxN[i].weit: 3, maxN[i].idx: 6, blockDimSize[i]: 3
thread: 2, i: 7, maxN[i].weit: 3, maxN[i].idx: 7, blockDimSize[i]: 3
thread: 2, i: 8, maxN[i].weit: 3, maxN[i].idx: 8, blockDimSize[i]: 3
thread: 2, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 6, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 7, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 8, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, largestBlockVec.elm: 0 0 0 0 0 0 2 0 0 0 0 0 0 2 2 0 
thread: 2, blockDimSizeComp: 0 0 0 0 0 2 1 0 2 2 0 2 2 1 1 3 
thread: 2, divisorComp: 0 0 0 0 0 1 3 0 1 1 0 1 1 3 3 1 
thread: 2, largestBlockVec: 0 0 0 0 0 0 2 0 0 0 0 0 0 2 2 0 
thread: 2, largestNoZeroBlockVec: 0 2 0 0 0 0 2 2 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 0 , mySum: 3
0 0 0 0 0 0 2 0 0 0 0 0 0 1 0 0 , mySum: 3
0 0 0 0 0 0 2 0 0 0 0 0 0 0 1 0 , mySum: 3
0 0 0 0 0 0 1 0 0 0 0 0 0 2 0 0 , mySum: 3
0 0 0 0 0 0 1 0 0 0 0 0 0 0 2 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 2 1 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 1 2 0 , mySum: 3
0 0 0 0 0 0 1 0 0 0 0 0 0 1 2 0 , mySum: 4
0 0 0 0 0 0 1 0 0 0 0 0 0 2 1 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 2 2 0 , mySum: 4
0 0 0 0 0 0 2 0 0 0 0 0 0 0 2 0 , mySum: 4
0 0 0 0 0 0 2 0 0 0 0 0 0 1 1 0 , mySum: 4
0 0 0 0 0 0 2 0 0 0 0 0 0 2 0 0 , mySum: 4
0 0 0 0 0 0 1 0 0 0 0 0 0 2 2 0 , mySum: 5
0 0 0 0 0 0 2 0 0 0 0 0 0 1 2 0 , mySum: 5
0 0 0 0 0 0 2 0 0 0 0 0 0 2 1 0 , mySum: 5
0 0 0 0 0 0 2 0 0 0 0 0 0 2 2 0 , mySum: 6
thread: 1, maxBlockLvlSize: 7
thread: 1, maxInBlockLvlSize: 25
thread: 1, AllTableSize: 2592, maxSubsetsSize: 64
thread: 2, maxBlockLvlSize: 7
thread: 2, maxInBlockLvlSize: 25
thread: 2, AllTableSize: 2592, maxSubsetsSize: 64
thread: 0, NSTable size: 29
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 0, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 0, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 0, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 0, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 0, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 0, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 0, i: 7, maxN[i].weit: 3, maxN[i].idx: 7, blockDimSize[i]: 3
thread: 0, i: 8, maxN[i].weit: 3, maxN[i].idx: 8, blockDimSize[i]: 3
thread: 0, i: 9, maxN[i].weit: 3, maxN[i].idx: 9, blockDimSize[i]: 3
thread: 0, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 7, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 8, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 9, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, largestBlockVec.elm: 0 0 0 0 0 0 2 0 0 0 0 0 0 2 2 0 
thread: 0, blockDimSizeComp: 0 0 0 0 2 2 1 0 2 2 0 2 2 1 1 3 
thread: 0, divisorComp: 0 0 0 0 1 1 3 0 1 1 0 1 1 3 3 1 
thread: 0, largestBlockVec: 0 0 0 0 0 0 2 0 0 0 0 0 0 2 2 0 
thread: 0, largestNoZeroBlockVec: 0 0 2 0 0 0 0 2 2 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 0 , mySum: 3
0 0 0 0 0 0 2 0 0 0 0 0 0 1 0 0 , mySum: 3
0 0 0 0 0 0 2 0 0 0 0 0 0 0 1 0 , mySum: 3
0 0 0 0 0 0 1 0 0 0 0 0 0 2 0 0 , mySum: 3
0 0 0 0 0 0 1 0 0 0 0 0 0 0 2 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 2 1 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 1 2 0 , mySum: 3
0 0 0 0 0 0 1 0 0 0 0 0 0 1 2 0 , mySum: 4
0 0 0 0 0 0 1 0 0 0 0 0 0 2 1 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 2 2 0 , mySum: 4
0 0 0 0 0 0 2 0 0 0 0 0 0 0 2 0 , mySum: 4
0 0 0 0 0 0 2 0 0 0 0 0 0 1 1 0 , mySum: 4
0 0 0 0 0 0 2 0 0 0 0 0 0 2 0 0 , mySum: 4
0 0 0 0 0 0 1 0 0 0 0 0 0 2 2 0 , mySum: 5
0 0 0 0 0 0 2 0 0 0 0 0 0 1 2 0 , mySum: 5
0 0 0 0 0 0 2 0 0 0 0 0 0 2 1 0 , mySum: 5
0 0 0 0 0 0 2 0 0 0 0 0 0 2 2 0 , mySum: 6
thread: 0, maxBlockLvlSize: 7
thread: 0, maxInBlockLvlSize: 50
thread: 0, AllTableSize: 5184, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 0 0 0 1 0 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 0 0 0 0 0 1 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 1 0 0 0 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 0 0 0 0 0 0 2 0 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 mySum: 2
thread: 0, blockNoZero[5]: 0 0 0 0 0 0 0 1 1 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 0 0 0 0 0 0 2 0 0 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 0 0 2 0 0 0 0 0 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 mySum: 2
thread: 0, blockNoZero[8]: 0 0 1 0 0 0 0 0 1 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 mySum: 2
thread: 0, blockNoZero[9]: 0 0 1 0 0 0 0 1 0 0 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 0 mySum: 3
thread: 0, blockNoZero[10]: 0 0 1 0 0 0 0 1 1 0 
thread: 0, allBlocks[11]: 0 0 0 0 0 0 2 0 0 0 0 0 0 1 0 0 mySum: 3
thread: 0, blockNoZero[11]: 0 0 2 0 0 0 0 1 0 0 
thread: 0, allBlocks[12]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 1 0 mySum: 3
thread: 0, blockNoZero[12]: 0 0 2 0 0 0 0 0 1 0 
thread: 0, allBlocks[13]: 0 0 0 0 0 0 1 0 0 0 0 0 0 2 0 0 mySum: 3
thread: 0, blockNoZero[13]: 0 0 1 0 0 0 0 2 0 0 
thread: 0, allBlocks[14]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 2 0 mySum: 3
thread: 0, blockNoZero[14]: 0 0 1 0 0 0 0 0 2 0 
thread: 0, allBlocks[15]: 0 0 0 0 0 0 0 0 0 0 0 0 0 2 1 0 mySum: 3
thread: 0, blockNoZero[15]: 0 0 0 0 0 0 0 2 1 0 
thread: 0, allBlocks[16]: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 2 0 mySum: 3
thread: 0, blockNoZero[16]: 0 0 0 0 0 0 0 1 2 0 
thread: 0, allBlocks[17]: 0 0 0 0 0 0 1 0 0 0 0 0 0 1 2 0 mySum: 4
thread: 0, blockNoZero[17]: 0 0 1 0 0 0 0 1 2 0 
thread: 0, allBlocks[18]: 0 0 0 0 0 0 1 0 0 0 0 0 0 2 1 0 mySum: 4
thread: 0, blockNoZero[18]: 0 0 1 0 0 0 0 2 1 0 
thread: 0, allBlocks[19]: 0 0 0 0 0 0 0 0 0 0 0 0 0 2 2 0 mySum: 4
thread: 0, blockNoZero[19]: 0 0 0 0 0 0 0 2 2 0 
thread: 0, allBlocks[20]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 2 0 mySum: 4
thread: 0, blockNoZero[20]: 0 0 2 0 0 0 0 0 2 0 
thread: 0, allBlocks[21]: 0 0 0 0 0 0 2 0 0 0 0 0 0 1 1 0 mySum: 4
thread: 0, blockNoZero[21]: 0 0 2 0 0 0 0 1 1 0 
thread: 0, allBlocks[22]: 0 0 0 0 0 0 2 0 0 0 0 0 0 2 0 0 mySum: 4
thread: 0, blockNoZero[22]: 0 0 2 0 0 0 0 2 0 0 
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 9
thread: 0, allBlocks[23]: 0 0 0 0 0 0 1 0 0 0 0 0 0 2 2 0 mySum: 5
thread: 0, blockNoZero[23]: 0 0 1 0 0 0 0 2 2 0 
Thread: 2, gpu_BlockDP is done.
thread: 0, allBlocks[24]: 0 0 0 0 0 0 2 0 0 0 0 0 0 1 2 0 mySum: 5
thread: 0, blockNoZero[24]: 0 0 2 0 0 0 0 1 2 0 
thread: 0, allBlocks[25]: 0 0 0 0 0 0 2 0 0 0 0 0 0 2 1 0 mySum: 5
thread: 0, blockNoZero[25]: 0 0 2 0 0 0 0 2 1 0 
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.144637
thread: 1, sOPT: 9
thread: 0, allBlocks[26]: 0 0 0 0 0 0 2 0 0 0 0 0 0 2 2 0 mySum: 6
thread: 0, blockNoZero[26]: 0 0 2 0 0 0 0 2 2 0 
copy the latest feasible solution to instance takes time: 0.127504
thread: 2, sOPT: 9
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.091598
thread: 0, sOPT: 10
BKID: 0, LB: 19, UB: 19, OPT: 10
Dynamic Programming Runtime: 1.4862
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 2
********************************************************
Total execution on UB and LB is: 2
OUT of Bk while loop  
UB    19
LB    19
T1    19
T2    19
OPT   10
nMachines   10
BkID	0
AllProbData.size()    2
ck :   1
AllProbData[ck].Ttable    19
ck :   0
AllProbData[ck].Ttable    21
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan19
Main Scheduling is Done
File 2-17 is Done.
******************************
Reading File...
File 2-18 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 40, LB: 21start at time: 1505254812
thread: 0, MlBk is called with LB: 21, UB: 26
thread: 3, MlBk is called with LB: 36, UB: 41 thread: 0
, LongJobs.size() 16
thread: thread: 21, MlBk is called with LB: 31, UB: 36, MlBk is called with LB: 26
, UB: 31
 thread: 3, LongJobs.size() 10
 thread: 2, LongJobs.size() 11
 thread: 1, LongJobs.size() 12
thread: 3, NSTable size: 15
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 5
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 6, maxN[i].idx: 0, blockDimSize[i]: 6
thread: 3, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 3, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 3, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 3, i: 0, divisor[i]: 2, blockDimSize[i]: 3
thread: 3, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, i: 3, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, largestBlockVec.elm: 0 0 0 0 0 1 0 2 2 0 0 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 0 0 3 2 1 1 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 0 0 2 1 3 3 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 1 0 2 2 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 1 0 2 2 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 0 1 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 0 2 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 0 2 2 0 0 0 0 0 0 0 , mySum: 5
thread: 2, NSTable size: 17
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 5
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0thread: 3, maxBlockLvlSize: 5
thread: 3, maxInBlockLvlSize: 2
thread: 3, AllTableSize: 108, maxSubsetsSize: 64
, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 2, i: 1, maxN[i].weit: 6, maxN[i].idx: 1, blockDimSize[i]: 6
thread: 2, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 2, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 2, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 2, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 1, divisor[i]: 2, blockDimSize[i]: 3
thread: 2, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 3, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 4, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, largestBlockVec.elm: 0 0 0 0 0 1 0 2 2 0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 2 0 3 2 1 1 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 1 0 2 1 3 3 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 1 0 2 2 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 1 0 2 2 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 0 1 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 0 2 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 0 2 2 0 0 0 0 0 0 0 , mySum: 5
thread: 1, NSTable size: 20
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 1, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 1, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 1, i: 3, maxN[i].weit: 5, maxN[i].idx: 3, blockDimSize[i]: 5
thread: 1, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 1, i: 5, maxN[i].weit: 5, maxN[i].idx: 5, blockDimSize[i]: 5
thread: 1, i: 0, divisor[i]: 2, blockDimSize[i]: 1
thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 3, divisor[i]: 5, blockDimSize[i]: 1
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 5, divisor[i]: 5, blockDimSize[i]: 1
thread: 1, largestBlockVec.elm: 0 0 0 0 0 0 0 1 0 0 0 0 4 0 0 4 
thread: 1, blockDimSizeComp: 0 0 0 0 0 0 0 1 2 0 0 2 1 2 0 1 
thread: 1, divisorComp: 0 0 0 0 0 0 0 2 1 0 0 1 5 1 0 5 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 1 0 0 0 0 4 0 0 4 
thread: 1, largestNoZeroBlockVec: 1 0 0 4 0 4 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 , mySum: 2
0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 , mySum: 3
0 0 0 0 0 0 0 1 0 0 0 0 2 0 0 0 , mySum: 3
0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 1 , mySum: 3
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 2 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 2 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 1 , mySum: 4
0 0 0 0 0 0 0 1 0 0 0 0 3 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 , mySum: 4
0 0 0 0 0 0 0 1 0 0 0 0 2 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 , mySum: 4
0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 2 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 2 , mySum: 4
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 3 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 3 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 3 , mySum: 5
0 0 0 0 0 0 0 1 0 0 0 0 4 0 0 0 , mySum: 5
0 0 0 0 0 0 0 1 0 0 0 0 3 0 0 1 , mySum: 5
0 0 0 0 0 0 0 1 0 0 0 0 2 0 0 2 , mySum: 5
0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 3 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 4 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 2 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 1 , mySum: 5
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 4 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 3 , mySum: 6
0 0 0 0 0 0 0 1 0 0 0 0 4 0 0 1 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 4 , mySum: 6
0 0 0 0 0 0 0 1 0 0 0 0 3 0 0 2 , mySum: 6
0 0 0 0 0 0 0 1 0 0 0 0 2 0 0 3 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 2 , mySum: 6
0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 4 , mySum: 6
0 0 0 0 0 0 0 1 0 0 0 0 2 0 0 4 , mySum: 7
0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 4 , mySum: 7
0 0 0 0 0 0 0 1 0 0 0 0 3 0 0 3 , mySum: 7
0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 3 , mySum: 7
0 0 0 0 0 0 0 1 0 0 0 0 4 0 0 2 , mySum: 7
0 0 0 0 0 0 0 1 0 0 0 0 3 0 0 4 , mySum: 8
0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 4 , mySum: 8
0 0 0 0 0 0 0 1 0 0 0 0 4 0 0 3 , mySum: 8
0 0 0 0 0 0 0 1 0 0 0 0 4 0 0 4 , mySum: 9
thread: 2, maxBlockLvlSize: 5
thread: 2, maxInBlockLvlSize: 4
thread: 2, AllTableSize: 216, maxSubsetsSize: 64
thread: 1, maxBlockLvlSize: 9
thread: 1, maxInBlockLvlSize: 3
thread: 1, AllTableSize: 400, maxSubsetsSize: 64
thread: 0, NSTable size: 39
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 0, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 0, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 0, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 0, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 0, i: 5, maxN[i].weit: 5, maxN[i].idx: 5, blockDimSize[i]: 5
thread: 0, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 0, i: 7, maxN[i].weit: 5, maxN[i].idx: 7, blockDimSize[i]: 5
thread: 0, i: 0, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 5, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 7, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, largestBlockVec.elm: 0 0 0 0 0 2 0 0 0 0 0 0 4 0 0 4 
thread: 0, blockDimSizeComp: 0 0 0 0 0 1 3 2 2 0 0 2 1 2 0 1 
thread: 0, divisorComp: 0 0 0 0 0 3 1 1 1 0 0 1 5 1 0 5 
thread: 0, largestBlockVec: 0 0 0 0 0 2 0 0 0 0 0 0 4 0 0 4 
thread: 0, largestNoZeroBlockVec: 2 0 0 0 0 4 0 4 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 , mySum: 2
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 , mySum: 3
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 2 0 0 0 0 0 0 1 0 0 0 , mySum: 3
0 0 0 0 0 1 0 0 0 0 0 0 2 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 , mySum: 3
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 2 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 1 , mySum: 3
0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 2 , mySum: 3
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 3 , mySum: 4
0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 2 , mySum: 4
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 2 , mySum: 4
0 0 0 0 0 1 0 0 0 0 0 0 3 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 , mySum: 4
0 0 0 0 0 2 0 0 0 0 0 0 1 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 1 , mySum: 4
0 0 0 0 0 2 0 0 0 0 0 0 2 0 0 0 , mySum: 4
0 0 0 0 0 1 0 0 0 0 0 0 2 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 2 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 3 , mySum: 4
0 0 0 0 0 1 0 0 0 0 0 0 3 0 0 1 , mySum: 5
0 0 0 0 0 1 0 0 0 0 0 0 2 0 0 2 , mySum: 5
0 0 0 0 0 1 0 0 0 0 0 0 4 0 0 0 , mySum: 5
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 3 , mySum: 5
0 0 0 0 0 2 0 0 0 0 0 0 1 0 0 2 , mySum: 5
0 0 0 0 0 2 0 0 0 0 0 0 2 0 0 1 , mySum: 5
0 0 0 0 0 2 0 0 0 0 0 0 3 0 0 0 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 2 , mySum: 5
0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 3 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 3 , mySum: 5
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 4 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 1 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 4 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 4 , mySum: 6
0 0 0 0 0 2 0 0 0 0 0 0 1 0 0 3 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 3 , mySum: 6
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 4 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 2 , mySum: 6
0 0 0 0 0 2 0 0 0 0 0 0 2 0 0 2 , mySum: 6
0 0 0 0 0 2 0 0 0 0 0 0 3 0 0 1 , mySum: 6
0 0 0 0 0 1 0 0 0 0 0 0 4 0 0 1 , mySum: 6
0 0 0 0 0 2 0 0 0 0 0 0 4 0 0 0 , mySum: 6
0 0 0 0 0 1 0 0 0 0 0 0 3 0 0 2 , mySum: 6
0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 4 , mySum: 6
0 0 0 0 0 1 0 0 0 0 0 0 2 0 0 3 , mySum: 6
0 0 0 0 0 2 0 0 0 0 0 0 2 0 0 3 , mySum: 7
0 0 0 0 0 2 0 0 0 0 0 0 3 0 0 2 , mySum: 7
0 0 0 0 0 2 0 0 0 0 0 0 4 0 0 1 , mySum: 7
0 0 0 0 0 1 0 0 0 0 0 0 2 0 0 4 , mySum: 7
0 0 0 0 0 2 0 0 0 0 0 0 1 0 0 4 , mySum: 7
0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 4 , mySum: 7
0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 3 , mySum: 7
0 0 0 0 0 1 0 0 0 0 0 0 4 0 0 2 , mySum: 7
0 0 0 0 0 1 0 0 0 0 0 0 3 0 0 3 , mySum: 7
0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 4 , mySum: 8
0 0 0 0 0 2 0 0 0 0 0 0 2 0 0 4 , mySum: 8
0 0 0 0 0 1 0 0 0 0 0 0 4 0 0 3 , mySum: 8
0 0 0 0 0 2 0 0 0 0 0 0 3 0 0 3 , mySum: 8
0 0 0 0 0 1 0 0 0 0 0 0 3 0 0 4 , mySum: 8
0 0 0 0 0 2 0 0 0 0 0 0 4 0 0 2 , mySum: 8
0 0 0 0 0 1 0 0 0 0 0 0 4 0 0 4 , mySum: 9
0 0 0 0 0 2 0 0 0 0 0 0 3 0 0 4 , mySum: 9
0 0 0 0 0 2 0 0 0 0 0 0 4 0 0 3 , mySum: 9
0 0 0 0 0 2 0 0 0 0 0 0 4 0 0 4 , mySum: 10
thread: 0, maxBlockLvlSize: 13
thread: 0, maxInBlockLvlSize: 14
thread: 0, AllTableSize: 3600, maxSubsetsSize: 64
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 5
copy the latest feasible solution to instance takes time: 0.00642
thread: 3, sOPT: 5
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 5
copy the latest feasible solution to instance takes time: 0.010072
thread: 2, sOPT: 5
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 7
copy the latest feasible solution to instance takes time: 0.012771
thread: 1, sOPT: 7
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 1 0 0 0 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 0 0 0 1 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 mySum: 2
thread: 0, blockNoZero[4]: 0 0 0 0 0 1 0 1 
thread: 0, allBlocks[5]: 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 2 0 0 0 0 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 1 0 0 0 0 1 0 0 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 0 0 0 0 0 2 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 mySum: 2
thread: 0, blockNoZero[8]: 0 0 0 0 0 0 0 2 
thread: 0, allBlocks[9]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[9]: 1 0 0 0 0 0 0 1 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 mySum: 3
thread: 0, blockNoZero[10]: 0 0 0 0 0 0 0 3 
thread: 0, allBlocks[11]: 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 1 mySum: 3
thread: 0, blockNoZero[11]: 2 0 0 0 0 0 0 1 
thread: 0, allBlocks[12]: 0 0 0 0 0 2 0 0 0 0 0 0 1 0 0 0 mySum: 3
thread: 0, blockNoZero[12]: 2 0 0 0 0 1 0 0 
thread: 0, allBlocks[13]: 0 0 0 0 0 1 0 0 0 0 0 0 2 0 0 0 mySum: 3
thread: 0, blockNoZero[13]: 1 0 0 0 0 2 0 0 
thread: 0, allBlocks[14]: 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 mySum: 3
thread: 0, blockNoZero[14]: 0 0 0 0 0 3 0 0 
thread: 0, allBlocks[15]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 2 mySum: 3
thread: 0, blockNoZero[15]: 1 0 0 0 0 0 0 2 
thread: 0, allBlocks[16]: 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 1 mySum: 3
thread: 0, blockNoZero[16]: 0 0 0 0 0 2 0 1 
thread: 0, allBlocks[17]: 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 1 mySum: 3
thread: 0, blockNoZero[17]: 1 0 0 0 0 1 0 1 
thread: 0, allBlocks[18]: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 2 mySum: 3
thread: 0, blockNoZero[18]: 0 0 0 0 0 1 0 2 
thread: 0, allBlocks[19]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 3 mySum: 4
thread: 0, blockNoZero[19]: 1 0 0 0 0 0 0 3 
thread: 0, allBlocks[20]: 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 2 mySum: 4
thread: 0, blockNoZero[20]: 1 0 0 0 0 1 0 2 
thread: 0, allBlocks[21]: 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 2 mySum: 4
thread: 0, blockNoZero[21]: 2 0 0 0 0 0 0 2 
thread: 0, allBlocks[22]: 0 0 0 0 0 1 0 0 0 0 0 0 3 0 0 0 mySum: 4
thread: 0, blockNoZero[22]: 1 0 0 0 0 3 0 0 
thread: 0, allBlocks[23]: 0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 mySum: 4
thread: 0, blockNoZero[23]: 0 0 0 0 0 4 0 0 
thread: 0, allBlocks[24]: 0 0 0 0 0 2 0 0 0 0 0 0 1 0 0 1 mySum: 4
thread: 0, blockNoZero[24]: 2 0 0 0 0 1 0 1 
thread: 0, allBlocks[25]: 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 1 mySum: 4
thread: 0, blockNoZero[25]: 0 0 0 0 0 3 0 1 
thread: 0, allBlocks[26]: 0 0 0 0 0 2 0 0 0 0 0 0 2 0 0 0 mySum: 4
thread: 0, blockNoZero[26]: 2 0 0 0 0 2 0 0 
thread: 0, allBlocks[27]: 0 0 0 0 0 1 0 0 0 0 0 0 2 0 0 1 mySum: 4
thread: 0, blockNoZero[27]: 1 0 0 0 0 2 0 1 
thread: 0, allBlocks[28]: 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 2 mySum: 4
thread: 0, blockNoZero[28]: 0 0 0 0 0 2 0 2 
thread: 0, allBlocks[29]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 mySum: 4
thread: 0, blockNoZero[29]: 0 0 0 0 0 0 0 4 
thread: 0, allBlocks[30]: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 3 mySum: 4
thread: 0, blockNoZero[30]: 0 0 0 0 0 1 0 3 
thread: 0, allBlocks[31]: 0 0 0 0 0 1 0 0 0 0 0 0 3 0 0 1 mySum: 5
thread: 0, blockNoZero[31]: 1 0 0 0 0 3 0 1 
thread: 0, allBlocks[32]: 0 0 0 0 0 1 0 0 0 0 0 0 2 0 0 2 mySum: 5
thread: 0, blockNoZero[32]: 1 0 0 0 0 2 0 2 
thread: 0, allBlocks[33]: 0 0 0 0 0 1 0 0 0 0 0 0 4 0 0 0 mySum: 5
thread: 0, blockNoZero[33]: 1 0 0 0 0 4 0 0 
thread: 0, allBlocks[34]: 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 3 mySum: 5
thread: 0, blockNoZero[34]: 2 0 0 0 0 0 0 3 
thread: 0, allBlocks[35]: 0 0 0 0 0 2 0 0 0 0 0 0 1 0 0 2 mySum: 5
thread: 0, blockNoZero[35]: 2 0 0 0 0 1 0 2 
thread: 0, allBlocks[36]: 0 0 0 0 0 2 0 0 0 0 0 0 2 0 0 1 mySum: 5
thread: 0, blockNoZero[36]: 2 0 0 0 0 2 0 1 
thread: 0, allBlocks[37]: 0 0 0 0 0 2 0 0 0 0 0 0 3 0 0 0 mySum: 5
thread: 0, blockNoZero[37]: 2 0 0 0 0 3 0 0 
thread: 0, allBlocks[38]: 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 2 mySum: 5
thread: 0, blockNoZero[38]: 0 0 0 0 0 3 0 2 
thread: 0, allBlocks[39]: 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 3 mySum: 5
thread: 0, blockNoZero[39]: 1 0 0 0 0 1 0 3 
thread: 0, allBlocks[40]: 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 3 mySum: 5
thread: 0, blockNoZero[40]: 0 0 0 0 0 2 0 3 
thread: 0, allBlocks[41]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 4 mySum: 5
thread: 0, blockNoZero[41]: 1 0 0 0 0 0 0 4 
thread: 0, allBlocks[42]: 0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 1 mySum: 5
thread: 0, blockNoZero[42]: 0 0 0 0 0 4 0 1 
thread: 0, allBlocks[43]: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 4 mySum: 5
thread: 0, blockNoZero[43]: 0 0 0 0 0 1 0 4 
thread: 0, allBlocks[44]: 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 4 mySum: 6
thread: 0, blockNoZero[44]: 0 0 0 0 0 2 0 4 
thread: 0, allBlocks[45]: 0 0 0 0 0 2 0 0 0 0 0 0 1 0 0 3 mySum: 6
thread: 0, blockNoZero[45]: 2 0 0 0 0 1 0 3 
thread: 0, allBlocks[46]: 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 3 mySum: 6
thread: 0, blockNoZero[46]: 0 0 0 0 0 3 0 3 
thread: 0, allBlocks[47]: 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 4 mySum: 6
thread: 0, blockNoZero[47]: 2 0 0 0 0 0 0 4 
thread: 0, allBlocks[48]: 0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 2 mySum: 6
thread: 0, blockNoZero[48]: 0 0 0 0 0 4 0 2 
thread: 0, allBlocks[49]: 0 0 0 0 0 2 0 0 0 0 0 0 2 0 0 2 mySum: 6
thread: 0, blockNoZero[49]: 2 0 0 0 0 2 0 2 
thread: 0, allBlocks[50]: 0 0 0 0 0 2 0 0 0 0 0 0 3 0 0 1 mySum: 6
thread: 0, blockNoZero[50]: 2 0 0 0 0 3 0 1 
thread: 0, allBlocks[51]: 0 0 0 0 0 1 0 0 0 0 0 0 4 0 0 1 mySum: 6
thread: 0, blockNoZero[51]: 1 0 0 0 0 4 0 1 
thread: 0, allBlocks[52]: 0 0 0 0 0 2 0 0 0 0 0 0 4 0 0 0 mySum: 6
thread: 0, blockNoZero[52]: 2 0 0 0 0 4 0 0 
thread: 0, allBlocks[53]: 0 0 0 0 0 1 0 0 0 0 0 0 3 0 0 2 mySum: 6
thread: 0, blockNoZero[53]: 1 0 0 0 0 3 0 2 
thread: 0, allBlocks[54]: 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 4 mySum: 6
thread: 0, blockNoZero[54]: 1 0 0 0 0 1 0 4 
thread: 0, allBlocks[55]: 0 0 0 0 0 1 0 0 0 0 0 0 2 0 0 3 mySum: 6
thread: 0, blockNoZero[55]: 1 0 0 0 0 2 0 3 
thread: 0, allBlocks[56]: 0 0 0 0 0 2 0 0 0 0 0 0 2 0 0 3 mySum: 7
thread: 0, blockNoZero[56]: 2 0 0 0 0 2 0 3 
thread: 0, allBlocks[57]: 0 0 0 0 0 2 0 0 0 0 0 0 3 0 0 2 mySum: 7
thread: 0, blockNoZero[57]: 2 0 0 0 0 3 0 2 
thread: 0, allBlocks[58]: 0 0 0 0 0 2 0 0 0 0 0 0 4 0 0 1 mySum: 7
thread: 0, blockNoZero[58]: 2 0 0 0 0 4 0 1 
thread: 0, allBlocks[59]: 0 0 0 0 0 1 0 0 0 0 0 0 2 0 0 4 mySum: 7
thread: 0, blockNoZero[59]: 1 0 0 0 0 2 0 4 
thread: 0, allBlocks[60]: 0 0 0 0 0 2 0 0 0 0 0 0 1 0 0 4 mySum: 7
thread: 0, blockNoZero[60]: 2 0 0 0 0 1 0 4 
thread: 0, allBlocks[61]: 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 4 mySum: 7
thread: 0, blockNoZero[61]: 0 0 0 0 0 3 0 4 
thread: 0, allBlocks[62]: 0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 3 mySum: 7
thread: 0, blockNoZero[62]: 0 0 0 0 0 4 0 3 
thread: 0, allBlocks[63]: 0 0 0 0 0 1 0 0 0 0 0 0 4 0 0 2 mySum: 7
thread: 0, blockNoZero[63]: 1 0 0 0 0 4 0 2 
thread: 0, allBlocks[64]: 0 0 0 0 0 1 0 0 0 0 0 0 3 0 0 3 mySum: 7
thread: 0, blockNoZero[64]: 1 0 0 0 0 3 0 3 
thread: 0, allBlocks[65]: 0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 4 mySum: 8
thread: 0, blockNoZero[65]: 0 0 0 0 0 4 0 4 
thread: 0, allBlocks[66]: 0 0 0 0 0 2 0 0 0 0 0 0 2 0 0 4 mySum: 8
thread: 0, blockNoZero[66]: 2 0 0 0 0 2 0 4 
thread: 0, allBlocks[67]: 0 0 0 0 0 1 0 0 0 0 0 0 4 0 0 3 mySum: 8
thread: 0, blockNoZero[67]: 1 0 0 0 0 4 0 3 
thread: 0, allBlocks[68]: 0 0 0 0 0 2 0 0 0 0 0 0 3 0 0 3 mySum: 8
thread: 0, blockNoZero[68]: 2 0 0 0 0 3 0 3 
thread: 0, allBlocks[69]: 0 0 0 0 0 1 0 0 0 0 0 0 3 0 0 4 mySum: 8
thread: 0, blockNoZero[69]: 1 0 0 0 0 3 0 4 
thread: 0, allBlocks[70]: 0 0 0 0 0 2 0 0 0 0 0 0 4 0 0 2 mySum: 8
thread: 0, blockNoZero[70]: 2 0 0 0 0 4 0 2 
thread: 0, allBlocks[71]: 0 0 0 0 0 1 0 0 0 0 0 0 4 0 0 4 mySum: 9
thread: 0, blockNoZero[71]: 1 0 0 0 0 4 0 4 
thread: 0, allBlocks[72]: 0 0 0 0 0 2 0 0 0 0 0 0 3 0 0 4 mySum: 9
thread: 0, blockNoZero[72]: 2 0 0 0 0 3 0 4 
thread: 0, allBlocks[73]: 0 0 0 0 0 2 0 0 0 0 0 0 4 0 0 3 mySum: 9
thread: 0, blockNoZero[73]: 2 0 0 0 0 4 0 3 
thread: 0, allBlocks[74]: 0 0 0 0 0 2 0 0 0 0 0 0 4 0 0 4 mySum: 10
thread: 0, blockNoZero[74]: 2 0 0 0 0 4 0 4 
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.062419
thread: 0, sOPT: 10
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: 3, MlBk function is done, and BkID for all processes are collected.Thread: 
2, MlBk function is done, and BkID for all processes are collected.
Thread: 1, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 21, UB: 24
BKID: 0, LB: 21, UB: 24, OPT: 10
Dynamic Programming Runtime: 0.527089
Execution time between LB and UB is: 0
By far, all LB UB calculation runtime: 0
Iteration: 2, UB: 24, LB: 21start at time: 1505254812
thread: 0, MlBk is called with LB: 21, UB: 22
 thread: 0, LongJobs.size() 16
thread: thread: 2, MlBk is called with LB: 231, UB: , MlBk is called with LB: 2422, UB: 
23
 thread: 2, LongJobs.size() 16
 thread: 1, LongJobs.size() 16
thread: 0, NSTable size: 30
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 0, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 0, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 0, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 0, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 0, i: 5, maxN[i].weit: 5, maxN[i].idx: 5, blockDimSize[i]: 5
thread: 0, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 0, i: 7, maxN[i].weit: 5, maxN[i].idx: 7, blockDimSize[i]: 5
thread: 0, i: 0, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 5, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 7, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, largestBlockVec.elm: 0 0 0 0 0 2 0 0 0 0 0 0 4 0 0 4 
thread: 0, blockDimSizeComp: 0 0 0 0 0 1 3 2 2 0 0 2 1 2 0 1 
thread: 0, divisorComp: 0 0 0 0 0 3 1 1 1 0 0 1 5 1 0 5 
thread: 0, largestBlockVec: 0 0 0 0 0 2 0 0 0 0 0 0 4 0 0 4 
thread: 0, largestNoZeroBlockVec: 2 0 0 0 0 4 0 4 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 , mySum: 2
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 , mySum: 3
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 2 0 0 0 0 0 0 1 0 0 0 , mySum: 3
0 0 0 0 0 1 0 0 0 0 0 0 2 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 , mySum: 3
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 2 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 1 , mySum: 3
0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 2 , mySum: 3
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 3 , mySum: 4
0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 2 , mySum: 4
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 2 , mySum: 4
0 0 0 0 0 1 0 0 0 0 0 0 3 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 , mySum: 4
0 0 0 0 0 2 0 0 0 0 0 0 1 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 1 , mySum: 4
0 0 0 0 0 2 0 0 0 0 0 0 2 0 0 0 , mySum: 4
0 0 0 0 0 1 0 0 0 0 0 0 2 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 2 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 3 , mySum: 4
0 0 0 0 0 1 0 0 0 0 0 0 3 0 0 1 , mySum: 5
0 0 0 0 0 1 0 0 0 0 0 0 2 0 0 2 , mySum: 5
0 0 0 0 0 1 0 0 0 0 0 0 4 0 0 0 , mySum: 5
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 3 , mySum: 5
0 0 0 0 0 2 0 0 0 0 0 0 1 0 0 2 , mySum: 5
0 0 0 0 0 2 0 0 0 0 0 0 2 0 0 1 , mySum: 5
0 0 0 0 0 2 0 0 0 0 0 0 3 0 0 0 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 2 , mySum: 5
0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 3 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 3 , mySum: 5
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 4 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 1 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 4 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 4 , mySum: 6
0 0 0 0 0 2 0 0 0 0 0 0 1 0 0 3 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 3 , mySum: 6
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 4 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 2 , mySum: 6
0 0 0 0 0 2 0 0 0 0 0 0 2 0 0 2 , mySum: 6
0 0 0 0 0 2 0 0 0 0 0 0 3 0 0 1 , mySum: 6
0 0 0 0 0 1 0 0 0 0 0 0 4 0 0 1 , mySum: 6
0 0 0 0 0 2 0 0 0 0 0 0 4 0 0 0 , mySum: 6
0 0 0 0 0 1 0 0 0 0 0 0 3 0 0 2 , mySum: 6
0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 4 , mySum: 6
0 0 0 0 0 1 0 0 0 0 0 0 2 0 0 3 , mySum: 6
0 0 0 0 0 2 0 0 0 0 0 0 2 0 0 3 , mySum: 7
0 0 0 0 0 2 0 0 0 0 0 0 3 0 0 2 , mySum: 7
0 0 0 0 0 2 0 0 0 0 0 0 4 0 0 1 , mySum: 7
0 0 0 0 0 1 0 0 0 0 0 0 2 0 0 4 , mySum: 7
0 0 0 0 0 2 0 0 0 0 0 0 1 0 0 4 , mySum: 7
0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 4 , mySum: 7
0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 3 , mySum: 7
0 0 0 0 0 1 0 0 0 0 0 0 4 0 0 2 , mySum: 7
0 0 0 0 0 1 0 0 0 0 0 0 3 0 0 3 , mySum: 7
0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 4 , mySum: 8
0 0 0 0 0 2 0 0 0 0 0 0 2 0 0 4 , mySum: 8
0 0 0 0 0 1 0 0 0 0 0 0 4 0 0 3 , mySum: 8
0 0 0 0 0 2 0 0 0 0 0 0 3 0 0 3 , mySum: 8
0 0 0 0 0 1 0 0 0 0 0 0 3 0 0 4 , mySum: 8
0 0 0 0 0 2 0 0 0 0 0 0 4 0 0 2 , mySum: 8
0 0 0 0 0 1 0 0 0 0 0 0 4 0 0 4 , mySum: 9
0 0 0 0 0 2 0 0 0 0 0 0 3 0 0 4 , mySum: 9
0 0 0 0 0 2 0 0 0 0 0 0 4 0 0 3 , mySum: 9
0 0 0 0 0 2 0 0 0 0 0 0 4 0 0 4 , mySum: 10
thread: 1, NSTable size: 35
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 1, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 1, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 1, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 1, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 1, i: 5, maxN[i].weit: 5, maxN[i].idx: 5, blockDimSize[i]: 5
thread: 1, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 1, i: 7, maxN[i].weit: 5, maxN[i].idx: 7, blockDimSize[i]: 5
thread: 1, i: 0, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 5, divisor[i]: 5, blockDimSize[i]: 1
thread: 1, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 7, divisor[i]: 5, blockDimSize[i]: 1
thread: 1, largestBlockVec.elm: 0 0 0 0 0 2 0 0 0 0 0 0 4 0 0 4 
thread: 1, blockDimSizeComp: 0 0 0 0 0 1 3 2 2 0 0 2 1 2 0 1 
thread: 1, divisorComp: 0 0 0 0 0 3 1 1 1 0 0 1 5 1 0 5 
thread: 1, largestBlockVec: 0 0 0 0 0 2 0 0 0 0 0 0 4 0 0 4 
thread: 1, largestNoZeroBlockVec: 2 0 0 0 0 4 0 4 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 , mySum: 2
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 , mySum: 3
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 2 0 0 0 0 0 0 1 0 0 0 , mySum: 3
0 0 0 0 0 1 0 0 0 0 0 0 2 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 , mySum: 3
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 2 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 1 , mySum: 3
0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 2 , mySum: 3
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 3 , mySum: 4
0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 2 , mySum: 4
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 2 , mySum: 4
0 0 0 0 0 1 0 0 0 0 0 0 3 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 , mySum: 4
0 0 0 0 0 2 0 0 0 0 0 0 1 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 1 , mySum: 4
0 0 0 0 0 2 0 0 0 0 0 0 2 0 0 0 , mySum: 4
0 0 0 0 0 1 0 0 0 0 0 0 2 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 2 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 3 , mySum: 4
0 0 0 0 0 1 0 0 0 0 0 0 3 0 0 1 , mySum: 5
0 0 0 0 0 1 0 0 0 0 0 0 2 0 0 2 , mySum: 5
0 0 0 0 0 1 0 0 0 0 0 0 4 0 0 0 , mySum: 5
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 3 , mySum: 5
0 0 0 0 0 2 0 0 0 0 0 0 1 0 0 2 , mySum: 5
0 0 0 0 0 2 0 0 0 0 0 0 2 0 0 1 , mySum: 5
0 0 0 0 0 2 0 0 0 0 0 0 3 0 0 0 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 2 , mySum: 5
0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 3 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 3 , mySum: 5
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 4 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 1 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 4 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 4 , mySum: 6
0 0 0 0 0 2 0 0 0 0 0 0 1 0 0 3 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 3 , mySum: 6
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 4 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 2 , mySum: 6
0 0 0 0 0 2 0 0 0 0 0 0 2 0 0 2 , mySum: 6
0 0 0 0 0 2 0 0 0 0 0 0 3 0 0 1 , mySum: 6
0 0 0 0 0 1 0 0 0 0 0 0 4 0 0 1 , mySum: 6
0 0 0 0 0 2 0 0 0 0 0 0 4 0 0 0 , mySum: 6
0 0 0 0 0 1 0 0 0 0 0 0 3 0 0 2 , mySum: 6
0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 4 , mySum: 6
0 0 0 0 0 1 0 0 0 0 0 0 2 0 0 3 , mySum: 6
0 0 0 0 0 2 0 0 0 0 0 0 2 0 0 3 , mySum: 7
0 0 0 0 0 2 0 0 0 0 0 0 3 0 0 2 , mySum: 7
0 0 0 0 0 2 0 0 0 0 0 0 4 0 0 1 , mySum: 7
0 0 0 0 0 1 0 0 0 0 0 0 2 0 0 4 , mySum: 7
0 0 0 0 0 2 0 0 0 0 0 0 1 0 0 4 , mySum: 7
0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 4 , mySum: 7
0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 3 , mySum: 7
0 0 0 0 0 1 0 0 0 0 0 0 4 0 0 2 , mySum: 7
0 0 0 0 0 1 0 0 0 0 0 0 3 0 0 3 , mySum: 7
0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 4 , mySum: 8
0 0 0 0 0 2 0 0 0 0 0 0 2 0 0 4 , mySum: 8
0 0 0 0 0 1 0 0 0 0 0 0 4 0 0 3 , mySum: 8
0 0 0 0 0 2 0 0 0 0 0 0 3 0 0 3 , mySum: 8
0 0 0 0 0 1 0 0 0 0 0 0 3 0 0 4 , mySum: 8
0 0 0 0 0 2 0 0 0 0 0 0 4 0 0 2 , mySum: 8
0 0 0 0 0 1 0 0 0 0 0 0 4 0 0 4 , mySum: 9
0 0 0 0 0 2 0 0 0 0 0 0 3 0 0 4 , mySum: 9
0 0 0 0 0 2 0 0 0 0 0 0 4 0 0 3 , mySum: 9
0 0 0 0 0 2 0 0 0 0 0 0 4 0 0 4 , mySum: 10
thread: 2, NSTable size: 39
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 2, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 2, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 2, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 2, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 2, i: 5, maxN[i].weit: 5, maxN[i].idx: 5, blockDimSize[i]: 5
thread: 2, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 2, i: 7, maxN[i].weit: 5, maxN[i].idx: 7, blockDimSize[i]: 5
thread: 2, i: 0, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 1, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 5, divisor[i]: 5, blockDimSize[i]: 1
thread: 2, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 7, divisor[i]: 5, blockDimSize[i]: 1
thread: 2, largestBlockVec.elm: 0 0 0 0 0 2 0 0 0 0 0 0 4 0 0 4 
thread: 2, blockDimSizeComp: 0 0 0 0 0 1 3 2 2 0 0 2 1 2 0 1 
thread: 2, divisorComp: 0 0 0 0 0 3 1 1 1 0 0 1 5 1 0 5 
thread: 2, largestBlockVec: 0 0 0 0 0 2 0 0 0 0 0 0 4 0 0 4 
thread: 2, largestNoZeroBlockVec: 2 0 0 0 0 4 0 4 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 , mySum: 2
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 , mySum: 3
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 2 0 0 0 0 0 0 1 0 0 0 , mySum: 3
0 0 0 0 0 1 0 0 0 0 0 0 2 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 , mySum: 3
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 2 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 1 , mySum: 3
0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 2 , mySum: 3
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 3 , mySum: 4
0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 2 , mySum: 4
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 2 , mySum: 4
0 0 0 0 0 1 0 0 0 0 0 0 3 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 , mySum: 4
0 0 0 0 0 2 0 0 0 0 0 0 1 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 1 , mySum: 4
0 0 0 0 0 2 0 0 0 0 0 0 2 0 0 0 , mySum: 4
0 0 0 0 0 1 0 0 0 0 0 0 2 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 2 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 3 , mySum: 4
0 0 0 0 0 1 0 0 0 0 0 0 3 0 0 1 , mySum: 5
0 0 0 0 0 1 0 0 0 0 0 0 2 0 0 2 , mySum: 5
0 0 0 0 0 1 0 0 0 0 0 0 4 0 0 0 , mySum: 5
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 3 , mySum: 5
0 0 0 0 0 2 0 0 0 0 0 0 1 0 0 2 , mySum: 5
0 0 0 0 0 2 0 0 0 0 0 0 2 0 0 1 , mySum: 5
0 0 0 0 0 2 0 0 0 0 0 0 3 0 0 0 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 2 , mySum: 5
0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 3 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 3 , mySum: 5
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 4 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 1 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 4 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 4 , mySum: 6
0 0 0 0 0 2 0 0 0 0 0 0 1 0 0 3 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 3 , mySum: 6
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 4 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 2 , mySum: 6
0 0 0 0 0 2 0 0 0 0 0 0 2 0 0 2 , mySum: 6
0 0 0 0 0 2 0 0 0 0 0 0 3 0 0 1 , mySum: 6
0 0 0 0 0 1 0 0 0 0 0 0 4 0 0 1 , mySum: 6
0 0 0 0 0 2 0 0 0 0 0 0 4 0 0 0 , mySum: 6
0 0 0 0 0 1 0 0 0 0 0 0 3 0 0 2 , mySum: 6
0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 4 , mySum: 6
0 0 0 0 0 1 0 0 0 0 0 0 2 0 0 3 , mySum: 6
0 0 0 0 0 2 0 0 0 0 0 0 2 0 0 3 , mySum: 7
0 0 0 0 0 2 0 0 0 0 0 0 3 0 0 2 , mySum: 7
0 0 0 0 0 2 0 0 0 0 0 0 4 0 0 1 , mySum: 7
0 0 0 0 0 1 0 0 0 0 0 0 2 0 0 4 , mySum: 7
0 0 0 0 0 2 0 0 0 0 0 0 1 0 0 4 , mySum: 7
0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 4 , mySum: 7
0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 3 , mySum: 7
0 0 0 0 0 1 0 0 0 0 0 0 4 0 0 2 , mySum: 7
0 0 0 0 0 1 0 0 0 0 0 0 3 0 0 3 , mySum: 7
0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 4 , mySum: 8
0 0 0 0 0 2 0 0 0 0 0 0 2 0 0 4 , mySum: 8
0 0 0 0 0 1 0 0 0 0 0 0 4 0 0 3 , mySum: 8
0 0 0 0 0 2 0 0 0 0 0 0 3 0 0 3 , mySum: 8
0 0 0 0 0 1 0 0 0 0 0 0 3 0 0 4 , mySum: 8
0 0 0 0 0 2 0 0 0 0 0 0 4 0 0 2 , mySum: 8
0 0 0 0 0 1 0 0 0 0 0 0 4 0 0 4 , mySum: 9
0 0 0 0 0 2 0 0 0 0 0 0 3 0 0 4 , mySum: 9
0 0 0 0 0 2 0 0 0 0 0 0 4 0 0 3 , mySum: 9
0 0 0 0 0 2 0 0 0 0 0 0 4 0 0 4 , mySum: 10
thread: 0, maxBlockLvlSize: 13
thread: 0, maxInBlockLvlSize: 14
thread: 0, AllTableSize: 3600, maxSubsetsSize: 64
thread: 1, maxBlockLvlSize: 13
thread: 1, maxInBlockLvlSize: 14
thread: 1, AllTableSize: 3600, maxSubsetsSize: 64
thread: 2, maxBlockLvlSize: 13
thread: 2, maxInBlockLvlSize: 14
thread: 2, AllTableSize: 3600, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 1 0 0 0 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 0 0 0 1 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 mySum: 2
thread: 0, blockNoZero[4]: 0 0 0 0 0 1 0 1 
thread: 0, allBlocks[5]: 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 2 0 0 0 0 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 1 0 0 0 0 1 0 0 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 0 0 0 0 0 2 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 mySum: 2
thread: 0, blockNoZero[8]: 0 0 0 0 0 0 0 2 
thread: 0, allBlocks[9]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[9]: 1 0 0 0 0 0 0 1 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 mySum: 3
thread: 0, blockNoZero[10]: 0 0 0 0 0 0 0 3 
thread: 0, allBlocks[11]: 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 1 mySum: 3
thread: 0, blockNoZero[11]: 2 0 0 0 0 0 0 1 
thread: 0, allBlocks[12]: 0 0 0 0 0 2 0 0 0 0 0 0 1 0 0 0 mySum: 3
thread: 0, blockNoZero[12]: 2 0 0 0 0 1 0 0 
thread: 0, allBlocks[13]: 0 0 0 0 0 1 0 0 0 0 0 0 2 0 0 0 mySum: 3
thread: 0, blockNoZero[13]: 1 0 0 0 0 2 0 0 
thread: 0, allBlocks[14]: 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 mySum: 3
thread: 0, blockNoZero[14]: 0 0 0 0 0 3 0 0 
thread: 0, allBlocks[15]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 2 mySum: 3
thread: 0, blockNoZero[15]: 1 0 0 0 0 0 0 2 
thread: 0, allBlocks[16]: 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 1 mySum: 3
thread: 0, blockNoZero[16]: 0 0 0 0 0 2 0 1 
thread: 0, allBlocks[17]: 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 1 mySum: 3
thread: 0, blockNoZero[17]: 1 0 0 0 0 1 0 1 
thread: 0, allBlocks[18]: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 2 mySum: 3
thread: 0, blockNoZero[18]: 0 0 0 0 0 1 0 2 
thread: 0, allBlocks[19]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 3 mySum: 4
thread: 0, blockNoZero[19]: 1 0 0 0 0 0 0 3 
thread: 0, allBlocks[20]: 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 2 mySum: 4
thread: 0, blockNoZero[20]: 1 0 0 0 0 1 0 2 
thread: 0, allBlocks[21]: 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 2 mySum: 4
thread: 0, blockNoZero[21]: 2 0 0 0 0 0 0 2 
thread: 0, allBlocks[22]: 0 0 0 0 0 1 0 0 0 0 0 0 3 0 0 0 mySum: 4
thread: 0, blockNoZero[22]: 1 0 0 0 0 3 0 0 
thread: 0, allBlocks[23]: 0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 mySum: 4
thread: 0, blockNoZero[23]: 0 0 0 0 0 4 0 0 
thread: 0, allBlocks[24]: 0 0 0 0 0 2 0 0 0 0 0 0 1 0 0 1 mySum: 4
thread: 0, blockNoZero[24]: 2 0 0 0 0 1 0 1 
thread: 0, allBlocks[25]: 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 1 mySum: 4
thread: 0, blockNoZero[25]: 0 0 0 0 0 3 0 1 
thread: 0, allBlocks[26]: 0 0 0 0 0 2 0 0 0 0 0 0 2 0 0 0 mySum: 4
thread: 0, blockNoZero[26]: 2 0 0 0 0 2 0 0 
thread: 0, allBlocks[27]: 0 0 0 0 0 1 0 0 0 0 0 0 2 0 0 1 mySum: 4
thread: 0, blockNoZero[27]: 1 0 0 0 0 2 0 1 
thread: 0, allBlocks[28]: 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 2 mySum: 4
thread: 0, blockNoZero[28]: 0 0 0 0 0 2 0 2 
thread: 0, allBlocks[29]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 mySum: 4
thread: 0, blockNoZero[29]: 0 0 0 0 0 0 0 4 
thread: 0, allBlocks[30]: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 3 mySum: 4
thread: 0, blockNoZero[30]: 0 0 0 0 0 1 0 3 
thread: 0, allBlocks[31]: 0 0 0 0 0 1 0 0 0 0 0 0 3 0 0 1 mySum: 5
thread: 0, blockNoZero[31]: 1 0 0 0 0 3 0 1 
thread: 0, allBlocks[32]: 0 0 0 0 0 1 0 0 0 0 0 0 2 0 0 2 mySum: 5
thread: 0, blockNoZero[32]: 1 0 0 0 0 2 0 2 
thread: 0, allBlocks[33]: 0 0 0 0 0 1 0 0 0 0 0 0 4 0 0 0 mySum: 5
thread: 0, blockNoZero[33]: 1 0 0 0 0 4 0 0 
thread: 0, allBlocks[34]: 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 3 mySum: 5
thread: 0, blockNoZero[34]: 2 0 0 0 0 0 0 3 
thread: 0, allBlocks[35]: 0 0 0 0 0 2 0 0 0 0 0 0 1 0 0 2 mySum: 5
thread: 0, blockNoZero[35]: 2 0 0 0 0 1 0 2 
thread: 0, allBlocks[36]: 0 0 0 0 0 2 0 0 0 0 0 0 2 0 0 1 mySum: 5
thread: 0, blockNoZero[36]: 2 0 0 0 0 2 0 1 
thread: 0, allBlocks[37]: 0 0 0 0 0 2 0 0 0 0 0 0 3 0 0 0 mySum: 5
thread: 0, blockNoZero[37]: 2 0 0 0 0 3 0 0 
thread: 0, allBlocks[38]: 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 2 mySum: 5
thread: 0, blockNoZero[38]: 0 0 0 0 0 3 0 2 
thread: 0, allBlocks[39]: 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 3 mySum: 5
thread: 0, blockNoZero[39]: 1 0 0 0 0 1 0 3 
thread: 0, allBlocks[40]: 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 3 mySum: 5
thread: 0, blockNoZero[40]: 0 0 0 0 0 2 0 3 
thread: 0, allBlocks[41]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 4 mySum: 5
thread: 0, blockNoZero[41]: 1 0 0 0 0 0 0 4 
thread: 0, allBlocks[42]: 0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 1 mySum: 5
thread: 0, blockNoZero[42]: 0 0 0 0 0 4 0 1 
thread: 0, allBlocks[43]: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 4 mySum: 5
thread: 0, blockNoZero[43]: 0 0 0 0 0 1 0 4 
thread: 0, allBlocks[44]: 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 4 mySum: 6
thread: 0, blockNoZero[44]: 0 0 0 0 0 2 0 4 
thread: 0, allBlocks[45]: 0 0 0 0 0 2 0 0 0 0 0 0 1 0 0 3 mySum: 6
thread: 0, blockNoZero[45]: 2 0 0 0 0 1 0 3 
thread: 0, allBlocks[46]: 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 3 mySum: 6
thread: 0, blockNoZero[46]: 0 0 0 0 0 3 0 3 
thread: 0, allBlocks[47]: 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 4 mySum: 6
thread: 0, blockNoZero[47]: 2 0 0 0 0 0 0 4 
thread: 0, allBlocks[48]: 0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 2 mySum: 6
thread: 0, blockNoZero[48]: 0 0 0 0 0 4 0 2 
thread: 0, allBlocks[49]: 0 0 0 0 0 2 0 0 0 0 0 0 2 0 0 2 mySum: 6
thread: 0, blockNoZero[49]: 2 0 0 0 0 2 0 2 
thread: 0, allBlocks[50]: 0 0 0 0 0 2 0 0 0 0 0 0 3 0 0 1 mySum: 6
thread: 0, blockNoZero[50]: 2 0 0 0 0 3 0 1 
thread: 0, allBlocks[51]: 0 0 0 0 0 1 0 0 0 0 0 0 4 0 0 1 mySum: 6
thread: 0, blockNoZero[51]: 1 0 0 0 0 4 0 1 
thread: 0, allBlocks[52]: 0 0 0 0 0 2 0 0 0 0 0 0 4 0 0 0 mySum: 6
thread: 0, blockNoZero[52]: 2 0 0 0 0 4 0 0 
thread: 0, allBlocks[53]: 0 0 0 0 0 1 0 0 0 0 0 0 3 0 0 2 mySum: 6
thread: 0, blockNoZero[53]: 1 0 0 0 0 3 0 2 
thread: 0, allBlocks[54]: 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 4 mySum: 6
thread: 0, blockNoZero[54]: 1 0 0 0 0 1 0 4 
thread: 0, allBlocks[55]: 0 0 0 0 0 1 0 0 0 0 0 0 2 0 0 3 mySum: 6
thread: 0, blockNoZero[55]: 1 0 0 0 0 2 0 3 
thread: 0, allBlocks[56]: 0 0 0 0 0 2 0 0 0 0 0 0 2 0 0 3 mySum: 7
thread: 0, blockNoZero[56]: 2 0 0 0 0 2 0 3 
thread: 0, allBlocks[57]: 0 0 0 0 0 2 0 0 0 0 0 0 3 0 0 2 mySum: 7
thread: 0, blockNoZero[57]: 2 0 0 0 0 3 0 2 
thread: 0, allBlocks[58]: 0 0 0 0 0 2 0 0 0 0 0 0 4 0 0 1 mySum: 7
thread: 0, blockNoZero[58]: 2 0 0 0 0 4 0 1 
thread: 0, allBlocks[59]: 0 0 0 0 0 1 0 0 0 0 0 0 2 0 0 4 mySum: 7
thread: 0, blockNoZero[59]: 1 0 0 0 0 2 0 4 
thread: 0, allBlocks[60]: 0 0 0 0 0 2 0 0 0 0 0 0 1 0 0 4 mySum: 7
thread: 0, blockNoZero[60]: 2 0 0 0 0 1 0 4 
thread: 0, allBlocks[61]: 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 4 mySum: 7
thread: 0, blockNoZero[61]: 0 0 0 0 0 3 0 4 
thread: 0, allBlocks[62]: 0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 3 mySum: 7
thread: 0, blockNoZero[62]: 0 0 0 0 0 4 0 3 
thread: 0, allBlocks[63]: 0 0 0 0 0 1 0 0 0 0 0 0 4 0 0 2 mySum: 7
thread: 0, blockNoZero[63]: 1 0 0 0 0 4 0 2 
thread: 0, allBlocks[64]: 0 0 0 0 0 1 0 0 0 0 0 0 3 0 0 3 mySum: 7
thread: 0, blockNoZero[64]: 1 0 0 0 0 3 0 3 
thread: 0, allBlocks[65]: 0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 4 mySum: 8
thread: 0, blockNoZero[65]: 0 0 0 0 0 4 0 4 
thread: 0, allBlocks[66]: 0 0 0 0 0 2 0 0 0 0 0 0 2 0 0 4 mySum: 8
thread: 0, blockNoZero[66]: 2 0 0 0 0 2 0 4 
thread: 0, allBlocks[67]: 0 0 0 0 0 1 0 0 0 0 0 0 4 0 0 3 mySum: 8
thread: 0, blockNoZero[67]: 1 0 0 0 0 4 0 3 
thread: 0, allBlocks[68]: 0 0 0 0 0 2 0 0 0 0 0 0 3 0 0 3 mySum: 8
thread: 0, blockNoZero[68]: 2 0 0 0 0 3 0 3 
thread: 0, allBlocks[69]: 0 0 0 0 0 1 0 0 0 0 0 0 3 0 0 4 mySum: 8
thread: 0, blockNoZero[69]: 1 0 0 0 0 3 0 4 
thread: 0, allBlocks[70]: 0 0 0 0 0 2 0 0 0 0 0 0 4 0 0 2 mySum: 8
thread: 0, blockNoZero[70]: 2 0 0 0 0 4 0 2 
thread: 0, allBlocks[71]: 0 0 0 0 0 1 0 0 0 0 0 0 4 0 0 4 mySum: 9
thread: 0, blockNoZero[71]: 1 0 0 0 0 4 0 4 
thread: 0, allBlocks[72]: 0 0 0 0 0 2 0 0 0 0 0 0 3 0 0 4 mySum: 9
thread: 0, blockNoZero[72]: 2 0 0 0 0 3 0 4 
thread: 0, allBlocks[73]: 0 0 0 0 0 2 0 0 0 0 0 0 4 0 0 3 mySum: 9
thread: 0, blockNoZero[73]: 2 0 0 0 0 4 0 3 
thread: 0, allBlocks[74]: 0 0 0 0 0 2 0 0 0 0 0 0 4 0 0 4 mySum: 10
thread: 0, blockNoZero[74]: 2 0 0 0 0 4 0 4 
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.350536
thread: 0, sOPT: 10
copy the latest feasible solution to instance takes time: 0.236197
thread: 1, sOPT: 10
copy the latest feasible solution to instance takes time: 0.140369
thread: 2, sOPT: 10
BKID: 0, LB: 21, UB: 21, OPT: 10
Dynamic Programming Runtime: 1.71787
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 1
********************************************************
Total execution on UB and LB is: 1
OUT of Bk while loop  
UB    21
LB    21
T1    21
T2    21
OPT   10
nMachines   10
BkID	0
AllProbData.size()    2
ck :   1
AllProbData[ck].Ttable    21
ck :   0
AllProbData[ck].Ttable    23
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan22
Main Scheduling is Done
File 2-18 is Done.
******************************
Reading File...
File 2-19 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 42, LB: 23start at time: 1505254813
thread: 0, MlBk is called with LB: 23, UB: 28
thread: 3, MlBk is called with LB: 38, UB: 43
 thread: 0, LongJobs.size() 14
thread: 1, MlBk is called with LB: 28, UB: 33
 thread: 3, LongJobs.size() 12
thread: 2, MlBk is called with LB: 33, UB: 38
 thread: 1, LongJobs.size() 13
 thread: 2, LongJobs.size() 12
thread: 1, NSTable size: 22
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: thread: 1, i: 212, NSTable size: , alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
21
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: thread: 2, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 13
, i: thread: 2, i: 1, maxN[i].weit: 143, maxN[i].idx: 1, blockDimSize[i]: 3, alltableelemets[maxindex].elm[i]: 
1thread: 2, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 
2
thread: 2, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 2, i: 4, maxN[i].weit: 5, maxN[i].idx: thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 7
thread: 1, i: 04, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: , blockDimSize[i]: 2
thread: 1, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 1, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 5
2
thread: 1, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 1, i: thread: 4, maxN[i].weit: 2, maxN[i].idx: 24, i: , blockDimSize[i]: 02, divisor[i]: 
3, blockDimSize[i]: thread: 1, i: 5, maxN[i].weit: 8, maxN[i].idx: 5, blockDimSize[i]: 8
1thread: 1, i: 
0thread: 2, i: 1, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 3, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, i: 4, divisor[i]: 5, blockDimSize[i]: 1
, divisor[i]: 2, blockDimSize[i]: 1
thread: 1, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 5, divisor[i]: 2, blockDimSize[i]: 4
thread: thread: 21, largestBlockVec.elm: , largestBlockVec.elm: 0 0 0 0 0 0 0 0 0 0 0 2 1 0 0 01  0 2 0 40  0 00  0 01  
thread: 1, blockDimSizeComp: 0 0 0 0 0 0 0 1 0 0 1 2 0 0 0 0 
2thread: 2, blockDimSizeComp: 0 0 0 0 1 3  2 02  21  40  0 
0 thread: 1, divisorComp: 0 0 0 0 0 0 0 2 0 0 0 0 0 0 3
thread: 2, divisorComp: 0 0 0 0 3 1 1  1 1 0 1 2 2
 thread: 1, largestBlockVec: 0 0 0 0 0 0 0 1 0 50  20  00 0  00 0  1 
0 thread: 1, largestNoZeroBlockVec: 1 2 0 0 0 1 
0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 2 0 0 1 4 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 2 0 0 1 4 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 , mySum: 2
thread: 02 , allBlocks: 0 0 00 0  00  0 00  0 0 0 00 0  0 00 0  00 2  00  0 00 , mySum:  0
0 0 0 0 0 0 0 0 1 0 0 0 00 0 1 , mySum: 3
0 0 0 0 0 0 0 1 0 0 1 0 0 0 0  1 0, mySum:  3
0 0 0 0 0 0 0 1 0 0 2 0 0 0 00 0  0, mySum: 3 
0 0 0 0 0 0 0 1 0 0 2 0 0 0 0, mySum:  1 1
, mySum: 0 0 0 0 0 0 0 1 0 0 04 0 0 
0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 0 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 1 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 0 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 0 0 1 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 1 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 0 0 0 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 1 3 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 0 0 1 2 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 0 0 0 3 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 0 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 1 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 0 0 0 4 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 0 0 1 4 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 0 0 1 3 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 0 0 1 4 0 0 0 0 0 0 0 , mySum: 7
thread: 0, NSTable size: 22
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 7
thread: 0, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 0, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 0, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: thread: 0, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 0, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 12
, maxBlockLvlSize: thread: 0, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 0, i: 6, maxN[i].weit: 8, maxN[i].idx: 6, blockDimSize[i]: 8
4thread: 0, i: 0
thread: 1, maxInBlockLvlSize: 8
thread: 1, AllTableSize: , divisor[i]: 384, maxSubsetsSize: 264, blockDimSize[i]: 
1
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 6, divisor[i]: 2, blockDimSize[i]: 4
thread: 0, largestBlockVec.elm: 0 0 0 0 0 0 1 0 0 0 2 0 0 0 0 1 
thread: 0, blockDimSizeComp: 0 0 0 0 0 0 1 2 0 0 1 2 2 0 2 4 
thread: 0, divisorComp: 0 0 0 0 0 0 2 1 0 0 3 1 1 0 1 2 
thread: 0, largestBlockVec: 0 0 0 0 0 0 1 0 0 0 2 0 0 0 0 1 
thread: 0, largestNoZeroBlockVec: 1 0 2 0 0 0 1 
thread: 0, allBlocks: 0 0 0thread:  2, maxBlockLvlSize: 06 0
 0thread: 2, maxInBlockLvlSize: 4
thread: 2, AllTableSize: 360, maxSubsetsSize: 64 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
1 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 1 0 0 0 2 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 0 0 0 2 0 0 0 0 1 , mySum: 4
thread: 3, NSTable size: 30
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 3, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 3, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 3, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 3, i: 4, maxN[i].weit: 5, maxN[i].idx: 4, blockDimSize[i]: 5
thread: 3, i: 0, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, i: 1, divisor[i]: 1, blockDimSize[i]: 3
thread: 3, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 3, divisor[i]: 2, blockDimSize[i]: 2
thread: 3, i: 4, divisor[i]: 5, blockDimSize[i]: 1
thread: 3, largestBlockVec.elm: 0 0 0 0 2 0 0 1 4 0 0 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 0 1 3 2 2 1 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 0 3 1 1 2 5 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 2 0 0 1 4 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 2 0 0 1 4 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 0 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 1 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 0 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 0 0 1 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 1 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 0 0 0 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 1 3 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 0 0 1 2 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 0 0 0 3 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 0 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 1 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 0 0 0 4 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 0 0 1 4 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 0 0 1 3 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 0 0 1 4 0 0 0 0 0 0 0 , mySum: 7
thread: 0, maxBlockLvlSize: 4
thread: 0, maxInBlockLvlSize: 15
thread: 0, AllTableSize: 768, maxSubsetsSize: 64
thread: 3, maxBlockLvlSize: 6
thread: 3, maxInBlockLvlSize: 4
thread: 3, AllTableSize: 360, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 1 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 1 0 0 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[4]: 0 0 1 0 0 0 1 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 0 2 0 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[6]: 1 0 0 0 0 0 1 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 1 0 1 0 0 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 1 mySum: 3
thread: 0, blockNoZero[8]: 0 0 2 0 0 0 1 
Thread: 1, gpu_BlockDP is done.
thread: 0, allBlocks[9]: 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 1 mySum: 3
thread: 0, blockNoZero[9]: 1 0 1 0 0 0 1 
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 8
copy the latest feasible solution to instance takes time: 0.012252
thread: 1, sOPT: 8
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 6
thread: 0, allBlocks[10]: 0 0 0 0 0 0 1 0 0 0 2 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 1 0 2 0 0 0 0 
copy the latest feasible solution to instance takes time: 0.01736
thread: 2, sOPT: 6
thread: 0, allBlocks[11]: 0 0 0 0 0 0 1 0 0 0 2 0 0 0 0 1 mySum: 4
thread: 0, blockNoZero[11]: 1 0 2 0 0 0 1 
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 5
copy the latest feasible solution to instance takes time: 0.017359
thread: 3, sOPT: 5
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.012893
thread: 0, sOPT: 10
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: Thread: 13, MlBk function is done, and BkID for all processes are collected.2, MlBk function is done, and BkID for all processes are collected., MlBk function is done, and BkID for all processes are collected.


sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 23, UB: 26
BKID: 0, LB: 23, UB: 26, OPT: 10
Dynamic Programming Runtime: 0.358156
Execution time between LB and UB is: 0
By far, all LB UB calculation runtime: 0
Iteration: 2, UB: 26, LB: 23start at time: 1505254813
thread: 0, MlBk is called with LB: 23, UB: 24
 thread: 0, LongJobs.size() 14
thread: thread: 1, MlBk is called with LB: 224, MlBk is called with LB: , UB: 2525, UB: 26

 thread: 1, LongJobs.size() 14
 thread: 2, LongJobs.size() 14
thread: 0, NSTable size: 19
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 7
thread: 0, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 0, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 0, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 0, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 0, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 0, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 0, i: 6, maxN[i].weit: 8, maxN[i].idx: 6, blockDimSize[i]: 8
thread: 0, i: 0, divisor[i]: 2, blockDimSize[i]: 1
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 6, divisor[i]: 2, blockDimSize[i]: 4
thread: 0, largestBlockVec.elm: 0 0 0 0 0 0 1 0 0 0 2 0 0 0 0 1 
thread: 0, blockDimSizeComp: 0 0 0 0 0 0 1 2 0 0 1 2 2 0 2 4 
thread: 0, divisorComp: 0 0 0 0 0 0 2 1 0 0 3 1 1 0 1 2 
thread: 0, largestBlockVec: 0 0 0 0 0 0 1 0 0 0 2 0 0 0 0 1 
thread: 0, largestNoZeroBlockVec: 1 0 2 0 0 0 1 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 1 0 0 0 2 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 0 0 0 2 0 0 0 0 1 , mySum: 4
thread: 0, maxBlockLvlSize: 4
thread: 0, maxInBlockLvlSize: 15
thread: 0, AllTableSize: 768, maxSubsetsSize: 64
thread: 2, NSTable size: 22
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 7
thread: 2, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 2, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 2, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 2, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 2, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 2, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 2, i: 6, maxN[i].weit: 8, maxN[i].idx: 6, blockDimSize[i]: 8
thread: 2, i: 0, divisor[i]: 2, blockDimSize[i]: 1
thread: 2, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 6, divisor[i]: 2, blockDimSize[i]: 4
thread: 2, largestBlockVec.elm: 0 0 0 0 0 0 1 0 0 0 2 0 0 0 0 1 
thread: 2, blockDimSizeComp: 0 0 0 0 0 0 1 2 0 0 1 2 2 0 2 4 
thread: 2, divisorComp: 0 0 0 0 0 0 2 1 0 0 3 1 1 0 1 2 
thread: 2, largestBlockVec: 0 0 0 0 0 0 1 0 0 0 2 0 0 0 0 1 
thread: 2, largestNoZeroBlockVec: 1 0 2 0 0 0 1 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 thread: 1, NSTable size: 221 0 
0 thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 30, alltableelemets[maxindex].elm[i]:  00 
1 , mySum: thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
3thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 7
thread: 1, i: 0, maxN[i].weit: 
20 0 0 0 0 0 1 0 0 0 , maxN[i].idx: 10, blockDimSize[i]:  02
 thread: 1, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
0thread: 1, i: 2, maxN[i].weit: 3 , maxN[i].idx: 02 0, blockDimSize[i]: 3 
1thread: 1, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
 thread: 1, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
, mySum: thread: 1, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 1, i: 6, maxN[i].weit: 8, maxN[i].idx: 6, blockDimSize[i]: 8
3thread: 1, i: 0, divisor[i]: 2, blockDimSize[i]: 
1
thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 6, divisor[i]: 2, blockDimSize[i]: 4
thread: 1, largestBlockVec.elm: 00 0  0 0 0 00  10 0  0 00  2 0 0 00  0 10  0 , mySum: 30
 0 0 0 0 0 0 1 0 0 0 2 0 0 0 0 1 , mySum: 4
0 0 2 0 0 0 0 1 
thread: 1, blockDimSizeComp: 0 0 0 0 0 0 1 2 0 0 1 2 2 0 2 4 
thread: 1, divisorComp: 0 0 0 0 0 0 2 1 0 0 3 1 1 0 1 2 
thread: 1, largestBlockVec: 0 0 0 0 0 0 1 0 0 0 2 0 0 0 0 1 
thread: 1, largestNoZeroBlockVec: 1 0 2 0 0 0 1 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 1 0 0 0 2 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 0 0 0 2 0 0 0 0 1 , mySum: 4
thread: 2, maxBlockLvlSize: 4
thread: 2, maxInBlockLvlSize: 15
thread: 2, AllTableSize: 768, maxSubsetsSize: 64
thread: 1, maxBlockLvlSize: 4
thread: 1, maxInBlockLvlSize: 15
thread: 1, AllTableSize: 768, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 1 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 1 0 0 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[4]: 0 0 1 0 0 0 1 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 0 2 0 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[6]: 1 0 0 0 0 0 1 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 1 0 1 0 0 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 1 mySum: 3
thread: 0, blockNoZero[8]: 0 0 2 0 0 0 1 
thread: 0, allBlocks[9]: 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 1 mySum: 3
thread: 0, blockNoZero[9]: 1 0 1 0 0 0 1 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 1 0 0 0 2 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 1 0 2 0 0 0 0 
thread: 0, allBlocks[11]: 0 0 0 0 0 0 1 0 0 0 2 0 0 0 0 1 mySum: 4
thread: 0, blockNoZero[11]: 1 0 2 0 0 0 1 
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.053847
thread: 1, sOPT: 10
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 4e-06
thread: 0, sOPT: 11
copy the latest feasible solution to instance takes time: 0.040609
thread: 2, sOPT: 10
BKID: 0, LB: 24, UB: 24, OPT: 10
Dynamic Programming Runtime: 0.355589
Execution time between LB and UB is: 0
By far, all LB UB calculation runtime: 0
********************************************************
Total execution on UB and LB is: 0
OUT of Bk while loop  
UB    24
LB    24
T1    24
T2    24
OPT   10
nMachines   10
BkID	0
AllProbData.size()    2
ck :   1
AllProbData[ck].Ttable    24
ck :   0
AllProbData[ck].Ttable    25
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan26
Main Scheduling is Done
File 2-19 is Done.
******************************
Reading File...
File 2-20 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 40, LB: 21start at time: 1505254813
thread: 0, MlBk is called with LB: 21, UB: 26
thread: 3, MlBk is called with LB: 36, UB: 41
 thread: 0thread: 1, MlBk is called with LB: 26, UB: 31
thread: 2, MlBk is called with LB: 31, UB: 36
 thread: 3, LongJobs.size() 11
, LongJobs.size() 14
 thread: 1, LongJobs.size() 13
 thread: 2, LongJobs.size() 12
thread: 3, NSTable size: 21
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 5
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 3, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 3, i: 2, maxN[i].weit: 6, maxN[i].idx: 2, blockDimSize[i]: 6
thread: 3, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 3, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 3, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 2, divisor[i]: 2, blockDimSize[i]: 3
thread: 3, i: 3, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, i: 4, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, largestBlockVec.elm: 0 0 0 0 0 0 1 2 2 0 0 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 0 2 2 3 1 1 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 0 1 1 2 3 3 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 0 1 2 2 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 0 1 2 2 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 1 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 2 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 2 2 0 0 0 0 0 0 0 , mySum: 5
thread: 3, maxBlockLvlSize: 5
thread: 3, maxInBlockLvlSize: 4
thread: 3, AllTableSize: 216, maxSubsetsSize: 64
thread: 2, NSTable size: 24
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 5
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 2, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 2, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 2, i: 3, maxN[i].weit: 6, maxN[i].idx: 3, blockDimSize[i]: 6
thread: 2, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 2, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 2, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 3, divisor[i]: 2, blockDimSize[i]: 3
thread: 2, i: 4, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 5, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, largestBlockVec.elm: 0 0 0 0 0 0 1 2 2 0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 2 2 2 3 1 1 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 1 1 1 2 3 3 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 1 2 2 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 0 1 2 2 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 1 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 2 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 2 2 0 0 0 0 0 0 0 , mySum: 5
thread: 1, NSTable size: 25
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 1, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 1, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 1, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 1, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 1, i: 5, maxN[i].weit: 5, maxN[i].idx: 5, blockDimSize[i]: 5
thread: 1, i: 6, maxN[i].weit: 5, maxN[i].idx: 6, blockDimSize[i]: 5
thread: 1, i: 0, divisor[i]: 2, blockDimSize[i]: 1
thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 5, divisor[i]: 5, blockDimSize[i]: 1
thread: 1, i: 6, divisor[i]: 5, blockDimSize[i]: 1
thread: 1, largestBlockVec.elm: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 4 4 
thread: 1, blockDimSizeComp: 0 0 0 0 0 0 0 1 2 2 0 0 2 2 1 1 
thread: 1, divisorComp: 0 0 0 0 0 0 0 2 1 1 0 0 1 1 5 5 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 4 4 
thread: 1, largestNoZeroBlockVec: 1 0 0 0 0 4 4 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 , mySum: 2
0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 , mySum: 2
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 , mySum: 3
0 0 0 0 0 0 0 1 0 0 0 0 0 0 2 0 , mySum: 3
0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 , mySum: 3
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 2 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 2 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 1 , mySum: 4
0 0 0 0 0 0 0 1 0 0 0 0 0 0 3 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 0 , mySum: 4
0 0 0 0 0 0 0 1 0 0 0 0 0 0 2 1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 , mySum: 4
0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 2 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 2 , mySum: 4
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 3 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 3 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 3 , mySum: 5
0 0 0 0 0 0 0 1 0 0 0 0 0 0 4 0 , mySum: 5
0 0 0 0 0 0 0 1 0 0 0 0 0 0 3 1 , mySum: 5
0 0 0 0 0 0 0 1 0 0 0 0 0 0 2 2 , mySum: 5
0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 3 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 4 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 2 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 1 , mySum: 5
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 4 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 , mySum: 6
0 0 0 0 0 0 0 1 0 0 0 0 0 0 4 1 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 4 , mySum: 6
0 0 0 0 0 0 0 1 0 0 0 0 0 0 3 2 , mySum: 6
0 0 0 0 0 0 0 1 0 0 0 0 0 0 2 3 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 2 , mySum: 6
0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 4 , mySum: 6
0 0 0 0 0 0 0 1 0 0 0 0 0 0 2 4 , mySum: 7
0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 4 , mySum: 7
0 0 0 0 0 0 0 1 0 0 0 0 0 0 3 3 , mySum: 7
0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 3 , mySum: 7
0 0 0 0 0 0 0 1 0 0 0 0 0 0 4 2 , mySum: 7
0 0 0 0 0 0 0 1 0 0 0 0 0 0 3 4 , mySum: 8
0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 4 , mySum: 8
0 0 0 0 0 0 0 1 0 0 0 0 0 0 4 3 , mySum: 8
0 0 0 0 0 0 0 1 0 0 0 0 0 0 4 4 , mySum: 9
thread: 2, maxBlockLvlSize: 5
thread: 2, maxInBlockLvlSize: 7
thread: 2, AllTableSize: 432, maxSubsetsSize: 64
thread: 0, NSTable size: 24
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 0, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 0, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 0, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 0, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 0, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 0, i: 6, maxN[i].weit: 5, maxN[i].idx: 6, blockDimSize[i]: 5
thread: 0, i: 7, maxN[i].weit: 5, maxN[i].idx: 7, blockDimSize[i]: 5
thread: 0, i: 0, divisor[i]: 2, blockDimSize[i]: 1
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 6, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, i: 7, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, largestBlockVec.elm: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 4 4 
thread: 0, blockDimSizeComp: 0 0 0 0 0 0 1 2 2 2 0 0 2 2 1 1 
thread: 0, divisorComp: 0 0 0 0 0 0 2 1 1 1 0 0 1 1 5 5 
thread: 0, largestBlockVec: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 4 4 
thread: 0, largestNoZeroBlockVec: 1 0 0 0 0 0 4 4 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 , mySum: 2
0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 , mySum: 3
0 0 0 0 0 0 1 0 0 0 0 0 0 0 2 0 , mySum: 3
0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 , mySum: 3
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 2 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 2 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 1 , mySum: 4
0 0 0 0 0 0 1 0 0 0 0 0 0 0 3 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 0 , mySum: 4
0 0 0 0 0 0 1 0 0 0 0 0 0 0 2 1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 , mySum: 4
0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 2 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 2 , mySum: 4
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 3 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 3 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 3 , mySum: 5
0 0 0 0 0 0 1 0 0 0 0 0 0 0 4 0 , mySum: 5
0 0 0 0 0 0 1 0 0 0 0 0 0 0 3 1 , mySum: 5
0 0 0 0 0 0 1 0 0 0 0 0 0 0 2 2 , mySum: 5
0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 3 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 4 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 2 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 1 , mySum: 5
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 4 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 , mySum: 6
0 0 0 0 0 0 1 0 0 0 0 0 0 0 4 1 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 4 , mySum: 6
0 0 0 0 0 0 1 0 0 0 0 0 0 0 3 2 , mySum: 6
0 0 0 0 0 0 1 0 0 0 0 0 0 0 2 3 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 2 , mySum: 6
0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 4 , mySum: 6
0 0 0 0 0 0 1 0 0 0 0 0 0 0 2 4 , mySum: 7
0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 4 , mySum: 7
0 0 0 0 0 0 1 0 0 0 0 0 0 0 3 3 , mySum: 7
0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 3 , mySum: 7
0 0 0 0 0 0 1 0 0 0 0 0 0 0 4 2 , mySum: 7
0 0 0 0 0 0 1 0 0 0 0 0 0 0 3 4 , mySum: 8
0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 4 , mySum: 8
0 0 0 0 0 0 1 0 0 0 0 0 0 0 4 3 , mySum: 8
0 0 0 0 0 0 1 0 0 0 0 0 0 0 4 4 , mySum: 9
thread: 1, maxBlockLvlSize: 9
thread: 1, maxInBlockLvlSize: 6
thread: 1, AllTableSize: 800, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 9
thread: 0, maxInBlockLvlSize: 10
thread: 0, AllTableSize: 1600, maxSubsetsSize: 64
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 5
copy the latest feasible solution to instance takes time: 0.015994
thread: 3, sOPT: 5
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 6
copy the latest feasible solution to instance takes time: 0.02077
thread: 2, sOPT: 6
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 1 0 0 0 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 0 0 0 0 1 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 mySum: 2
thread: 0, blockNoZero[4]: 0 0 0 0 0 0 1 1 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 mySum: 2
thread: 0, blockNoZero[5]: 1 0 0 0 0 0 1 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 mySum: 2
thread: 0, blockNoZero[6]: 0 0 0 0 0 0 2 0 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[7]: 1 0 0 0 0 0 0 1 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 mySum: 2
thread: 0, blockNoZero[8]: 0 0 0 0 0 0 0 2 
thread: 0, allBlocks[9]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 mySum: 3
thread: 0, blockNoZero[9]: 0 0 0 0 0 0 0 3 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 2 0 mySum: 3
thread: 0, blockNoZero[10]: 1 0 0 0 0 0 2 0 
thread: 0, allBlocks[11]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 mySum: 3
thread: 0, blockNoZero[11]: 1 0 0 0 0 0 1 1 
thread: 0, allBlocks[12]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 2 mySum: 3
thread: 0, blockNoZero[12]: 1 0 0 0 0 0 0 2 
thread: 0, allBlocks[13]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 mySum: 3
thread: 0, blockNoZero[13]: 0 0 0 0 0 0 3 0 
thread: 0, allBlocks[14]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 1 mySum: 3
thread: 0, blockNoZero[14]: 0 0 0 0 0 0 2 1 
thread: 0, allBlocks[15]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 2 mySum: 3
thread: 0, blockNoZero[15]: 0 0 0 0 0 0 1 2 
thread: 0, allBlocks[16]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 1 mySum: 4
thread: 0, blockNoZero[16]: 0 0 0 0 0 0 3 1 
thread: 0, allBlocks[17]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 3 0 mySum: 4
thread: 0, blockNoZero[17]: 1 0 0 0 0 0 3 0 
thread: 0, allBlocks[18]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 0 mySum: 4
thread: 0, blockNoZero[18]: 0 0 0 0 0 0 4 0 
thread: 0, allBlocks[19]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 2 1 mySum: 4
thread: 0, blockNoZero[19]: 1 0 0 0 0 0 2 1 
thread: 0, allBlocks[20]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 mySum: 4
thread: 0, blockNoZero[20]: 0 0 0 0 0 0 0 4 
thread: 0, allBlocks[21]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 2 mySum: 4
thread: 0, blockNoZero[21]: 1 0 0 0 0 0 1 2 
thread: 0, allBlocks[22]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 2 mySum: 4
thread: 0, blockNoZero[22]: 0 0 0 0 0 0 2 2 
thread: 0, allBlocks[23]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 3 mySum: 4
thread: 0, blockNoZero[23]: 1 0 0 0 0 0 0 3 
thread: 0, allBlocks[24]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 3 mySum: 4
thread: 0, blockNoZero[24]: 0 0 0 0 0 0 1 3 
thread: 0, allBlocks[25]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 3 mySum: 5
thread: 0, blockNoZero[25]: 0 0 0 0 0 0 2 3 
thread: 0, allBlocks[26]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 4 0 mySum: 5
thread: 0, blockNoZero[26]: 1 0 0 0 0 0 4 0 
thread: 0, allBlocks[27]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 3 1 mySum: 5
thread: 0, blockNoZero[27]: 1 0 0 0 0 0 3 1 
thread: 0, allBlocks[28]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 2 2 mySum: 5
thread: 0, blockNoZero[28]: 1 0 0 0 0 0 2 2 
thread: 0, allBlocks[29]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 3 mySum: 5
thread: 0, blockNoZero[29]: 1 0 0 0 0 0 1 3 
thread: 0, allBlocks[30]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 4 mySum: 5
thread: 0, blockNoZero[30]: 0 0 0 0 0 0 1 4 
thread: 0, allBlocks[31]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 2 mySum: 5
thread: 0, blockNoZero[31]: 0 0 0 0 0 0 3 2 
thread: 0, allBlocks[32]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 1 mySum: 5
thread: 0, blockNoZero[32]: 0 0 0 0 0 0 4 1 
thread: 0, allBlocks[33]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 4 mySum: 5
thread: 0, blockNoZero[33]: 1 0 0 0 0 0 0 4 
thread: 0, allBlocks[34]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 mySum: 6
thread: 0, blockNoZero[34]: 0 0 0 0 0 0 3 3 
thread: 0, allBlocks[35]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 4 1 mySum: 6
thread: 0, blockNoZero[35]: 1 0 0 0 0 0 4 1 
thread: 0, allBlocks[36]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 4 mySum: 6
thread: 0, blockNoZero[36]: 0 0 0 0 0 0 2 4 
Thread: 1, gpu_BlockDP is done.
thread: 0, allBlocks[37]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 3 2 mySum: 6
thread: 0, blockNoZero[37]: 1 0 0 0 0 0 3 2 
thread: 0, allBlocks[38]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 2 3 mySum: 6
thread: 0, blockNoZero[38]: 1 0 0 0 0 0 2 3 
thread: 0, allBlocks[39]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 2 mySum: 6
thread: 0, blockNoZero[39]: 0 0 0 0 0 0 4 2 
thread: 0, allBlocks[40]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 4 mySum: 6
thread: 0, blockNoZero[40]: 1 0 0 0 0 0 1 4 
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 9
thread: 0, allBlocks[41]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 2 4 mySum: 7
thread: 0, blockNoZero[41]: 1 0 0 0 0 0 2 4 
thread: 0, allBlocks[42]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 4 mySum: 7
thread: 0, blockNoZero[42]: 0 0 0 0 0 0 3 4 
thread: 0, allBlocks[43]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 3 3 mySum: 7
thread: 0, blockNoZero[43]: 1 0 0 0 0 0 3 3 
thread: 0, allBlocks[44]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 3 mySum: 7
thread: 0, blockNoZero[44]: 0 0 0 0 0 0 4 3 
thread: 0, allBlocks[45]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 4 2 mySum: 7
thread: 0, blockNoZero[45]: 1 0 0 0 0 0 4 2 
thread: 0, allBlocks[46]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 3 4 mySum: 8
thread: 0, blockNoZero[46]: 1 0 0 0 0 0 3 4 
thread: 0, allBlocks[47]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 4 mySum: 8
thread: 0, blockNoZero[47]: 0 0 0 0 0 0 4 4 
thread: 0, allBlocks[48]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 4 3 mySum: 8
thread: 0, blockNoZero[48]: 1 0 0 0 0 0 4 3 
copy the latest feasible solution to instance takes time: 0.027108
thread: 1, sOPT: 9
thread: 0, allBlocks[49]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 4 4 mySum: 9
thread: 0, blockNoZero[49]: 1 0 0 0 0 0 4 4 
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.029334
thread: 0, sOPT: 10
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 2Thread: , MlBk function is done, and BkID for all processes are collected.13
, MlBk function is done, and BkID for all processes are collected.
, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 21, UB: 24
BKID: 0, LB: 21, UB: 24, OPT: 10
Dynamic Programming Runtime: 0.404698
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 1
Iteration: 2, UB: 24, LB: 21start at time: 1505254814
thread: 0, MlBk is called with LB: 21, UB: 22
 thread: 0, LongJobs.size() 14
thread: thread: 1, MlBk is called with LB: 222, UB: 23, MlBk is called with LB: 23, UB: 24

 thread: 1, LongJobs.size() 14
 thread: 2, LongJobs.size() 14
thread: 1, NSTable size: 20
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1thread: , i: 01, alltableelemets[maxindex].elm[i]: 0, NSTable size: 
17thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0

thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: thread: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 4
1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 0thread: , maxN[i].weit: 2, maxN[i].idx: 0, i: 00, maxN[i].weit: , blockDimSize[i]: 22, maxN[i].idx: 0
thread: 1, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: , blockDimSize[i]: 2
thread: 1, i: 2, maxN[i].weit: 2, maxN[i].idx: 22
thread: 0, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
, blockDimSize[i]: 2
thread: 1, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: thread: 1, i: 4, maxN[i].weit: 02, i: , maxN[i].idx: 2, maxN[i].weit: 42, blockDimSize[i]: , maxN[i].idx: 2
thread: 1, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 1, i: 6, maxN[i].weit: 5, maxN[i].idx: 6, blockDimSize[i]: 5
thread: 1, i: 7, maxN[i].weit: 5, maxN[i].idx: 7, blockDimSize[i]: 5
2, blockDimSize[i]: thread: 21
, i: 0, divisor[i]: thread: 0, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 0, i: 4, maxN[i].weit: 22, blockDimSize[i]: 1
thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 6, divisor[i]: 5, blockDimSize[i]: 1
thread: 1, i: 7, divisor[i]: 5, blockDimSize[i]: 1
, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 0, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 0, i: 6, maxN[i].weit: 5, maxN[i].idx: 6, blockDimSize[i]: 5
thread: 0, i: 7, maxN[i].weit: 5, maxN[i].idx: 7, blockDimSize[i]: 5
thread: thread: 0, i: 10, divisor[i]: , largestBlockVec.elm: 2, blockDimSize[i]: 1
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 6, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, i: 7, divisor[i]: 5, blockDimSize[i]: 1
0 thread: 0, largestBlockVec.elm: 0 0 0 0 0 0 00 0  1 0 00  0 00  10  0 0 0 4 4 0 
0 thread: 1, blockDimSizeComp: 0 0 0 0 0 0 1 2 2 2 0 00 2  2 1 01  
thread: 1, divisorComp: 0 0 0 0 0 0 2 1 1 1 0 00 1  1 05  45  4 

thread: 0, blockDimSizeComp: 0 0 0 0 0 0 1 2 2 2 thread: 1, largestBlockVec: 0 0 0 0 0 0 1 00 0 2 2 1  10  0
 thread: 0, divisorComp: 0 0 0 0 0 0 2 1 1 1 0 00  10  0 10  45  5 
4thread: 0, largestBlockVec: 0 0 0 0 0 0 1 0 0 0 0  0 0
 0 thread: 1, largestNoZeroBlockVec: 1 0 0 0 0 0 4 4 
4 4 
thread: 0, largestNoZeroBlockVec: 1 0 0 0 0 0 4 4 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 , mySum: 1
0 thread: 0 00 0 , allBlocks: 0 00  00  0 0 00  0 00  00  0 00  00  00  10  10  , mySum: 2
0 0 0 0 0 0 1 0 0 0 0 0 0 00  10  00  , mySum: 2
, mySum: 0 0 0 0 0 0 0 0 0 0 0 0 00
0 0 0 0 0 0 0 0 0 0 0 0 0  0 2 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 0 0 0 00 0 1  , mySum: 2
00 0 0 0 0 0 0 0 0 0 0 0 0  0 01  , mySum: 21 
, mySum: 0 0 0 0 0 0 1 0 0 0 0 0 0 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 00 0 0 3 , mySum: 3
0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 , mySum: 1 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 21 1  , mySum: 2
00 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 0 0 0 0 0 0 0  1 01  1, mySum:  30 , mySum: 
2
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 00 0  0 22  0 , mySum: , mySum: 32
0 0 0 0 0 0 0 0 0 0 0 0 0 0 3
 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 00 2  01  , mySum: 30
 10 0 0 0 0 0 0 0 0 0 0 0 0  0 , mySum: 1 22 , mySum: 
0 0 0 0 0 0 0 0 0 0 0 0 0 03
0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0  0 3 1 , mySum: 4
0 0 0 0 0 0 1 0 0 0 0 0 0 00 3 0  , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 00 0  43 , mySum:  03 , mySum: 4
0 0 0 0 0 0 1 0 0 0 0 0 0 
0 20 0 0 0 0 0 1 0 0 0 0 0  1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 , mySum: 3
00 0 0 0 0 0 1 0 0 0 0 0 0  0 4 , mySum: 4
00 0 0 0 0 0 1 0 0 0 0 0 0  1 1 , mySum: 3
0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 2 , mySum: 40
0 0 0 0 0 0 0 0 0 0 0 0 0  0 2 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 00 2 2 , mySum:  43 0
0 0 0 0 0 0 1 0 0 0 0 0 0  0 0, mySum:  3 , mySum: 43
0 0 0 0 0 0 0 0 0 0 0 0 0
 0 10 0 0 0 0 0 0 0 0 0 0 0 0  0 2 31  , mySum: 3, mySum: 
40 0 0 0 0 0 0 0 0 0 0 0 0 0 1
 0 0 0 0 0 0 0 0 0 0 0 0 0 20 2  3, mySum:  3
, mySum: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5
0 0 0 0 0 0 1 0 0 0 0 0 3 1 , mySum: 4
0 0 0 0 0 0 1 0 0 0 0 0 0 0 30 0  , mySum: 04 
4 0 0 0 0 0 0 0 0 0 0 0 0 0 00 4  , mySum: 05 
, mySum: 40 0 0 0 0 0 1 0 0 0 0 0 0 0 3 
1 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 0 0 0 0 0 00 0 2  02  2 , mySum: 51
0 0 0 0 0 0 1 0 0 0 0 0 0 0  1, mySum:  3 , mySum: 45

0 0 0 0 0 0 0 0 0 0 0 0 0 00 0 0 0 0 0 0 0 0 0 0 0 0  0 1 04  4, mySum:  5
0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 0 0 0 0 0 0 0 10 0 3 2  , mySum: 2 5, mySum: 
40 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 40  1 0, mySum:  5
0 0 0 0 0 0 0 1 0 0 0 0 0 0 00 0 4 , mySum:  5
0 0 0 0 0 0 0 0 0 0 0 0 0 0 03  3 , mySum: 26 
20 0 0 0 0 0 1 0 0 0 0 0 0 0  , mySum: 4 41 , mySum: 
60 0 0 0 0 0 1 0 0 0 0 0 0 0 0 
30 0 0 0 0 0 0 0 0 0 0 0  0 , mySum: 0 2 4 4, mySum: 6

0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 00 1  3 , mySum: 34 
20 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 1 0 0 0 0 0 0 0 2  32 3  , mySum: 6thread: , mySum: 5
0 0 0 0 0 0 1 0 0 02 0 0 0 0 4 0 , mySum: 5
0 0 0 0 0 0 1 0 0 0 0 0 0 0 3 1 , mySum: , NSTable size: 5

0 0 0 0 0 0 0 0 0 0 0 0 0 00 0  4 02  , mySum: 0 60 0
 1 0 0 0 0 0 0 1 0 0 0 0 0 00 0 0 0 24 
0thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 0, maxN[i].weit: 2, maxN[i].idx:  0, blockDimSize[i]: 2
thread: 2, i: 1, maxN[i].weit: 2, maxN[i].idx: 1 4 , mySum: 6
10 0 0 0 0 0 1 0 0 0 0 0 0 0 2 4 , mySum: 7
0 0 0 0 0 0 0 0 0 0 0 0 00 0 0 2 2 , mySum: 5
0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 3 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 4 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 0 0  0 3 4 , mySum: 7
0 0 0 0 0 0 1 0 0 0 0 0 0 0 3 32  , mySum: 35
0 0 0 0 0 0 0 0 0 0 0 0 0 0  , mySum: 7
40 0 0 0 0 0 0 0 0 0 0, blockDimSize[i]:  1 , mySum: 5
0 0 0 0 0 0 1 0 0 0 0 0 0 02 0 4 , mySum: 5
 0 0 0 04  03  , mySum: 0 
7
0 0 0 0 0 0 0 0 00 0thread:  2, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 2, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 2, i: 4, maxN[i].weit: 2, maxN[i].idx: 4 0 0 3, blockDimSize[i]:  2
thread: 2, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 2, i: 6, maxN[i].weit: 5, maxN[i].idx: 6, blockDimSize[i]: 5
thread: 2, i: 7, maxN[i].weit: 5, maxN[i].idx: 7, blockDimSize[i]: 5
0thread: 2, i: 0, divisor[i]: 2, blockDimSize[i]: 1
thread: 2, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 6, divisor[i]: 5, blockDimSize[i]: 1
thread: 2, i: 7, divisor[i]: 5, blockDimSize[i]: 1
3thread: 2, largestBlockVec.elm: 0  , mySum: 0 6
00 0 0 0 0 0 1 0 0 0 0 0 0 0  0 4 1 0 , mySum: 06
  0 0 0 1 0 0 0 0 0 0 0 14  02 0 0 0 0  0, mySum:  7
00 0 0 0 0 0 1 0 0 0 0 0 0 0 3 4 , mySum: 8
 40  4 
0thread: 2, blockDimSizeComp: 0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 2 2 0 0 0 20  0 0 0 0 0 2 4 , mySum: 6
0 0 0 0 0 0 1 0 0 0 20 0 0 0 3 2 , mySum: 6
 0 0 0 0 0 0 1 0 0 0 0 0 0 0 21  13  
thread: 2, divisorComp: 0 0 0 0 0 0 2 1 1 1, mySum: 6 
00 0 0 0 0 0 0 0 0 0 0 0 0 0  4 2 , mySum: 6
 0 0 0 0 0 0 0 00 0 0 1 1 5 5 
thread: 2, largestBlockVec: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 4 4 , mySum: 8
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 40 3  , mySum: 0  0 0 4 4 
thread: 2, largestNoZeroBlockVec: 1 0 0 0 0 0 4 4 
0 0 0 1 0 0 0 0 0 0 0 1 4 , mySum: 6
0 0 0 0 0 0 1 0 0 0 0 0 08
0 0 0 0 0 0 1 0 0  00  2 04  , mySum: 07
 0 0 0 0 0 0 0 0 0 0 0 0 0 00 0 4 4 , mySum: 9
 3 4 , mySum: 7
0 0 0 0 0 0 1 0 0 0 0 0 0 0 3 3 , mySum: 7
0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 3 , mySum: 7
0 0 0 thread: 0 0 20, allBlocks:  01  0 00  00 0  0 00 0  00  0 4 02  , mySum: 0 70
 0 0 0 0 0 0 1 0 0 0 0 00  00  00  30  0 40  , mySum: , mySum: 8
00 0 0 0 0 0 0 0 0 0 0 0 0 0 
4 0 0 0 0 0 0 0 0 0 0 40 0  0, mySum:  0 0 81
 , mySum: 0 0 0 0 0 0 1 0 0 0 0 0 0 01 
40 0 0 0 0 0 1 0 0 0 0 0 0  0 0 0 , mySum: 13
0 0 0 0 0 0 0 0 0 0 0 0 0 0  1, mySum:  8
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 4 4 , mySum: , mySum: 9
1
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 , mySum: 2
0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 , mySum: 3
0 0 0 0 0 0 1 0 0 0 0 0 0 0 2 0 , mySum: 3
0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 , mySum: 3
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 2 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 1 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 2 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 1 , mySum: 4
0 0 0 0 0 0 1 0 0 0 0 0 0 0 3 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 0 , mySum: 4
0 0 0 0 0 0 1 0 0 0 0 0 0 0 2 1 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 , mySum: 4
0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 2 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 2 , mySum: 4
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 3 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 3 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 3 , mySum: 5
0 0 0 0 0 0 1 0 0 0 0 0 0 0 4 0 , mySum: 5
0 0 0 0 0 0 1 0 0 0 0 0 0 0 3 1 , mySum: 5
0 0 0 0 0 0 1 0 0 0 0 0 0 0 2 2 , mySum: 5
0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 3 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 4 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 2 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 1 , mySum: 5
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 4 , mySum: 5
0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 , mySum: 6
0 0 0 0 0 0 1 0 0 0 0 0 0 0 4 1 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 4 , mySum: 6
0 0 0 0 0 0 1 0 0 0 0 0 0 0 3 2 , mySum: 6
0 0 0 0 0 0 1 0 0 0 0 0 0 0 2 3 , mySum: 6
0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 2 , mySum: 6
0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 4 , mySum: 6
0 0 0 0 0 0 1 0 0 0 0 0 0 0 2 4 , mySum: 7
0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 4 , mySum: 7
0 0 0 0 0 0 1 0 0 0 0 0 0 0 3 3 , mySum: 7
0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 3 , mySum: 7
0 0 0 0 0 0 1 0 0 0 0 0 0 0 4 2 , mySum: 7
0 0 0 0 0 0 1 0 0 0 0 0 0 0 3 4 , mySum: 8
0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 4 , mySum: 8
0 0 0 0 0 0 1 0 0 0 0 0 0 0 4 3 , mySum: 8
0 0 0 0 0 0 1 0 0 0 0 0 0 0 4 4 , mySum: 9
thread: 1, maxBlockLvlSize: 9
thread: 1, maxInBlockLvlSize: 10
thread: 1, AllTableSize: 1600, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 9
thread: 0, maxInBlockLvlSize: 10
thread: 0, AllTableSize: 1600, maxSubsetsSize: 64
thread: 2, maxBlockLvlSize: 9
thread: 2, maxInBlockLvlSize: 10
thread: 2, AllTableSize: 1600, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 1 0 0 0 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 0 0 0 0 1 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 mySum: 2
thread: 0, blockNoZero[4]: 0 0 0 0 0 0 1 1 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 mySum: 2
thread: 0, blockNoZero[5]: 1 0 0 0 0 0 1 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 mySum: 2
thread: 0, blockNoZero[6]: 0 0 0 0 0 0 2 0 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[7]: 1 0 0 0 0 0 0 1 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 mySum: 2
thread: 0, blockNoZero[8]: 0 0 0 0 0 0 0 2 
thread: 0, allBlocks[9]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 mySum: 3
thread: 0, blockNoZero[9]: 0 0 0 0 0 0 0 3 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 2 0 mySum: 3
thread: 0, blockNoZero[10]: 1 0 0 0 0 0 2 0 
thread: 0, allBlocks[11]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 mySum: 3
thread: 0, blockNoZero[11]: 1 0 0 0 0 0 1 1 
thread: 0, allBlocks[12]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 2 mySum: 3
thread: 0, blockNoZero[12]: 1 0 0 0 0 0 0 2 
thread: 0, allBlocks[13]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 mySum: 3
thread: 0, blockNoZero[13]: 0 0 0 0 0 0 3 0 
thread: 0, allBlocks[14]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 1 mySum: 3
thread: 0, blockNoZero[14]: 0 0 0 0 0 0 2 1 
thread: 0, allBlocks[15]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 2 mySum: 3
thread: 0, blockNoZero[15]: 0 0 0 0 0 0 1 2 
thread: 0, allBlocks[16]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 1 mySum: 4
thread: 0, blockNoZero[16]: 0 0 0 0 0 0 3 1 
thread: 0, allBlocks[17]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 3 0 mySum: 4
thread: 0, blockNoZero[17]: 1 0 0 0 0 0 3 0 
thread: 0, allBlocks[18]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 0 mySum: 4
thread: 0, blockNoZero[18]: 0 0 0 0 0 0 4 0 
thread: 0, allBlocks[19]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 2 1 mySum: 4
thread: 0, blockNoZero[19]: 1 0 0 0 0 0 2 1 
thread: 0, allBlocks[20]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 mySum: 4
thread: 0, blockNoZero[20]: 0 0 0 0 0 0 0 4 
thread: 0, allBlocks[21]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 2 mySum: 4
thread: 0, blockNoZero[21]: 1 0 0 0 0 0 1 2 
thread: 0, allBlocks[22]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 2 mySum: 4
thread: 0, blockNoZero[22]: 0 0 0 0 0 0 2 2 
thread: 0, allBlocks[23]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 3 mySum: 4
thread: 0, blockNoZero[23]: 1 0 0 0 0 0 0 3 
thread: 0, allBlocks[24]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 3 mySum: 4
thread: 0, blockNoZero[24]: 0 0 0 0 0 0 1 3 
thread: 0, allBlocks[25]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 3 mySum: 5
thread: 0, blockNoZero[25]: 0 0 0 0 0 0 2 3 
thread: 0, allBlocks[26]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 4 0 mySum: 5
thread: 0, blockNoZero[26]: 1 0 0 0 0 0 4 0 
thread: 0, allBlocks[27]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 3 1 mySum: 5
thread: 0, blockNoZero[27]: 1 0 0 0 0 0 3 1 
thread: 0, allBlocks[28]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 2 2 mySum: 5
thread: 0, blockNoZero[28]: 1 0 0 0 0 0 2 2 
thread: 0, allBlocks[29]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 3 mySum: 5
thread: 0, blockNoZero[29]: 1 0 0 0 0 0 1 3 
thread: 0, allBlocks[30]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 4 mySum: 5
thread: 0, blockNoZero[30]: 0 0 0 0 0 0 1 4 
thread: 0, allBlocks[31]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 2 mySum: 5
thread: 0, blockNoZero[31]: 0 0 0 0 0 0 3 2 
thread: 0, allBlocks[32]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 1 mySum: 5
thread: 0, blockNoZero[32]: 0 0 0 0 0 0 4 1 
thread: 0, allBlocks[33]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 4 mySum: 5
thread: 0, blockNoZero[33]: 1 0 0 0 0 0 0 4 
thread: 0, allBlocks[34]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 mySum: 6
thread: 0, blockNoZero[34]: 0 0 0 0 0 0 3 3 
thread: 0, allBlocks[35]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 4 1 mySum: 6
thread: 0, blockNoZero[35]: 1 0 0 0 0 0 4 1 
thread: 0, allBlocks[36]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 4 mySum: 6
thread: 0, blockNoZero[36]: 0 0 0 0 0 0 2 4 
thread: 0, allBlocks[37]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 3 2 mySum: 6
thread: 0, blockNoZero[37]: 1 0 0 0 0 0 3 2 
thread: 0, allBlocks[38]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 2 3 mySum: 6
thread: 0, blockNoZero[38]: 1 0 0 0 0 0 2 3 
thread: 0, allBlocks[39]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 2 mySum: 6
thread: 0, blockNoZero[39]: 0 0 0 0 0 0 4 2 
thread: 0, allBlocks[40]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 4 mySum: 6
thread: 0, blockNoZero[40]: 1 0 0 0 0 0 1 4 
thread: 0, allBlocks[41]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 2 4 mySum: 7
thread: 0, blockNoZero[41]: 1 0 0 0 0 0 2 4 
thread: 0, allBlocks[42]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 4 mySum: 7
thread: 0, blockNoZero[42]: 0 0 0 0 0 0 3 4 
thread: 0, allBlocks[43]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 3 3 mySum: 7
thread: 0, blockNoZero[43]: 1 0 0 0 0 0 3 3 
thread: 0, allBlocks[44]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 3 mySum: 7
thread: 0, blockNoZero[44]: 0 0 0 0 0 0 4 3 
thread: 0, allBlocks[45]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 4 2 mySum: 7
thread: 0, blockNoZero[45]: 1 0 0 0 0 0 4 2 
thread: 0, allBlocks[46]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 3 4 mySum: 8
thread: 0, blockNoZero[46]: 1 0 0 0 0 0 3 4 
thread: 0, allBlocks[47]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 4 mySum: 8
thread: 0, blockNoZero[47]: 0 0 0 0 0 0 4 4 
thread: 0, allBlocks[48]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 4 3 mySum: 8
thread: 0, blockNoZero[48]: 1 0 0 0 0 0 4 3 
thread: 0, allBlocks[49]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 4 4 mySum: 9
thread: 0, blockNoZero[49]: 1 0 0 0 0 0 4 4 
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.149887
thread: 2, sOPT: 10
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 6e-06
thread: 0, sOPT: 11
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 11
copy the latest feasible solution to instance takes time: 2e-06
thread: 1, sOPT: 11
BKID: 0, LB: 23, UB: 23, OPT: 10
Dynamic Programming Runtime: 0.667701
Execution time between LB and UB is: 0
By far, all LB UB calculation runtime: 1
********************************************************
Total execution on UB and LB is: 1
OUT of Bk while loop  
UB    23
LB    23
T1    23
T2    23
OPT   10
nMachines   10
BkID	0
AllProbData.size()    2
ck :   1
AllProbData[ck].Ttable    23
ck :   0
AllProbData[ck].Ttable    23
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan23
Main Scheduling is Done
File 2-20 is Done.
******************************
Reading File...
File 3-1 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 203, LB: 111start at time: 1505254814
thread: 0, MlBk is called with LB: 111, UB: 134
thread: thread: 3, MlBk is called with LB: 180, UB: 2032, MlBk is called with LB: 
157, UB: 180
 thread: 3, LongJobs.size() 12
thread: 1, MlBk is called with LB: 134, UB: 157 thread: 
0, LongJobs.size() 14
 thread: 2, LongJobs.size() 13
 thread: 1, LongJobs.size() 13
thread: 3, NSTable size: 14
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 6
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 3, i: 1, maxN[i].weit: 7, maxN[i].idx: 1, blockDimSize[i]: 7
thread: 3, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 3, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 3, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 1, divisor[i]: 7, blockDimSize[i]: 1
thread: 3, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, i: 3, divisor[i]: 2, blockDimSize[i]: 2
thread: 3, largestBlockVec.elm: 0 0 0 0 0 6 2 1 0 0 0 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 0 2 1 1 2 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 0 1 7 3 2 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 6 2 1 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 6 2 1 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 3 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 3 0 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 1 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 2 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 5 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 3 1 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 4 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 4 0 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 3 2 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 2 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 4 1 1 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 4 2 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 5 0 1 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 5 1 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 3 2 1 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 6 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 5 1 1 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 6 1 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 6 0 1 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 5 2 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 4 2 1 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 5 2 1 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 6 1 1 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 6 2 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 6 2 1 0 0 0 0 0 0 0 0 , mySum: 9
thread: 3, maxBlockLvlSize: 6
thread: 3, maxInBlockLvlSize: 2
thread: 3, AllTableSize: 168, maxSubsetsSize: 64
thread: 1, NSTable size: 13
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0thread: 
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 1
2, NSTable size: thread: 181
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
, i: thread: 52, alltableelemets[maxindex].elm[i]: , i: 0
3thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 5
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: , alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 23
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: , maxN[i].idx: 2
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 0, blockDimSize[i]: 2
thread: 2, i: 1, maxN[i].weit: 4, maxN[i].idx: 1, blockDimSize[i]: 4
2, maxN[i].idx: thread: 02, blockDimSize[i]: , i: 22, maxN[i].weit: 
5, maxN[i].idx: 2thread: , blockDimSize[i]: 1, i: 1, maxN[i].weit: 56, maxN[i].idx: 
1thread: 2, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
, blockDimSize[i]: 6
thread: thread: 1, i: 2, maxN[i].weit: 24, i: , maxN[i].idx: 24, blockDimSize[i]: , maxN[i].weit: 34, maxN[i].idx: 4
, blockDimSize[i]: thread: 1, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 1, i: 4, maxN[i].weit: 33, maxN[i].idx: 4, blockDimSize[i]: 
3
thread: 1, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 1, divisor[i]: 2, blockDimSize[i]: 3
thread: 1, i: 2, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, i: 3, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: thread: 1, largestBlockVec.elm: 2, i: 00, divisor[i]:  1, blockDimSize[i]: 2
thread: 2, i: 1, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, i: 2, divisor[i]: 5, blockDimSize[i]: 1
thread: 2, i: 3, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, i: 4, divisor[i]: 1, blockDimSize[i]: 3
0thread: 2, largestBlockVec.elm:  0 0 00  00  00  1 10  1 4 1 2 0 00  00  00  0 00  0 
0 thread: 1, blockDimSizeComp: 0 0 0 0 2 0 3 20 0 0 
 thread: 2, blockDimSizeComp: 0 0 0 2 0 2 1 2 13 0  30  0 00  00 0  00  0 00  

thread: 2, divisorComp: 0 0 0 1 0 2 5 2 1 0thread: 1, divisorComp: 0 0 0 0 1  0 2 2 03 0  10  0 0 00  00  
0thread: 2, largestBlockVec: 0 0 0 0 0 1 4 1 0 0  0 0 00  0 0 0
thread: 1, largestBlockVec: 0 0 0 0 0 0 1 1 2  0 00  0
 thread: 2, largestNoZeroBlockVec: 0 1 4 1 0 
0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 1 1 2 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 thread: 1 20, allBlocks: 0  0 00 0  0 00  00 0  00 , mySum:  10 0
 00 0 0 0 0 0 0 1 0 0 0  0 00  00  0 00  00  0, mySum:  1, mySum: 0

0 0 0 0 0 0 1 0 0 0 00 0 0 0 0 0 0 1 0 0 0  0 0 00  00  0 00 , mySum:  1
0 0 0 0 0 1 0 0 0 0 0 0 0 00 0 0  , mySum: 1, mySum: 
0 0 0 0 0 0 1 0 0 0 0 0 0 01 0 0
 , mySum: 0 0 0 0 0 0 0 0 2 0 1
0 0 0 0 0 0 2 0 00  0 00  00  0 00  0 , mySum: 0 02 
0 , mySum: 0 0 0 0 0 0 0 1 1 0 0 20 0 0 
0 0 0 0 0 0 1 1 0 0 0 0 0 0 00 0 0  , mySum: , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 02 0 0 0
 , mySum: 20 0 0 0 0 0 1 0 1 0 
0 0 0 0 0 0 0 1 1 0 0 0 00 0 0  00  00  0 0 , mySum: , mySum: 22
0 0 0 0 0 0 1 1 0 0 0
 0 0 0 0 0 0 3 0 0 0 0 00 0 0 0  00  , mySum: 02
 0 0 0 0 0 0 0 1 2 00 0  00  , mySum: 03 0 
00 0 0 0 0 0 2 1 0 0 0 0 0 0 0  0 , mySum: 03 
, mySum: 30 0 0 0 0 1 1 1 0 0 0 0 0
 0 0 0 0 0 0 0 1 0 2 0 00  00  , mySum: 0 30
0 0 0 0 0 1 2 0 0 0 0 0 0  0 0 , mySum: 3
00 0 0 0 0 0 1 1 1 0 0  0 00  00 , mySum:  3
0 0 0 0 0 0 3 1 0 0 0 0 0 00 0  00  , mySum: 4, mySum: 
3
0 0 0 0 0 0 4 0 0 0 0 0 0 00 0 0 0 0 0 1 1  20  00  , mySum: 4
00 0 0 0 0 1 2 1 0 0 0 0 0  0 0 0 0 0 , mySum: 04 0
 0 , mySum: 4
0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 4 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 3 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 0 , mySum: 6
thread: 2, maxBlockLvlSize: 4
thread: 2, maxInBlockLvlSize: 7
thread: 2, AllTableSize: 480, maxSubsetsSize: 64
thread: 0, NSTable size: 16
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 0, i: 1, maxN[i].weit: 2, maxN[i].idx: thread: 11, maxBlockLvlSize: 4, blockDimSize[i]: 2

thread: 0, i: 2, maxN[i].weit: 4, maxN[i].idx: 2, blockDimSize[i]: 4
thread: 0, i: 3, maxN[i].weit: 5, maxN[i].idx: 3, blockDimSize[i]: 5
thread: 0, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: thread: 1, maxInBlockLvlSize: 10
thread: 1, AllTableSize: 432, maxSubsetsSize: 64
2
thread: 0, i: 5, maxN[i].weit: 4, maxN[i].idx: 5, blockDimSize[i]: 4
thread: 0, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 0, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 2, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 3, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 5, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, largestBlockVec.elm: 0 0 0 0 0 0 0 0 1 4 0 1 0 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 2 0 2 0 0 2 1 2 2 2 0 0 0 
thread: 0, divisorComp: 0 0 0 1 0 1 0 0 2 5 1 2 1 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 1 4 0 1 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 1 4 0 1 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 2 0 1 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 1 1 0 1 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 1 2 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 3 0 1 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 1 2 0 1 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 1 3 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 4 0 1 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 0 1 3 0 1 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 0 1 4 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 0 1 4 0 1 0 0 0 0 , mySum: 6
thread: 0, maxBlockLvlSize: 4
thread: 0, maxInBlockLvlSize: 20
thread: 0, AllTableSize: 1280, maxSubsetsSize: 64
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 6
copy the latest feasible solution to instance takes time: 0.015679
thread: 3, sOPT: 6
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 1 0 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 1 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 0 1 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 0 2 0 0 0 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 0 1 1 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 0 1 0 0 1 0 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 0 0 0 1 0 1 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[8]: 0 0 0 3 0 0 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 0 0 0 0 2 0 1 0 0 0 0 mySum: 3
thread: 0, blockNoZero[9]: 0 0 0 2 0 1 0 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 0 0 1 1 0 1 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 0 0 1 1 0 1 0 
thread: 0, allBlocks[11]: 0 0 0 0 0 0 0 0 1 2 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 0 0 1 2 0 0 0 
thread: 0, allBlocks[12]: 0 0 0 0 0 0 0 0 0 3 0 1 0 0 0 0 mySum: 4
thread: 0, blockNoZero[12]: 0 0 0 3 0 1 0 
thread: 0, allBlocks[13]: 0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[13]: 0 0 0 4 0 0 0 
thread: 0, allBlocks[14]: 0 0 0 0 0 0 0 0 1 2 0 1 0 0 0 0 mySum: 4
thread: 0, blockNoZero[14]: 0 0 1 2 0 1 0 
thread: 0, allBlocks[15]: 0 0 0 0 0 0 0 0 1 3 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[15]: 0 0 1 3 0 0 0 
thread: 0, allBlocks[16]: 0 0 0 0 0 0 0 0 0 4 0 1 0 0 0 0 mySum: 5
thread: 0, blockNoZero[16]: 0 0 0 4 0 1 0 
Thread: 1, gpu_BlockDP is done.
thread: 0, allBlocks[17]: 0 0 0 0 0 0 0 0 1 3 0 1 0 0 0 0 mySum: 5
thread: 0, blockNoZero[17]: 0 0 1 3 0 1 0 
Thread: 2, gpu_BlockDP is done.
thread: 0, allBlocks[18]: 0 0 0 0 0 0 0 0 1 4 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[18]: 0 0 1 4 0 0 0 
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 7
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 6
thread: 0, allBlocks[19]: 0 0 0 0 0 0 0 0 1 4 0 1 0 0 0 0 mySum: 6
thread: 0, blockNoZero[19]: 0 0 1 4 0 1 0 
copy the latest feasible solution to instance takes time: 0.026603
thread: 1, sOPT: 7
copy the latest feasible solution to instance takes time: 0.036587
thread: 2, sOPT: 6
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 12
copy the latest feasible solution to instance takes time: 2e-06
thread: 0, sOPT: 12
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 1, MlBk function is done, and BkID for all processes are collected.
3, MlBk function is done, and BkID for all processes are collected.
Thread: 2, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: 1 -1 -1 -1
Pick seg 1 for next iteration where LB: 123, UB: 146
BKID: 0, LB: 123, UB: 146, OPT: 7
Dynamic Programming Runtime: 0.382967
Execution time between LB and UB is: 0
By far, all LB UB calculation runtime: 0
Iteration: 2, UB: 146, LB: 123start at time: 1505254814
thread: 0, MlBk is called with LB: 123, UB: 129
 thread: 0, LongJobs.size() 13
thread: thread: thread: 31, MlBk is called with LB: 141, UB: 147
 thread: 3, LongJobs.size() 13
, MlBk is called with LB: 129, UB: 135
2, MlBk is called with LB: 135, UB: 141
 thread: 1, LongJobs.size() 13
 thread: 2, LongJobs.size() 13
thread: 0, NSTable size: 11
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 0, i: 1, maxN[i].weit: 4, maxN[i].idx: 1, blockDimSize[i]: 4
thread: 0, i: 2, maxN[i].weit: 5, maxN[i].idx: 2, blockDimSize[i]: 5
thread: 0, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 0, i: 4, maxN[i].weit: 4, maxN[i].idx: 4, blockDimSize[i]: 4
thread: 0, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 0, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 1, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 2, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, largestBlockVec.elm: 0 0 0 0 0 0 0 0 1 4 0 1 0 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 0 0 2 0 0 2 1 2 2 2 0 0 0 
thread: 0, divisorComp: 0 0 0 0 0 1 0 0 2 5 1 2 1 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 1 4 0 1 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 1 4 0 1 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 2 0 1 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 1 1 0 1 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 1 2 0 0 0 0 0 0 , mySum: 3
thread: 03 0, NSTable size:  130
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 0
 thread: 3, i: 0 60 , alltableelemets[maxindex].elm[i]: 05
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0 , maxN[i].weit: 2, maxN[i].idx: 00 , blockDimSize[i]: 02 0 3 
0thread: 3, i: 1, maxN[i].weit: 6, maxN[i].idx:  1, blockDimSize[i]: 1 60 
0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 1 2 0 1 0 0 0 0 , mySum: 4
0 0 0thread: 3, i: 2, maxN[i].weit: 4, maxN[i].idx: 2, blockDimSize[i]:  0 0 0 0 0 1 3 0 0 0 0 0 0 , mySum: 44

thread: 3, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 3, i: 4, maxN[i].weit: 0 0 0 0 0 0 0 0 0 4 0 1 0 03 , maxN[i].idx: 04 , blockDimSize[i]: 0 , mySum: 35
thread: 
30 0 0 0 0 0 0 0 1 3 0 1 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 0 1 4 0 0 , i: 0 0 0 00, divisor[i]:  , mySum: 15, blockDimSize[i]: 2

0 0 0 0 0 0 0 0 1 4 0 1 0 0 0 thread: 3, i: 1, divisor[i]: 2, blockDimSize[i]: 3
thread: 3, i: 2, divisor[i]: 2, blockDimSize[i]: 2
thread: 3, i: 3, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, i: 4, divisor[i]: 1, blockDimSize[i]: 3
0 , mySum: thread: 6
3, largestBlockVec.elm: 0 0 0 0 0 0 1 1 2 0 0 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 0 2 0 3 2 1 3 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 0 1 0 2 2 3 1 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 0 1 1 2 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 1 1 2 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 1 2 0 0 0 0 0 0 0 , mySum: 4
thread: 0, maxBlockLvlSize: 4
thread: 0, maxInBlockLvlSize: 10
thread: 0, AllTableSize: 640, maxSubsetsSize: 64
thread: 3, maxBlockLvlSize: 4
thread: 3, maxInBlockLvlSize: 10
thread: 3, AllTableSize: 432, maxSubsetsSize: 64
thread: 1, NSTable size: 14
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 1, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 1, i: 2, maxN[i].weit: 5, maxN[i].idx: 2, blockDimSize[i]: 5
thread: 1, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 1, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 1, i: 5, maxN[i].weit: thread: 42, NSTable size: , maxN[i].idx: 165, blockDimSize[i]: 
4thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 2, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 2, i: 2, maxN[i].weit: 5, maxN[i].idx: 2, blockDimSize[i]: 5
thread: 2, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3

thread: 2, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 2, i: 5, maxN[i].weit: 4, maxN[i].idx: 5, blockDimSize[i]: 4
thread: 2, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: thread: 2, i: 2, divisor[i]: 5, blockDimSize[i]: 1
thread: 2, i: 3, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 4, divisor[i]: 1, blockDimSize[i]: 3
1thread: 2, i: , i: 05, divisor[i]: , divisor[i]: 21, blockDimSize[i]: 2, blockDimSize[i]: 
2
thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 2, divisor[i]: 5, blockDimSize[i]: 1
thread: 1, i: 3, divisor[i]: 3, blockDimSize[i]: 1
thread: thread: 1, i: 4, divisor[i]: 21, blockDimSize[i]: , largestBlockVec.elm: 3
thread: 1, i: 5, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, largestBlockVec.elm: 0 00 0  0 00  00  0 0 4 0 0 0 4 2 0 1 02  00 0  10  0 00  
thread: 1, blockDimSizeComp: 0 0 0 0 2 0 2 1 1 3 2 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 1 0 1 50 3 1  20  00  0 0 0 
0thread: 2, blockDimSizeComp: 0 0 0 0 2 0 2 1 1  
thread: 1, largestBlockVec: 0 0 0 0 0 03 0 4  2 0 21  00  00 0  00  0 0
 thread: 1, largestNoZeroBlockVec: 0 0 4 2 0 1 
0 
thread: 2, divisorComp: 0 0 0 0 1 0 1 5 3 1 2 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 0 4 2 0 1 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 4 2 0 1 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0thread:  2, allBlocks: , mySum: 02 0
 0 0 0 0 0 0 0 0 2 0 0 0 0 0 00 0 , mySum: 2 
0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 00  00  0 , mySum: 20
0 0 0 0 0 0 0 1 1 0 0 0 0 0  0 00  , mySum: 02
 0 0 0 0 0 0 0 2 0 0 0 0 00 0 0  0 , mySum: , mySum: 2
00 0 0 0 0 0 0 3 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 1 00 0 0  0 00  , mySum: , mySum: 3
1
0 0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 00 0 0  0 00 , mySum:  10 
, mySum: 0 0 0 0 0 0 0 1 0 0 0 0 0 03 0 
00 0 0 0 0 0 0 2 0 0 1 0 0  , mySum: 1
0 0 0 0 0 0 0 0 1 0 1 0 00 0 0 , mySum: 3 
0 0 0 0 0 0 0 1 2 0 0 0 00 0  00  0 0, mySum: 2 
, mySum: 3
0 0 0 0 0 0 0 0 2 0 0 0 00 0 0 0 0 0 0 1 1 0 1 0  0 0 00  0 00  , mySum: 3, mySum: 
20 0 0 0 0 0 0 0 2 0 1 0 0
 00 0 0 0 0 0 0 1 0 0 1 0  0 0 , mySum: 3
00 0 0 0 0 0 0 4 0 0 0 0 0  0 0 0 , mySum: 20
0 0 0 0 0 0 0 1 1 0 0 0 0  0 0 , mySum: 4
00 0 0 0 0 0 0 3 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0  0 00  0, mySum: 2 , mySum: 
4
0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 1 0 00 0  0 00 , mySum:  40
0 0 0 0 0 0 0 2 1 0 1 0  0 , mySum: 03 
0 0 0 0 0 0 0 0 2 1 0 0 0 0 00 0 0  , mySum: , mySum: 34

0 0 0 0 0 0 0 2 0 0 1 0 0 00 0 0 0 0 0 0 2 2 0 0  0 0 , mySum: 3
0 0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 00 0  0 , mySum: , mySum: 34

0 0 0 0 0 0 0 1 2 0 1 0 0 0 0 0 0 0 0 0 0 1 1 0 1 0 00 0 0  0 , mySum: 30
 0 0 0 0 0 0 0 0 2 0 1 0 0 , mySum: 4
0 0 0 0 0 0 0 2 2 0 1 0 0 0 0 0 , mySum: 3
00 0 0 0 0 0 0 4 0 0 0 0 0  0 0 0 0, mySum:  4
00 0 0 0 0 0 0 3 1 0 0 0 0  , mySum: 5
0 0 0 0 0 0 0 3 1 0 1 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 3 0 0 1 0 0 00 0  00 , mySum:  4
0 0 0 0 0 0 0 2 1 0 1 0 0 0 , mySum: 5
0 0 0 0 0 0 0 3 2 0 0 0 0 00 0  0 00  , mySum: 4
, mySum: 0 0 0 0 0 0 0 2 2 0 0 0 0 05 0 0 , mySum: 
40 0 0 0 0 0 0 4 0 0 1 0 0 
00 0 0 0 0 0 0 1 2 0 1 0  0 0 00  00  , mySum: 4, mySum: 
5
0 0 0 0 0 0 0 2 2 0 1 0 0 00 0 0 0 0 0 0 4 1 0 0 0 0  0 0 00  , mySum: 0 , mySum: 55
0 0 0 0 0 0 0 3 2 0 1 0 0 0
 0 0 0 0 0 0 0 3 1 0 1 00 0 , mySum: 6
 0 0 0 0 0 0 0 4 1 0 1 0 0 00 0  0 , mySum: 6
00 0 0 0 0 0 0 4 2 0 0  0 00  0 00  , mySum: 50
 0 0 0 0 0 0 0 3 2 0 0 0 0 0 0 0, mySum:  , mySum: 5
0 0 0 0 0 0 0 4 0 0 1 0 0 0 60 0
 0 0 0 0 0 0 0 4 2 0 1 0 0 , mySum: 5
0 0 0 0 0 0 0 4 1 0 0 0 0 0 0 0 , mySum: 7
0 0 0 , mySum: 5
0 0 0 0 0 0 0 3 2 0 1 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 4 1 0 1 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 4 2 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 4 2 0 1 0 0 0 0 0 , mySum: 7
thread: 2, maxBlockLvlSize: 6
thread: 2, maxInBlockLvlSize: 7
thread: 2, AllTableSize: 720, maxSubsetsSize: 64
thread: 1, maxBlockLvlSize: 6
thread: 1, maxInBlockLvlSize: 7
thread: 1, AllTableSize: 720, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 1 0 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 1 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 1 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 2 0 0 0 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 1 1 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 1 0 0 1 0 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 0 0 1 0 1 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[8]: 0 0 3 0 0 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 0 0 0 0 2 0 1 0 0 0 0 mySum: 3
thread: 0, blockNoZero[9]: 0 0 2 0 1 0 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 0 0 1 1 0 1 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 0 1 1 0 1 0 
thread: 0, allBlocks[11]: 0 0 0 0 0 0 0 0 1 2 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 0 1 2 0 0 0 
thread: 0, allBlocks[12]: 0 0 0 0 0 0 0 0 0 3 0 1 0 0 0 0 mySum: 4
thread: 0, blockNoZero[12]: 0 0 3 0 1 0 
thread: 0, allBlocks[13]: 0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[13]: 0 0 4 0 0 0 
thread: 0, allBlocks[14]: 0 0 0 0 0 0 0 0 1 2 0 1 0 0 0 0 mySum: 4
thread: 0, blockNoZero[14]: 0 1 2 0 1 0 
thread: 0, allBlocks[15]: 0 0 0 0 0 0 0 0 1 3 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[15]: 0 1 3 0 0 0 
thread: 0, allBlocks[16]: 0 0 0 0 0 0 0 0 0 4 0 1 0 0 0 0 mySum: 5
thread: 0, blockNoZero[16]: 0 0 4 0 1 0 
thread: 0, allBlocks[17]: 0 0 0 0 0 0 0 0 1 3 0 1 0 0 0 0 mySum: 5
thread: 0, blockNoZero[17]: 0 1 3 0 1 0 
thread: 0, allBlocks[18]: 0 0 0 0 0 0 0 0 1 4 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[18]: 0 1 4 0 0 0 
thread: 0, allBlocks[19]: 0 0 0 0 0 0 0 0 1 4 0 1 0 0 0 0 mySum: 6
thread: 0, blockNoZero[19]: 0 1 4 0 1 0 
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 7
copy the latest feasible solution to instance takes time: 0.033925
thread: 3, sOPT: 7
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 6e-06
thread: 0, sOPT: 11
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 9
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 8
copy the latest feasible solution to instance takes time: 0.031804
thread: 1, sOPT: 9
copy the latest feasible solution to instance takes time: 0.030046
thread: 2, sOPT: 8
Thread: 2, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 3, MlBk function is done, and BkID for all processes are collected.
1, MlBk function is done, and BkID for all processes are collected.
Thread: 0, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: 1 -1 -1 -1
Pick seg 1 for next iteration where LB: 127, UB: 133
BKID: 0, LB: 127, UB: 133, OPT: 9
Dynamic Programming Runtime: 0.375615
Execution time between LB and UB is: 0
By far, all LB UB calculation runtime: 0
Iteration: 3, UB: 133, LB: 127start at time: 1505254814
thread: 0, MlBk is called with LB: 127, UB: 128
thread: 2, MlBk is called with LB: 129, UB: 130
 thread: 0, LongJobs.size() 13
thread: thread: 31, MlBk is called with LB: , MlBk is called with LB: 128130, UB: 133, UB: 
129
 thread: 2, LongJobs.size() 13
 thread: 1, LongJobs.size() 13
 thread: 3, LongJobs.size() 13
thread: 0, NSTable size: 11
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 0, i: 1, maxN[i].weit: 4, maxN[i].idx: 1, blockDimSize[i]: 4
thread: 0, i: 2, maxN[i].weit: 5, maxN[i].idx: 2, blockDimSize[i]: 5
thread: 0, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 0, i: 4, maxN[i].weit: 4, maxN[i].idx: 4, blockDimSize[i]: 4
thread: 0, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 0, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 1, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: thread: 2, divisor[i]: 25, blockDimSize[i]: , NSTable size: 14
1thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 0

thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, largestBlockVec.elm: 0 thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 4
thread: 1, NSTable size: 14
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 1, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 1, i: 2, maxN[i].weit: 5, maxN[i].idx: 2, blockDimSize[i]: 5
thread: 1, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 1, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 1, i: 5, maxN[i].weit: 4, maxN[i].idx: 5, blockDimSize[i]: 4
thread: 1, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 2, divisor[i]: 5, blockDimSize[i]: 1
thread: 1, i: 3, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 5, divisor[i]: 2, blockDimSize[i]: 2thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 2, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 2, i: 2, maxN[i].weit: 5, maxN[i].idx: 2, blockDimSize[i]: 5
thread: 2, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 2, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 2, i: 5, maxN[i].weit: 4, maxN[i].idx: 5, blockDimSize[i]: 4
thread: 2, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 2, divisor[i]: 5, blockDimSize[i]: 1
thread: 2, i: 3, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 5, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, largestBlockVec.elm: 
0 0 0 0 0 0 0 4 thread: 12 , largestBlockVec.elm: 0 0 1 00 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 0 2 0 2 1 1 3 2 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 1 0 1 5 3 10 0 0 0 0 0 0 1 4 0 1 0 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 0 0 2 0 0 2 1 2 2 2 0 0 0 
thread: 0, divisorComp: 0 0 0 0 0 1 0 0 2 5 1 2 1 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 1 4 0 1 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 1 4 0 1 0 
  2 0 00  00  0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 0 4 2 0 1 00  0 0 00thread:   000  
thread: 2, largestNoZeroBlockVec: 0 0 4 2 0 1 
4 , allBlocks: 0 0 20  0 0 01  00  0 0 00  00  00  0 0 0 
0 0 0 thread: 1, blockDimSizeComp: 0 0 0 0 2 , mySum: 0 2 1 1 3 2 0 0 0 0 0 0

0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 1 0 0 0 0 thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 00  00  00 thread: 1, divisorComp: 0 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 01
 , mySum: 01 
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0  , mySum: 2
0 0 , mySum: 1
00 0 0 0 0 0 0 1 0 0 0 0 0 0  0 0 , mySum: 1
0 0 1 0 0 1 05  30 0 0 0 0 0 0 1 1 0 0 0 0 0  01  , mySum: 022
  0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 , mySum: 02
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0  0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 04 2 0 1 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 4 2 0 1 
0 0 0 0 0 1 0 1 0 0 0  , mySum: 2
0 0 0 0 0 0 0 0 0 3 0 0 00 0  00  , mySum: 0 , mySum: 23

0 0 0 0 0 0 0 0 0 2 0 1 00 0 0 0 0 0 0 0 2 0 0  0 0 0 , mySum: 03 0
 0 0 0 0 0 0 0 0 1 1 0 1 thread: 0 0 0 0 , mySum: 3
0 0 0 , mySum: 2
00 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 1 2 0 0 0 1, allBlocks: 00 0  0 0  , mySum: 0 30
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 1 0 00  00  0 0, mySum: 4
, mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 00 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 1 0 0 0 0  0 0 0 , mySum: 1
 0 , mySum: 2
0 0 0 0 0 0 0 1 1 0 0 0 0 00 0 0 0 0 0 0 1 0 0 0 00 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 1 0 1 0  0 0 0 0 , mySum: 2
 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 00  00 0  0, mySum: 2 
0 00  00 0 0 0 0 0 0 3 0 0 0 0 0  0 0 0 , mySum: 3
0 0 0 0 00 0 00   04 0  000 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 1 2 0 1 0  0 0 0 , mySum: 4
 0 0 0 2 01  00  0 002 0 0 0 0 1 3 0 0 0 0 0 0 , mySum:  4
0 0 0 0 0 0 0 0 0 4 0 1 0 00 0  00 0   0 0 0 0 0 , mySum: 3, mySum: 
50 0 0 0 0 0 0 2 0 0 1 0 0 0 
0 0 , mySum: 3
0 0 0 0 , mySum: 02 
0 0 0 0 0 0 0 1 0 0 1 0 0 00 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 0 1 3 0 1 0  00 0  0 0, mySum:  20 0
0 0 0 0 0 0 0 1 1 0 0 0 00 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0  0 0, mySum:  3
00 0 0 0 0 0 0 1 1 0 1 0 0 0  00  0, mySum:  , mySum: 5
0 0 0 0 0 0 0 0 1 4 0 0 02
0 0 0 0 0 0 0 3 0 0 0 0 0  0 00  0 0  0 , mySum: 3
, mySum: 5
0 0 0 0 0 0 0 0 1 4 0 1 0 0 0 0 0 0 0 0 0 2 1 0 0 0, mySum: 3
0 0 0 0 0 0 0 0 2 0 1 0 0  0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 0 0 1 0 0 0 00 0  00 , mySum: 3
0 , mySum: 3
0 0 0 0 0 0 0 4 0 0 0 0 0 00 0 0 , mySum: 4
0 0 0 0 0 0 0 3 1 0 0 0 0  00  0 00  0 , mySum: 6
0 , mySum: 4
0 0 0 0 0 0 0 3 0 0 1 0 0 0  00  0 00  , mySum: 4
1 0 0 0 0 0 0 0 2 1 0 1 0 0 02 0  00  , mySum: 04
0 0 0 0 0 0 0 2 2 0 0 0 0  0 0 00 , mySum:  4
0 0 0 0 0 0 0 1 2 0 1 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 1 1 0 1 0 0 0 0 0 , mySum: 4
00 0 0 0 0 0 0 2 2 0 1 0 0  0 0 , mySum: 3
00 0 0 0 0 0 0 0 2 0 1 0 0  0 00  00 , mySum:  5
, mySum: 0 0 0 0 0 0 0 3 1 0 1 0 0 3
0 0 0 0 0 0 0 4 0 0 0 0 0 00 0  0 , mySum: 04 
00 0 0 0 0 0 0 3 1 0 0 0 0  0 , mySum: 0 0 5, mySum: 
40 0 0 0 0 0 0 3 2 0 0 0 0 0 0
 0 0 0 0 0 0 0 3 0 0 1 0 , mySum: 5
0 0 0 0 0 0 0 4 0 0 1 0 0 0 00 0  0, mySum:  5
00 0 0 0 0 0 0 4 1 0 0 0 0  0 00  00  , mySum: 4, mySum: 
0 0 0 0 0 0 0 2 1 0 1 0 0 0 50 0 , mySum: 
4
0 0 0 0 0 0 0 2 2 0 0 0 00 0 0 0 0 0 0 3 2 0 1 0 0  0 0 00  0 0, mySum: 4 , mySum: 
6
0 0 0 0 0 0 0 4 1 0 1 0 0 00 0 0 0 0 0 0 1 2 0 1 0 0 , mySum: 6 
0 0 0 0 0 0 0 0 4 2 0 0 0 0 00 0 0  0, mySum:  06 0 
, mySum: 40 0 0 0 0 0 0 4 2 0 1 0 0 0
 0 0 0 0 0 0 0 2 2 0 1 0 0 , mySum: 7
0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 3 1 0 1 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 3 2 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 4 0 0 1 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 4 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 3 2 0 1 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 4 1 0 1 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 4 2 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 4 2 0 1 0 0 0 0 0 , mySum: 7
thread: 0, maxBlockLvlSize: 4
thread: 0, maxInBlockLvlSize: 10
thread: 0, AllTableSize: 640, maxSubsetsSize: 64
thread: 3, NSTable size: 14
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 4
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 3, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 3, i: 2, maxN[i].weit: 5, maxN[i].idx: 2, blockDimSize[i]: 5
thread: 3, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 3, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 3, i: 5, maxN[i].weit: 4, maxN[i].idx: 5, blockDimSize[i]: 4
thread: 3, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 2, divisor[i]: 5, blockDimSize[i]: 1
thread: 3, i: 3, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 3, i: 5, divisor[i]: 2, blockDimSize[i]: 2
thread: 3, largestBlockVec.elm: 0 0 0 0 0 0 0 4 2 0 1 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 0 2 0 2 1 1 3 2 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 0 1 0 1 5 3 1 2 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 0 0 4 2 0 1 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 0 4 2 0 1 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 0 0 1 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 1 1 0 1 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 2 0 1 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 3 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 3 0 0 1 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 2 1 0 1 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 2 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 1 2 0 1 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 2 2 0 1 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 3 1 0 1 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 3 2 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 4 0 0 1 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 4 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 3 2 0 1 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 4 1 0 1 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 4 2 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 4 2 0 1 0 0 0 0 0 , mySum: 7
thread: 2, maxBlockLvlSize: 6
thread: 2, maxInBlockLvlSize: 7
thread: 2, AllTableSize: 720, maxSubsetsSize: 64
thread: 1, maxBlockLvlSize: 6
thread: 1, maxInBlockLvlSize: 7
thread: 1, AllTableSize: 720, maxSubsetsSize: 64
thread: 3, maxBlockLvlSize: 6
thread: 3, maxInBlockLvlSize: 7
thread: 3, AllTableSize: 720, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 1 0 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 1 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 1 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 2 0 0 0 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 1 1 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 1 0 0 1 0 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 0 0 1 0 1 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[8]: 0 0 3 0 0 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 0 0 0 0 2 0 1 0 0 0 0 mySum: 3
thread: 0, blockNoZero[9]: 0 0 2 0 1 0 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 0 0 1 1 0 1 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 0 1 1 0 1 0 
thread: 0, allBlocks[11]: 0 0 0 0 0 0 0 0 1 2 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 0 1 2 0 0 0 
thread: 0, allBlocks[12]: 0 0 0 0 0 0 0 0 0 3 0 1 0 0 0 0 mySum: 4
thread: 0, blockNoZero[12]: 0 0 3 0 1 0 
thread: 0, allBlocks[13]: 0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[13]: 0 0 4 0 0 0 
thread: 0, allBlocks[14]: 0 0 0 0 0 0 0 0 1 2 0 1 0 0 0 0 mySum: 4
thread: 0, blockNoZero[14]: 0 1 2 0 1 0 
thread: 0, allBlocks[15]: 0 0 0 0 0 0 0 0 1 3 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[15]: 0 1 3 0 0 0 
thread: 0, allBlocks[16]: 0 0 0 0 0 0 0 0 0 4 0 1 0 0 0 0 mySum: 5
thread: 0, blockNoZero[16]: 0 0 4 0 1 0 
thread: 0, allBlocks[17]: 0 0 0 0 0 0 0 0 1 3 0 1 0 0 0 0 mySum: 5
thread: 0, blockNoZero[17]: 0 1 3 0 1 0 
thread: 0, allBlocks[18]: 0 0 0 0 0 0 0 0 1 4 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[18]: 0 1 4 0 0 0 
thread: 0, allBlocks[19]: 0 0 0 0 0 0 0 0 1 4 0 1 0 0 0 0 mySum: 6
thread: 0, blockNoZero[19]: 0 1 4 0 1 0 
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 9
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 9
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 9
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 9e-06
thread: 0, sOPT: 11
copy the latest feasible solution to instance takes time: 0.064955
thread: 1, sOPT: 9
copy the latest feasible solution to instance takes time: 0.07237
thread: 3, sOPT: 9
copy the latest feasible solution to instance takes time: 0.057371
thread: 2, sOPT: 9
Thread: 2, MlBk function is done, and BkID for all processes are collected.
Thread: 1, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 3, MlBk function is done, and BkID for all processes are collected.
0, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: 1 -1 -1 -1
Pick seg 1 for next iteration where LB: 128, UB: 129
BKID: 0, LB: 128, UB: 128, OPT: 9
Dynamic Programming Runtime: 0.487622
Execution time between LB and UB is: 0
By far, all LB UB calculation runtime: 0
********************************************************
Total execution on UB and LB is: 0
OUT of Bk while loop  
UB    128
LB    128
T1    127
T2    128
OPT   9
nMachines   10
BkID	0
AllProbData.size()    3
ck :   2
AllProbData[ck].Ttable    128
ck :   1
AllProbData[ck].Ttable    132
ck :   0
AllProbData[ck].Ttable    145
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan138
Main Scheduling is Done
File 3-1 is Done.
******************************
Reading File...
File 3-2 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 215, LB: 115start at time: 1505254814
thread: 0, MlBk is called with LB: 115, UB: 140
thread: 1, MlBk is called with LB: 140, UB: 165
 thread: 0, LongJobs.size() 14
thread: 2, MlBk is called with LB: 165, UB: 190thread: 
3 thread: 1, LongJobs.size() 12
, MlBk is called with LB: 190, UB: 215
 thread: 2, LongJobs.size() 11
 thread: 3, LongJobs.size() 10
thread: 3, NSTable size: 14
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 5
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 3, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 3, i: 2, maxN[i].weit: 6, maxN[i].idx: 2, blockDimSize[i]: 6
thread: 3, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 3, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, i: 2, divisor[i]: 2, blockDimSize[i]: 3
thread: 3, i: 3, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, largestBlockVec.elm: 0 0 0 0 0 2 1 2 0 0 0 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 2 0 1 3 1 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 1 0 3 2 3 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 2 1 2 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 2 1 2 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 1 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 0 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 1 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 1 2 0 0 0 0 0 0 0 0 , mySum: 5
thread: 2, NSTable size: 17
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 2, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 2, i: 2, maxN[i].weit: 4, maxN[i].idx: 2, blockDimSize[i]: thread: 43, maxBlockLvlSize: 
thread: 2, i: 3, maxN[i].weit: 5, maxN[i].idx: 3, blockDimSize[i]: 5
5
thread: 3, maxInBlockLvlSize: 2
thread: 3, AllTableSize: 108, maxSubsetsSize: 64
thread: 2, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 2, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 2, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, i: 3, divisor[i]: 5, blockDimSize[i]: 1
thread: 2, i: 4, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, largestBlockVec.elm: 0 0 0 0 0 0 1 4 2 0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 2 2 0 2 1 1 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 1 1 0 2 5 3 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 1 4 2 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 1 4 2 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 3 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 1 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 2 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 2 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 4 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 3 2 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 2 2 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 3 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 4 2 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 1 3 2 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 1 4 2 0 0 0 0 0 0 0 , mySum: 7
thread: 1, NSTable size: 18
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 5
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 1, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 1, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 1, i: 3, maxN[i].weit: 6, maxN[i].idx: 3, blockDimSize[i]: 6
thread: 1, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 1, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 1, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 3, divisor[i]: 2, blockDimSize[i]: 3
thread: 1, i: 4, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 5, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, largestBlockVec.elm: 0 0 0 0 0 0 0 0 1 2 2 0 0 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 2 2 2 0 0 3 1 1 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 1 1 1 0 0 2 3 3 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 1 2 2 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 0 1 2 2 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 1 2 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 1 0 2 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 1 2 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 2 2 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 1 1 2 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 1 2 1 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 1 2 2 0 0 0 0 0 , mySum: 5
thread: 2, maxBlockLvlSize: 6
thread: 2, maxInBlockLvlSize: 3
thread: 2, AllTableSize: 240, maxSubsetsSize: 64
thread: 1, maxBlockLvlSize: 5
thread: 1, maxInBlockLvlSize: 7
thread: 1, AllTableSize: 432, maxSubsetsSize: 64
thread: 0, NSTable size: 19
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 0, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 0, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 0, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 0, i: 4, maxN[i].weit: 5, maxN[i].idx: 4, blockDimSize[i]: 5
thread: 0, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 0, i: 6, maxN[i].weit: 3, maxN[i].idx: 6, blockDimSize[i]: 3
thread: 0, i: 0, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 3, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 4, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 6, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, largestBlockVec.elm: 0 0 0 0 1 0 0 0 0 0 2 4 0 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 0 2 2 0 2 0 0 1 1 2 3 0 0 
thread: 0, divisorComp: 0 0 0 0 2 1 0 1 0 0 3 5 1 1 0 0 
thread: 0, largestBlockVec: 0 0 0 0 1 0 0 0 0 0 2 4 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 1 0 0 2 4 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 0 0 0 2 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 0 0 0 1 1 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 0 0 0 0 2 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 1 2 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 2 2 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 0 0 0 0 3 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 1 3 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 0 0 0 1 2 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 0 0 0 2 1 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 2 3 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 0 0 0 1 4 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 0 0 0 0 4 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 0 0 0 1 3 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 0 0 0 2 2 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 0 0 0 2 4 0 0 0 0 , mySum: 6
0 0 0 0 1 0 0 0 0 0 2 3 0 0 0 0 , mySum: 6
0 0 0 0 1 0 0 0 0 0 1 4 0 0 0 0 , mySum: 6
0 0 0 0 1 0 0 0 0 0 2 4 0 0 0 0 , mySum: 7
thread: 0, maxBlockLvlSize: 6
thread: 0, maxInBlockLvlSize: 14
thread: 0, AllTableSize: 1440, maxSubsetsSize: 64
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 5
copy the latest feasible solution to instance takes time: 0.007311
thread: 3, sOPT: 5
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 5
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 
copy the latest feasible solution to instance takes time: 0.019165
thread: 2, sOPT: 5
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 1 0 0 
thread: 0, allBlocks[2]: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 1 0 0 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 0 1 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 0 1 1 0 0 
thread: 0, allBlocks[5]: 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 1 0 0 1 0 0 0 
Thread: 1, gpu_BlockDP is done.
thread: 0, allBlocks[6]: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 0 0 2 0 0 0 
thread: 0, allBlocks[7]: 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 1 0 0 0 1 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 mySum: 2
thread: 0, blockNoZero[8]: 0 0 0 0 2 0 0 
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 9
thread: 0, allBlocks[9]: 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 mySum: 3
thread: 0, blockNoZero[9]: 0 0 0 0 3 0 0 
thread: 0, allBlocks[10]: 0 0 0 0 1 0 0 0 0 0 2 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 1 0 0 2 0 0 0 
thread: 0, allBlocks[11]: 0 0 0 0 1 0 0 0 0 0 1 1 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 1 0 0 1 1 0 0 
thread: 0, allBlocks[12]: 0 0 0 0 1 0 0 0 0 0 0 2 0 0 0 0 mySum: 3
thread: 0, blockNoZero[12]: 1 0 0 0 2 0 0 
thread: 0, allBlocks[13]: 0 0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 mySum: 3
thread: 0, blockNoZero[13]: 0 0 0 2 1 0 0 
thread: 0, allBlocks[14]: 0 0 0 0 0 0 0 0 0 0 1 2 0 0 0 0 mySum: 3
thread: 0, blockNoZero[14]: 0 0 0 1 2 0 0 
copy the latest feasible solution to instance takes time: 0.017156
thread: 1, sOPT: 9
thread: 0, allBlocks[15]: 0 0 0 0 0 0 0 0 0 0 2 2 0 0 0 0 mySum: 4
thread: 0, blockNoZero[15]: 0 0 0 2 2 0 0 
thread: 0, allBlocks[16]: 0 0 0 0 1 0 0 0 0 0 0 3 0 0 0 0 mySum: 4
thread: 0, blockNoZero[16]: 1 0 0 0 3 0 0 
thread: 0, allBlocks[17]: 0 0 0 0 0 0 0 0 0 0 1 3 0 0 0 0 mySum: 4
thread: 0, blockNoZero[17]: 0 0 0 1 3 0 0 
thread: 0, allBlocks[18]: 0 0 0 0 1 0 0 0 0 0 1 2 0 0 0 0 mySum: 4
thread: 0, blockNoZero[18]: 1 0 0 1 2 0 0 
thread: 0, allBlocks[19]: 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 mySum: 4
thread: 0, blockNoZero[19]: 0 0 0 0 4 0 0 
thread: 0, allBlocks[20]: 0 0 0 0 1 0 0 0 0 0 2 1 0 0 0 0 mySum: 4
thread: 0, blockNoZero[20]: 1 0 0 2 1 0 0 
thread: 0, allBlocks[21]: 0 0 0 0 0 0 0 0 0 0 2 3 0 0 0 0 mySum: 5
thread: 0, blockNoZero[21]: 0 0 0 2 3 0 0 
thread: 0, allBlocks[22]: 0 0 0 0 0 0 0 0 0 0 1 4 0 0 0 0 mySum: 5
thread: 0, blockNoZero[22]: 0 0 0 1 4 0 0 
thread: 0, allBlocks[23]: 0 0 0 0 1 0 0 0 0 0 0 4 0 0 0 0 mySum: 5
thread: 0, blockNoZero[23]: 1 0 0 0 4 0 0 
thread: 0, allBlocks[24]: 0 0 0 0 1 0 0 0 0 0 1 3 0 0 0 0 mySum: 5
thread: 0, blockNoZero[24]: 1 0 0 1 3 0 0 
thread: 0, allBlocks[25]: 0 0 0 0 1 0 0 0 0 0 2 2 0 0 0 0 mySum: 5
thread: 0, blockNoZero[25]: 1 0 0 2 2 0 0 
thread: 0, allBlocks[26]: 0 0 0 0 0 0 0 0 0 0 2 4 0 0 0 0 mySum: 6
thread: 0, blockNoZero[26]: 0 0 0 2 4 0 0 
thread: 0, allBlocks[27]: 0 0 0 0 1 0 0 0 0 0 2 3 0 0 0 0 mySum: 6
thread: 0, blockNoZero[27]: 1 0 0 2 3 0 0 
thread: 0, allBlocks[28]: 0 0 0 0 1 0 0 0 0 0 1 4 0 0 0 0 mySum: 6
thread: 0, blockNoZero[28]: 1 0 0 1 4 0 0 
thread: 0, allBlocks[29]: 0 0 0 0 1 0 0 0 0 0 2 4 0 0 0 0 mySum: 7
thread: 0, blockNoZero[29]: 1 0 0 2 4 0 0 
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.02531
thread: 0, sOPT: 10
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: Thread: 1, MlBk function is done, and BkID for all processes are collected.32
, MlBk function is done, and BkID for all processes are collected., MlBk function is done, and BkID for all processes are collected.

sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 115, UB: 128
BKID: 0, LB: 115, UB: 128, OPT: 10
Dynamic Programming Runtime: 0.320735
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 1
Iteration: 2, UB: 128, LB: 115start at time: 1505254815
thread: 0, MlBk is called with LB: 115, UB: 118
 thread: 0, LongJobs.size() 15
thread: thread: 1, MlBk is called with LB: 118, UB: 121
2, MlBk is called with LB: 121, UB: 124
 thread: 2, LongJobs.size() 14
thread: 3, MlBk is called with LB: 124, UB: 128
 thread: 3, LongJobs.size() 14
 thread: 1, LongJobs.size() 15
thread: 3, NSTable size: 19
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 4
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 3, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 3, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 3, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 3, i: 4, maxN[i].weit: 5, maxN[i].idx: 4, blockDimSize[i]: 5
thread: 3, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 3, i: 6, maxN[i].weit: 3, maxN[i].idx: 6, blockDimSize[i]: 3
thread: 3, i: 0, divisor[i]: 2, blockDimSize[i]: 2
thread: 3, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 3, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, i: 4, divisor[i]: 5, blockDimSize[i]: 1
thread: 3, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 6, divisor[i]: 1, blockDimSize[i]: 3
thread: 3, largestBlockVec.elm: 0 0 0 0 1 0 0 0 0 0 2 4 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 0 2 2 0 2 0 0 1 1 2 3 0 0 
thread: 3, divisorComp: 0 0 0 0 2 1 0 1 0 0 3 5 1 1 0 0 
thread: 3, largestBlockVec: 0 0 0 0 1 0 0 0 0 0 2 4 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 1 0 0 2 4 0 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 0 0 0 2 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 0 0 0 1 1 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 0 0 0 0 2 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 1 2 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 2 2 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 0 0 0 0 3 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 1 3 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 0 0 0 1 2 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 0 0 0 2 1 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 2 3 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 0 0 0 1 4 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 0 0 0 0 4 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 0 0 0 1 3 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 0 0 0 2 2 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 0 0 0 2 4 0 0 0 0 , mySum: 6
0 0 0 0 1 0 0 0 0 0 2 3 0 0 0 0 , mySum: 6
0 0 0 0 1 0 0 0 0 0 1 4 0 0 0 0 , mySum: 6
0 0 0 0 1 0 0 0 0 0 2 4 0 0 0 0 , mySum: 7
thread: 0, NSTable size: 22
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 0, i: 1, maxN[i].weit: 4, maxN[i].idx: 1, blockDimSize[i]: 4
thread: 0, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 0, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 0, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 0, i: 5, maxN[i].weit: 5, maxN[i].idx: 5, blockDimSize[i]: 5
thread: 0, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 0, i: 7, maxN[i].weit: 3, maxN[i].idx: 7, blockDimSize[i]: 3
thread: 0, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 1, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 5, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 7, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, largestBlockVec.elm: 0 0 0 0 1 0 0 0 0 0 2 4 0 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 2 2 2 0 2 0 0 1 1 2 3 0 0 
thread: 0, divisorComp: 0 0 0 1 2 1 0 1 0 0 3 5 1 1 0 0 
thread: 0, largestBlockVec: 0 0 0 0 1 0 0 0 0 0 2 4 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 1 0 0 2 4 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 0 0 0 2 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 0 0 0 1 1 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 0 0 0 0 2 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 1 2 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 2 2 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 0 0 0 0 3 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 1 3 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 0 0 0 1 2 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 0 0 0 2 1 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 2 3 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 0 0 0 1 4 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 0 0 0 0 4 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 0 0 0 1 3 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 0 0 0 2 2 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 0 0 0 2 4 0 0 0 0 , mySum: 6
0 0 0 0 1 0 0 0 0 0 2 3 0 0 0 0 , mySum: 6
0 0 0 0 1 0 0 0 0 0 1 4 0 0 0 0 , mySum: 6
0 0 0 0 1 0 0 0 0 0 2 4 0 0 0 0 , mySum: 7
thread: 3, maxBlockLvlSize: 6
thread: 3, maxInBlockLvlSize: 14
thread: 3, AllTableSize: 1440, maxSubsetsSize: 64
thread: 2, NSTable size: 16
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 2, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 2, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 2, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 2, i: 4, maxN[i].weit: 5, maxN[i].idx: 4, blockDimSize[i]: 5
thread: 2, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 2, i: 6, maxN[i].weit: 3, maxN[i].idx: 6, blockDimSize[i]: 3
thread: 2, i: 0, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 3, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 4, divisor[i]: 5, blockDimSize[i]: 1
thread: 2, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 6, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, largestBlockVec.elm: 0 0 0 0 1 0 0 0 0 0 2 4 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 0 2 2 0 2 0 0 1 1 2 3 0 0 
thread: 2, divisorComp: 0 0 0 0 2 1 0 1 0 0 3 5 1 1 0 0 
thread: 2, largestBlockVec: 0 0 0 0 1 0 0 0 0 0 2 4 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 1 0 0 2 4 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 0 0 0 2 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 0 0 0 1 1 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 0 0 0 0 2 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 1 2 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 2 2 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 0 0 0 0 3 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 1 3 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 0 0 0 1 2 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 0 0 0 2 1 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 2 3 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 0 0 0 1 4 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 0 0 0 0 4 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 0 0 0 1 3 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 0 0 0 2 2 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 0 0 0 2 4 0 0 0 0 , mySum: 6
0 0 0 0 1 0 0 0 0 0 2 3 0 0 0 0 , mySum: 6
0 0 0 0 1 0 0 0 0 0 1 4 0 0 0 0 , mySum: 6
0 0 0 0 1 0 0 0 0 0 2 4 0 0 0 0 , mySum: 7
thread: 1, NSTable size: 26
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: thread: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 20, maxBlockLvlSize: 
6thread: 1, i: 1, maxN[i].weit: 4, maxN[i].idx: 1, blockDimSize[i]: 4
thread: 1, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 1, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 1, i: 4, maxN[i].weit: 3, maxN[i].idx: 4
, blockDimSize[i]: thread: 0, maxInBlockLvlSize: 25
thread: 0, AllTableSize: 2880, maxSubsetsSize: 64
3
thread: 1, i: 5, maxN[i].weit: 5, maxN[i].idx: 5, blockDimSize[i]: 5
thread: 1, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 1, i: 7, maxN[i].weit: 3, maxN[i].idx: 7, blockDimSize[i]: 3
thread: 1, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 1, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 4, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 5, divisor[i]: 5, blockDimSize[i]: 1
thread: 1, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 7, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, largestBlockVec.elm: 0 0 0 0 1 0 0 0 0 0 2 4 0 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 2 2 2 0 2 0 0 1 1 2 3 0 0 
thread: 1, divisorComp: 0 0 0 1 2 1 0 1 0 0 3 5 1 1 0 0 
thread: 1, largestBlockVec: 0 0 0 0 1 0 0 0 0 0 2 4 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 1 0 0 2 4 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 0 0 0 2 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 0 0 0 1 1 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 0 0 0 0 2 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 1 2 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 2 2 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 0 0 0 0 3 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 1 3 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 0 0 0 1 2 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 0 0 0 2 1 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 2 3 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 0 0 0 1 4 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 0 0 0 0 4 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 0 0 0 1 3 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 0 0 0 2 2 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 0 0 0 2 4 0 0 0 0 , mySum: 6
0 0 0 0 1 0 0 0 0 0 2 3 0 0 0 0 , mySum: 6
0 0 0 0 1 0 0 0 0 0 1 4 0 0 0 0 , mySum: 6
0 0 0 0 1 0 0 0 0 0 2 4 0 0 0 0 , mySum: 7
thread: 2, maxBlockLvlSize: 6
thread: 2, maxInBlockLvlSize: 14
thread: 2, AllTableSize: 1440, maxSubsetsSize: 64
thread: 1, maxBlockLvlSize: 6
thread: 1, maxInBlockLvlSize: 25
thread: 1, AllTableSize: 2880, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 1 0 0 
thread: 0, allBlocks[2]: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 1 0 0 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 0 0 1 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 0 0 1 1 0 0 
thread: 0, allBlocks[5]: 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 1 0 0 1 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 0 0 0 2 0 0 0 
thread: 0, allBlocks[7]: 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 0 1 0 0 0 1 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 mySum: 2
thread: 0, blockNoZero[8]: 0 0 0 0 0 2 0 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 mySum: 3
thread: 0, blockNoZero[9]: 0 0 0 0 0 3 0 0 
thread: 0, allBlocks[10]: 0 0 0 0 1 0 0 0 0 0 2 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 0 1 0 0 2 0 0 0 
thread: 0, allBlocks[11]: 0 0 0 0 1 0 0 0 0 0 1 1 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 0 1 0 0 1 1 0 0 
thread: 0, allBlocks[12]: 0 0 0 0 1 0 0 0 0 0 0 2 0 0 0 0 mySum: 3
thread: 0, blockNoZero[12]: 0 1 0 0 0 2 0 0 
thread: 0, allBlocks[13]: 0 0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 mySum: 3
thread: 0, blockNoZero[13]: 0 0 0 0 2 1 0 0 
thread: 0, allBlocks[14]: 0 0 0 0 0 0 0 0 0 0 1 2 0 0 0 0 mySum: 3
thread: 0, blockNoZero[14]: 0 0 0 0 1 2 0 0 
thread: 0, allBlocks[15]: 0 0 0 0 0 0 0 0 0 0 2 2 0 0 0 0 mySum: 4
thread: 0, blockNoZero[15]: 0 0 0 0 2 2 0 0 
thread: 0, allBlocks[16]: 0 0 0 0 1 0 0 0 0 0 0 3 0 0 0 0 mySum: 4
thread: 0, blockNoZero[16]: 0 1 0 0 0 3 0 0 
thread: 0, allBlocks[17]: 0 0 0 0 0 0 0 0 0 0 1 3 0 0 0 0 mySum: 4
thread: 0, blockNoZero[17]: 0 0 0 0 1 3 0 0 
thread: 0, allBlocks[18]: 0 0 0 0 1 0 0 0 0 0 1 2 0 0 0 0 mySum: 4
thread: 0, blockNoZero[18]: 0 1 0 0 1 2 0 0 
thread: 0, allBlocks[19]: 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 mySum: 4
thread: 0, blockNoZero[19]: 0 0 0 0 0 4 0 0 
thread: 0, allBlocks[20]: 0 0 0 0 1 0 0 0 0 0 2 1 0 0 0 0 mySum: 4
thread: 0, blockNoZero[20]: 0 1 0 0 2 1 0 0 
thread: 0, allBlocks[21]: 0 0 0 0 0 0 0 0 0 0 2 3 0 0 0 0 mySum: 5
thread: 0, blockNoZero[21]: 0 0 0 0 2 3 0 0 
thread: 0, allBlocks[22]: 0 0 0 0 0 0 0 0 0 0 1 4 0 0 0 0 mySum: 5
thread: 0, blockNoZero[22]: 0 0 0 0 1 4 0 0 
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
Thread: 3, gpu_BlockDP is done.
thread: 0, allBlocks[23]: 0 0 0 0 1 0 0 0 0 0 0 4 0 0 0 0 mySum: 5
thread: 0, blockNoZero[23]: 0 1 0 0 0 4 0 0 
thread: 0, allBlocks[24]: 0 0 0 0 1 0 0 0 0 0 1 3 0 0 0 0 mySum: 5
thread: 0, blockNoZero[24]: 0 1 0 0 1 3 0 0 
thread: 0, allBlocks[25]: 0 0 0 0 1 0 0 0 0 0 2 2 0 0 0 0 mySum: 5
thread: 0, blockNoZero[25]: 0 1 0 0 2 2 0 0 
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 10
thread: 0, allBlocks[26]: 0 0 0 0 0 0 0 0 0 0 2 4 0 0 0 0 mySum: 6
thread: 0, blockNoZero[26]: 0 0 0 0 2 4 0 0 
thread: 0, allBlocks[27]: 0 0 0 0 1 0 0 0 0 0 2 3 0 0 0 0 mySum: 6
thread: 0, blockNoZero[27]: 0 1 0 0 2 3 0 0 
thread: 0, allBlocks[28]: 0 0 0 0 1 0 0 0 0 0 1 4 0 0 0 0 mySum: 6
thread: 0, blockNoZero[28]: 0 1 0 0 1 4 0 0 
copy the latest feasible solution to instance takes time: 0.092022
thread: 2, sOPT: 10
thread: 0, allBlocks[29]: 0 0 0 0 1 0 0 0 0 0 2 4 0 0 0 0 mySum: 7
thread: 0, blockNoZero[29]: 0 1 0 0 2 4 0 0 
copy the latest feasible solution to instance takes time: 0.125681
thread: 3, sOPT: 10
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.131042
thread: 1, sOPT: 10
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 2e-06
thread: 0, sOPT: 11
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 31Thread: , MlBk function is done, and BkID for all processes are collected., MlBk function is done, and BkID for all processes are collected.

2, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: 1 -1 -1 -1
Pick seg 1 for next iteration where LB: 117, UB: 120
BKID: 0, LB: 117, UB: 120, OPT: 10
Dynamic Programming Runtime: 1.13576
Execution time between LB and UB is: 0
By far, all LB UB calculation runtime: 1
Iteration: 3, UB: 120, LB: 117start at time: 1505254815
thread: 0, MlBk is called with LB: 117, UB: 118
 thread: 0, LongJobs.size() 15
thread: thread: 2, MlBk is called with LB: 1, MlBk is called with LB: 119118, UB: , UB: 119120

 thread: 2, LongJobs.size() 15
 thread: 1, LongJobs.size() 15
thread: 1, NSTable size: 22
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: thread: 12, NSTable size: , i: 26
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
4, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 2thread: , i: 1, i: 16, alltableelemets[maxindex].elm[i]: , alltableelemets[maxindex].elm[i]: 00
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 10
, maxN[i].weit: thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 2
2, maxN[i].idx: 0, blockDimSize[i]: thread: 21, i: 11
, alltableelemets[maxindex].elm[i]: thread: 2, i: 1, maxN[i].weit: 4, maxN[i].idx: 1, blockDimSize[i]: 4
thread: 42, i: 2, maxN[i].weit: 2, maxN[i].idx: 
2thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
, blockDimSize[i]: thread: 1, i: 0, maxN[i].weit: 22
thread: 2, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
, maxN[i].idx: 0thread: , blockDimSize[i]: 2, i: 24
, maxN[i].weit: 3thread: 1, i: 1, maxN[i].weit: 4, maxN[i].idx: 1, blockDimSize[i]: 4
, maxN[i].idx: thread: 1, i: 2, maxN[i].weit: 42, blockDimSize[i]: , maxN[i].idx: 3
2thread: 2, i: 5, maxN[i].weit: 5, maxN[i].idx: 5, blockDimSize[i]: 5
thread: 2, i: 6, maxN[i].weit: 2, blockDimSize[i]: 2
thread: 1, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
, maxN[i].idx: thread: 1, i: 64, blockDimSize[i]: , maxN[i].weit: 2
thread: 2, i: 7, maxN[i].weit: 3, maxN[i].idx: 7, blockDimSize[i]: 3
3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: thread: 1, i: 5, maxN[i].weit: 5, maxN[i].idx: 5, blockDimSize[i]: 5
thread: 1, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 1, i: 7, maxN[i].weit: 3, maxN[i].idx: 7, blockDimSize[i]: 3
2thread: 1, i: 0, i: , divisor[i]: 01, divisor[i]: , blockDimSize[i]: 12, blockDimSize[i]: 
2thread: 1, i: 1, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 4, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 5, divisor[i]: 5, blockDimSize[i]: 1
thread: 1, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 7, divisor[i]: 1, blockDimSize[i]: 3

thread: 2, i: 1, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 4, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 5, divisor[i]: 5, blockDimSize[i]: 1
thread: 2, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 7, divisor[i]: 1, blockDimSize[i]: 3
thread: thread: 2, largestBlockVec.elm: 1, largestBlockVec.elm: 0 0 0 0 0 00  0 1 0 0 0 1 00  0 02  40  0 00  0 00 
 thread: 2, blockDimSizeComp: 0 0 0 2 2 2 0 2 0 20 1  1 2 4 30  00  0 00  
thread: 2, divisorComp: 0 0 0 1 2 1 0 1 0 
0 thread: 1, blockDimSizeComp: 0 0 0 2 2 2 03 2 0  0 51 1  2 13  1 00  0 0
 thread: 1, divisorComp: 0 0 0 1 2 1 0 1 0 0 
3 5thread: 2, largestBlockVec: 0 0 0 0 1 0 0 0 0 0  2 14  10  00  00 0  
thread: 2, largestNoZeroBlockVec: 0 1 0 0 2 4 0 0 

thread: 1, largestBlockVec: 0 0 0 0 1 0 0 0 0 0 2 4 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 1 0 0 2 4 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 thread: 0 10 , allBlocks: 00  00 0  , mySum: 0 10 
00 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0  , mySum: 2
0 0 0 0 1 0 0 0 0 0 1 0 0 00 0 0 0 0 0 0 0 0 0 0 , mySum: 0
 0 0 0 0 0 0 0 0 0 0 0 1 0 00 0  00 , mySum:  2, mySum: 
1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 20 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 0  0 0 0 0 0 , mySum: 02 0 
00 0 0 0 1 0 0 0 0 0 0 1 0 0  0 0 0, mySum:  2
0 0 0 0 0 0 0 0 0 0 0 2 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 1 00 0 0  00  0 , mySum: , mySum: 22
0 0 0 0 0 0 0 0 0 0 0 3 0 0 
0 0 0 0 0 1 0 0 0 0 0 1 0 00  0, mySum:  30 0
 , mySum: 0 0 0 0 1 0 0 0 0 0 2 0 0 0 2
0 0 0 0 0 0 0 0 0 0 2 0 0 00 0  00  , mySum: 2
, mySum: 0 0 0 0 1 0 0 0 0 0 0 1 3
0 0 0 0 1 0 0 0 0 0 1 1 00 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 2 0  0 0 00  , mySum: 2
00 0 0 0 0 0 0 0 0 0 0 3 0 0  0 00  , mySum: 3, mySum: 
30 0 0 0 1 0 0 0 0 0 0 2 0 0 0
 0 0 0 0 1 0 0 0 0 0 2 0 00  0, mySum:  30
 0 0 0 0 0 0 0 0 0 0 2 1 0 0 0 00 , mySum:  3, mySum: 
30 0 0 0 0 0 0 0 0 0 1 2 0 0 0
 0 0 0 0 1 0 0 0 0 0 1 1 00 0  0, mySum: 3 
0 0 0 0 0 0 0 0 0 0 2 2 0 00 , mySum: 3
0 0 0 0 1 0 0 0 0 0 0 2 0 0 0 , mySum: 4
 thread: 0, NSTable size: 220
 thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 0, maxN[i].weit: 2, maxN[i].idx: 00, blockDimSize[i]: 2
0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 1 2 0  0 0 1 0 0 0 0 0 0 3 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 1 3 0 00  00 0 0  , mySum: , mySum: 43
0 0 0 0 1 0 0 0 0 0 1 2 0 0
 00 0 0 0 0 0 0 0 0 0 2 2 0 0  0 , mySum: 04
thread: 0 0 0 0 0 00, i:   10, maxN[i].weit:  0 0 0 0 4 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 0 0 0 2 1 0 0 0 0 4, mySum: 4
0 , mySum: 0 40
 0 0 0 0 1 0 0 0 0 0 0 3 0 0 0 0 00 0  0 , mySum: 04 0 
0 0 20 0 0 0 0 0 0 0 0 0 1 3 0 3  00 0  0 0 , maxN[i].idx: 0 , mySum: 5
0 0 0 0 0 0 0 0 0 0 1 4 0 0 0 10 , mySum: 5
0 , mySum: 40 
00 0 0 0 1 0 0 0 0 0 1 2 0 0 0 0 1 0 0 0 0 0 0 4 0 0 0 0 , mySum: 5
, blockDimSize[i]: 4
0thread: 0, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 0, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 0, i: 4, maxN[i].weit: 3, maxN[i].idx:  4, blockDimSize[i]: 3
thread: 0, i: 5, maxN[i].weit: 5, maxN[i].idx: 5, blockDimSize[i]: 5
thread: 0, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 0, i: 7, maxN[i].weit: 3, maxN[i].idx: 7, blockDimSize[i]: 3
 thread: 0, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 1, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 5, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 7, divisor[i]: 1, blockDimSize[i]: 3
0thread: 0, largestBlockVec.elm: 0  00 , mySum:  400 
0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 , mySum: 4 
0 00 0 0 1 0 0 0 0 0 2 1 0 0 0 0 , mySum: 4 
0 0 0 0 0 0 0 0 0 0 2 3 0 00 0 0 , mySum: 5
1 0 0 00  0 1  00 0 0 0 0 0 1 3 0 0 0 0 , mySum: 5
 0 0 0 0 1 0 0 0 0 0 2 2 0 0 00  0 , mySum: 5
0 0 0 0 0 0 0 0 0 0 2 4 0 0 0 0 0 0, mySum:  6
0 0 0 0 1 0 0 0 0 0 2 23 0 0 0 0 , mySum: 6
0 0 0 0 1 0 0 0 0 0 1 4 0 0  04  0 , mySum: 06 
00  0 00  000 
thread: 0, blockDimSizeComp: 0 0 0 2 2 2 0 2 0  0 10  1  1 2 3 0 0 
0 0 0 0 0 2 4 thread: 0 00 0 0, divisorComp:  0, mySum: 7 0 
0 0 0 1 4 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 0 0 0 0 4 0 0 1 2 1 0 1 0 0 3 5 1 10  00  00 , mySum:  5
0 0 0 0 1 0 0 0 0 0 1 3 0 0 0 
0 thread: 0, largestBlockVec: 0 0 0 0 1 0 0 0 0 0 , mySum: 2 45 
00 0 0 0 1 0 0 0 0 0 2 2 0 0  0 0 0 
0thread: 0, largestNoZeroBlockVec: 0 1 0 0 2 4 0 0 
 0 , mySum: 5
0 0 0 0 0 0 0 0 0 0 2 4 0 0 0 0 , mySum: 6
0 0 0 0 1 0 0 0 0 0 2 3 0 0 0 0 , mySum: 6
0 0 0 0 1 0 0 0 0 0 1 4 0 0 0 0 , mySum: 6
0 0 0 0 1 0 0 0 0 0 2 4 0 0 0 0 , mySum: 7
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 0 0 0 2 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 0 0 0 1 1 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 0 0 0 0 2 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 1 2 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 2 2 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 0 0 0 0 3 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 1 3 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 0 0 0 1 2 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 0 0 0 2 1 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 2 3 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 0 0 0 1 4 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 0 0 0 0 4 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 0 0 0 1 3 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 0 0 0 2 2 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 0 0 0 2 4 0 0 0 0 , mySum: 6
0 0 0 0 1 0 0 0 0 0 2 3 0 0 0 0 , mySum: 6
0 0 0 0 1 0 0 0 0 0 1 4 0 0 0 0 , mySum: 6
0 0 0 0 1 0 0 0 0 0 2 4 0 0 0 0 , mySum: 7
thread: 2, maxBlockLvlSize: 6
thread: 2, maxInBlockLvlSize: 25
thread: 2, AllTableSize: 2880, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 6
thread: 0, maxInBlockLvlSize: 25
thread: 0, AllTableSize: 2880, maxSubsetsSize: 64
thread: 1, maxBlockLvlSize: 6
thread: 1, maxInBlockLvlSize: 25
thread: 1, AllTableSize: 2880, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 1 0 0 
thread: 0, allBlocks[2]: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 1 0 0 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 0 0 1 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 0 0 1 1 0 0 
thread: 0, allBlocks[5]: 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 1 0 0 1 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 0 0 0 2 0 0 0 
thread: 0, allBlocks[7]: 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 0 1 0 0 0 1 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 mySum: 2
thread: 0, blockNoZero[8]: 0 0 0 0 0 2 0 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 mySum: 3
thread: 0, blockNoZero[9]: 0 0 0 0 0 3 0 0 
thread: 0, allBlocks[10]: 0 0 0 0 1 0 0 0 0 0 2 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 0 1 0 0 2 0 0 0 
thread: 0, allBlocks[11]: 0 0 0 0 1 0 0 0 0 0 1 1 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 0 1 0 0 1 1 0 0 
thread: 0, allBlocks[12]: 0 0 0 0 1 0 0 0 0 0 0 2 0 0 0 0 mySum: 3
thread: 0, blockNoZero[12]: 0 1 0 0 0 2 0 0 
thread: 0, allBlocks[13]: 0 0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 mySum: 3
thread: 0, blockNoZero[13]: 0 0 0 0 2 1 0 0 
thread: 0, allBlocks[14]: 0 0 0 0 0 0 0 0 0 0 1 2 0 0 0 0 mySum: 3
thread: 0, blockNoZero[14]: 0 0 0 0 1 2 0 0 
thread: 0, allBlocks[15]: 0 0 0 0 0 0 0 0 0 0 2 2 0 0 0 0 mySum: 4
thread: 0, blockNoZero[15]: 0 0 0 0 2 2 0 0 
thread: 0, allBlocks[16]: 0 0 0 0 1 0 0 0 0 0 0 3 0 0 0 0 mySum: 4
thread: 0, blockNoZero[16]: 0 1 0 0 0 3 0 0 
thread: 0, allBlocks[17]: 0 0 0 0 0 0 0 0 0 0 1 3 0 0 0 0 mySum: 4
thread: 0, blockNoZero[17]: 0 0 0 0 1 3 0 0 
thread: 0, allBlocks[18]: 0 0 0 0 1 0 0 0 0 0 1 2 0 0 0 0 mySum: 4
thread: 0, blockNoZero[18]: 0 1 0 0 1 2 0 0 
thread: 0, allBlocks[19]: 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 mySum: 4
thread: 0, blockNoZero[19]: 0 0 0 0 0 4 0 0 
thread: 0, allBlocks[20]: 0 0 0 0 1 0 0 0 0 0 2 1 0 0 0 0 mySum: 4
thread: 0, blockNoZero[20]: 0 1 0 0 2 1 0 0 
thread: 0, allBlocks[21]: 0 0 0 0 0 0 0 0 0 0 2 3 0 0 0 0 mySum: 5
thread: 0, blockNoZero[21]: 0 0 0 0 2 3 0 0 
thread: 0, allBlocks[22]: 0 0 0 0 0 0 0 0 0 0 1 4 0 0 0 0 mySum: 5
thread: 0, blockNoZero[22]: 0 0 0 0 1 4 0 0 
thread: 0, allBlocks[23]: 0 0 0 0 1 0 0 0 0 0 0 4 0 0 0 0 mySum: 5
thread: 0, blockNoZero[23]: 0 1 0 0 0 4 0 0 
thread: 0, allBlocks[24]: 0 0 0 0 1 0 0 0 0 0 1 3 0 0 0 0 mySum: 5
thread: 0, blockNoZero[24]: 0 1 0 0 1 3 0 0 
thread: 0, allBlocks[25]: 0 0 0 0 1 0 0 0 0 0 2 2 0 0 0 0 mySum: 5
thread: 0, blockNoZero[25]: 0 1 0 0 2 2 0 0 
thread: 0, allBlocks[26]: 0 0 0 0 0 0 0 0 0 0 2 4 0 0 0 0 mySum: 6
thread: 0, blockNoZero[26]: 0 0 0 0 2 4 0 0 
thread: 0, allBlocks[27]: 0 0 0 0 1 0 0 0 0 0 2 3 0 0 0 0 mySum: 6
thread: 0, blockNoZero[27]: 0 1 0 0 2 3 0 0 
thread: 0, allBlocks[28]: 0 0 0 0 1 0 0 0 0 0 1 4 0 0 0 0 mySum: 6
thread: 0, blockNoZero[28]: 0 1 0 0 1 4 0 0 
thread: 0, allBlocks[29]: 0 0 0 0 1 0 0 0 0 0 2 4 0 0 0 0 mySum: 7
thread: 0, blockNoZero[29]: 0 1 0 0 2 4 0 0 
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 4e-06
thread: 0, sOPT: 11
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 11
copy the latest feasible solution to instance takes time: 3e-06
thread: 1, sOPT: 11
copy the latest feasible solution to instance takes time: 0.080772
thread: 2, sOPT: 10
BKID: 0, LB: 119, UB: 119, OPT: 10
Dynamic Programming Runtime: 1.11184
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 2
********************************************************
Total execution on UB and LB is: 2
OUT of Bk while loop  
UB    119
LB    119
T1    119
T2    119
OPT   10
nMachines   10
BkID	0
AllProbData.size()    3
ck :   2
AllProbData[ck].Ttable    119
ck :   1
AllProbData[ck].Ttable    119
ck :   0
AllProbData[ck].Ttable    127
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan130
Main Scheduling is Done
File 3-2 is Done.
******************************
Reading File...
File 3-3 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 213, LB: 114start at time: 1505254816
thread: 0, MlBk is called with LB: 114, UB: 139
thread: 3, MlBk is called with LB: 189, UB: 214
thread: thread: 2, MlBk is called with LB: 164, UB: 189
 thread: 0, LongJobs.size() 15
1, MlBk is called with LB: 139, UB: 164
 thread: 3, LongJobs.size() 11
 thread: 2, LongJobs.size() 14
 thread: 1, LongJobs.size() 15
thread: 3, NSTable size: 15
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 5
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 4
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 3, i: 1, maxN[i].weit: 6, maxN[i].idx: 1, blockDimSize[i]: 6
thread: 3, i: 2, maxN[i].weit: 5, maxN[i].idx: 2, blockDimSize[i]: 5
thread: 3, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 3, i: 0, divisor[i]: 2, blockDimSize[i]: 1
thread: 3, i: 1, divisor[i]: 2, blockDimSize[i]: 3
thread: 3, i: 2, divisor[i]: 5, blockDimSize[i]: 1
thread: 3, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, largestBlockVec.elm: 0 0 0 1 1 0 4 0 0 0 0 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 1 3 0 1 2 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 2 2 0 5 1 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 1 1 0 4 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 1 1 4 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 3 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 1 0 0 3 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 1 1 0 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 4 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 1 0 0 4 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 1 1 0 3 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 1 1 0 4 0 0 0 0 0 0 0 0 0 , mySum: 6
thread: 3, maxBlockLvlSize: 4
thread: 3, maxInBlockLvlSize: 2
thread: 3, AllTableSize: 120, maxSubsetsSize: 64
thread: 2, NSTable size: 34
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 2, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 2, i: 2, maxN[i].weit: 5, maxN[i].idx: 2, blockDimSize[i]: 5
thread: 2, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 2, i: 4, maxN[i].weit: 4, maxN[i].idx: 4, blockDimSize[i]: 4
thread: 2, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 2, i: 0, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, i: 1, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 2, divisor[i]: 5, blockDimSize[i]: 1
thread: 2, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 4, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, largestBlockVec.elm: 0 0 0 1 0 4 0 1 0 0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 2 3 1 2 2 2 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 2 1 5 1 2 1 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 1 0 4 0 1 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 1 0 4 0 1 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 3 0 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 1 0 2 0 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 1 0 3 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 4 0 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 1 0 3 0 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 1 0 4 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 1 0 4 0 1 0 0 0 0 0 0 0 0 , mySum: 6
thread: 2, maxBlockLvlSize: 4
thread: 2, maxInBlockLvlSize: 14
thread: 2, AllTableSize: 960, maxSubsetsSize: 64
thread: 1, NSTable size: 31
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 1, i: 1, maxN[i].weit: 4, maxN[i].idx: 1, blockDimSize[i]: 4
thread: 1, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 1, i: 3, maxN[i].weit: 5, maxN[i].idx: 3, blockDimSize[i]: 5
thread: 1, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 1, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 1, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 1, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 1, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 3, divisor[i]: 5, blockDimSize[i]: 1
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 5, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, largestBlockVec.elm: 0 0 0 0 1 2 4 0 0 0 0 0 0 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 2 2 1 1 0 3 3 2 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 1 2 3 5 0 1 1 1 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 1 2 4 0 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 1 2 4 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 3 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 1 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 2 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 3 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 4 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 1 3 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 2 2 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 4 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 2 3 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 1 4 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 2 4 0 0 0 0 0 0 0 0 0 , mySum: 7
thread: 0, NSTable size: 17
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 0, maxN[i].weit: 5, maxN[i].idx: 0, blockDimSize[i]: 5
thread: 0, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 0, i: 2, maxN[i].weit: 4, maxN[i].idx: 2, blockDimSize[i]: 4
thread: 0, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 0, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 0, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 0, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 0, i: 0, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 2, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 5, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, largestBlockVec.elm: 0 0 0 0 0 4 0 2 1 0 0 0 0 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 0 0 1 0 1 2 2 0 3 3 2 0 0 
thread: 0, divisorComp: 0 0 0 0 0 5 0 3 2 1 0 1 1 1 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 4 0 2 1 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 4 2 1 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 0 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 3 0 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 3 0 0 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 0 1 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 0 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 0 2 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 0 2 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 3 0 1 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 3 0 2 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 4 0 0 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 4 0 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 3 0 2 1 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 4 0 1 1 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 4 0 2 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 4 0 2 1 0 0 0 0 0 0 0 , mySum: 7
thread: 1, maxBlockLvlSize: 6
thread: 1, maxInBlockLvlSize: 18
thread: 1, AllTableSize: 2160, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 6
thread: 0, maxInBlockLvlSize: 18
thread: 0, AllTableSize: 2160, maxSubsetsSize: 64
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 5
copy the latest feasible solution to instance takes time: 0.004147
thread: 3, sOPT: 5
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 1 0 0 0 0 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 1 0 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 1 0 0 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 1 1 0 0 0 0 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 2 0 0 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 1 0 1 0 0 0 0 
thread: 0, allBlocks[7]: 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 1 1 0 0 0 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[8]: 2 0 0 0 0 0 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[9]: 3 0 0 0 0 0 0 
thread: 0, allBlocks[10]: 0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 2 1 0 0 0 0 0 
thread: 0, allBlocks[11]: 0 0 0 0 0 2 0 0 1 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 2 0 1 0 0 0 0 
thread: 0, allBlocks[12]: 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[12]: 1 2 0 0 0 0 0 
thread: 0, allBlocks[13]: 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[13]: 1 1 1 0 0 0 0 
thread: 0, allBlocks[14]: 0 0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[14]: 0 2 1 0 0 0 0 
thread: 0, allBlocks[15]: 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[15]: 4 0 0 0 0 0 0 
thread: 0, allBlocks[16]: 0 0 0 0 0 3 0 1 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[16]: 3 1 0 0 0 0 0 
thread: 0, allBlocks[17]: 0 0 0 0 0 3 0 0 1 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[17]: 3 0 1 0 0 0 0 
thread: 0, allBlocks[18]: 0 0 0 0 0 2 0 1 1 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[18]: 2 1 1 0 0 0 0 
thread: 0, allBlocks[19]: 0 0 0 0 0 2 0 2 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[19]: 2 2 0 0 0 0 0 
thread: 0, allBlocks[20]: 0 0 0 0 0 1 0 2 1 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[20]: 1 2 1 0 0 0 0 
thread: 0, allBlocks[21]: 0 0 0 0 0 2 0 2 1 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[21]: 2 2 1 0 0 0 0 
thread: 0, allBlocks[22]: 0 0 0 0 0 3 0 1 1 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[22]: 3 1 1 0 0 0 0 
thread: 0, allBlocks[23]: 0 0 0 0 0 3 0 2 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[23]: 3 2 0 0 0 0 0 
Thread: 2, gpu_BlockDP is done.
thread: 0, allBlocks[24]: 0 0 0 0 0 4 0 0 1 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[24]: 4 0 1 0 0 0 0 
thread: 0, allBlocks[25]: 0 0 0 0 0 4 0 1 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[25]: 4 1 0 0 0 0 0 
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 6
thread: 0, allBlocks[26]: 0 0 0 0 0 3 0 2 1 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[26]: 3 2 1 0 0 0 0 
thread: 0, allBlocks[27]: 0 0 0 0 0 4 0 1 1 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[27]: 4 1 1 0 0 0 0 
thread: 0, allBlocks[28]: 0 0 0 0 0 4 0 2 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[28]: 4 2 0 0 0 0 0 
copy the latest feasible solution to instance takes time: 0.05854
thread: 2, sOPT: 6
thread: 0, allBlocks[29]: 0 0 0 0 0 4 0 2 1 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[29]: 4 2 1 0 0 0 0 
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 7
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.128409
thread: 1, sOPT: 7
copy the latest feasible solution to instance takes time: 0.116253
thread: 0, sOPT: 9
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: 2, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 31, MlBk function is done, and BkID for all processes are collected., MlBk function is done, and BkID for all processes are collected.

sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 114, UB: 127
BKID: 0, LB: 114, UB: 127, OPT: 9
Dynamic Programming Runtime: 0.841593
Execution time between LB and UB is: 0
By far, all LB UB calculation runtime: 0
Iteration: 2, UB: 127, LB: 114start at time: 1505254816
thread: 0, MlBk is called with LB: 114, UB: 117
 thread: 0, LongJobs.size() 16
thread: thread: thread: 132, MlBk is called with LB: , MlBk is called with LB: 120, UB: 123
117, UB: 120
, MlBk is called with LB: 123, UB: 127
 thread: 3, LongJobs.size() 15
 thread: 2, LongJobs.size() 15
 thread: 1, LongJobs.size() 16
thread: 2, NSTable size: 13
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 5, maxN[i].idx: 0, blockDimSize[i]: 5
thread: 2, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 2, i: 2, maxN[i].weit: 4, maxN[i].idx: 2, blockDimSize[i]: 4
thread: 2, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 2, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 2, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 2, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 2, i: 0, divisor[i]: 5, blockDimSize[i]: 1
thread: 2, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 2, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 5, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, largestBlockVec.elm: 0 0 0 0 0 4 0 2 1 0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 0 0 1 0 1 2 2 0 3 3 2 0 0 
thread: 2, divisorComp: 0 0 0 0 0 5 0 3 2 1 0 1 1 1 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 4 0 2 1 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 4 2 1 0 0 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 0 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 3 0 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 3 0 0 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 0 1 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 0 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 0 2 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 0 2 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 3 0 1 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 3 0 2 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 4 0 0 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 4 0 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 3 0 2 1 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 4 0 1 1 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 4 0 2 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 4 0 2 1 0 0 0 0 0 0 0 , mySum: 7
thread: 3, NSTable size: 13
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 4
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 5, maxN[i].idx: 0, blockDimSize[i]: 5
thread: 3, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 3, i: 2, maxN[i].weit: 4, maxN[i].idx: 2, blockDimSize[i]: 4
thread: 3, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 3, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 3, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 3, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 3, i: 0, divisor[i]: 5, blockDimSize[i]: 1
thread: 3, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, i: 2, divisor[i]: 2, blockDimSize[i]: 2
thread: 3, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 3, i: 5, divisor[i]: 1, blockDimSize[i]: 3
thread: 3, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, largestBlockVec.elm: 0 0 0 0 0 4 0 2 1 0 0 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 0 0 1 0 1 2 2 0 3 3 2 0 0 
thread: 3, divisorComp: 0 0 0 0 0 5 0 3 2 1 0 1 1 1 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 4 0 2 1 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 4 2 1 0 0 0 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 0 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 3 0 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 3 0 0 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 0 1 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 0 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 0 2 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 0 2 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 3 0 1 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 3 0 2 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 4 0 0 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 4 0 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 3 0 2 1 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 4 0 1 1 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 4 0 2 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 4 0 2 1 0 0 0 0 0 0 0 , mySum: 7
thread: 2, maxBlockLvlSize: 6
thread: 2, maxInBlockLvlSize: 18
thread: 2, AllTableSize: 2160, maxSubsetsSize: 64
thread: 3, maxBlockLvlSize: 6
thread: 3, maxInBlockLvlSize: 18
thread: 3, AllTableSize: 2160, maxSubsetsSize: 64
thread: 1, NSTable size: 19
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 1, i: 1, maxN[i].weit: 5, maxN[i].idx: 1, blockDimSize[i]: 5
thread: 1, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 1, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 1, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 1, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 1, i: 6, maxN[i].weit: 3, maxN[i].idx: 6, blockDimSize[i]: 3
thread: 1, i: 7, maxN[i].weit: 2, maxN[i].idx: 7, blockDimSize[i]: 2
thread: 1, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 1, divisor[i]: 5, blockDimSize[i]: 1
thread: 1, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 3, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 5, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 6, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 7, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, largestBlockVec.elm: 0 0 0 0 0 4 0 2 1 0 0 0 0 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 2 0 1 0 1 2 2 0 3 3 2 0 0 
thread: 1, divisorComp: 0 0 0 1 0 5 0 3 2 1 0 1 1 1 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 4 0 2 1 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 4 2 1 0 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 0 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 3 0 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 3 0 0 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 0 1 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 0 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 0 2 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 0 2 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 3 0 1 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 3 0 2 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 4 0 0 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 4 0 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 3 0 2 1 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 4 0 1 1 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 4 0 2 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 4 0 2 1 0 0 0 0 0 0 0 , mySum: 7
thread: 0, NSTable size: 19
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 0, i: 1, maxN[i].weit: 5, maxN[i].idx: 1, blockDimSize[i]: 5
thread: 0, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 0, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 0, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 0, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 0, i: 6, maxN[i].weit: 3, maxN[i].idx: 6, blockDimSize[i]: 3
thread: 0, i: 7, maxN[i].weit: 2, maxN[i].idx: 7, blockDimSize[i]: 2
thread: 0, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 1, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 3, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 5, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 6, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 7, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, largestBlockVec.elm: 0 0 0 0 0 4 0 2 1 0 0 0 0 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 2 0 1 0 1 2 2 0 3 3 2 0 0 
thread: 0, divisorComp: 0 0 0 1 0 5 0 3 2 1 0 1 1 1 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 4 0 2 1 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 4 2 1 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 0 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 3 0 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 3 0 0 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 0 1 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 0 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 0 2 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 0 2 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 3 0 1 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 3 0 2 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 4 0 0 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 4 0 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 3 0 2 1 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 4 0 1 1 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 4 0 2 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 4 0 2 1 0 0 0 0 0 0 0 , mySum: 7
thread: 1, maxBlockLvlSize: 6
thread: 1, maxInBlockLvlSize: 36
thread: 1, AllTableSize: 4320, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 6
thread: 0, maxInBlockLvlSize: 36
thread: 0, AllTableSize: 4320, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 1 0 0 0 0 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 1 0 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 1 0 0 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 1 1 0 0 0 0 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 0 2 0 0 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 1 0 1 0 0 0 0 
thread: 0, allBlocks[7]: 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 0 1 1 0 0 0 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[8]: 0 2 0 0 0 0 0 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[9]: 0 3 0 0 0 0 0 0 
thread: 0, allBlocks[10]: 0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 0 2 1 0 0 0 0 0 
thread: 0, allBlocks[11]: 0 0 0 0 0 2 0 0 1 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 0 2 0 1 0 0 0 0 
thread: 0, allBlocks[12]: 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[12]: 0 1 2 0 0 0 0 0 
thread: 0, allBlocks[13]: 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[13]: 0 1 1 1 0 0 0 0 
thread: 0, allBlocks[14]: 0 0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[14]: 0 0 2 1 0 0 0 0 
thread: 0, allBlocks[15]: 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[15]: 0 4 0 0 0 0 0 0 
thread: 0, allBlocks[16]: 0 0 0 0 0 3 0 1 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[16]: 0 3 1 0 0 0 0 0 
Thread: 2, gpu_BlockDP is done.
thread: 0, allBlocks[17]: 0 0 0 0 0 3 0 0 1 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[17]: 0 3 0 1 0 0 0 0 
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
thread: 0, allBlocks[18]: 0 0 0 0 0 2 0 1 1 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[18]: 0 2 1 1 0 0 0 0 
thread: 0, allBlocks[19]: 0 0 0 0 0 2 0 2 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[19]: 0 2 2 0 0 0 0 0 
thread: 0, allBlocks[20]: 0 0 0 0 0 1 0 2 1 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[20]: 0 1 2 1 0 0 0 0 
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 10
thread: 0, allBlocks[21]: 0 0 0 0 0 2 0 2 1 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[21]: 0 2 2 1 0 0 0 0 
thread: 0, allBlocks[22]: 0 0 0 0 0 3 0 1 1 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[22]: 0 3 1 1 0 0 0 0 
thread: 0, allBlocks[23]: 0 0 0 0 0 3 0 2 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[23]: 0 3 2 0 0 0 0 0 
thread: 0, allBlocks[24]: 0 0 0 0 0 4 0 0 1 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[24]: 0 4 0 1 0 0 0 0 
thread: 0, allBlocks[25]: 0 0 0 0 0 4 0 1 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[25]: 0 4 1 0 0 0 0 0 
copy the latest feasible solution to instance takes time: 0.178746
thread: 2, sOPT: 10
thread: 0, allBlocks[26]: 0 0 0 0 0 3 0 2 1 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[26]: 0 3 2 1 0 0 0 0 
thread: 0, allBlocks[27]: 0 0 0 0 0 4 0 1 1 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[27]: 0 4 1 1 0 0 0 0 
thread: 0, allBlocks[28]: 0 0 0 0 0 4 0 2 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[28]: 0 4 2 0 0 0 0 0 
copy the latest feasible solution to instance takes time: 0.225208
thread: 3, sOPT: 10
thread: 0, allBlocks[29]: 0 0 0 0 0 4 0 2 1 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[29]: 0 4 2 1 0 0 0 0 
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.236292
thread: 0, sOPT: 10
copy the latest feasible solution to instance takes time: 0.171489
thread: 1, sOPT: 10
Thread: 1, MlBk function is done, and BkID for all processes are collected.
Thread: 3, MlBk function is done, and BkID for all processes are collected.Thread: 
2, MlBk function is done, and BkID for all processes are collected.
Thread: 0, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 114, UB: 116
BKID: 0, LB: 114, UB: 116, OPT: 10
Dynamic Programming Runtime: 1.94731
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 1
Iteration: 3, UB: 116, LB: 114start at time: 1505254817
thread: 0, MlBk is called with LB: 114, UB: 115
 thread: 0, LongJobs.size() 16
thread: 1, MlBk is called with LB: 115, UB: 116
 thread: 1, LongJobs.size() 16
thread: 0, NSTable size: 19
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: thread: 01
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 0, i: 1, maxN[i].weit: 5, maxN[i].idx: 1, blockDimSize[i]: 5
thread: 0, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 0, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 0, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 0, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 0, i: 6, maxN[i].weit: 3, maxN[i].idx: 6, blockDimSize[i]: 3
thread: 0, i: 7, maxN[i].weit: 2, maxN[i].idx: 7, blockDimSize[i]: 2
, NSTable size: thread: 0, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 1, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 3, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 5, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 196, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 7, divisor[i]: 1, blockDimSize[i]: 2

thread: thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 00
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 2, maxN[i].idx: , largestBlockVec.elm: 0, blockDimSize[i]: 2
thread: 1, i: 10, maxN[i].weit:  5, maxN[i].idx: 1, blockDimSize[i]: 5
thread: 1, i: 2, maxN[i].weit: 30, maxN[i].idx:  2, blockDimSize[i]: 3
thread: 1, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 1, i: 4, maxN[i].weit: 20, maxN[i].idx:  4, blockDimSize[i]: 2
0thread: 1, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 1, i: 6, maxN[i].weit: 3, maxN[i].idx: 6, blockDimSize[i]: 3
thread: 1, i: 7, maxN[i].weit: 2, maxN[i].idx: 7, blockDimSize[i]: 2
 thread: 1, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 1, divisor[i]: 5, blockDimSize[i]: 1
thread: 1, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 3, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 5, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 6, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 7, divisor[i]: 1, blockDimSize[i]: 2
0thread: 1 , largestBlockVec.elm: 40  00  2 0 01  0 0 04  0 0 02  0 01  0 0 
0 thread: 0, blockDimSizeComp: 0 0 0 2 0 1 0 1 2 2 0 3 3 2 0 0 
thread: 0, divisorComp: 0 0 0 1 0 5 0 3 2 01 0 1 1  1 0 00  0
thread: 0, largestBlockVec: 0 0 0 0 0 4 0 2 1 0  0 00  0 
0thread: 1, blockDimSizeComp: 0 0 0 2 0 1 0 1 2 2 0  0 0 0 3
 thread: 0, largestNoZeroBlockVec: 0 4 2 1 0 0 0 0 
3 2 0 0 
thread: 1, divisorComp: 0 0 0 1 0 5 0 3 2 1 0 1 1 1 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 4 0 2 1 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 4 2 1 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 thread: 01 0, allBlocks: 0  00  0 00  00  00  00  00  00  0, mySum: 1 
0 0 0 0 0 0 0 1 1 0 0 00  00 0 0  00 0  00  , mySum: , mySum: 20
0 0 0 0 0 0 0 0 1 0 0 0 0 0 
00 0 0 0 0 0 0 2 0 0 0  0 00  , mySum: 01 
0 0 0 0 0 0 0 1 0 0 0 0 0 0 00 0  , mySum: 01
 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 0 02 
, mySum: 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 12
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 1 1 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 00 0  0, mySum:  20 
00 0 0 0 0 3 0 0 0 0 0 0 0 0  0 , mySum: 02 
, mySum: 30 0 0 0 0 0 0 2 0 0 0 0 0 0
 0 0 0 0 0 0 2 0 1 0 0 0 0 0 00 0  , mySum: 0 2, mySum: 
0 0 0 0 0 1 0 0 1 0 0 0 0 3
0 0 0 0 0 2 0 0 1 0 0 0 0 0 00 0  0, mySum:  30
 , mySum: 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 02 , mySum: 3

0 0 0 0 0 1 0 1 1 0 0 0 0 0 00 0 0 0 0 1 0 1 0 0 0  0 , mySum: 3
0 0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 02
0 0 0 0 0 2 0 0 0 0 0 0 0 0  0 00  , mySum: 2, mySum: 
0 0 0 0 0 3 0 0 0 0 0 0 0 03 0 0
 , mySum: 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 03 , mySum: 
40 0 0 0 0 2 0 1 0 0 0 0 0 0 
0 0 0 0 0 0 3 0 1 0 0 0 0 0 00 0  0 , mySum: , mySum: 4
0 0 0 0 0 3 0 0 1 0 0 0 0 0 3
0 0 0 0 0 2 0 0 1 0 0 0 0 00 0  00  , mySum: 4, mySum: 
30 0 0 0 0 2 0 1 1 0 0 0 0 0 0 0
 0 0 0 0 0 1 0 2 0 0 0 , mySum: 4
0 0 0 0 0 2 0 2 0 00  00 0  00  0 00  00  , mySum: , mySum: 34

0 0 0 0 0 1 0 1 1 0 0 0 0 00 0 0 0 0 1 0 2 1 0 0 0 0 0 0 , mySum: 3 
0 0 0 0 0 0 0 0 2 1 0 0 0 0 00 0  00  , mySum: , mySum: 43

0 0 0 0 0 2 0 2 1 0 0 0 0 0 00 0 0 0 0 4 0 0 0 0 0 0  0 0 00  0 , mySum: , mySum: 45
0 0 0 0 0 3 0 1 1 0 0 0 0 0 0 0
 , mySum: 0 0 0 0 0 3 0 1 0 0 0 0 05 0 0 
0 , mySum: 0 0 0 0 0 3 0 2 0 0 0 0 0 0 0 04 , mySum: 5

0 0 0 0 0 3 0 0 1 0 0 0 0 0 00 0 0 0 0 4 0 0 1 0 0 0 0  0 , mySum: 4
0 0 0 0 0 2 0 1 1 0 0 0 0 00 0  00  0, mySum:  , mySum: 4
50 0 0 0 0 2 0 2 0 0 0 0 0 
0 0 0 0 0 0 4 0 1 0 0 0 0 00 0 , mySum: 4
 0 0 0 0 0 1 0 2 1 0 0 0 0 00 0 0 , mySum: 5
0 0 0 0 0 3 0 2 1 0 0 0 0 0  0 0 , mySum: 4
0 0 0 0 0 2 0 2 1 0 0 0 00 0 , mySum: 6
0 0 0 0 0 4 0 1 1 0 0 0 0 0  0 0 0 , mySum: 50
 0 0 0 0 0 3 0 1 1 0 0 0 0 00 0  0 , mySum: , mySum: 65

0 0 0 0 0 3 0 2 0 0 0 0 0 0 0 0 0 0 4 0 2 0 0 0 0 0 00 0  0 , mySum: 06 
0 0 0 0 0 4 0 2 1 0 0 0 0 0 0 00  , mySum: , mySum: 75

0 0 0 0 0 4 0 0 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 4 0 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 3 0 2 1 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 4 0 1 1 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 4 0 2 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 4 0 2 1 0 0 0 0 0 0 0 , mySum: 7
thread: 0, maxBlockLvlSize: 6
thread: 0, maxInBlockLvlSize: 36
thread: 0, AllTableSize: 4320, maxSubsetsSize: 64
thread: 1, maxBlockLvlSize: 6
thread: 1, maxInBlockLvlSize: 36
thread: 1, AllTableSize: 4320, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 1 0 0 0 0 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 1 0 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 1 0 0 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 1 1 0 0 0 0 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 0 2 0 0 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 1 0 1 0 0 0 0 
thread: 0, allBlocks[7]: 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 0 1 1 0 0 0 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[8]: 0 2 0 0 0 0 0 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[9]: 0 3 0 0 0 0 0 0 
thread: 0, allBlocks[10]: 0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 0 2 1 0 0 0 0 0 
thread: 0, allBlocks[11]: 0 0 0 0 0 2 0 0 1 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 0 2 0 1 0 0 0 0 
thread: 0, allBlocks[12]: 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[12]: 0 1 2 0 0 0 0 0 
thread: 0, allBlocks[13]: 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[13]: 0 1 1 1 0 0 0 0 
thread: 0, allBlocks[14]: 0 0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[14]: 0 0 2 1 0 0 0 0 
thread: 0, allBlocks[15]: 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[15]: 0 4 0 0 0 0 0 0 
thread: 0, allBlocks[16]: 0 0 0 0 0 3 0 1 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[16]: 0 3 1 0 0 0 0 0 
thread: 0, allBlocks[17]: 0 0 0 0 0 3 0 0 1 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[17]: 0 3 0 1 0 0 0 0 
thread: 0, allBlocks[18]: 0 0 0 0 0 2 0 1 1 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[18]: 0 2 1 1 0 0 0 0 
thread: 0, allBlocks[19]: 0 0 0 0 0 2 0 2 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[19]: 0 2 2 0 0 0 0 0 
thread: 0, allBlocks[20]: 0 0 0 0 0 1 0 2 1 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[20]: 0 1 2 1 0 0 0 0 
thread: 0, allBlocks[21]: 0 0 0 0 0 2 0 2 1 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[21]: 0 2 2 1 0 0 0 0 
thread: 0, allBlocks[22]: 0 0 0 0 0 3 0 1 1 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[22]: 0 3 1 1 0 0 0 0 
thread: 0, allBlocks[23]: 0 0 0 0 0 3 0 2 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[23]: 0 3 2 0 0 0 0 0 
thread: 0, allBlocks[24]: 0 0 0 0 0 4 0 0 1 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[24]: 0 4 0 1 0 0 0 0 
thread: 0, allBlocks[25]: 0 0 0 0 0 4 0 1 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[25]: 0 4 1 0 0 0 0 0 
thread: 0, allBlocks[26]: 0 0 0 0 0 3 0 2 1 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[26]: 0 3 2 1 0 0 0 0 
thread: 0, allBlocks[27]: 0 0 0 0 0 4 0 1 1 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[27]: 0 4 1 1 0 0 0 0 
thread: 0, allBlocks[28]: 0 0 0 0 0 4 0 2 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[28]: 0 4 2 0 0 0 0 0 
thread: 0, allBlocks[29]: 0 0 0 0 0 4 0 2 1 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[29]: 0 4 2 1 0 0 0 0 
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.188878
thread: 0, sOPT: 10
copy the latest feasible solution to instance takes time: 0.189809
thread: 1, sOPT: 10
BKID: 0, LB: 114, UB: 114, OPT: 10
Dynamic Programming Runtime: 1.19595
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 2
********************************************************
Total execution on UB and LB is: 2
OUT of Bk while loop  
UB    114
LB    114
T1    114
T2    114
OPT   10
nMachines   10
BkID	0
AllProbData.size()    3
ck :   2
AllProbData[ck].Ttable    114
ck :   1
AllProbData[ck].Ttable    115
ck :   0
AllProbData[ck].Ttable    126
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan120
Main Scheduling is Done
File 3-3 is Done.
******************************
Reading File...
File 3-4 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 189, LB: 98start at time: 1505254818
thread: 0, MlBk is called with LB: thread: 98, UB: 121
thread: 2, MlBk is called with LB: 144, UB: 167
thread: 1, MlBk is called with LB: 121, UB: 144
3, MlBk is called with LB: 167, UB: 190
 thread: 0, LongJobs.size() 13
 thread: 2, LongJobs.size() 11
 thread: 3, LongJobs.size() 9
 thread: 1, LongJobs.size() 12
thread: 3, NSTable size: 24
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 3, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 3, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 3, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 3, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 3, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, i: 3, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 3, largestBlockVec.elm: 0 0 0 0 2 2 2 0 0 0 0 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 2 1 1 1 3 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 1 3 3 3 1 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 2 2 2 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 2 2 2 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 1 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 2 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 0 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 1 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 2 2 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 1 2 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 2 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 2 2 0 0 0 0 0 0 0 0 0 , mySum: 6
thread: 3, maxBlockLvlSize: 7
thread: 3, maxInBlockLvlSize: 2
thread: 3, AllTableSize: 162, maxSubsetsSize: 64
thread: 2, NSTable size: 40
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 2, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 2, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 2, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 2, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 2, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 2, i: 6, maxN[i].weit: 3, maxN[i].idx: 6, blockDimSize[i]: 3
thread: 2, i: 0, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 3, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 6, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, largestBlockVec.elm: 0 0 0 2 0 2 2 0 0 0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 1 2 1 1 2 2 3 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 3 1 3 3 1 1 1 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 2 0 2 2 0 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 2 0 2 2 0 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 2 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 0 1 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 1 0 2 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 2 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 2 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 2 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 1 0 2 2 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 2 0 1 2 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 2 0 2 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 2 0 2 2 0 0 0 0 0 0 0 0 0 , mySum: 6
thread: 2, maxBlockLvlSize: 7
thread: 2, maxInBlockLvlSize: 7
thread: 2, AllTableSize: 648, maxSubsetsSize: 64
thread: 1, NSTable size: 36
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 1, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 1, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 1, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 1, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 1, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 1, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 1, i: 7, maxN[i].weit: 2, maxN[i].idx: 7, blockDimSize[i]: 2
thread: 1, i: 8, maxN[i].weit: 2, maxN[i].idx: 8, blockDimSize[i]: 2
thread: 1, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 3, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 4, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 7, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 8, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, largestBlockVec.elm: 0 0 0 0 2 0 2 2 0 0 0 0 0 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 2 1 2 1 1 2 2 2 2 0 0 0 0 
thread: 1, divisorComp: 0 0 0 1 3 1 3 3 1 1 1 1 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 2 0 2 2 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 2 0 2 2 0 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 1 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 2 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 0 0 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 0 1 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 0 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 2 2 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 0 1 2 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 0 2 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 0 2 2 0 0 0 0 0 0 0 0 , mySum: 6
thread: 1, maxBlockLvlSize: 7
thread: 1, maxInBlockLvlSize: 20
thread: 1, AllTableSize: 1728, maxSubsetsSize: 64
thread: 0, NSTable size: 28
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 0, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 0, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 0, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 0, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 0, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 0, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 0, i: 7, maxN[i].weit: 2, maxN[i].idx: 7, blockDimSize[i]: 2
thread: 0, i: 8, maxN[i].weit: 2, maxN[i].idx: 8, blockDimSize[i]: 2
thread: 0, i: 9, maxN[i].weit: 2, maxN[i].idx: 9, blockDimSize[i]: 2
thread: 0, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 5, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 7, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 8, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 9, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, largestBlockVec.elm: 0 0 0 0 0 2 0 0 2 0 2 0 0 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 0 2 1 2 2 1 0 1 0 2 2 2 2 
thread: 0, divisorComp: 0 0 0 0 1 3 1 1 3 0 3 0 1 1 1 1 
thread: 0, largestBlockVec: 0 0 0 0 0 2 0 0 2 0 2 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 2 0 0 2 2 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 1 0 1 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 0 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 0 0 0 0 1 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 0 0 0 2 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 2 0 1 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 1 0 2 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 0 1 0 2 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 0 0 2 0 1 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 2 0 2 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 0 0 0 0 2 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 0 0 1 0 1 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 0 0 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 0 0 2 0 2 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 0 0 1 0 2 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 0 0 2 0 1 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 0 0 2 0 2 0 0 0 0 0 , mySum: 6
thread: 0, maxBlockLvlSize: 7
thread: 0, maxInBlockLvlSize: 35
thread: 0, AllTableSize: 3456, maxSubsetsSize: 64
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 4
copy the latest feasible solution to instance takes time: 0.008962
thread: 3, sOPT: 4
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 5
copy the latest feasible solution to instance takes time: 0.034697
thread: 2, sOPT: 5
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 1 0 0 0 0 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 0 0 1 0 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 1 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 0 0 0 2 0 0 0 0 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 0 0 0 1 1 0 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 0 0 0 2 0 0 0 0 0 
thread: 0, allBlocks[7]: 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 0 2 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[8]: 0 1 0 0 0 1 0 0 0 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[9]: 0 1 0 0 1 0 0 0 0 0 
thread: 0, allBlocks[10]: 0 0 0 0 0 1 0 0 1 0 1 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 0 1 0 0 1 1 0 0 0 0 
thread: 0, allBlocks[11]: 0 0 0 0 0 2 0 0 1 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 0 2 0 0 1 0 0 0 0 0 
thread: 0, allBlocks[12]: 0 0 0 0 0 2 0 0 0 0 1 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[12]: 0 2 0 0 0 1 0 0 0 0 
thread: 0, allBlocks[13]: 0 0 0 0 0 1 0 0 2 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[13]: 0 1 0 0 2 0 0 0 0 0 
thread: 0, allBlocks[14]: 0 0 0 0 0 1 0 0 0 0 2 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[14]: 0 1 0 0 0 2 0 0 0 0 
thread: 0, allBlocks[15]: 0 0 0 0 0 0 0 0 2 0 1 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[15]: 0 0 0 0 2 1 0 0 0 0 
thread: 0, allBlocks[16]: 0 0 0 0 0 0 0 0 1 0 2 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[16]: 0 0 0 0 1 2 0 0 0 0 
thread: 0, allBlocks[17]: 0 0 0 0 0 1 0 0 1 0 2 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[17]: 0 1 0 0 1 2 0 0 0 0 
thread: 0, allBlocks[18]: 0 0 0 0 0 1 0 0 2 0 1 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[18]: 0 1 0 0 2 1 0 0 0 0 
thread: 0, allBlocks[19]: 0 0 0 0 0 0 0 0 2 0 2 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[19]: 0 0 0 0 2 2 0 0 0 0 
thread: 0, allBlocks[20]: 0 0 0 0 0 2 0 0 0 0 2 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[20]: 0 2 0 0 0 2 0 0 0 0 
thread: 0, allBlocks[21]: 0 0 0 0 0 2 0 0 1 0 1 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[21]: 0 2 0 0 1 1 0 0 0 0 
thread: 0, allBlocks[22]: 0 0 0 0 0 2 0 0 2 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[22]: 0 2 0 0 2 0 0 0 0 0 
thread: 0, allBlocks[23]: 0 0 0 0 0 1 0 0 2 0 2 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[23]: 0 1 0 0 2 2 0 0 0 0 
thread: 0, allBlocks[24]: 0 0 0 0 0 2 0 0 1 0 2 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[24]: 0 2 0 0 1 2 0 0 0 0 
thread: 0, allBlocks[25]: 0 0 0 0 0 2 0 0 2 0 1 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[25]: 0 2 0 0 2 1 0 0 0 0 
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 6
thread: 0, allBlocks[26]: 0 0 0 0 0 2 0 0 2 0 2 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[26]: 0 2 0 0 2 2 0 0 0 0 
copy the latest feasible solution to instance takes time: 0.066063
thread: 1, sOPT: 6
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 8
copy the latest feasible solution to instance takes time: 0.059512
thread: 0, sOPT: 8
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: Thread: 2, MlBk function is done, and BkID for all processes are collected.13
, MlBk function is done, and BkID for all processes are collected., MlBk function is done, and BkID for all processes are collected.

sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 98, UB: 110
BKID: 0, LB: 98, UB: 110, OPT: 8
Dynamic Programming Runtime: 0.81195
Execution time between LB and UB is: 0
By far, all LB UB calculation runtime: 0
Iteration: 2, UB: 110, LB: 98start at time: 1505254819
thread: 0, MlBk is called with LB: 98, UB: 101
 thread: 0, LongJobs.size() 14
thread: thread: 3, MlBk is called with LB: 107, UB: 110
1, MlBk is called with LB: 101, UB: 104
 thread: 3, LongJobs.size() 13
thread: 2, MlBk is called with LB: 104, UB: 107
 thread: 1, LongJobs.size() 13
 thread: 2, LongJobs.size() 13
thread: 2, NSTable size: 24
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 2, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 2, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 2, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 2, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 2, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 2, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 2, i: 7, maxN[i].weit: 2, maxN[i].idx: 7, blockDimSize[i]: 2
thread: 2, i: 8, maxN[i].weit: 2, maxN[i].idx: 8, blockDimSize[i]: 2
thread: 2, i: 9, maxN[i].weit: 2, maxN[i].idx: 9, blockDimSize[i]: 2
thread: 2, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 4, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 5, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 7, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 8, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 9, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, largestBlockVec.elm: 0 0 0 0 0 2 0 0 2 0 2 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 0 2 1 2 2 1 0 1 0 2 2 2 2 
thread: 2, divisorComp: 0 0 0 0 1 3 1 1 3 0 3 0 1 1 1 1 
thread: 2, largestBlockVec: 0 0 0 0 0 2 0 0 2 0 2 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 2 0 0 2 2 0 0 0 0 
thread: 1, NSTable size: 24
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: thread: 1, i: 2, allBlocks: 011 0 , alltableelemets[maxindex].elm[i]: 00 
0thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 1, i: 1, maxN[i].weit: 3, maxN[i].idx: 1 , blockDimSize[i]: 3
thread: 1, i: 2, maxN[i].weit: 2, maxN[i].idx: 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 1 0 0 0 0 20 0 0 , mySum: , blockDimSize[i]: 1
0 0 0 0 0 1 0 0 0 0 02
thread: 1, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
 thread: 1, i: 4, maxN[i].weit: 30, maxN[i].idx: 4, blockDimSize[i]:  30
 thread: 1, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 1, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 1, i: 7, maxN[i].weit: 2, maxN[i].idx: 7, blockDimSize[i]: 2
thread: 1, i: 8, maxN[i].weit: 02, maxN[i].idx: 8, blockDimSize[i]: 2 
0thread: 1, i: 9, maxN[i].weit: 2, maxN[i].idx: 9, blockDimSize[i]: 2
 thread: 1, i: 0, divisor[i]: 0 1, mySum: , blockDimSize[i]: 2
1thread: 1, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 4, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 5, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 7, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 8, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 9, divisor[i]: 1, blockDimSize[i]: 2
thread: 
1, largestBlockVec.elm: 0 0 0 0 0 0 0 0 0 0 20  0 0 0 0 00  , mySum: 2
00 0 0 0 0 0 0 0 1 0 1 0  0 0 0 00 , mySum: 2 
0 0 0 0 0 0 0 0 02  2 00  0 0 0 0 0 0 20  0, mySum:  2
0 0 0 0 0 2 0 0 0 0 0 2 0 0 0 0 0 0
 thread: 1, blockDimSizeComp: 0 0 0 0 2 1 2 2 1 00 1  00  2 02  0 2 , mySum: 2 
thread: 1, divisorComp: 0 0 0 0 1 3 1 1 3 2
0 0 0 0 0 1 0 0 0 0 1 0 3 0 10  01 0 1  1 0
thread: 1, largestBlockVec: 0 0 0 0 0 2 0 0 2 0 2  0 00  0, mySum:  0 20
0 0 0 0 0 1 0 0 1 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 2 0 0 2 2 0 0  0 0 , mySum: 2
0 0 0 0 0 1 0 0 1 0 1 0 0 00 0  00  
, mySum: 3
0 0 0 0 0 2 0 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 0 0 0 0 1 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 0 0 0 2 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 2 0 1 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 1 0 2 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 0 1 0 2 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 0thread:  10, allBlocks:  02  00 0  1 00  00  00 0  0 0 00  , mySum: 04 0
 0 0 0 0 0 0 0 0 2 00  02 0  0 00 0  , mySum: 00
0 0 0 0 0 0 0 0 0 0 1 0 0 0  0 0 , mySum: 4
0 0 0 0 0 2 0 0 0 0 2 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 1 0 0 0 00 0 0 , mySum: 4
 0 0 0 0 0 2 0 0 1 0 1 0 00 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0  0 , mySum: 1
00 0 0 0 0 0 0 0 0 0 2 0 0  0 0 00  0 , mySum: , mySum: 42

0 0 0 0 0 2 0 0 2 0 0 0 0 00 0 0 0 0 0 0 0 1 0 1 0  0 0 , mySum: 4
0 0 0 0 0 1 0 0 2 0 2 0 0 0 0 , mySum: 02 0
 00 0 0 0 0 0 0 0 2 0 0 0 0  0 0 , mySum: 5
0 0 0 0 0 2 0 0 1 0 2 0 0 00 0 0 , mySum: 2 
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 00  0 , mySum: , mySum: 2
0 0 0 0 0 1 0 0 0 0 1 0 0 5
0 0 0 0 0 2 0 0 2 0 1 0 00 0 0 , mySum: 2 
00 0 0 0 0 1 0 0 1 0 0 0 0 0  0 0 0, mySum:  20 , mySum: 
5
0 0 0 0 0 2 0 0 2 0 2 0 0 0 00 0 0 0 0 1 0 0 1 0 1 0 0  0 00 0  , mySum: , mySum: 36

0 0 0 0 0 2 0 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 0 0 0 0 1 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 0 0 0 2 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 2 0 1 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 1 0 2 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 0 1 0 2 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 0 0 2 0 1 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 2 0 2 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 0 0 0 0 2 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 0 0 1 0 1 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 0 0 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 0 0 2 0 2 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 0 0 1 0 2 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 0 0 2 0 1 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 0 0 2 0 2 0 0 0 0 0 , mySum: 6
thread: 3, NSTable size: 28
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 3, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 3, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 3, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 3, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 3, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 3, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 3, i: 7, maxN[i].weit: 2, maxN[i].idx: 7, blockDimSize[i]: 2
thread: 3, i: 8, maxN[i].weit: 2, maxN[i].idx: 8, blockDimSize[i]: 2
thread: 3, i: 9, maxN[i].weit: 2, maxN[i].idx: 9, blockDimSize[i]: 2
thread: 3, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 4, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, i: 5, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 7, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 8, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 9, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, largestBlockVec.elm: 0 0 0 0 0 2 0 0 2 0 2 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 0 2 1 2 2 1 0 1 0 2 2 2 2 
thread: 3, divisorComp: 0 0 0 0 1 3 1 1 3 0 3 0 1 1 1 1 
thread: 3, largestBlockVec: 0 0 0 0 0 2 0 0 2 0 2 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 2 0 0 2 2 0 0 0 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 1 0 1 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 0 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 0 0 0 0 1 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 0 0 0 2 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 2 0 1 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 1 0 2 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 0 1 0 2 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 0 0 2 0 1 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 2 0 2 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 0 0 0 0 2 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 0 0 1 0 1 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 0 0 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 0 0 2 0 2 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 0 0 1 0 2 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 0 0 2 0 1 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 0 0 2 0 2 0 0 0 0 0 , mySum: 6
thread: 2, maxBlockLvlSize: 7
thread: 2, maxInBlockLvlSize: 35
thread: 2, AllTableSize: 3456, maxSubsetsSize: 64
thread: 1, maxBlockLvlSize: 7
thread: 1, maxInBlockLvlSize: 35
thread: 1, AllTableSize: 3456, maxSubsetsSize: 64
thread: 0, NSTable size: 31
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 0, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 0, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 0, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 0, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 0, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 0, i: 6, maxN[i].weit: 3, maxN[i].idx: 6, blockDimSize[i]: 3
thread: 0, i: 7, maxN[i].weit: 2, maxN[i].idx: 7, blockDimSize[i]: 2
thread: 0, i: 8, maxN[i].weit: 2, maxN[i].idx: 8, blockDimSize[i]: 2
thread: 0, i: 9, maxN[i].weit: 2, maxN[i].idx: 9, blockDimSize[i]: 2
thread: 0, i: 10, maxN[i].weit: 2, maxN[i].idx: 10, blockDimSize[i]: 2
thread: 0, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 5, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 6, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 7, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 8, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 9, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 10, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, largestBlockVec.elm: 0 0 0 0 0 2 0 0 2 0 2 0 0 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 2 2 1 2 2 1 0 1 0 2 2 2 2 
thread: 0, divisorComp: 0 0 0 1 1 3 1 1 3 0 3 0 1 1 1 1 
thread: 0, largestBlockVec: 0 0 0 0 0 2 0 0 2 0 2 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 2 0 0 2 2 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 1 0 1 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 0 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 0 0 0 0 1 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 0 0 0 2 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 2 0 1 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 1 0 2 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 0 1 0 2 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 0 0 2 0 1 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 2 0 2 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 0 0 0 0 2 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 0 0 1 0 1 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 0 0 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 0 0 2 0 2 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 0 0 1 0 2 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 0 0 2 0 1 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 0 0 2 0 2 0 0 0 0 0 , mySum: 6
thread: 3, maxBlockLvlSize: 7
thread: 3, maxInBlockLvlSize: 35
thread: 3, AllTableSize: 3456, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 7
thread: 0, maxInBlockLvlSize: 70
thread: 0, AllTableSize: 6912, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 0 1 0 0 0 0 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 0 0 0 1 0 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 1 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 0 0 0 0 2 0 0 0 0 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 0 0 0 0 1 1 0 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 0 0 0 0 2 0 0 0 0 0 
thread: 0, allBlocks[7]: 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 0 0 2 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[8]: 0 0 1 0 0 0 1 0 0 0 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[9]: 0 0 1 0 0 1 0 0 0 0 0 
thread: 0, allBlocks[10]: 0 0 0 0 0 1 0 0 1 0 1 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 0 0 1 0 0 1 1 0 0 0 0 
thread: 0, allBlocks[11]: 0 0 0 0 0 2 0 0 1 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 0 0 2 0 0 1 0 0 0 0 0 
thread: 0, allBlocks[12]: 0 0 0 0 0 2 0 0 0 0 1 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[12]: 0 0 2 0 0 0 1 0 0 0 0 
thread: 0, allBlocks[13]: 0 0 0 0 0 1 0 0 2 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[13]: 0 0 1 0 0 2 0 0 0 0 0 
thread: 0, allBlocks[14]: 0 0 0 0 0 1 0 0 0 0 2 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[14]: 0 0 1 0 0 0 2 0 0 0 0 
thread: 0, allBlocks[15]: 0 0 0 0 0 0 0 0 2 0 1 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[15]: 0 0 0 0 0 2 1 0 0 0 0 
thread: 0, allBlocks[16]: 0 0 0 0 0 0 0 0 1 0 2 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[16]: 0 0 0 0 0 1 2 0 0 0 0 
thread: 0, allBlocks[17]: 0 0 0 0 0 1 0 0 1 0 2 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[17]: 0 0 1 0 0 1 2 0 0 0 0 
thread: 0, allBlocks[18]: 0 0 0 0 0 1 0 0 2 0 1 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[18]: 0 0 1 0 0 2 1 0 0 0 0 
thread: 0, allBlocks[19]: 0 0 0 0 0 0 0 0 2 0 2 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[19]: 0 0 0 0 0 2 2 0 0 0 0 
thread: 0, allBlocks[20]: 0 0 0 0 0 2 0 0 0 0 2 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[20]: 0 0 2 0 0 0 2 0 0 0 0 
thread: 0, allBlocks[21]: 0 0 0 0 0 2 0 0 1 0 1 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[21]: 0 0 2 0 0 1 1 0 0 0 0 
thread: 0, allBlocks[22]: 0 0 0 0 0 2 0 0 2 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[22]: 0 0 2 0 0 2 0 0 0 0 0 
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 9
thread: 0, allBlocks[23]: 0 0 0 0 0 1 0 0 2 0 2 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[23]: 0 0 1 0 0 2 2 0 0 0 0 
Thread: 3, gpu_BlockDP is done.
thread: 0, allBlocks[24]: 0 0 0 0 0 2 0 0 1 0 2 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[24]: 0 0 2 0 0 1 2 0 0 0 0 
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 8
copy the latest feasible solution to instance takes time: 0.274578
thread: 2, sOPT: 9
Thread: 1, gpu_BlockDP is done.
thread: 0, allBlocks[25]: 0 0 0 0 0 2 0 0 2 0 1 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[25]: 0 0 2 0 0 2 1 0 0 0 0 
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 9
thread: 0, allBlocks[26]: 0 0 0 0 0 2 0 0 2 0 2 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[26]: 0 0 2 0 0 2 2 0 0 0 0 
copy the latest feasible solution to instance takes time: 0.342462
thread: 3, sOPT: 8
copy the latest feasible solution to instance takes time: 0.258456
thread: 1, sOPT: 9
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.142715
thread: 0, sOPT: 9
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 2, MlBk function is done, and BkID for all processes are collected.1
, MlBk function is done, and BkID for all processes are collected.
Thread: 3, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 98, UB: 100
BKID: 0, LB: 98, UB: 100, OPT: 9
Dynamic Programming Runtime: 2.99258
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 2
Iteration: 3, UB: 100, LB: 98start at time: 1505254820
thread: 0, MlBk is called with LB: 98, UB: 99
 thread: 0, LongJobs.size() 14
thread: 1, MlBk is called with LB: 99, UB: 100
 thread: 1, LongJobs.size() 14
thread: 1, NSTable size: 31
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 0, NSTable size: 31thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 1

thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 1
, alltableelemets[maxindex].elm[i]: thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 01

thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 1thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 1

thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 1thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 2

thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 1
thread: thread: 1, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 1, i: 1, maxN[i].weit: 20, maxN[i].idx: 1, blockDimSize[i]: , i: 20, maxN[i].weit: 
2, maxN[i].idx: thread: 1, i: 2, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 0, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 0, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 1, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 21, i: 4, blockDimSize[i]: , maxN[i].weit: 32, maxN[i].idx: 
4, blockDimSize[i]: 2thread: 0, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 0
, i: 4, maxN[i].weit: 2thread: 1, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 1, i: 6, maxN[i].weit: 3, maxN[i].idx: 6, blockDimSize[i]: 3
thread: 1, i: 7, maxN[i].weit: 2, maxN[i].idx: 7, blockDimSize[i]: 2
, maxN[i].idx: thread: 1, i: 8, maxN[i].weit: 2, maxN[i].idx: 8, blockDimSize[i]: 4, blockDimSize[i]: 22

thread: 0, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 0, i: 6, maxN[i].weit: 3, maxN[i].idx: 6, blockDimSize[i]: 3
thread: 0, i: 7, maxN[i].weit: 2, maxN[i].idx: 7, blockDimSize[i]: 2
thread: 0, i: 8, maxN[i].weit: thread: 1, i: 9, maxN[i].weit: 2, maxN[i].idx: 9, blockDimSize[i]: 2
thread: 1, i: 10, maxN[i].weit: 2, maxN[i].idx: 10, blockDimSize[i]: 2
2, maxN[i].idx: 8, blockDimSize[i]: 2
thread: 0, i: 9, maxN[i].weit: 2, maxN[i].idx: 9, blockDimSize[i]: 2
thread: 0, i: 10, maxN[i].weit: 2, maxN[i].idx: 10, blockDimSize[i]: 2
thread: thread: 0, i: 0, divisor[i]: 11, i: , blockDimSize[i]: 2
0thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 5, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 6, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 7, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 8, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 9, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 10, divisor[i]: 1, blockDimSize[i]: 2
, divisor[i]: 1, blockDimSize[i]: thread: 20, largestBlockVec.elm: 
thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 5, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 6, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 7, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 8, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 9, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 10, divisor[i]: 1, blockDimSize[i]: 2
0thread: 1, largestBlockVec.elm:  0 0 0 0 00  0 0 2 0 0 0 2 0 2 00  2 0 02  00  20  00 0  
thread: 1, blockDimSizeComp: 0 0 0 2 2 1 2 2 1 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 2 2 1 2 2 1 00 1 0 2  21  02  22  2 
2thread: 1, divisorComp: 0 0 0 1 1 3 1 1 3  2 
thread: 0, divisorComp: 0 0 0 1 1 3 1 1 3 0 3 0 1 01 3  10  11 1  1 
1thread: 1, largestBlockVec: 0 0 0 0 0 2 0 0 2  
thread: 0, largestBlockVec: 0 0 0 0 0 2 0 0 2 0 02 0  0 0 2 00 0  00  0
 0thread: 0, largestNoZeroBlockVec: 0 0 2 0 0 2 2 0 0  
thread: 1, largestNoZeroBlockVec: 0 0 2 0 0 2 2 0 00 0 0  
0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
thread: 0 0 00 , allBlocks: 00  0 00  00 0  0 00  00 1  0 00  0 00  0 , mySum: 01
0 0 0 0 0 0 0 0 1 0 0  00  0 0 00  00  00 0  0, mySum:  1, mySum: 
0 0 0 0 0 1 0 0 0 0 0 0 0 00 0 0 
, mySum: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1
0 0 0 0 0 0 0 0 0 0 2 0 0 00 0  0 , mySum: 02 , mySum: 1
0 0 0 0 0 0 0 0 1 0 1 0 0 0
 0 0 0 0 0 0 0 0 1 0 0 0 0 00  00  0 , mySum: , mySum: 21
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 2 0 0 00 0  0, mySum:  0 0 1, mySum: 
0 0 0 0 0 0 0 0 0 0 2 0 0 0 2
0 0 0 0 0 2 0 0 0 0 0 0 0 00 0  00 , mySum:  , mySum: 22

0 0 0 0 0 0 0 0 1 0 1 0 0 0 00 0 0 0 0 1 0 0 0 0 1 0  0 0 00  0, mySum:  2, mySum: 2

0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 00 0 0 0 0 1 0 0 1 0 0 0  0, mySum:  20
 0 0 0 0 0 2 0 0 0 0 0 0 0 00 0  00 , mySum:  2
0 0 0 0 0 1 0 0 0 0 1 0 0 0, mySum:  0 20 
, mySum: 2
0 0 0 0 0 1 0 0 1 0 1 0 0 0 0 0 0 0 1 0 0 1 0 0 0 00 0 0  0 0, mySum:  0 2, mySum: 
30 0 0 0 0 1 0 0 1 0 1 0 0 
0 0 0 0 0 0 2 0 0 1 0 0 0 00 0  0 00  , mySum: , mySum: 33

0 0 0 0 0 2 0 0 1 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 1 00 0  0 0, mySum: 3 
00 0 0 0 0 2 0 0 0 0 1 0 0 0  0 , mySum: 3
00 0 0 0 0 1 0 0 2 0 0 0 0 0  0 00  , mySum: , mySum: 3
3
0 0 0 0 0 1 0 0 2 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 2 00  00  0 , mySum: 0 30 , mySum: 3

0 0 0 0 0 0 0 0 2 0 1 0 00 0 0 0 0 1 0 0 0 0 2  0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 1 0 2 0 0 0 0 0 0 , mySum: 3
00 0 0 0 0 0 0 0 2 0 1 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 0 1 0 2 0 0  0 0 0 0, mySum: 4 0
 0 0 0 0 0 1 0 0 2 0 1 0 0 , mySum: 3
0 0 0 0 0 0 0 0 1 0 2 0 0 0 0 0 0 , mySum: 04 0
 0 0 0 0 0 0 0 0 2 0 2 0 00 , mySum: 3
0 0 0 0 0 1 0 0 1 0 2 0 0 0 0 0 0 , mySum: 4 
0 00 0 0 0 0 2 0 0 0 0 2 0  0 0, mySum:  0 0 4, mySum: 
0 0 0 0 0 1 0 0 2 0 1 0 0 0 04
0 0 0 0 0 2 0 0 1 0 1 0  0 , mySum: 4
0 0 0 0 0 0 0 0 2 0 2 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 0 0 2 0 0 0 00 0 0 , mySum: 4
0 0 0 0 0 2 0 0 0 0 2 0 0 0 0 0 0 , mySum: 4 
0 0 0 0 0 1 0 0 2 0 2 0 0 00 0  00  , mySum: 5
, mySum: 0 0 0 0 0 2 0 0 1 0 2 0 0 40 0 
00 0 0 0 0 2 0 0 1 0 1 0 0 0 0 , mySum: 5
0 0 0 0 0 2 0 0 2 0 1 0 0 0  0 0 0 , mySum: , mySum: 45

0 0 0 0 0 2 0 0 2 0 2 0 00 0 0 0 0 2 0 0 2 0 0 0 0 0 0 , mySum: 6
 0 0 0 0 , mySum: 4
0 0 0 0 0 1 0 0 2 0 2 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 0 0 1 0 2 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 0 0 2 0 1 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 0 0 2 0 2 0 0 0 0 0 , mySum: 6
thread: 0, maxBlockLvlSize: 7
thread: 0, maxInBlockLvlSize: 70
thread: 0, AllTableSize: 6912, maxSubsetsSize: 64
thread: 1, maxBlockLvlSize: 7
thread: 1, maxInBlockLvlSize: 70
thread: 1, AllTableSize: 6912, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 0 1 0 0 0 0 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 0 0 0 1 0 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 1 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 0 0 0 0 2 0 0 0 0 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 0 0 0 0 1 1 0 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 0 0 0 0 2 0 0 0 0 0 
thread: 0, allBlocks[7]: 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 0 0 2 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[8]: 0 0 1 0 0 0 1 0 0 0 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[9]: 0 0 1 0 0 1 0 0 0 0 0 
thread: 0, allBlocks[10]: 0 0 0 0 0 1 0 0 1 0 1 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 0 0 1 0 0 1 1 0 0 0 0 
thread: 0, allBlocks[11]: 0 0 0 0 0 2 0 0 1 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 0 0 2 0 0 1 0 0 0 0 0 
thread: 0, allBlocks[12]: 0 0 0 0 0 2 0 0 0 0 1 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[12]: 0 0 2 0 0 0 1 0 0 0 0 
thread: 0, allBlocks[13]: 0 0 0 0 0 1 0 0 2 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[13]: 0 0 1 0 0 2 0 0 0 0 0 
thread: 0, allBlocks[14]: 0 0 0 0 0 1 0 0 0 0 2 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[14]: 0 0 1 0 0 0 2 0 0 0 0 
thread: 0, allBlocks[15]: 0 0 0 0 0 0 0 0 2 0 1 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[15]: 0 0 0 0 0 2 1 0 0 0 0 
thread: 0, allBlocks[16]: 0 0 0 0 0 0 0 0 1 0 2 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[16]: 0 0 0 0 0 1 2 0 0 0 0 
thread: 0, allBlocks[17]: 0 0 0 0 0 1 0 0 1 0 2 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[17]: 0 0 1 0 0 1 2 0 0 0 0 
thread: 0, allBlocks[18]: 0 0 0 0 0 1 0 0 2 0 1 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[18]: 0 0 1 0 0 2 1 0 0 0 0 
thread: 0, allBlocks[19]: 0 0 0 0 0 0 0 0 2 0 2 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[19]: 0 0 0 0 0 2 2 0 0 0 0 
thread: 0, allBlocks[20]: 0 0 0 0 0 2 0 0 0 0 2 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[20]: 0 0 2 0 0 0 2 0 0 0 0 
thread: 0, allBlocks[21]: 0 0 0 0 0 2 0 0 1 0 1 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[21]: 0 0 2 0 0 1 1 0 0 0 0 
thread: 0, allBlocks[22]: 0 0 0 0 0 2 0 0 2 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[22]: 0 0 2 0 0 2 0 0 0 0 0 
thread: 0, allBlocks[23]: 0 0 0 0 0 1 0 0 2 0 2 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[23]: 0 0 1 0 0 2 2 0 0 0 0 
thread: 0, allBlocks[24]: 0 0 0 0 0 2 0 0 1 0 2 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[24]: 0 0 2 0 0 1 2 0 0 0 0 
thread: 0, allBlocks[25]: 0 0 0 0 0 2 0 0 2 0 1 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[25]: 0 0 2 0 0 2 1 0 0 0 0 
thread: 0, allBlocks[26]: 0 0 0 0 0 2 0 0 2 0 2 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[26]: 0 0 2 0 0 2 2 0 0 0 0 
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 9
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.310481
thread: 1, sOPT: 9
copy the latest feasible solution to instance takes time: 0.2471
thread: 0, sOPT: 9
BKID: 0, LB: 98, UB: 98, OPT: 9
Dynamic Programming Runtime: 2.07323
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 3
********************************************************
Total execution on UB and LB is: 3
OUT of Bk while loop  
UB    98
LB    98
T1    98
T2    98
OPT   9
nMachines   10
BkID	0
AllProbData.size()    3
ck :   2
AllProbData[ck].Ttable    98
ck :   1
AllProbData[ck].Ttable    99
ck :   0
AllProbData[ck].Ttable    109
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan101
Main Scheduling is Done
File 3-4 is Done.
******************************
Reading File...
File 3-5 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 202, LB: 107start at time: 1505254821
thread: 0, MlBk is called with LB: 107, UB: 131
thread: 2thread: , MlBk is called with LB: 155, UB: 1793, MlBk is called with LB: 
179, UB: thread: 1, MlBk is called with LB: 131, UB: 155
203
 thread: 0, LongJobs.size() 15
 thread: 2, LongJobs.size() 14
 thread: 1, LongJobs.size() 14
 thread: 3, LongJobs.size() 11
thread: 3, NSTable size: 28
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 4
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 3, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 3, i: 2, maxN[i].weit: 5, maxN[i].idx: 2, blockDimSize[i]: 5
thread: 3, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 3, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 3, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, i: 2, divisor[i]: 5, blockDimSize[i]: 1
thread: 3, i: 3, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 3, largestBlockVec.elm: 0 0 0 0 2 4 2 0 0 0 0 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 2 1 1 1 3 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 1 3 5 3 1 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 2 4 2 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 2 4 2 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 1 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 3 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 2 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 1 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 3 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 4 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 4 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 3 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 3 2 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 3 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 1 2 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 2 2 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 2 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 4 1 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 4 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 3 1 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 2 2 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 3 2 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 4 2 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 3 2 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 4 2 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 2 4 1 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 2 4 2 0 0 0 0 0 0 0 0 0 , mySum: 8
thread: 3, maxBlockLvlSize: 9
thread: 3, maxInBlockLvlSize: 2
thread: 3, AllTableSize: 270, maxSubsetsSize: 64
thread: 2, NSTable size: 29
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 2, i: 1, maxN[i].weit: 4, maxN[i].idx: 1, blockDimSize[i]: 4
thread: 2, i: 2, maxN[i].weit: 4, maxN[i].idx: 2, blockDimSize[i]: 4
thread: 2, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 2, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 2, i: 0, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, i: 1, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, i: 2, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, i: 3, divisor[i]: 1, blockDimSize[i]: 4
thread: 2, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, largestBlockVec.elm: 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 2 2 2 4 0 3 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 2 2 2 1 0 1 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 1 1 1 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
thread: 1, NSTable size: 25
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 1, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 1, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 1, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 1, i: 4, maxN[i].weit: 4, maxN[i].idx: 4, blockDimSize[i]: 4
thread: 1, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 1, i: 0, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 3, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, i: 4, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, i: 5, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, largestBlockVec.elm: 0 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 0 2 3 2 2 2 0 3 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 2 1 1 2 2 0 1 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 1 0 0 1 1 0 
thread: 2, maxBlockLvlSize: 3
thread: 2, maxInBlockLvlSize: 22
thread: 2, AllTableSize: 768, maxSubsetsSize: 64
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 , mySum: 3
thread: 1, maxBlockLvlSize: 3
thread: 1, maxInBlockLvlSize: 36
thread: 1, AllTableSize: 1152, maxSubsetsSize: 64
thread: 0, NSTable size: 28
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 0, i: 1, maxN[i].weit: 4, maxN[i].idx: 1, blockDimSize[i]: 4
thread: 0, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 0, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 0, i: 4, maxN[i].weit: 4, maxN[i].idx: 4, blockDimSize[i]: 4
thread: 0, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 0, i: 6, maxN[i].weit: 3, maxN[i].idx: 6, blockDimSize[i]: 3
thread: 0, i: 7, maxN[i].weit: 3, maxN[i].idx: 7, blockDimSize[i]: 3
thread: 0, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 1, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 6, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 7, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, largestBlockVec.elm: 0 0 0 0 0 1 2 0 1 0 0 0 0 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 2 0 2 1 2 2 2 3 0 3 0 0 0 
thread: 0, divisorComp: 0 0 0 1 0 2 3 1 2 1 1 0 1 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 1 2 0 1 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 1 2 0 1 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 1 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 2 0 1 0 0 0 0 0 0 0 , mySum: 4
thread: 0, maxBlockLvlSize: 4
thread: 0, maxInBlockLvlSize: 66
thread: 0, AllTableSize: 3456, maxSubsetsSize: 64
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 5
copy the latest feasible solution to instance takes time: 0.017828
thread: 3, sOPT: 5
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 1 0 0 0 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 1 0 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 1 0 0 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 1 0 1 0 0 0 
Thread: 1, gpu_BlockDP is done.
thread: 0, allBlocks[5]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 0 2 0 0 0 0 0 
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 7
copy the latest feasible solution to instance takes time: 0.039488
thread: 1, sOPT: 7
Thread: 2, gpu_BlockDP is done.
thread: 0, allBlocks[6]: 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 1 0 0 1 0 0 0 
thread: 0, allBlocks[7]: 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 0 1 1 0 0 0 0 0 
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 6
copy the latest feasible solution to instance takes time: 0.031349
thread: 2, sOPT: 6
thread: 0, allBlocks[8]: 0 0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[8]: 0 0 2 0 1 0 0 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 1 1 0 1 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[9]: 0 1 1 0 1 0 0 0 
thread: 0, allBlocks[10]: 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 0 1 2 0 0 0 0 0 
thread: 0, allBlocks[11]: 0 0 0 0 0 1 2 0 1 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[11]: 0 1 2 0 1 0 0 0 
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 8
copy the latest feasible solution to instance takes time: 0.059021
thread: 0, sOPT: 8
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 23, MlBk function is done, and BkID for all processes are collected.Thread: 
1, MlBk function is done, and BkID for all processes are collected.
, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 107, UB: 120
BKID: 0, LB: 107, UB: 120, OPT: 8
Dynamic Programming Runtime: 1.26562
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 1
Iteration: 2, UB: 120, LB: 107start at time: 1505254822
thread: 0, MlBk is called with LB: 107, UB: 110
 thread: 0, LongJobs.size() 16
thread: thread: thread: 1, MlBk is called with LB: 11023, UB: , MlBk is called with LB: 116, UB: 120
113
, MlBk is called with LB: 113, UB: 116
 thread: 2, LongJobs.size() 16
 thread: 3, LongJobs.size() 15
 thread: 1, LongJobs.size() 16
thread: 3, NSTable size: 23
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 3, i: 1, maxN[i].weit: 4, maxN[i].idx: 1, blockDimSize[i]: 4
thread: 3, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 3, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 3, i: 4, maxN[i].weit: 4, maxN[i].idx: 4, blockDimSize[i]: 4
thread: 3, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 3, i: 6, maxN[i].weit: 3, maxN[i].idx: 6, blockDimSize[i]: 3
thread: 3, i: 7, maxN[i].weit: 3, maxN[i].idx: 7, blockDimSize[i]: 3
thread: 3, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 1, divisor[i]: 2, blockDimSize[i]: 2
thread: 3, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 4, divisor[i]: 2, blockDimSize[i]: 2
thread: 3, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 6, divisor[i]: 1, blockDimSize[i]: 3
thread: 3, i: 7, divisor[i]: 1, blockDimSize[i]: 3
thread: 3, largestBlockVec.elm: 0 0 0 0 0 1 2 0 1 0 0 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 2 0 2 1 2 2 2 3 0 3 0 0 0 
thread: 3, divisorComp: 0 0 0 1 0 2 3 1 2 1 1 0 1 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 1 2 0 1 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 1 2 0 1 0 0 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 1 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 2 0 1 0 0 0 0 0 0 0 , mySum: 4
thread: 1, NSTable size: 29
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 1, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 1, i: 2, maxN[i].weit: 4, maxN[i].idx: 2, blockDimSize[i]: 4
thread: 1, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 1, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 1, i: 5, maxN[i].weit: 4, maxN[i].idx: 5, blockDimSize[i]: 4
thread: 1, i: 6, maxN[i].weit: 4, maxN[i].idx: 6, blockDimSize[i]: 4
thread: 1, i: 7, maxN[i].weit: 3, maxN[i].idx: 7, blockDimSize[i]: 3
thread: 1, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 2, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 5, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, i: 6, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, i: 7, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, largestBlockVec.elm: 0 0 0 0 0 0 1 0 0 0 1 1 0 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 2 2 0 2 2 3 0 2 2 0 0 3 0 
thread: 1, divisorComp: 0 0 0 1 1 0 2 1 1 0 2 2 0 0 1 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 1 0 0 0 1 1 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 1 0 0 1 1 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 1 1 0 0 0 0 , mySum: 3
thread: 2, NSTable size: 27
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 2, i: 1, maxN[i].weit: 4, maxN[i].idx: 1, blockDimSize[i]: 4
thread: 2, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 2, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 2, i: 4, maxN[i].weit: 4, maxN[i].idx: 4, blockDimSize[i]: 4
thread: 2, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 2, i: 6, maxN[i].weit: 3, maxN[i].idx: 6, blockDimSize[i]: 3
thread: 2, i: 7, maxN[i].weit: 3, maxN[i].idx: 7, blockDimSize[i]: 3
thread: 2, i: 0, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 1, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, i: 2, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 4, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 6, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 7, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, largestBlockVec.elm: 0 0 0 2 0 1 0 0 1 0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 1 0 2 3 2 2 2 3 0 3 0 0 0 
thread: 2, divisorComp: 0 0 0 3 0 2 1 1 2 1 1 0 1 0 0 0 
thread: 2, largestBlockVec: 0 0 0 2 0 1 0 0 1 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 2 1 0 0 1 0 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 2 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 2 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 4
thread: 3, maxBlockLvlSize: 4
thread: 3, maxInBlockLvlSize: 66
thread: 3, AllTableSize: 3456, maxSubsetsSize: 64
thread: 0, NSTable size: 29
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 0, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 0, i: 2, maxN[i].weit: 4, maxN[i].idx: 2, blockDimSize[i]: 4
thread: 0, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 0, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 0, i: 5, maxN[i].weit: 4, maxN[i].idx: 5, blockDimSize[i]: 4
thread: 0, i: 6, maxN[i].weit: 4, maxN[i].idx: 6, blockDimSize[i]: 4
thread: 0, i: 7, maxN[i].weit: 3, maxN[i].idx: 7, blockDimSize[i]: 3
thread: 0, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 2, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 5, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 6, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 7, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, largestBlockVec.elm: 0 0 0 0 0 0 1 0 0 0 1 1 0 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 2 2 0 2 2 3 0 2 2 0 0 3 0 
thread: 0, divisorComp: 0 0 0 1 1 0 2 1 1 0 2 2 0 0 1 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 1 0 0 0 1 1 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 1 0 0 1 1 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 1 1 0 0 0 0 , mySum: 3
thread: 1, maxBlockLvlSize: 3
thread: 1, maxInBlockLvlSize: 132
thread: 1, AllTableSize: 4608, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 3
thread: 0, maxInBlockLvlSize: 132
thread: 0, AllTableSize: 4608, maxSubsetsSize: 64
thread: 2, maxBlockLvlSize: 4
thread: 2, maxInBlockLvlSize: 96
thread: 2, AllTableSize: 5184, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 0 1 0 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 0 0 0 1 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 1 0 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 0 0 0 1 1 0 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 0 1 0 0 0 1 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 0 1 0 0 1 0 0 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 1 0 0 0 1 1 0 0 0 0 mySum: 3
thread: 0, blockNoZero[7]: 0 0 1 0 0 1 1 0 
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 9
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.682368
thread: 3, sOPT: 9
copy the latest feasible solution to instance takes time: 0.75466
thread: 1, sOPT: 10
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.341575
thread: 0, sOPT: 10
copy the latest feasible solution to instance takes time: 0.353042
thread: 2, sOPT: 9
Thread: 2, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 3, MlBk function is done, and BkID for all processes are collected.Thread: 
10, MlBk function is done, and BkID for all processes are collected.
, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 107, UB: 109
BKID: 0, LB: 107, UB: 109, OPT: 10
Dynamic Programming Runtime: 5.6635
Execution time between LB and UB is: 2
By far, all LB UB calculation runtime: 3
Iteration: 3, UB: 109, LB: 107start at time: 1505254824
thread: 0, MlBk is called with LB: 107, UB: 108
 thread: 0, LongJobs.size() 16
thread: 1, MlBk is called with LB: 108, UB: 109
 thread: 1, LongJobs.size() 16
thread: 1, NSTable size: 29
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 1, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 1, i: 2, maxN[i].weit: 4, maxN[i].idx: 2, blockDimSize[i]: 4
thread: 1, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 1, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 1, i: 5, maxN[i].weit: 4, maxN[i].idx: 5, blockDimSize[i]: 4
thread: 1, i: 6, maxN[i].weit: 4, maxN[i].idx: 6, blockDimSize[i]: 4
thread: 1, i: 7, maxN[i].weit: 3, maxN[i].idx: 7, blockDimSize[i]: 3
thread: 1, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 2, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 5, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, i: 6, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, i: 7, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, largestBlockVec.elm: 0 0 0 0 0 0 1 0 0 0 1 1 0 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 2 2 0 2 2 3 0 2 2 0 0 3 0 
thread: 1, divisorComp: 0 0 0 1 1 0 2 1 1 0 2 2 0 0 1 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 1 0 0 0 1 1 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 1 0 0 1 1 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 1 1 0 0 0 0 , mySum: 3
thread: 0, NSTable size: 25
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 0, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 0, i: 2, maxN[i].weit: 4, maxN[i].idx: 2, blockDimSize[i]: 4
thread: 0, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 0, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 0, i: 5, maxN[i].weit: 4, maxN[i].idx: 5, blockDimSize[i]: 4
thread: 0, i: 6, maxN[i].weit: 4, maxN[i].idx: 6, blockDimSize[i]: 4
thread: 0, i: 7, maxN[i].weit: 3, maxN[i].idx: 7, blockDimSize[i]: 3
thread: 0, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 2, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 5, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 6, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 7, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, largestBlockVec.elm: 0 0 0 0 0 0 1 0 0 0 1 1 0 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 2 2 0 2 2 3 0 2 2 0 0 3 0 
thread: 0, divisorComp: 0 0 0 1 1 0 2 1 1 0 2 2 0 0 1 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 1 0 0 0 1 1 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 1 0 0 1 1 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 1 1 0 0 0 0 , mySum: 3
thread: 1, maxBlockLvlSize: 3
thread: 1, maxInBlockLvlSize: 132
thread: 1, AllTableSize: 4608, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 3
thread: 0, maxInBlockLvlSize: 132
thread: 0, AllTableSize: 4608, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 0 1 0 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 0 0 0 1 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 1 0 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 0 0 0 1 1 0 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 0 1 0 0 0 1 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 0 1 0 0 1 0 0 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 1 0 0 0 1 1 0 0 0 0 mySum: 3
thread: 0, blockNoZero[7]: 0 0 1 0 0 1 1 0 
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 2e-06
thread: 0, sOPT: 11
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.078918
thread: 1, sOPT: 10
BKID: 0, LB: 108, UB: 108, OPT: 10
Dynamic Programming Runtime: 1.91709
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 4
********************************************************
Total execution on UB and LB is: 4
OUT of Bk while loop  
UB    108
LB    108
T1    108
T2    108
OPT   10
nMachines   10
BkID	0
AllProbData.size()    3
ck :   2
AllProbData[ck].Ttable    108
ck :   1
AllProbData[ck].Ttable    108
ck :   0
AllProbData[ck].Ttable    119
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan118
Main Scheduling is Done
File 3-5 is Done.
******************************
Reading File...
File 3-6 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 166, LB: 86start at time: 1505254825
thread: 0, MlBk is called with LB: 86, UB: 106
thread: thread: 3, MlBk is called with LB: 146, UB: 166
2, MlBk is called with LB: 126, UB: thread: 1, MlBk is called with LB: 106, UB: 126
146
 thread: 0, LongJobs.size() 14
 thread: 3, LongJobs.size() 12
 thread: 1, LongJobs.size() 13
 thread: 2, LongJobs.size() 13
thread: 3, NSTable size: 24
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 6
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 3, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 3, i: 2, maxN[i].weit: 7, maxN[i].idx: 2, blockDimSize[i]: 7
thread: 3, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 3, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 3, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 2, divisor[i]: 7, blockDimSize[i]: 1
thread: 3, i: 3, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, i: 4, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, largestBlockVec.elm: 0 0 0 0 0 6 2 2 0 0 0 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 2 2 1 1 1 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 1 1 7 3 3 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 6 2 2 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 0 6 2 2 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 3 0 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 3 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 1 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 0 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 2 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 1 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 3 2 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 3 1 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 4 0 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 4 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 5 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 3 0 2 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 2 2 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 2 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 1 2 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 5 1 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 3 1 2 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 5 0 1 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 6 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 4 2 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 4 1 1 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 4 0 2 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 2 2 2 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 3 2 1 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 6 0 1 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 5 2 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 6 1 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 5 0 2 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 5 1 1 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 4 2 1 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 4 1 2 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 3 2 2 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 5 1 2 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 4 2 2 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 5 2 1 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 6 0 2 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 6 1 1 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 6 2 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 5 2 2 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 6 1 2 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 6 2 1 0 0 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 6 2 2 0 0 0 0 0 0 0 0 , mySum: 10
thread: 3, maxBlockLvlSize: 9
thread: 3, maxInBlockLvlSize: 2
thread: 3, AllTableSize: 252, maxSubsetsSize: 64
thread: 1, NSTable size: 21
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: thread: 12, i: , NSTable size: 3515
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
, alltableelemets[maxindex].elm[i]: thread: 02
, i: thread: 1, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 21, alltableelemets[maxindex].elm[i]: , i: 01, maxN[i].weit: 
2, maxN[i].idx: thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 11
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 8, blockDimSize[i]: , alltableelemets[maxindex].elm[i]: 12

thread: 1, i: 2, maxN[i].weit: 4, maxN[i].idx: 2, blockDimSize[i]: thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 42, i: 
0thread: 1, i: 3, maxN[i].weit: 5, maxN[i].idx: 3, blockDimSize[i]: 5
thread: 1, i: 4, maxN[i].weit: 2, maxN[i].idx: , maxN[i].weit: 2, maxN[i].idx: 04, blockDimSize[i]: , blockDimSize[i]: 22

thread: thread: 1, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 1, i: 6, maxN[i].weit: 3, maxN[i].idx: 6, blockDimSize[i]: 3
2, i: 1, maxN[i].weit: 2, maxN[i].idx: 1thread: , blockDimSize[i]: 1, i: 0, divisor[i]: 21, blockDimSize[i]: 
2thread: 2
, i: thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 2, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, i: 3, divisor[i]: 5, blockDimSize[i]: 1
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 6, divisor[i]: 3, blockDimSize[i]: 1
2, maxN[i].weit: thread: 41, maxN[i].idx: , largestBlockVec.elm: 2, blockDimSize[i]: 4
thread: 2, i: 3, maxN[i].weit: 5, maxN[i].idx: 3, blockDimSize[i]: 5
thread: 20 0 0, i:  40, maxN[i].weit:  3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 2, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 2, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
0thread: 2, i:  0, divisor[i]: 1, blockDimSize[i]: 20 
1thread: 2, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 2, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, i: 3, divisor[i]: 5, blockDimSize[i]: 1
thread: 2, i: 4, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 6, divisor[i]: 1, blockDimSize[i]: 2
 thread: 2, largestBlockVec.elm: 4 0 00  0 2 0 00  0 0 0 00  
1thread: 1, blockDimSizeComp: 0 0 0 0 2 2 2 1 2 2 1 4  20  0 0 00 0  00  0 
0thread: 1, divisorComp: 0 0 0 0 1 1 2 5 1 1  0 0 0 3
 0 0 thread: 2, blockDimSizeComp: 0 0 0 2 2 02  10  10  
thread: 1, largestBlockVec: 0 0 0 0 0 0 1 4 0 0 2 02 0  02  0 00  0
 thread: 1, largestNoZeroBlockVec: 0 0 1 4 0 0 2 
0 0 0 0 
thread: 2, divisorComp: 0 0 0 1 1 2 5 3 1 1 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 1 4 2 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 1 4 2 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 , mySum: thread: 2
20 0 0 0 0 0 1 1 0 0 0 0, allBlocks:  00  0 00  00  00  0, mySum:  20
 0 0 0 0 0 0 1 0 0 0 1 0 0 0 00  00 , mySum: 2 
0 0 0 0 0 0 0 0 0 0 2 0 0 00 0 0 0 0  00  00  , mySum: , mySum: 0
20 0 0 0 0 0 0 1 0 0 
00 0 0 0 0 0 0 2 0 0 0 0  0 0 0 0 00 0 , mySum:  1
00 0 0 0 0 1 0 0 0 0 0  0 00  , mySum: 2
00 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 , mySum: 1
 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 2 0 0 0 0 0 00 0  0 , mySum: 03
 0 0 0 0 0 0 1 1 0 0 1 0 00 0 0 0 , mySum: 1
0 0 0 0 0 0 1 1 0 0 0  0 00  00 0  , mySum: 30
0 0 0 0 0 0 0 1 0 0 2 0 0 0  0 0 0, mySum:  , mySum: 23
0 0 0 0 0 1 1 0 0 0 0 0 
0 0 0 0 0 0 0 1 0 0 0 2 0 0 00 0  0 , mySum: 03 0
 , mySum: 0 0 0 0 0 0 0 2 0 0 1 0 0 2
0 0 0 0 0 1 0 1 0 0 0 0 0 , mySum: 30
 00 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 , mySum: 2
 0 0 0 0 0 0 0 2 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 3 0 0 1 0 0 0 0 0 0 0 00 0 , mySum:  2
00 0 0 0 0 0 2 0 0 0  , mySum: 4
0 0 0 0 0 0 1 1 0 0 2 0 0 0 0 0 0 0 00  , mySum: 02
 0 0 0 0 0 0 3 0 0 0 00 0  0, mySum:  0 40
 00 0 0 0 0 0 0 2 0 0 2 0 0 0 , mySum: 3
0 0 0 0 0 1 2 0 0  0 0 , mySum: 4
0 0 0 0 0 0 1 2 0 0 1 0 0 0 0 0 0 00  00  0 0, mySum: 3 
, mySum: 0 0 0 0 0 1 1 1 0 0 4
0 0 0 0 0 0 1 3 0 0 0 0 0 00 0 0  , mySum: 04 
0 00 0 0 0 0 0 0 4 0 0 1 0  0 0 , mySum: 3
0 0 0 0 0 0 1 2 0 0 00 0  0 00  00  0 , mySum: 50
0 0 0 0 0 0 0 3 0 0 2 0 0 0 , mySum: 3
0 0 0 0 0 1 0 2 0 0 0  0 00  0 0, mySum: 5 
00 0 0 0 0 0 1 2 0 0 2 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 1 0 0  0 0 , mySum: 5
0 0 0 0 0 0 1 3 0 0 1 0 0 0 0 00  0 00  0, mySum: 3
 0 0 0 0 0 0 4 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 00  0 0 0, mySum: 4 
00 0 0 0 0 0 3 1 0 0 0  0 , mySum: 0 0 50 
0 , mySum: 0 0 0 0 0 0 0 4 0 0 2 0 04
0 0 0 0 0 1 1 2 0 0  0 00  0 00  0 , mySum: 60
 00 0 0 0 0 0 1 3 0 0 2 0 0  0, mySum:  40
 0 0 0 0 0 0 2 2 0 0 0 0 , mySum: 6
0 0 0 0 0 0 1 4 0 0 1 0 00 0 0  0 , mySum: 60 
0 0 0 0 0 0 0 1 4 0 0 2 00 0  0 0 00 , mySum:  4, mySum: 
7
0 0 0 0 0 1 2 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 4 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 3 2 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 2 2 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 3 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 4 2 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 3 2 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 4 1 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 4 2 0 0 0 0 0 0 0 0 , mySum: 7
thread: 0, NSTable size: 22
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 6
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 0, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 0, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 0, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 0, i: 4, maxN[i].weit: 7, maxN[i].idx: 4, blockDimSize[i]: 7
thread: 0, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 0, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 0, i: 7, maxN[i].weit: 2, maxN[i].idx: 7, blockDimSize[i]: 2
thread: 0, i: 8, maxN[i].weit: 2, maxN[i].idx: 8, blockDimSize[i]: 2
thread: 0, i: 0, divisor[i]: 2, blockDimSize[i]: 1
thread: 0, i: 1, divisor[i]: 2, blockDimSize[i]: 1
thread: 0, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 7, blockDimSize[i]: 1
thread: 0, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 7, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 8, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, largestBlockVec.elm: 0 0 0 1 0 1 0 0 6 0 0 0 0 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 1 0 1 2 2 1 2 2 2 2 0 0 0 
thread: 0, divisorComp: 0 0 0 2 0 2 1 1 7 1 1thread:  1 1 0 20, maxBlockLvlSize:  60 

thread: 2, maxInBlockLvlSize: 10
thread: 2, AllTableSize: 960, maxSubsetsSize: 64
thread: 0, largestBlockVec: 0 0 0 1 0 1 0 0 6 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 1 1 0 0 6 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 0 0 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 1 0 1 0 0 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 1 0 0 0 0 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 , mySum: 5
0 0 0 1 0 1 0 0 3 0 0 0 0 0 0 0 , mySum: 5
0 0 0 1 0 0 0 0 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 0 0 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 1 0 0 0 0 5 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 0 0 5 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 , mySum: 6
0 0 0 1 0 1 0 0 4 0 0 0 0 0 0 0 , mySum: 6
0 0 0 1 0 0 0 0 6 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 0 0 6 0 0 0 0 0 0 0 , mySum: 7
0 0 0 1 0 1 0 0 5 0 0 0 0 0 0 0 , mySum: 7
0 0 0 1 0 1 0 0 6 0 0 0 0 0 0 0 , mySum: 8
thread: 1, maxBlockLvlSize: 6
thread: 1, maxInBlockLvlSize: 10
thread: 1, AllTableSize: 960, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 4
thread: 0, maxInBlockLvlSize: 20
thread: 0, AllTableSize: 1792, maxSubsetsSize: 64
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 5
copy the latest feasible solution to instance takes time: 0.019105
thread: 3, sOPT: 5
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 1 0 0 0 0 
thread: 0, allBlocks[2]: 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 1 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 1 0 0 0 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 1 0 0 1 0 0 0 0 
thread: 0, allBlocks[5]: 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 1 1 0 0 0 0 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 0 0 0 2 0 0 0 0 
thread: 0, allBlocks[7]: 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 1 0 0 0 1 0 0 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[8]: 0 0 0 0 3 0 0 0 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 1 0 0 2 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[9]: 0 1 0 0 2 0 0 0 0 
thread: 0, allBlocks[10]: 0 0 0 1 0 1 0 0 1 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 1 1 0 0 1 0 0 0 0 
thread: 0, allBlocks[11]: 0 0 0 1 0 0 0 0 2 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 1 0 0 0 2 0 0 0 0 
thread: 0, allBlocks[12]: 0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[12]: 0 0 0 0 4 0 0 0 0 
thread: 0, allBlocks[13]: 0 0 0 0 0 1 0 0 3 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[13]: 0 1 0 0 3 0 0 0 0 
thread: 0, allBlocks[14]: 0 0 0 1 0 1 0 0 2 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[14]: 1 1 0 0 2 0 0 0 0 
thread: 0, allBlocks[15]: 0 0 0 1 0 0 0 0 3 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[15]: 1 0 0 0 3 0 0 0 0 
thread: 0, allBlocks[16]: 0 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[16]: 0 0 0 0 5 0 0 0 0 
thread: 0, allBlocks[17]: 0 0 0 1 0 1 0 0 3 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[17]: 1 1 0 0 3 0 0 0 0 
thread: 0, allBlocks[18]: 0 0 0 1 0 0 0 0 4 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[18]: 1 0 0 0 4 0 0 0 0 
thread: 0, allBlocks[19]: 0 0 0 0 0 1 0 0 4 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[19]: 0 1 0 0 4 0 0 0 0 
thread: 0, allBlocks[20]: 0 0 0 1 0 0 0 0 5 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[20]: 1 0 0 0 5 0 0 0 0 
thread: 0, allBlocks[21]: 0 0 0 0 0 1 0 0 5 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[21]: 0 1 0 0 5 0 0 0 0 
thread: 0, allBlocks[22]: 0 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[22]: 0 0 0 0 6 0 0 0 0 
thread: 0, allBlocks[23]: 0 0 0 1 0 1 0 0 4 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[23]: 1 1 0 0 4 0 0 0 0 
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 7
thread: 0, allBlocks[24]: 0 0 0 1 0 0 0 0 6 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[24]: 1 0 0 0 6 0 0 0 0 
thread: 0, allBlocks[25]: 0 0 0 0 0 1 0 0 6 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[25]: 0 1 0 0 6 0 0 0 0 
copy the latest feasible solution to instance takes time: 0.039697
thread: 1, sOPT: 7
thread: 0, allBlocks[26]: 0 0 0 1 0 1 0 0 5 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[26]: 1 1 0 0 5 0 0 0 0 
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 6
thread: 0, allBlocks[27]: 0 0 0 1 0 1 0 0 6 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[27]: 1 1 0 0 6 0 0 0 0 
copy the latest feasible solution to instance takes time: 0.03418
thread: 2, sOPT: 6
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 2e-06
thread: 0, sOPT: 11
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: Thread: 1, MlBk function is done, and BkID for all processes are collected.
32, MlBk function is done, and BkID for all processes are collected.
, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: 1 -1 -1 -1
Pick seg 1 for next iteration where LB: 97, UB: 117
BKID: 0, LB: 97, UB: 117, OPT: 7
Dynamic Programming Runtime: 0.536057
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 1
Iteration: 2, UB: 117, LB: 97start at time: 1505254826
thread: 0, MlBk is called with LB: 97, UB: 102
 thread: 0, LongJobs.size() 14
thread: thread: thread: 1, MlBk is called with LB: 23102, MlBk is called with LB: , UB: 107
112, UB: 117
 thread: 3, LongJobs.size() 13
, MlBk is called with LB: 107, UB: 112
 thread: 1, LongJobs.size() 13
 thread: 2, LongJobs.size() 13
thread: 1, NSTable size: 17
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 6
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
2, NSTable size: 21
thread: 1thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 1
, i: 1thread: , maxN[i].weit: 22, i: , maxN[i].idx: 6, alltableelemets[maxindex].elm[i]: 11, blockDimSize[i]: 
2thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 6
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 2, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 2, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 2, i: 3, maxN[i].weit: 7, maxN[i].idx: 3, blockDimSize[i]: 7
thread: 2, i: 4, maxN[i].weit: 2, maxN[i].idx: 
thread: 1, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 1, i: 3, maxN[i].weit: 7, maxN[i].idx: 3, blockDimSize[i]: 7
thread: 41, i: 4, maxN[i].weit: 2, maxN[i].idx: , blockDimSize[i]: 4, blockDimSize[i]: 22
thread: 2, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 2, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 2, i: 7, maxN[i].weit: 2, maxN[i].idx: 7, blockDimSize[i]: 2

thread: 1, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2thread: 
thread: 1, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
2thread: 1, i: , i: 70, maxN[i].weit: , divisor[i]: 2, maxN[i].idx: 27, blockDimSize[i]: 1, blockDimSize[i]: 
thread: 2, i: 1, divisor[i]: 2, blockDimSize[i]: 1
thread: 22, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 3, divisor[i]: 7, blockDimSize[i]: 1
thread: 2, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 
5, divisor[i]: thread: 1, i: 0, divisor[i]: 2, blockDimSize[i]: 1
thread: 1, i: 1, divisor[i]: 2, blockDimSize[i]: 1
thread: 1, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 3, divisor[i]: 7, blockDimSize[i]: 1
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 7, divisor[i]: 1, blockDimSize[i]: 2
1, blockDimSize[i]: 2thread: 
1thread: 2, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 7, divisor[i]: 1, blockDimSize[i]: , largestBlockVec.elm: 20 
0 0 thread: 20, largestBlockVec.elm:  0 0 1 01  0 0 60  0 0 0 0 00  1 01  0 
thread: 1, blockDimSizeComp: 0 0 0 0 0 1 1 2 1 2 20 2 2  0 0 0 
thread: 1, divisorComp: 0 0 0 0 06  20  02  0 10  07 0  01 
 thread: 2, blockDimSizeComp: 0 0 0 0 0 1 1 2 1 2 1 1 1 0 20 2  02 0  
thread: 1, largestBlockVec: 0 0 0 0 0 1 1 0 6 00 0  00 0  
0 thread: 2, divisorComp: 0 0 0 0 0 2 2 1 7 1 01 1  10 0  0
thread: 1, largestNoZeroBlockVec: 1 1 0 6 0 0 0 0 
 0 
thread: 2, largestBlockVec: 0 0 0 0 0 1 1 0 6 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 1 1 0 6 0 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 thread: 0 20 0, allBlocks:  0 01  00  00 0  0 00  0 0 00 0  00  0 00  0 00 0  0 , mySum: 0 10 , mySum: 
0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 0 0 0 0 0 0 1 0 0 0 0 0 01 0 0 
0 , mySum: 0 0 0 0 0 1 0 0 0 0 0 0 01 0 0 
0 , mySum: 0 0 0 0 0 0 1 0 1 0 0 0 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 20
 0 0 0 0 0 1 1 0 0 0 0 0 0 0 00  00  , mySum: , mySum: 12
0 0 0 0 0 0 1 0 1 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 2 0 0 00 0  , mySum: 02 
00 0 0 0 0 1 1 0 0 0 0 0 0 0 0  0 , mySum: 02 
0 0 0 0 0 0 0 0 2 0 0 0 0 0, mySum:  0 20
 , mySum: 0 0 0 0 0 1 0 0 1 0 0 0 0 0 20 0
 , mySum: 0 0 0 0 0 1 0 0 1 0 0 0 0 0 02
0 0 0 0 0 0 0 0 3 0 0 0  0 , mySum: 2
0 0 0 0 0 0 0 0 3 0 0 0 0 0 00 0  , mySum: 3
0 0 0 0 0 0 1 0 2 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 1 0 1 0 0 0 0 00 0 0  0, mySum:  30 
00 0 0 0 0 1 0 0 2 0 0 0 0  0 , mySum: 0 30 , mySum: 
0 0 0 0 0 1 1 0 1 0 0 0 0 3
0 0 0 0 0 0 0 0 04 0  00  0 0, mySum:  0 30
0 0 0 0 0 1 0 0 2 0 0 0 0 0  0 0 0, mySum:  30 
, mySum: 40 0 0 0 0 0 0 0 4 0 0 0 0
 0 0 0 0 0 0 1 0 3 0 0 0 0 0 0 0 , mySum: 40
0 0 0 0 0 0 1 0 3 0 0 0 0 0  0 00  0, mySum:  4, mySum: 
4
0 0 0 0 0 1 1 0 2 0 0 0 0 0 0 0 0 1 1 0 2 0 0 0 00 0  00 0  0 0, mySum:  4
, mySum: 0 0 0 0 0 1 0 0 3 0 0 0 0 4
0 0 0 0 0 1 0 0 30  00 0  0 0, mySum:  04 0 
00 0 0 0 0 0 0 0 5 0 0 0 0  0 0 00  , mySum: , mySum: 45

0 0 0 0 0 0 0 0 5 0 00 0 0 0 0 1 1 0 3 0 0 0 0 0  0 0 0, mySum:  50 
0 0 0 0 0 1 0 0 4 0 0 0 00 0 0 , mySum: 5
0 0 0 0 0 1 1 0 3 0 0 0 0  0 0 00  , mySum: 05
0 0 0 0 0 1 0 0 4 0 0 0 0 0  0 00  , mySum: , mySum: 55

0 0 0 0 0 0 1 0 4 0 0 0 0 0 0 0 0 0 0 1 0 4 0 0 00  0 00 0  0 0, mySum:  , mySum: 55

0 0 0 0 0 1 0 0 5 0 0 0 0 0 00 0 0 0 0 1 0 0 5 0 0  0 00  0 0 0 , mySum: 6, mySum: 
0 0 0 0 0 0 1 0 5 0 0 0 0 60 0 
0 0 0 0 0 0 1 0 5 0 0 0 0 0 00 0  , mySum: , mySum: 66

0 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 0 0 0 0 6 0 0 0 00 0  00 0  , mySum: 6
00 0 0 0 0 1 1 0 4 0 0 0 0 , mySum: 6
0 0 0 0 0 1 1 0 4 0 0 0 0  0 00 0  0 0 , mySum: , mySum: 66

0 0 0 0 0 1 0 0 6 0 0 0 0 0 0 0 0 1 0 0 6 0 0 00 0 0 0 , mySum:  7
00 0 0 0 0 0 1 0 6 0 0 0  0 0 00  0 0, mySum: 7 
0 0 0 0 0 1 1 0 5 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 1 0 6 0 0 0 00 0  00  00 , mySum:  7, mySum: 7
0 0 0 0 0 1 1 0 5 0 0 0 0 0
 0 0 0 0 0 1 1 0 6 0 0 00 0 0  0 00 , mySum:  8
, mySum: 7
0 0 0 0 0 1 1 0 6 0 0 0 0 0 0 0 , mySum: 8
thread: 0, NSTable size: 22
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 6
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 0, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 0, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 0, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 0, i: 4, maxN[i].weit: 7, maxN[i].idx: 4, blockDimSize[i]: 7
thread: 0, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 0, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 0, i: 7, maxN[i].weit: 2, maxN[i].idx: 7, blockDimSize[i]: 2
thread: 0, i: 8, maxN[i].weit: 2, maxN[i].idx: 8, blockDimSize[i]: 2
thread: 0, i: 0, divisor[i]: 2, blockDimSize[i]: 1
thread: 0, i: 1, divisor[i]: 2, blockDimSize[i]: 1
thread: 0, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 7, blockDimSize[i]: 1
thread: 0, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 7, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 8, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, largestBlockVec.elm: 0 0 0 1 0 1 0 0 6 0 0 0 0 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 1 0 1 2 2 1 2 2 2 2 0 0 0 
thread: 0, divisorComp: 0 0 0 2 0 2 1 1 7 1 1 1 1 0 0 0 
thread: 0, largestBlockVec: 0 0 0 1 0 1 0 0 6 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 1 1 0 0 6 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 0 0 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 1 0 1 0 0 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 1 0 0 0 0 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 , mySum: 5
0 0 0 1 0 1 0 0 3 0 0 0 0 0 0 0 , mySum: 5
0 0 0 1 0 0 0 0 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 0 0 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 1 0 0 0 0 5 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 0 0 5 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 , mySum: 6
0 0 0 1 0 1 0 0 4 0 0 0 0 0 0 0 , mySum: 6
0 0 0 1 0 0 0 0 6 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 0 0 6 0 0 0 0 0 0 0 , mySum: 7
0 0 0 1 0 1 0 0 5 0 0 0 0 0 0 0 , mySum: 7
0 0 0 1 0 1 0 0thread:  26 0, maxBlockLvlSize:  0 40 0 0 
0 0thread: 2, maxInBlockLvlSize: 10
thread: 2, AllTableSize: 896, maxSubsetsSize: 64
 , mySum: 8
thread: 1, maxBlockLvlSize: 4
thread: 1, maxInBlockLvlSize: 10
thread: 1, AllTableSize: 896, maxSubsetsSize: 64
thread: 3, NSTable size: 21
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 4
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 3, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 3, i: 2, maxN[i].weit: 4, maxN[i].idx: 2, blockDimSize[i]: 4
thread: 3, i: 3, maxN[i].weit: 5, maxN[i].idx: 3, blockDimSize[i]: 5
thread: 3, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 3, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 3, i: 6, maxN[i].weit: 3, maxN[i].idx: 6, blockDimSize[i]: 3
thread: 3, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 2, divisor[i]: 2, blockDimSize[i]: 2
thread: 3, i: 3, divisor[i]: 5, blockDimSize[i]: 1
thread: 3, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 6, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, largestBlockVec.elm: 0 0 0 0 0 0 1 4 0 0 2 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 0 2 2 2 1 2 2 1 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 0 1 1 2 5 1 1 3 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 0 1 4 0 0 2 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 0 1 4 0 0 2 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 1 0 0 1 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 1 0 0 2 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 0 0 0 2 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 0 0 1 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 3 0 0 1 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 1 0 0 2 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 2 0 0 2 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 2 0 0 1 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 4 0 0 1 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 3 0 0 2 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 2 0 0 2 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 3 0 0 1 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 4 0 0 2 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 1 3 0 0 2 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 1 4 0 0 1 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 1 4 0 0 2 0 0 0 0 0 , mySum: 7
thread: 0, maxBlockLvlSize: 4
thread: 0, maxInBlockLvlSize: 20
thread: 0, AllTableSize: 1792, maxSubsetsSize: 64
thread: 3, maxBlockLvlSize: 6
thread: 3, maxInBlockLvlSize: 10
thread: 3, AllTableSize: 960, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 1 0 0 0 0 
thread: 0, allBlocks[2]: 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 1 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 1 0 0 0 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 1 0 0 1 0 0 0 0 
thread: 0, allBlocks[5]: 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 1 1 0 0 0 0 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 0 0 0 2 0 0 0 0 
thread: 0, allBlocks[7]: 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 1 0 0 0 1 0 0 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[8]: 0 0 0 0 3 0 0 0 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 1 0 0 2 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[9]: 0 1 0 0 2 0 0 0 0 
thread: 0, allBlocks[10]: 0 0 0 1 0 1 0 0 1 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 1 1 0 0 1 0 0 0 0 
thread: 0, allBlocks[11]: 0 0 0 1 0 0 0 0 2 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 1 0 0 0 2 0 0 0 0 
thread: 0, allBlocks[12]: 0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[12]: 0 0 0 0 4 0 0 0 0 
thread: 0, allBlocks[13]: 0 0 0 0 0 1 0 0 3 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[13]: 0 1 0 0 3 0 0 0 0 
thread: 0, allBlocks[14]: 0 0 0 1 0 1 0 0 2 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[14]: 1 1 0 0 2 0 0 0 0 
thread: 0, allBlocks[15]: 0 0 0 1 0 0 0 0 3 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[15]: 1 0 0 0 3 0 0 0 0 
thread: 0, allBlocks[16]: 0 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[16]: 0 0 0 0 5 0 0 0 0 
thread: 0, allBlocks[17]: 0 0 0 1 0 1 0 0 3 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[17]: 1 1 0 0 3 0 0 0 0 
thread: 0, allBlocks[18]: 0 0 0 1 0 0 0 0 4 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[18]: 1 0 0 0 4 0 0 0 0 
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 7
Thread: 2, gpu_BlockDP is done.
thread: 0, allBlocks[19]: 0 0 0 0 0 1 0 0 4 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[19]: 0 1 0 0 4 0 0 0 0 
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 7
thread: 0, allBlocks[20]: 0 0 0 1 0 0 0 0 5 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[20]: 1 0 0 0 5 0 0 0 0 
thread: 0, allBlocks[21]: 0 0 0 0 0 1 0 0 5 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[21]: 0 1 0 0 5 0 0 0 0 
copy the latest feasible solution to instance takes time: 0.054682
thread: 2, sOPT: 7
thread: 0, allBlocks[22]: 0 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[22]: 0 0 0 0 6 0 0 0 0 
copy the latest feasible solution to instance takes time: 0.073547
thread: 3, sOPT: 7
Thread: 1, gpu_BlockDP is done.
thread: 0, allBlocks[23]: 0 0 0 1 0 1 0 0 4 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[23]: 1 1 0 0 4 0 0 0 0 
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
thread: 0, allBlocks[24]: 0 0 0 1 0 0 0 0 6 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[24]: 1 0 0 0 6 0 0 0 0 
thread: 0, allBlocks[25]: 0 0 0 0 0 1 0 0 6 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[25]: 0 1 0 0 6 0 0 0 0 
thread: 0, allBlocks[26]: 0 0 0 1 0 1 0 0 5 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[26]: 1 1 0 0 5 0 0 0 0 
copy the latest feasible solution to instance takes time: 0.030238
thread: 1, sOPT: 10
thread: 0, allBlocks[27]: 0 0 0 1 0 1 0 0 6 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[27]: 1 1 0 0 6 0 0 0 0 
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 2e-06
thread: 0, sOPT: 11
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: 1, MlBk function is done, and BkID for all processes are collected.
Thread: 2Thread: , MlBk function is done, and BkID for all processes are collected.
3, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: 1 -1 -1 -1
Pick seg 1 for next iteration where LB: 100, UB: 105
BKID: 0, LB: 100, UB: 105, OPT: 10
Dynamic Programming Runtime: 0.623736
Execution time between LB and UB is: 0
By far, all LB UB calculation runtime: 1
Iteration: 3, UB: 105, LB: 100start at time: 1505254826
thread: 0, MlBk is called with LB: 100, UB: 101
 thread: 0, LongJobs.size() 13
thread: thread: 3, MlBk is called with LB: 103, UB: 105
2, MlBk is called with LB: 102, UB: 103
thread: 1, MlBk is called with LB: 101, UB: 102
 thread: 3, LongJobs.size() 13
 thread: 2, LongJobs.size() 13
 thread: 1, LongJobs.size() 13
thread: 3, NSTable size: 17
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 6
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 3, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 3, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 3, i: 3, maxN[i].weit: 7, maxN[i].idx: 3, blockDimSize[i]: 7
thread: 3, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 3, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 3, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 3, i: 7, maxN[i].weit: 2, maxN[i].idx: 7, blockDimSize[i]: 2
thread: 3, i: 0, divisor[i]: 2, blockDimSize[i]: 1
thread: 3, i: 1, divisor[i]: 2, blockDimSize[i]: 1
thread: 3, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 3, divisor[i]: 7, blockDimSize[i]: 1
thread: 3, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 7, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, largestBlockVec.elm: 0 0 0 0 0 1 1 0 6 0 0 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 0 0 1 1 2 1 2 2 2 2 0 0 0 
thread: 3, divisorComp: 0 0 0 0 0 2 2 1 7 1 1 1 1 0 0 0 
thread: thread: 03, largestBlockVec: , NSTable size: 0 0thread:  2, NSTable size: 170 
0thread: 1, NSTable size: 14
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 14
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 6
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 0, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 0, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 0, i: 3, maxN[i].weit: 7, maxN[i].idx: 3, blockDimSize[i]: 7
thread: 0, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 0, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 0, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 0, i: 7, maxN[i].weit: 2, maxN[i].idx: 7, blockDimSize[i]: 2
thread: 0, i: 0, divisor[i]: 2, blockDimSize[i]: 1
thread: 0, i: 1, divisor[i]: 2, blockDimSize[i]: 1
thread: 0, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 3, divisor[i]: 7, blockDimSize[i]: 1
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 7, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, largestBlockVec.elm: 0 0 0 0 thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 6
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 10
thread: 2, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2, i: 
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: , maxN[i].weit: 02, maxN[i].idx: 1
, blockDimSize[i]: 2thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 1

thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 6
 thread: 1, i: 00 1 1 0 6 0 0 0 0 0 0 0 thread: 
2, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 2, i: 3, maxN[i].weit: 7, maxN[i].idx: 3, blockDimSize[i]: 7
 9thread: 1 2, i: 41, maxN[i].weit: 2 , alltableelemets[maxindex].elm[i]: 0 , maxN[i].idx: thread: 3, largestNoZeroBlockVec: 1 1 0 6 0 0 0 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 04 , mySum: 1, blockDimSize[i]: 
0 0 0 0 0 1 0 0 0 0 0 02 0 0
 thread: 10 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 02 , i: 0 05 , maxN[i].weit: 0 , mySum: 62, maxN[i].idx:  51, blockDimSize[i]: 
2

thread: 2, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
0thread: 2, i: 7, maxN[i].weit: 2, maxN[i].idx: 7, blockDimSize[i]: 2
 thread: 2, i: 0, divisor[i]: 2, blockDimSize[i]: 01 0 0 00
thread: 2, i: 1, divisor[i]: 2, blockDimSize[i]: 1
thread: 2, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 3, divisor[i]: 7, blockDimSize[i]: 1
thread: 2, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 7, divisor[i]: 1, blockDimSize[i]: 2
thread: 2 thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 1
 thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 00
 , largestBlockVec.elm: 01 0 1  00  00  thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 2, maxN[i].idx: 00, blockDimSize[i]: 2
thread: 1, i: 1, maxN[i].weit:  2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 1, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 1, i: 3, maxN[i].weit: 7, maxN[i].idx: 3, blockDimSize[i]: 7
thread: 1, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 1, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 1, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 1, i: 7, maxN[i].weit: 2, maxN[i].idx: 7, blockDimSize[i]: 2
thread: 01, i:  0, divisor[i]: 2, blockDimSize[i]: 1
thread: 1, i: 1, divisor[i]: 2, blockDimSize[i]: 1
thread: 1, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 3, divisor[i]: 7, blockDimSize[i]: 1
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 7, divisor[i]: 1, blockDimSize[i]: 2
thread: 01 , largestBlockVec.elm: 0 0 0 
00  00  thread: 0, blockDimSizeComp: 0 0 0 0 0 1 1 20 1 2 2 2 2 0 0  0 
thread: 0, divisorComp: 0 0 0 0 0 2 2 1 7 10 1 1 1 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 1 1 0 6 0  0 0 00  000  0  01  001   0 16  1 0, mySum: 0 2 0
 0060 0 0 0 0 1 1 0 0 0 0  0 0 0 0 00  , mySum: 0 2

0 0 0 0 0 0 0 0 2 0 0 0 thread: 0, largestNoZeroBlockVec: 1 1 0 6 0 0 0 0 0 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 0 0 1 1 2 1 2 2 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 0 0 1 1 2  1 2 2 2 2 0 0 0 0 
2 2 0 0 0 
thread: 1, divisorComp: 0 0 0 0 0 2 2 1 7  
thread: 2, divisorComp: 0 0 0 0 0 2 2 1 7 11 1 1 1 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 1 1 0 6 0  0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 1 1 0 6 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 00 0 0 0 0 0 0 0 0 , mySum:  00
0 0 0 0 0 0 0 0 1 0 0 0  0 0 , mySum: 2
0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 00  0, mySum:  310
  10  0 0 0 0 0thread:  21, allBlocks: 1  0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 1 1 0 6, mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 00 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0  0 0 0 0 0 0 0 0 0 0  0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 00 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0  0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 00  00  0 000 0 0  
0thread: 1, largestNoZeroBlockVec: 1 1 0 6 0 0 0 0 
 , mySum: 1
0 0 0 0 0 0 1 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 1 0 0 0  0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 00 0  0 , mySum: 0thread: 1 , allBlocks: 02
0 0 0 0 0 0 0 0 2 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 00 0 0 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 1 0 0 0 0 0 0  0 0 , mySum: 2
0 0 0 0 0 1 0 0 1 0 0 0  0 0 0 0 0 0 0 0 0 0 0 00 0  , mySum: 00 0 0 0 0 1 1 0 1 0 02 0 0 0 0 
00 0 0 0 0 0 0 0 3 0 0 0  0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 3 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 0 2 0 0 0 00 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 4 0 0 0 0  0 0 0 , mySum: 4
0 0 0 0 0 0 1 0 3 0 0 0 0 00 0 0 , mySum: 4
00 0 0 0  0 1 01  0 02 0   00  00  0 0 00 0   0 , mySum: 04, mySum: 
0 0 0 0 0 1 0 0 3 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 0 2 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 03 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 1 0 2 0 0 0 00 0 0  , mySum: 10
 0 0 0 0 0 0 1 0 1 0 0 0 00 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0  0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 00 0 0 , mySum: 3
0 0 0 0 0 1 1 0 1 0 0 0 0  0 0 0 , mySum: 3
0 0 0 0 0 1 0 0 2 0 0 0 0 00 0 0 , mySum: 3
0 0 0 0 0 0 0 0 4 0 0 0 0 0  0 0 , mySum: 4
0 0 0 0 0 0 0 0 5 0 0 0 0, mySum: 3
0 0 0 0 0 1 1 0 1 0 0 0 0  0 0 0 , mySum: 3
0 0 0 0 0 1 0 0 2 0 0 0 00 0 0 , mySum: 2
0 0 0 0 0 1 0 0 1 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 0 3 0 0 0  0 0 0 , mySum: 5
0 0 0 0 0 1 1 0 3 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 4 0 0 00 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 0 3 0 0 0 0  0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 1 0 2 0 0 0 0  0 0 0 , mySum: 4
0 0 0 0 0 1 0 0 3 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 0 0 4 0 0 00 0 0 , mySum: 4
0 0 0 0 0 1 1 0 2 0 0 0 00 0 0 0 , mySum: 4
0 0 0 0 0 1 0 0 3 0 0 0 0 0  0 0 , mySum: 4
0 0 0 0 0 0 0 0 5 0 0 0 0 00 0 0 , mySum: 5
0 0 0 0 0 1 1 0 3 0 0 0 0  0 0 0 , mySum: 5
00 0 0 0   0 00  0 010   , mySum: 300
 0 0 0 0 0 0 0 1 0 2 0 0 0 0 04 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 0 4 0 0 00 , mySum: 5
0 0 0 0 0 0 1 0 4 0 0 0  , mySum: 4
0 0 0 0 0 0 0 0 5 0 0 0 0  0 0 0 , mySum: 5
0 0 0 0 0 1 1 0 3 0 0 0 0 0 00 0 , mySum: 5
 0 0 0 0 0 01  0 00 0 , mySum: 0  5
0 0 0 0 0 1 0 0 5 0 0 0 0 00 0 0 , mySum: 6
0 0 0 0 0 0 1 0 5 0 0 0 0 0 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 0 4 0 0 0 00 0 0 , mySum: 5
0 0 0 0 0 1 0 0 5 0 0 0 0  0 0 0 , mySum: 6
0 0 0 0 0 0 1 0 5 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 1 0 1 0 0 0  0 0 , mySum: 6
0 0 0 0 0 0 0 0 6 0 0 0 0  0 0 0 , mySum: 6
0 0 0 0 0 1 1 0 4 0 0 0 00 0 0 0 , mySum: 6
0 0 0 0 0 1 0 0 6 0 0 0 0  0 0 0 , mySum: 7
00 0 0 0 0  0 10 00  60   0, mySum:  05
0 0 0 0 0 1 0 0 5 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 0 2 0 0 0 0 0  0 0 , mySum: 3
00 0 0 0  000 0  0 00 4 0 0 00  , mySum:  60 0
 0 0 0 0 0 0 0 0 6 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 1 0 5 0 0 0 0 00 0 0 , mySum: 6
0 0 0 0 0 0 0 0 6 0 0 0 0 0  0 0 , mySum: 6
 0 0 0 00 00 0   , mySum: 0 4
0 0 0 0 0 0 1 0 3 0 0 0 0 00 0 0 , mySum: 4
00 0 0 0  , mySum: 0 7
00 0 0 0 0 1 1 0 5 0 0 0  0 0 0 0 , mySum: 7
0 0 0 0 0 1 1 0 6 0 0 0 01 1 0 4 0 0 0 0 0 0 0 , mySum:  6
0 0 0 0 0 1 0 0 6 0 0 0 01 0 0 0 , mySum: 7
0 0 0 0 0 0 1 0 6 0 0 0 0  1 0 2 0 0 0 0 0 0 0 , mySum: 04 0 , mySum: 6
0 0 0 0 0 1 1 0 4 0 0 0 0 0
 0 0 , mySum: 6
00 0 0 0 0  0 0 0 0 0 1 0 0 3 00 0 , mySum: 7
0 0 0 0 0 1 1 0 5 0 0 0 0 0 0 0 , mySum: 8
1 0 0 6 0 0 0 0 0 0 0  0 0 0 , mySum: 7
0 0 0 0 0 1 1 0 6 0 0 0 0 , mySum: 7
0 0 0 0 0 0 1 0 6 0 0 0 0 00 0 0 , mySum: 7
 0 0 0 0 00 0  0  0 , mySum: 4
0 0 0 0 0 0 0 0 5 0 0 0 00  00  , mySum: 08 00 
, mySum:  0 1 1 0 5 0 0 0 0 0 0 0 , mySum: 57
0 0 0 0 0 1 1 0 6 0 0 0 0 
00 0 0 0 0 1 1 0 3 0 0 0 0 0 , mySum: 8
 0 0 0 0 , mySum: 5
0 0 0 0 0 1 0 0 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 0 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 0 0 5 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 1 0 5 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 1 0 4 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 0 0 6 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 1 0 6 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 1 0 5 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 1 0 6 0 0 0 0 0 0 0 , mySum: 8
thread: 2, maxBlockLvlSize: 4
thread: 2, maxInBlockLvlSize: 10
thread: 2, AllTableSize: 896, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 4
thread: 0, maxInBlockLvlSize: 10
thread: 0, AllTableSize: 896, maxSubsetsSize: 64
thread: 3, maxBlockLvlSize: 4
thread: 3, maxInBlockLvlSize: 10
thread: 3, AllTableSize: 896, maxSubsetsSize: 64
thread: 1, maxBlockLvlSize: 4
thread: 1, maxInBlockLvlSize: 10
thread: 1, AllTableSize: 896, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 1 0 0 0 0 
thread: 0, allBlocks[2]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 1 0 0 0 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 1 0 0 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 1 0 1 0 0 0 0 
thread: 0, allBlocks[5]: 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 1 1 0 0 0 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 0 0 2 0 0 0 0 
thread: 0, allBlocks[7]: 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 1 0 0 1 0 0 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[8]: 0 0 0 3 0 0 0 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[9]: 0 1 0 2 0 0 0 0 
thread: 0, allBlocks[10]: 0 0 0 0 0 1 1 0 1 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 1 1 0 1 0 0 0 0 
thread: 0, allBlocks[11]: 0 0 0 0 0 1 0 0 2 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 1 0 0 2 0 0 0 0 
thread: 0, allBlocks[12]: 0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[12]: 0 0 0 4 0 0 0 0 
thread: 0, allBlocks[13]: 0 0 0 0 0 0 1 0 3 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[13]: 0 1 0 3 0 0 0 0 
thread: 0, allBlocks[14]: 0 0 0 0 0 1 1 0 2 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[14]: 1 1 0 2 0 0 0 0 
thread: 0, allBlocks[15]: 0 0 0 0 0 1 0 0 3 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[15]: 1 0 0 3 0 0 0 0 
thread: 0, allBlocks[16]: 0 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[16]: 0 0 0 5 0 0 0 0 
thread: 0, allBlocks[17]: 0 0 0 0 0 1 1 0 3 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[17]: 1 1 0 3 0 0 0 0 
thread: 0, allBlocks[18]: 0 0 0 0 0 1 0 0 4 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[18]: 1 0 0 4 0 0 0 0 
thread: 0, allBlocks[19]: 0 0 0 0 0 0 1 0 4 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[19]: 0 1 0 4 0 0 0 0 
thread: 0, allBlocks[20]: 0 0 0 0 0 1 0 0 5 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[20]: 1 0 0 5 0 0 0 0 
thread: 0, allBlocks[21]: 0 0 0 0 0 0 1 0 5 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[21]: 0 1 0 5 0 0 0 0 
thread: 0, allBlocks[22]: 0 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[22]: 0 0 0 6 0 0 0 0 
thread: 0, allBlocks[23]: 0 0 0 0 0 1 1 0 4 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[23]: 1 1 0 4 0 0 0 0 
thread: 0, allBlocks[24]: 0 0 0 0 0 1 0 0 6 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[24]: 1 0 0 6 0 0 0 0 
thread: 0, allBlocks[25]: 0 0 0 0 0 0 1 0 6 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[25]: 0 1 0 6 0 0 0 0 
thread: 0, allBlocks[26]: 0 0 0 0 0 1 1 0 5 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[26]: 1 1 0 5 0 0 0 0 
thread: 0, allBlocks[27]: 0 0 0 0 0 1 1 0 6 0 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[27]: 1 1 0 6 0 0 0 0 
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 11
copy the latest feasible solution to instance takes time: 6e-06
thread: 1, sOPT: 11
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.072416
thread: 2, sOPT: 10
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 3e-06
thread: 0, sOPT: 11
copy the latest feasible solution to instance takes time: 0.044751
thread: 3, sOPT: 10
Thread: 3, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: Thread: 102, MlBk function is done, and BkID for all processes are collected., MlBk function is done, and BkID for all processes are collected.
, MlBk function is done, and BkID for all processes are collected.

sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: 1 1 -1 -1
Pick seg 2 for next iteration where LB: 102, UB: 103
BKID: 0, LB: 102, UB: 102, OPT: 10
Dynamic Programming Runtime: 0.55463
Execution time between LB and UB is: 0
By far, all LB UB calculation runtime: 1
********************************************************
Total execution on UB and LB is: 1
OUT of Bk while loop  
UB    102
LB    102
T1    101
T2    102
OPT   10
nMachines   10
BkID	0
AllProbData.size()    3
ck :   2
AllProbData[ck].Ttable    102
ck :   1
AllProbData[ck].Ttable    104
ck :   0
AllProbData[ck].Ttable    116
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan104
Main Scheduling is Done
File 3-6 is Done.
******************************
Reading File...
File 3-7 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 224, LB: 124start at time: 1505254826
thread: 0, MlBk is called with LB: 124, UB: 149
thread: 1, MlBk is called with LB: 149, UB: 174
 thread: 0, LongJobs.size() 14
thread: 2, MlBk is called with LB: 174, UB: thread: 199
3, MlBk is called with LB: 199, UB:  thread: 224
1, LongJobs.size() 14
 thread: 2, LongJobs.size() 13
 thread: 3, LongJobs.size() 12
thread: 3, NSTable size: 22
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 5
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 3, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 3, i: 2, maxN[i].weit: 6, maxN[i].idx: 2, blockDimSize[i]: 6
thread: 3, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 3, i: 0, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, i: 1, divisor[i]: 1, blockDimSize[i]: 3
thread: 3, i: 2, divisor[i]: 2, blockDimSize[i]: 3
thread: 3, i: 3, divisor[i]: 2, blockDimSize[i]: 2
thread: 3, largestBlockVec.elm: 0 0 0 2 0 1 1 0 0 0 0 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 1 3 3 2 0 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 3 1 2 2 0 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 2 0 1 1 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 2 0 1 1 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 2 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 2 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 4
thread: 3, maxBlockLvlSize: 4
thread: 3, maxInBlockLvlSize: 5
thread: 3, AllTableSize: 216, maxSubsetsSize: 64
thread: 2, NSTable size: 29
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 2, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 2, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 2, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 2, i: 4, maxN[i].weit: 5, maxN[i].idx: 4, blockDimSize[i]: 5
thread: 2, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 2, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 2, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 3, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, i: 4, divisor[i]: 5, blockDimSize[i]: 1
thread: 2, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, largestBlockVec.elm: 0 0 0 0 2 0 1 4 0 0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 2 1 3 2 1 2 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 1 3 1 2 5 1 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 2 0 1 4 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 2 0 1 4 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 3 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 0 1 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 1 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 0 0 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 1 3 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 0 1 2 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 0 0 3 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 4 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 0 0 4 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 0 1 4 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 0 1 3 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 0 1 4 0 0 0 0 0 0 0 0 , mySum: 7
thread: 2, maxBlockLvlSize: 6
thread: 2, maxInBlockLvlSize: 7
thread: 2, AllTableSize: 720, maxSubsetsSize: 64
thread: 1, NSTable size: 33
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 1, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 1, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 1, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 1, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 1, i: 5, maxN[i].weit: 5, maxN[i].idx: 5, blockDimSize[i]: 5
thread: 1, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 1, i: 0, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 3, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 5, divisor[i]: 5, blockDimSize[i]: 1
thread: 1, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, largestBlockVec.elm: 0 0 0 2 0 0 1 0 4 0 0 0 0 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 1 2 2 2 3 1 2 0 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 3 1 1 2 1 5 1 0 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 2 0 0 1 0 4 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 2 0 0 1 0 4 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 2 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 2 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 0 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 , mySum: 4
0 0 0 1 0 0 0 0 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 2 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 1 0 0 1 0 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 2 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 1 0 0 1 0 3 0 0 0 0 0 0 0 , mySum: 5
0 0 0 2 0 0 1 0 2 0 0 0 0 0 0 0 , mySum: 5
0 0 0 2 0 0 0 0 3 0 0 0 0 0 0 0 , mySum: 5
0 0 0 1 0 0 0 0 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 0 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 2 0 0 0 0 4 0 0 0 0 0 0 0 , mySum: 6
0 0 0 1 0 0 1 0 4 0 0 0 0 0 0 0 , mySum: 6
0 0 0 2 0 0 1 0 3 0 0 0 0 0 0 0 , mySum: 6
0 0 0 2 0 0 1 0 4 0 0 0 0 0 0 0 , mySum: 7
thread: 0, NSTable size: 20
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 0, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 0, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 0, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 0, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 0, i: 5, maxN[i].weit: 4, maxN[i].idx: 5, blockDimSize[i]: 4
thread: 0, i: 6, maxN[i].weit: 3, maxN[i].idx: 6, blockDimSize[i]: 3
thread: 0, i: 0, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 5, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 6, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, largestBlockVec.elm: 0 0 0 0 2 0 2 0 0 0 1 0 0 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 0 1 0 1 2 3 3 2 3 0 0 0 0 
thread: 0, divisorComp: 0 0 0 0 3 0 3 1 1 1 2 1 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 2 0 2 0 0 0 1 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 2 2 0 0 0 1 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 0 0 0 0 1 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 0 0 0 1 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 2 0 0 0 1 0 0 0 0 0 , mySum: 4
0 0 0 0 2 0 1 0 0 0 1 0 0 0 0 0 , mySum: 4
0 0 0 0 2 0 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 0 2 0 0 0 1 0 0 0 0 0 , mySum: 5
thread: 1, maxBlockLvlSize: 6
thread: 1, maxInBlockLvlSize: 14
thread: 1, AllTableSize: 1440, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 5
thread: 0, maxInBlockLvlSize: 26
thread: 0, AllTableSize: 1944, maxSubsetsSize: 64
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 5
copy the latest feasible solution to instance takes time: 0.012613
thread: 3, sOPT: 5
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 1 0 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 1 0 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 1 0 0 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 1 0 0 0 1 0 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 2 0 0 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 1 0 0 0 0 1 0 
Thread: 2, gpu_BlockDP is done.
thread: 0, allBlocks[7]: 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 1 1 0 0 0 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[8]: 2 0 0 0 0 0 0 
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 6
copy the latest feasible solution to instance takes time: 0.043623
thread: 2, sOPT: 6
thread: 0, allBlocks[9]: 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[9]: 1 1 0 0 0 1 0 
thread: 0, allBlocks[10]: 0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 2 1 0 0 0 0 0 
thread: 0, allBlocks[11]: 0 0 0 0 2 0 0 0 0 0 1 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 2 0 0 0 0 1 0 
thread: 0, allBlocks[12]: 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[12]: 1 2 0 0 0 0 0 
thread: 0, allBlocks[13]: 0 0 0 0 0 0 2 0 0 0 1 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[13]: 0 2 0 0 0 1 0 
thread: 0, allBlocks[14]: 0 0 0 0 1 0 2 0 0 0 1 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[14]: 1 2 0 0 0 1 0 
thread: 0, allBlocks[15]: 0 0 0 0 2 0 1 0 0 0 1 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[15]: 2 1 0 0 0 1 0 
thread: 0, allBlocks[16]: 0 0 0 0 2 0 2 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[16]: 2 2 0 0 0 0 0 
thread: 0, allBlocks[17]: 0 0 0 0 2 0 2 0 0 0 1 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[17]: 2 2 0 0 0 1 0 
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 7
copy the latest feasible solution to instance takes time: 0.070203
thread: 1, sOPT: 7
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.046
thread: 0, sOPT: 9
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: Thread: 3, MlBk function is done, and BkID for all processes are collected.1, MlBk function is done, and BkID for all processes are collected.
2
, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 124, UB: 137
BKID: 0, LB: 124, UB: 137, OPT: 9
Dynamic Programming Runtime: 0.63932
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 1
Iteration: 2, UB: 137, LB: 124start at time: 1505254827
thread: 0, MlBk is called with LB: 124, UB: 127
 thread: 0, LongJobs.size() 16
thread: thread: 3thread: , MlBk is called with LB: 13321, MlBk is called with LB: , UB: , MlBk is called with LB: 127, UB: 137130, UB: 130
133
 thread: 3, LongJobs.size() 15

 thread: 1, LongJobs.size() 15
 thread: 2, LongJobs.size() 15
thread: 2, NSTable size: 26
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 2, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 2, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 2, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 2, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 2, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 2, i: 6, maxN[i].weit: 4, maxN[i].idx: 6, blockDimSize[i]: 4
thread: 2, i: 7, maxN[i].weit: 3, maxN[i].idx: 7, blockDimSize[i]: 3
thread: 2, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 5, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 6, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, i: 7, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, largestBlockVec.elm: 0 0 0 0 2 0 2 0 0 0 1 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 2 1 0 1 2 3 3 2 3 0 0 0 0 
thread: 2, divisorComp: 0 0 0 1 3 0 3 1 1 1 2 1 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 2 0 2 0 0 0 1 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 2 2 0 0 0 1 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 0 0 0 0 1 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 0 0 0 1 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 2 0 0 0 1 0 0 0 0 0 , mySum: 4
0 0 0 0 2 0 1 0 0 0 1 0 0 0 0 0 , mySum: 4
0 0 0 0 2 0 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 0 2 0 0 0 1 0 0 0 0 0 , mySum: 5
thread: 1, NSTable size: 26
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 1, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 1, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 1, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 1, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 1, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 1, i: 6, maxN[i].weit: 4, maxN[i].idx: 6, blockDimSize[i]: 4
thread: 1, i: 7, maxN[i].weit: 3, maxN[i].idx: 7, blockDimSize[i]: 3
thread: 1, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 5, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 6, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, i: 7, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, largestBlockVec.elm: 0 0 0 0 2 0 2 0 0 0 1 0 0 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 2 1 0 1 2 3 3 2 3 0 0 0 0 
thread: 1, divisorComp: 0 0 0 1 3 0 3 1 1 1 2 1 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 2 0 2 0 0 0 1 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 2 2 0 0 0 1 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 0 0 0 0 1 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 0 0 0 1 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 2 0 0 0 1 0 0 0 0 0 , mySum: 4
0 0 0 0 2 0 1 0 0 0 1 0 0 0 0 0 , mySum: 4
0 0 0 0 2 0 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 0 2 0 0 0 1 0 0 0 0 0 , mySum: 5
thread: 3, NSTable size: 26
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 3, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 3, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 3, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 3, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 3, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 3, i: 6, maxN[i].weit: 4, maxN[i].idx: 6, blockDimSize[i]: 4
thread: 3, i: 7, maxN[i].weit: 3, maxN[i].idx: 7, blockDimSize[i]: 3
thread: 3, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 3, i: 5, divisor[i]: 1, blockDimSize[i]: 3
thread: 3, i: 6, divisor[i]: 2, blockDimSize[i]: 2
thread: 3, i: 7, divisor[i]: 1, blockDimSize[i]: 3
thread: 3, largestBlockVec.elm: 0 0 0 0 2 0 2 0 0 0 1 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 2 1 0 1 2 3 3 2 3 0 0 0 0 
thread: 3, divisorComp: 0 0 0 1 3 0 3 1 1 1 2 1 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 2 0 2 0 0 0 1 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 2 2 0 0 0 1 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 0 0 0 0 1 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 0 0 0 1 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 2 0 0 0 1 0 0 0 0 0 , mySum: 4
0 0 0 0 2 0 1 0 0 0 1 0 0 0 0 0 , mySum: 4
0 0 0 0 2 0 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 0 2 0 0 0 1 0 0 0 0 0 , mySum: 5
thread: 2, maxBlockLvlSize: 5
thread: 2, maxInBlockLvlSize: 48
thread: 2, AllTableSize: 3888, maxSubsetsSize: 64
thread: 3, maxBlockLvlSize: 5
thread: 3, maxInBlockLvlSize: 48
thread: 3, AllTableSize: 3888, maxSubsetsSize: 64
thread: 1, maxBlockLvlSize: 5
thread: 1, maxInBlockLvlSize: 48
thread: 1, AllTableSize: 3888, maxSubsetsSize: 64
thread: 0, NSTable size: 27
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 0, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 0, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 0, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 0, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 0, i: 5, maxN[i].weit: 4, maxN[i].idx: 5, blockDimSize[i]: 4
thread: 0, i: 6, maxN[i].weit: 3, maxN[i].idx: 6, blockDimSize[i]: 3
thread: 0, i: 7, maxN[i].weit: 3, maxN[i].idx: 7, blockDimSize[i]: 3
thread: 0, i: 8, maxN[i].weit: 2, maxN[i].idx: 8, blockDimSize[i]: 2
thread: 0, i: 0, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 5, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 6, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 7, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 8, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, largestBlockVec.elm: 0 0 0 2 0 2 0 0 0 0 1 0 0 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 1 0 1 0 2 2 3 2 3 3 2 0 0 
thread: 0, divisorComp: 0 0 0 3 0 3 0 1 1 1 2 1 1 1 0 0 
thread: 0, largestBlockVec: 0 0 0 2 0 2 0 0 0 0 1 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 2 2 0 0 0 1 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 1 0 0 0 0 1 0 0 0 0 0 , mySum: 3
0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 2 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 3
0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 0 0 0 0 1 0 0 0 0 0 , mySum: 3
0 0 0 1 0 2 0 0 0 0 1 0 0 0 0 0 , mySum: 4
0 0 0 2 0 1 0 0 0 0 1 0 0 0 0 0 , mySum: 4
0 0 0 2 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 2 0 2 0 0 0 0 1 0 0 0 0 0 , mySum: 5
thread: 0, maxBlockLvlSize: 5
thread: 0, maxInBlockLvlSize: 96
thread: 0, AllTableSize: 7776, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 1 0 0 0 
thread: 0, allBlocks[2]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 1 0 0 0 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 1 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 1 0 0 0 1 0 0 0 
thread: 0, allBlocks[5]: 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 2 0 0 0 0 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 1 0 0 0 0 1 0 0 0 
thread: 0, allBlocks[7]: 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 1 1 0 0 0 0 0 0 0 
thread: 0, allBlocks[8]: 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[8]: 2 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[9]: 0 0 0 1 0 1 0 0 0 0 1 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[9]: 1 1 0 0 0 1 0 0 0 
Thread: 1, gpu_BlockDP is done.
Thread: 3, gpu_BlockDP is done.
Thread: 2, gpu_BlockDP is done.
thread: 0, allBlocks[10]: 0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 2 1 0 0 0 0 0 0 0 
thread: 0, allBlocks[11]: 0 0 0 2 0 0 0 0 0 0 1 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 2 0 0 0 0 1 0 0 0 
thread: 0, allBlocks[12]: 0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[12]: 1 2 0 0 0 0 0 0 0 
thread: 0, allBlocks[13]: 0 0 0 0 0 2 0 0 0 0 1 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[13]: 0 2 0 0 0 1 0 0 0 
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 10
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.448451
thread: 1, sOPT: 10
thread: 0, allBlocks[14]: 0 0 0 1 0 2 0 0 0 0 1 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[14]: 1 2 0 0 0 1 0 0 0 
thread: 0, allBlocks[15]: 0 0 0 2 0 1 0 0 0 0 1 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[15]: 2 1 0 0 0 1 0 0 0 
thread: 0, allBlocks[16]: 0 0 0 2 0 2 0 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[16]: 2 2 0 0 0 0 0 0 0 
copy the latest feasible solution to instance takes time: 0.611622
thread: 3, sOPT: 10
copy the latest feasible solution to instance takes time: 0.734627
thread: 2, sOPT: 10
thread: 0, allBlocks[17]: 0 0 0 2 0 2 0 0 0 0 1 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[17]: 2 2 0 0 0 1 0 0 0 
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 1e-06
thread: 0, sOPT: 11
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: Thread: 12, MlBk function is done, and BkID for all processes are collected.3, MlBk function is done, and BkID for all processes are collected., MlBk function is done, and BkID for all processes are collected.


sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: 1 -1 -1 -1
Pick seg 1 for next iteration where LB: 126, UB: 129
BKID: 0, LB: 126, UB: 129, OPT: 10
Dynamic Programming Runtime: 3.89056
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 2
Iteration: 3, UB: 129, LB: 126start at time: 1505254828
thread: 0, MlBk is called with LB: 126, UB: 127
 thread: 0, LongJobs.size() 16
thread: thread: 2, MlBk is called with LB: 128, UB: 1291, MlBk is called with LB: 
127, UB: 128
 thread: 2, LongJobs.size() 15
 thread: 1, LongJobs.size() 16
thread: 2, NSTable size: 26
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 2, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 2, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 2, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 2, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 2, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 2, i: 6, maxN[i].weit: 4, maxN[i].idx: 6, blockDimSize[i]: 4
thread: 2, i: 7, maxN[i].weit: 3, maxN[i].idx: 7, blockDimSize[i]: 3
thread: 2, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 5, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 6, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, i: 7, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, largestBlockVec.elm: 0 0 0 0 2 0 2 0 0 0 1 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 2 1 0 1 2 3 3 2 3 0 0 0 0 
thread: 2, divisorComp: 0 0 0 1 3 0 3 1 1 1 2 1 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 2 0 2 0 0 0 1 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 2 2 0 0 0 1 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 0 0 0 0 1 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 0 0 0 1 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 2 0 0 0 1 0 0 0 0 0 , mySum: 4
0 0 0 0 2 0 1 0 0 0 1 0 0 0 0 0 , mySum: 4
0 0 0 0 2 0 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 0 2 0 0 0 1 0 0 0 0 0 , mySum: 5
thread: 2, maxBlockLvlSize: 5
thread: 2, maxInBlockLvlSize: 48
thread: 2, AllTableSize: 3888, maxSubsetsSize: 64
thread: 1, NSTable size: 32
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 1, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 1, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 1, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 1, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 1, i: 5, maxN[i].weit: 4, maxN[i].idx: 5, blockDimSize[i]: 4
thread: 1, i: 6, maxN[i].weit: 3, maxN[i].idx: 6, blockDimSize[i]: 3
thread: 1, i: 7, maxN[i].weit: 3, maxN[i].idx: 7, blockDimSize[i]: 3
thread: 1, i: 8, maxN[i].weit: 2, maxN[i].idx: 8, blockDimSize[i]: 2
thread: 1, i: 0, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 5, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, i: 6, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 7, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 8, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, largestBlockVec.elm: 0 0 0 2 0 2 0 0 0 0 1 0 0 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 1 0 1 0 2 2 3 2 3 3 2 0 0 
thread: 1, divisorComp: 0 0 0 3 0 3 0 1 1 1 2 1 1 1 0 0 
thread: 1, largestBlockVec: 0 0 0 2 0 2 0 0 0 0 1 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 2 2 0 0 0 1 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 1 0 0 0 0 1 0 0 0 0 0 , mySum: 3
0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 2 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 3
0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 0 0 0 0 1 0 0 0 0 0 , mySum: 3
0 0 0 1 0 2 0 0 0 0 1 0 0 0 0 0 , mySum: 4
0 0 0 2 0 1 0 0 0 0 1 0 0 0 0 0 , mySum: 4
0 0 0 2 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 2 0 2 0 0 0 0 1 0 0 0 0 0 , mySum: 5
thread: 0, NSTable size: 32
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 0, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 0, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 0, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 0, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 0, i: 5, maxN[i].weit: 4, maxN[i].idx: 5, blockDimSize[i]: 4
thread: 0, i: 6, maxN[i].weit: 3, maxN[i].idx: 6, blockDimSize[i]: 3
thread: 0, i: 7, maxN[i].weit: 3, maxN[i].idx: 7, blockDimSize[i]: 3
thread: 0, i: 8, maxN[i].weit: 2, maxN[i].idx: 8, blockDimSize[i]: 2
thread: 0, i: 0, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 5, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 6, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 7, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 8, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, largestBlockVec.elm: 0 0 0 2 0 2 0 0 0 0 1 0 0 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 1 0 1 0 2 2 3 2 3 3 2 0 0 
thread: 0, divisorComp: 0 0 0 3 0 3 0 1 1 1 2 1 1 1 0 0 
thread: 0, largestBlockVec: 0 0 0 2 0 2 0 0 0 0 1 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 2 2 0 0 0 1 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 1 0 0 0 0 1 0 0 0 0 0 , mySum: 3
0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 2 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 3
0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 0 0 0 0 1 0 0 0 0 0 , mySum: 3
0 0 0 1 0 2 0 0 0 0 1 0 0 0 0 0 , mySum: 4
0 0 0 2 0 1 0 0 0 0 1 0 0 0 0 0 , mySum: 4
0 0 0 2 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 2 0 2 0 0 0 0 1 0 0 0 0 0 , mySum: 5
thread: 1, maxBlockLvlSize: 5
thread: 1, maxInBlockLvlSize: 96
thread: 1, AllTableSize: 7776, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 5
thread: 0, maxInBlockLvlSize: 96
thread: 0, AllTableSize: 7776, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 1 0 0 0 
thread: 0, allBlocks[2]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 1 0 0 0 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 1 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 1 0 0 0 1 0 0 0 
thread: 0, allBlocks[5]: 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 2 0 0 0 0 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 1 0 0 0 0 1 0 0 0 
thread: 0, allBlocks[7]: 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 1 1 0 0 0 0 0 0 0 
thread: 0, allBlocks[8]: 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[8]: 2 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[9]: 0 0 0 1 0 1 0 0 0 0 1 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[9]: 1 1 0 0 0 1 0 0 0 
Thread: 2, gpu_BlockDP is done.
thread: 0, allBlocks[10]: 0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 2 1 0 0 0 0 0 0 0 
thread: 0, allBlocks[11]: 0 0 0 2 0 0 0 0 0 0 1 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 2 0 0 0 0 1 0 0 0 
thread: 0, allBlocks[12]: 0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[12]: 1 2 0 0 0 0 0 0 0 
thread: 0, allBlocks[13]: 0 0 0 0 0 2 0 0 0 0 1 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[13]: 0 2 0 0 0 1 0 0 0 
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.346889
thread: 2, sOPT: 10
thread: 0, allBlocks[14]: 0 0 0 1 0 2 0 0 0 0 1 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[14]: 1 2 0 0 0 1 0 0 0 
thread: 0, allBlocks[15]: 0 0 0 2 0 1 0 0 0 0 1 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[15]: 2 1 0 0 0 1 0 0 0 
thread: 0, allBlocks[16]: 0 0 0 2 0 2 0 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[16]: 2 2 0 0 0 0 0 0 0 
thread: 0, allBlocks[17]: 0 0 0 2 0 2 0 0 0 0 1 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[17]: 2 2 0 0 0 1 0 0 0 
Thread: 0, gpu_BlockDP is done.
Thread: 1, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 2e-06
thread: 0, sOPT: 11
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 11
copy the latest feasible solution to instance takes time: 2e-06
thread: 1, sOPT: 11
BKID: 0, LB: 128, UB: 128, OPT: 10
Dynamic Programming Runtime: 3.68116
Execution time between LB and UB is: 2
By far, all LB UB calculation runtime: 4
********************************************************
Total execution on UB and LB is: 4
OUT of Bk while loop  
UB    128
LB    128
T1    128
T2    128
OPT   10
nMachines   10
BkID	0
AllProbData.size()    3
ck :   2
AllProbData[ck].Ttable    128
ck :   1
AllProbData[ck].Ttable    128
ck :   0
AllProbData[ck].Ttable    136
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan138
Main Scheduling is Done
File 3-7 is Done.
******************************
Reading File...
File 3-8 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 204, LB: 104start at time: 1505254830
thread: 0, MlBk is called with LB: 104, UB: 129
thread: 3, MlBk is called with LB: 179, UB: 204 thread: 
0, LongJobs.size() 12
thread: thread: 1, MlBk is called with LB: 129, UB: 2, MlBk is called with LB: 154154, UB: 179

 thread: 3, LongJobs.size() 11
 thread: 1, LongJobs.size() 12
 thread: 2, LongJobs.size() 11
thread: 3, NSTable size: 36
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: thread: 23, i: , NSTable size: 0, maxN[i].weit: 321, maxN[i].idx: 0, blockDimSize[i]: 
3
thread: 3, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 3, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0

thread: 2thread: 3, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 3, i: 4, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: , maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 03, maxN[i].weit: 3, maxN[i].idx: 
0thread: 3, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
, blockDimSize[i]: 3
thread: 2, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: thread: 23, i: , i: 2, maxN[i].weit: 04, maxN[i].idx: , divisor[i]: 2, blockDimSize[i]: 34, blockDimSize[i]: 
thread: 2, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 2, i: 4, maxN[i].weit: 3, maxN[i].idx: 41
thread: 3, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, i: 3, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 3, i: 5, divisor[i]: 1, blockDimSize[i]: 3
, blockDimSize[i]: 3
thread: 2, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: thread: 2, i: 0, divisor[i]: 3, blockDimSize[i]: 31, largestBlockVec.elm: 
thread: 2, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 2, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, i: 3, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 5, divisor[i]: 1, blockDimSize[i]: 2
0 thread: 2, largestBlockVec.elm: 0 0 0 02  00  20  2 0 2 00  0 0 10  02  0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 1 2 1 1 3 3 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 3 1 3 3 1 1 00 0  00  0 0 00 0  0 00  
thread: 2, blockDimSizeComp: 0 0 0 0 1 2 2 1 3 20 0 0  0 0 00 0  
thread: 3, largestBlockVec: 0 0 0 2 0 2 2 0 0 
0 thread: 2, divisorComp: 0 0 0 0 3 1 2 3 1 10 0  0 0 00  00  00  
0thread: 2, largestBlockVec: 0 0 0 0 2 0 1 2 0  0 0 00  
0 thread: 3, largestNoZeroBlockVec: 2 0 2 2 0 0 
0 0 0 
thread: 2, largestNoZeroBlockVec: 2 0 1 2 0 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
thread: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 20 0 , allBlocks: , mySum: 0 01 
0 0 0 0 0 1 0 0 0 0 0 0 0 00 0  00 0  0 , mySum: 0 01 
00 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0  0 0 0 0 0, mySum:  0 10
0 0 0 0 0 0 2 0 0 0 0 0 0  0 , mySum: 01 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0  , mySum: 02
 0 0 0 0 0 1 1 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 00  00  0 0, mySum:  1
0 0 0 0 1 0 1 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 00 0 0 , mySum: 2 
00 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
 0 0 0 2 0 0 0 0 0 0 0 0 0 00  00  00 , mySum:  2
0 0 0 1 0 0 1 0 0 0 0 0 0, mySum: 2
0 0 0 0 1 0 0 1 0 0 0 0 0 0  0 0 0 , mySum: 20
 0 0 0 1 0 1 0 0 0 0 0 0 0 00 0  0 , mySum: , mySum: 2
20 0 0 1 0 1 1 0 0 0 0 0 0 
00 0 0 0 0 0 1 1 0 0 0 0 0 0  0 00 , mySum:  20 
, mySum: 0 0 0 0 0 0 0 2 0 0 0 0 0 3
0 0 0 2 0 1 0 0 0 0 0 00 0 0 , mySum: 2
0 0 0 0 0 0 1 2 0 0 0 0 0 0  0 00 0  , mySum: 3
0 0 0 0 0 1 0 0 2 0 0 0 0 0 0 00  0 , mySum: , mySum: 3
0 0 0 0 1 0 1 1 0 0 0 0 0 30 0 0 
, mySum: 3
0 0 0 2 0 0 1 0 0 0 0 0 0 0 0 0 0 2 0 0 1 0 0 0 0 0 0 , mySum: 30
0 0 0 1 0 2 0 0 0 0 0 0  0 0 0 0 , mySum: 3
0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 0 0, mySum:  30
0 0 0 1 0 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 1 2 0 0 0 0 0  0 0 00  , mySum: 40
 0 0 0 0 2 0 0 2 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 1 0 0 0 0 0 00 0 0  0 00  , mySum: , mySum: 34
0 0 0 0 0 1 2 0 0 0 0 0 0 0 
0 0 0 0 0 2 0 1 1 0 0 0 0 00 , mySum: 3
0 0 0 1 0 1 2 0 0 0 0 0 0 0  0 00 0  , mySum: 04
 0 0 0 1 0 2 1 0 0 0 0 0 , mySum: 4
0 0 0 0 2 0 1 2 0 0 0 0 0 00 0  00  , mySum: 5
0 0 , mySum: 4
0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 2 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 2 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 2 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 1 0 2 2 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 2 0 1 2 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 2 0 2 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 2 0 2 2 0 0 0 0 0 0 0 0 0 , mySum: 6
thread: 0, NSTable size: 13
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 0, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 0, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 0, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 0, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 0, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 0, i: 6, maxN[i].weit: 4thread: , maxN[i].idx: 6, blockDimSize[i]: 24, maxBlockLvlSize: 5

thread: 0thread: 2, maxInBlockLvlSize: 7
thread: 2, AllTableSize: 432, maxSubsetsSize: 64
, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 3, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 6, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, largestBlockVec.elm: 0 0 0 0 0 0 2 0 0 2 0 0 0 1 0 0 
thread: 0, blockDimSizeComp: 0 0 0 0 2 0 1 2 0 1 3 2 0 2 0 0 
thread: 0, divisorComp: 0 0 0 0 1 0 3 1 0 3 1 1 0 2 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 2 0 0 2 0 0 0 1 0 0 
thread: 0, largestNoZeroBlockVec: 0 2 0 2 0 0 1 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
thread: 0 0 0 0 0 0 0 0 0 0 0 30, maxBlockLvlSize:  07 
1thread: 3, maxInBlockLvlSize: 5
thread: 3, AllTableSize:  486, maxSubsetsSize: 64
0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 1 0 0 0 1 0 0 , mySum: 3
0 0 0 0 0 0 2 0 0 1 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 0 0 0 0 0 0 1 0 0 , mySum: 3
0 0 0 0 0 0 1 0 0 2 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 2 0 0 0 1 0 0 , mySum: 3
0 0 0 0 0 0 1 0 0 2 0 0 0 1 0 0 , mySum: 4
0 0 0 0 0 0 2 0 0 1 0 0 0 1 0 0 , mySum: 4
0 0 0 0 0 0 2 0 0 2 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 2 0 0 2 0 0 0 1 0 0 , mySum: 5
thread: 1, NSTable size: 27
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 1, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 1, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 1, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 1, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 1, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 1, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 1, i: 7, maxN[i].weit: 4, maxN[i].idx: 7, blockDimSize[i]: 4
thread: 1, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 4, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 7, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, largestBlockVec.elm: 0 0 0 0 0 2 0 0 2 0 0 1 0 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 2 0 1 2 2 1 2 2 2 0 0 0 0 
thread: 1, divisorComp: 0 0 0 1 0 3 1 1 3 1 1 2 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 2 0 0 2 0 0 1 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 2 0 0 2 0 0 1 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 1 0 0 1 0 0 0 0 , mySum: 3
0 0 0 0 0 2 0 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 0 0 0 0 0 1 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 2 0 0 1 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 0 2 0 0 1 0 0 0 0 , mySum: 4
0 0 0 0 0 2 0 0 1 0 0 1 0 0 0 0 , mySum: 4
0 0 0 0 0 2 0 0 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 0 0 2 0 0 1 0 0 0 0 , mySum: 5
thread: 0, maxBlockLvlSize: 5
thread: 0, maxInBlockLvlSize: 14
thread: 0, AllTableSize: 864, maxSubsetsSize: 64
thread: 1, maxBlockLvlSize: 5
thread: 1, maxInBlockLvlSize: 20
thread: 1, AllTableSize: 1152, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 0 1 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 1 0 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 0 1 0 0 1 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 0 0 2 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 1 0 0 0 0 1 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 0 1 0 1 0 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[8]: 0 2 0 0 0 0 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 0 1 0 0 1 0 0 0 1 0 0 mySum: 3
thread: 0, blockNoZero[9]: 0 1 0 1 0 0 1 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 2 0 0 1 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 0 2 0 1 0 0 0 
thread: 0, allBlocks[11]: 0 0 0 0 0 0 2 0 0 0 0 0 0 1 0 0 mySum: 3
thread: 0, blockNoZero[11]: 0 2 0 0 0 0 1 
Thread: 2, gpu_BlockDP is done.
thread: 0, allBlocks[12]: 0 0 0 0 0 0 1 0 0 2 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[12]: 0 1 0 2 0 0 0 
thread: 0, allBlocks[13]: 0 0 0 0 0 0 0 0 0 2 0 0 0 1 0 0 mySum: 3
thread: 0, blockNoZero[13]: 0 0 0 2 0 0 1 
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 6
thread: 0, allBlocks[14]: 0 0 0 0 0 0 1 0 0 2 0 0 0 1 0 0 mySum: 4
thread: 0, blockNoZero[14]: 0 1 0 2 0 0 1 
thread: 0, allBlocks[15]: 0 0 0 0 0 0 2 0 0 1 0 0 0 1 0 0 mySum: 4
thread: 0, blockNoZero[15]: 0 2 0 1 0 0 1 
thread: 0, allBlocks[16]: 0 0 0 0 0 0 2 0 0 2 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[16]: 0 2 0 2 0 0 0 
copy the latest feasible solution to instance takes time: 0.028117
thread: 2, sOPT: 6
thread: 0, allBlocks[17]: 0 0 0 0 0 0 2 0 0 2 0 0 0 1 0 0 mySum: 5
thread: 0, blockNoZero[17]: 0 2 0 2 0 0 1 
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 5
copy the latest feasible solution to instance takes time: 0.030193
thread: 3, sOPT: 5
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.04143
thread: 0, sOPT: 10
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 7
copy the latest feasible solution to instance takes time: 0.021327
thread: 1, sOPT: 7
Thread: 1, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 2Thread: , MlBk function is done, and BkID for all processes are collected.0, MlBk function is done, and BkID for all processes are collected.

3, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 104, UB: 117
BKID: 0, LB: 104, UB: 117, OPT: 10
Dynamic Programming Runtime: 0.437276
Execution time between LB and UB is: 0
By far, all LB UB calculation runtime: 0
Iteration: 2, UB: 117, LB: 104start at time: 1505254830
thread: 0, MlBk is called with LB: 104, UB: 107
 thread: 0, LongJobs.size() 14
thread: thread: 2, MlBk is called with LB: 110, UB: 113
1, MlBk is called with LB: 107, UB: 110
 thread: 1, LongJobs.size() 12
thread: 3, MlBk is called with LB: 113, UB: 117
 thread: 3, LongJobs.size() 12
 thread: 2, LongJobs.size() 12
thread: 3, NSTable size: 13
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 3, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 3, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 3, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 3, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 3, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 3, i: 6, maxN[i].weit: 4, maxN[i].idx: 6, blockDimSize[i]: 4
thread: 3, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 3, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 3, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 6, divisor[i]: 2, blockDimSize[i]: 2
thread: 3, largestBlockVec.elm: 0 0 0 0 0 0 2 0 0 2 0 0 0 1 0 0 
thread: 3, blockDimSizeComp: 0 0 0 0 2 0 1 2 0 1 3 2 0 2 0 0 
thread: 3, divisorComp: 0 0 0 0 1 0 3 1 0 3 1 1 0 2 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 0 2 0 0 2 0 0 0 1 0 0 
thread: 3, largestNoZeroBlockVec: 0 2 0 2 0 0 1 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 1 0 0 0 1 0 0 , mySum: 3
0 0 0 0 0 0 2 0 0 1 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 0 0 0 0 0 0 1 0 0 , mySum: 3
0 0 0 0 0 0 1 0 0 2 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 2 0 0 0 1 0 0 , mySum: 3
0 0 0 0 0 0 1 0 0 2 0 0 0 1 0 0 , mySum: 4
0 0 0 0 0 0 2 0 0 1 0 0 0 1 0 0 , mySum: 4
0 0 0 0 0 0 2 0 0 2 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 2 0 0 2 0 0 0 1 0 0 , mySum: 5
thread: 1, NSTable size: 13
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: thread: 7, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 1, i: 3, maxBlockLvlSize: 5
thread: 3, maxInBlockLvlSize: 14
thread: 3, AllTableSize: 864, maxSubsetsSize: 64
1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 1, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 1, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 1, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 1, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 1, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 1, i: 7, maxN[i].weit: 4, maxN[i].idx: 7, blockDimSize[i]: 4
thread: 1, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 4, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 7, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, largestBlockVec.elm: 0 0 0 0 0 0 0 0 2 0 0 2 0 0 0 1 
thread: 1, blockDimSizeComp: 0 0 0 0 0 2 0 0 1 2 2 1 2 2 0 2 
thread: 1, divisorComp: 0 0 0 0 0 1 0 0 3 1 1 3 1 1 0 2 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 2 0 0 2 0 0 0 1 
thread: 1, largestNoZeroBlockVec: 0 2 0 0 2 0 0 1 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 2 0 0 1 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 1 0 0 2 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 1 0 0 2 0 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 2 0 0 1 0 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 2 0 0 2 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 2 0 0 2 0 0 0 1 , mySum: 5
thread: 2, NSTable size: 13
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 2, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 2, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 2, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 2, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 2, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 2, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 2, i: 7, maxN[i].weit: 4, maxN[i].idx: 7, blockDimSize[i]: 4
thread: 2, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 4, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 7, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, largestBlockVec.elm: 0 0 0 0 0 0 0 0 2 0 0 2 0 0 0 1 
thread: 2, blockDimSizeComp: 0 0 0 0 0 2 0 0 1 2 2 1 2 2 0 2 
thread: 2, divisorComp: 0 0 0 0 0 1 0 0 3 1 1 3 1 1 0 2 
thread: 2, largestBlockVec: 0 0 0 0 0 0 0 0 2 0 0 2 0 0 0 1 
thread: 2, largestNoZeroBlockVec: 0 2 0 0 2 0 0 1 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 2 0 0 1 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 1 0 0 2 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 1 0 0 2 0 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 2 0 0 1 0 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 2 0 0 2 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 2 0 0 2 0 0 0 1 , mySum: 5
thread: 1, maxBlockLvlSize: 5
thread: 1, maxInBlockLvlSize: 20
thread: 1, AllTableSize: 1152, maxSubsetsSize: 64
thread: 0, NSTable size: 21
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 0, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 0, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 0, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 0, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 0, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 0, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 0, i: 7, maxN[i].weit: 2, maxN[i].idx: 7, blockDimSize[i]: 2
thread: 0, i: 8, maxN[i].weit: 4, maxN[i].idx: 8, blockDimSize[i]: 4
thread: 0, i: 0, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 5, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 7, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 8, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, largestBlockVec.elm: 0 0 0 2 0 0 0 0 2 0 0 0 0 0 0 1 
thread: 0, blockDimSizeComp: 0 0 0 1 0 2 0 0 1 2 2 3 2 2 0 2 
thread: 0, divisorComp: 0 0 0 3 0 1 0 0 3 1 1 1 1 1 0 2 
thread: 0, largestBlockVec: 0 0 0 2 0 0 0 0 2 0 0 0 0 0 0 1 
thread: 0, largestNoZeroBlockVec: 2 0 2 0 0 0 0 0 1 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 2
0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 1 , mySum: 3
0 0 0 2 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 3
0 0 0 1 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 1 , mySum: 3
0 0 0 1 0 0 0 0 2 0 0 0 0 0 0 1 , mySum: 4
0 0 0 2 0 0 0 0 1 0 0 0 0 0 0 1 , mySum: 4
0 0 0 2 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 2 0 0 0 0 2 0 0 0 0 0 0 1 , mySum: 5
thread: 2, maxBlockLvlSize: 5
thread: 2, maxInBlockLvlSize: 20
thread: 2, AllTableSize: 1152, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 5
thread: 0, maxInBlockLvlSize: 50
thread: 0, AllTableSize: 3456, maxSubsetsSize: 64
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 10
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 0 0 
copy the latest feasible solution to instance takes time: 0.081491
thread: 3, sOPT: 10
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 1 0 0 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 1 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[4]: 0 0 1 0 0 0 0 0 1 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 0 2 0 0 0 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[6]: 1 0 0 0 0 0 0 0 1 
Thread: 1, gpu_BlockDP is done.
thread: 0, allBlocks[7]: 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 1 0 1 0 0 0 0 0 0 
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.043974
thread: 1, sOPT: 10
thread: 0, allBlocks[8]: 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[8]: 2 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[9]: 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 1 mySum: 3
thread: 0, blockNoZero[9]: 1 0 1 0 0 0 0 0 1 
thread: 0, allBlocks[10]: 0 0 0 2 0 0 0 0 1 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 2 0 1 0 0 0 0 0 0 
Thread: 2, gpu_BlockDP is done.
thread: 0, allBlocks[11]: 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 1 mySum: 3
thread: 0, blockNoZero[11]: 2 0 0 0 0 0 0 0 1 
thread: 0, allBlocks[12]: 0 0 0 1 0 0 0 0 2 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[12]: 1 0 2 0 0 0 0 0 0 
thread: 0, allBlocks[13]: 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 1 mySum: 3
thread: 0, blockNoZero[13]: 0 0 2 0 0 0 0 0 1 
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.052364
thread: 2, sOPT: 10
thread: 0, allBlocks[14]: 0 0 0 1 0 0 0 0 2 0 0 0 0 0 0 1 mySum: 4
thread: 0, blockNoZero[14]: 1 0 2 0 0 0 0 0 1 
thread: 0, allBlocks[15]: 0 0 0 2 0 0 0 0 1 0 0 0 0 0 0 1 mySum: 4
thread: 0, blockNoZero[15]: 2 0 1 0 0 0 0 0 1 
thread: 0, allBlocks[16]: 0 0 0 2 0 0 0 0 2 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[16]: 2 0 2 0 0 0 0 0 0 
thread: 0, allBlocks[17]: 0 0 0 2 0 0 0 0 2 0 0 0 0 0 0 1 mySum: 5
thread: 0, blockNoZero[17]: 2 0 2 0 0 0 0 0 1 
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 2e-06
thread: 0, sOPT: 11
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: 3, MlBk function is done, and BkID for all processes are collected.Thread: 
Thread: 1, MlBk function is done, and BkID for all processes are collected.
2, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: 1 -1 -1 -1
Pick seg 1 for next iteration where LB: 106, UB: 109
BKID: 0, LB: 106, UB: 109, OPT: 10
Dynamic Programming Runtime: 1.03997
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 1
Iteration: 3, UB: 109, LB: 106start at time: 1505254831
thread: 0, MlBk is called with LB: 106, UB: 107
 thread: 0, LongJobs.size() 14
thread: thread: 2, MlBk is called with LB: 1, MlBk is called with LB: 108107, UB: , UB: 108109

 thread: 1, LongJobs.size() 14
 thread: 2, LongJobs.size() 12
thread: 2, NSTable size: 13
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 2, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 2, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 2, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 2, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 2, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 2, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 2, i: 7, maxN[i].weit: 4, maxN[i].idx: 7, blockDimSize[i]: 4
thread: 2, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 4, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 7, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, largestBlockVec.elm: 0 0 0 0 0 0 0 0 2 0 0 2 0 0 0 1 
thread: 2, blockDimSizeComp: 0 0 0 0 0 2 0 0 1 2 2 1 2 2 0 2 
thread: 2, divisorComp: 0 0 0 0 0 1 0 0 3 1 1 3 1 1 0 2 
thread: 2, largestBlockVec: 0 0 0 0 0 0 0 0 2 0 0 2 0 0 0 1 
thread: 2, largestNoZeroBlockVec: 0 2 0 0 2 0 0 1 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 2 0 0 1 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 1 0 0 2 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 1 , mySum: 3
0 0 0 0 0 0 0 0 1 0 0 2 0 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 2 0 0 1 0 0 0 1 , mySum: 4
0 0 0 0 0 0 0 0 2 0 0 2 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 2 0 0 2 0 0 0 1 , mySum: 5
thread: 2, maxBlockLvlSize: 5
thread: 2, maxInBlockLvlSize: 20
thread: 2, AllTableSize: 1152, maxSubsetsSize: 64
thread: 1, NSTable size: 21
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 1, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 1, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 1, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 1, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 1, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 1, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 1, i: 7, maxN[i].weit: 2, maxN[i].idx: 7, blockDimSize[i]: 2
thread: 1, i: 8, maxN[i].weit: 4, maxN[i].idx: 8, blockDimSize[i]: 4
thread: 1, i: 0, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 5, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 7, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 8, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, largestBlockVec.elm: 0 0 0 2 0 0 0 0 2 0 0 0 0 0 0 1 
thread: 1, blockDimSizeComp: 0 0 0 1 0 2 0 0 1 2 2 3 2 2 0 2 
thread: 1, divisorComp: 0 0 0 3 0 1 0 0 3 1 1 1 1 1 0 2 
thread: 1, largestBlockVec: 0 0 0 2 0 0 0 0 2 0 0 0 0 0 0 1 
thread: 1, largestNoZeroBlockVec: 2 0 2 0 0 0 0 0 1 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 2
0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 1 , mySum: 3
0 0 0 2 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 3
0 0 0 1 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 1 , mySum: 3
0 0 0 1 0 0 0 0 2 0 0 0 0 0 0 1 , mySum: 4
0 0 0 2 0 0 0 0 1 0 0 0 0 0 0 1 , mySum: 4
0 0 0 2 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 2 0 0 0 0 2 0 0 0 0 0 0 1 , mySum: 5
thread: 0, NSTable size: 21
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 0, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 0, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 0, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 0, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 0, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 0, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 0, i: 7, maxN[i].weit: 2, maxN[i].idx: 7, blockDimSize[i]: 2
thread: 0, i: 8, maxN[i].weit: 4, maxN[i].idx: 8, blockDimSize[i]: 4
thread: 0, i: 0, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 5, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 7, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 8, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, largestBlockVec.elm: 0 0 0 2 0 0 0 0 2 0 0 0 0 0 0 1 
thread: 0, blockDimSizeComp: 0 0 0 1 0 2 0 0 1 2 2 3 2 2 0 2 
thread: 0, divisorComp: 0 0 0 3 0 1 0 0 3 1 1 1 1 1 0 2 
thread: 0, largestBlockVec: 0 0 0 2 0 0 0 0 2 0 0 0 0 0 0 1 
thread: 0, largestNoZeroBlockVec: 2 0 2 0 0 0 0 0 1 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 2
0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 1 , mySum: 3
0 0 0 2 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 3
0 0 0 1 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 1 , mySum: 3
0 0 0 1 0 0 0 0 2 0 0 0 0 0 0 1 , mySum: 4
0 0 0 2 0 0 0 0 1 0 0 0 0 0 0 1 , mySum: 4
0 0 0 2 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 2 0 0 0 0 2 0 0 0 0 0 0 1 , mySum: 5
thread: 1, maxBlockLvlSize: 5
thread: 1, maxInBlockLvlSize: 50
thread: 1, AllTableSize: 3456, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 5
thread: 0, maxInBlockLvlSize: 50
thread: 0, AllTableSize: 3456, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 1 0 0 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 1 0 0 0 0 0 0 0 0 
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.070018
thread: 2, sOPT: 10
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[4]: 0 0 1 0 0 0 0 0 1 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 0 2 0 0 0 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 mySum: 2
thread: 0, blockNoZero[6]: 1 0 0 0 0 0 0 0 1 
thread: 0, allBlocks[7]: 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 1 0 1 0 0 0 0 0 0 
thread: 0, allBlocks[8]: 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[8]: 2 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[9]: 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 1 mySum: 3
thread: 0, blockNoZero[9]: 1 0 1 0 0 0 0 0 1 
thread: 0, allBlocks[10]: 0 0 0 2 0 0 0 0 1 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 2 0 1 0 0 0 0 0 0 
thread: 0, allBlocks[11]: 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 1 mySum: 3
thread: 0, blockNoZero[11]: 2 0 0 0 0 0 0 0 1 
thread: 0, allBlocks[12]: 0 0 0 1 0 0 0 0 2 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[12]: 1 0 2 0 0 0 0 0 0 
thread: 0, allBlocks[13]: 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 1 mySum: 3
thread: 0, blockNoZero[13]: 0 0 2 0 0 0 0 0 1 
thread: 0, allBlocks[14]: 0 0 0 1 0 0 0 0 2 0 0 0 0 0 0 1 mySum: 4
thread: 0, blockNoZero[14]: 1 0 2 0 0 0 0 0 1 
thread: 0, allBlocks[15]: 0 0 0 2 0 0 0 0 1 0 0 0 0 0 0 1 mySum: 4
thread: 0, blockNoZero[15]: 2 0 1 0 0 0 0 0 1 
thread: 0, allBlocks[16]: 0 0 0 2 0 0 0 0 2 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[16]: 2 0 2 0 0 0 0 0 0 
thread: 0, allBlocks[17]: 0 0 0 2 0 0 0 0 2 0 0 0 0 0 0 1 mySum: 5
thread: 0, blockNoZero[17]: 2 0 2 0 0 0 0 0 1 
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 11
copy the latest feasible solution to instance takes time: 3e-06
thread: 1, sOPT: 11
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 2e-06
thread: 0, sOPT: 11
BKID: 0, LB: 108, UB: 108, OPT: 10
Dynamic Programming Runtime: 1.10832
Execution time between LB and UB is: 0
By far, all LB UB calculation runtime: 1
********************************************************
Total execution on UB and LB is: 1
OUT of Bk while loop  
UB    108
LB    108
T1    108
T2    108
OPT   10
nMachines   10
BkID	0
AllProbData.size()    3
ck :   2
AllProbData[ck].Ttable    108
ck :   1
AllProbData[ck].Ttable    108
ck :   0
AllProbData[ck].Ttable    116
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan108
Main Scheduling is Done
File 3-8 is Done.
******************************
Reading File...
File 3-9 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 196, LB: 104start at time: 1505254831
thread: 0, MlBk is called with LB: 104, UB: 127
thread: 3, MlBk is called with LB: 173, UB: 196
thread: 1, MlBk is called with LB: 127, UB: 150
 thread: 0, LongJobs.size() 16
thread: 2, MlBk is called with LB: 150, UB: 173
 thread: 3, LongJobs.size() 11
 thread: 1, LongJobs.size() 16
 thread: 2, LongJobs.size() 15
thread: 3, NSTable size: 19
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 5
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 3, i: 1, maxN[i].weit: 6, maxN[i].idx: 1, blockDimSize[i]: 6
thread: 3, i: 2, maxN[i].weit: 4, maxN[i].idx: 2, blockDimSize[i]: 4
thread: 3, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 3, i: 0, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, i: 1, divisor[i]: 2, blockDimSize[i]: 3
thread: 3, i: 2, divisor[i]: 2, blockDimSize[i]: 2
thread: 3, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, largestBlockVec.elm: 0 0 0 2 1 0 1 0 0 0 0 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 1 3 0 2 2 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 3 2 0 2 1 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 2 1 0 1 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 2 1 1 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 2 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 2 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 4
thread: 3, maxBlockLvlSize: 4
thread: 3, maxInBlockLvlSize: 4
thread: 3, AllTableSize: 144, maxSubsetsSize: 64
thread: 2, NSTable size: 36
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 5, maxN[i].idx: 0, blockDimSize[i]: 5
thread: 2, i: 1, maxN[i].weit: 4, maxN[i].idx: 1, blockDimSize[i]: 4
thread: 2, i: 2, maxN[i].weit: 5, maxN[i].idx: 2, blockDimSize[i]: 5
thread: 2, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 2, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 2, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 2, i: 0, divisor[i]: 5, blockDimSize[i]: 1
thread: 2, i: 1, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, i: 2, divisor[i]: 5, blockDimSize[i]: 1
thread: 2, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, largestBlockVec.elm: 0 0 0 4 1 4 0 0 0 0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 1 2 1 2 3 2 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 5 2 5 1 1 1 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 4 1 4 0 0 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 4 1 4 0 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 1 2 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 3 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 2 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 3 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 2 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 3 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 1 0 3 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 4 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 4 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 1 0 4 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 3 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 3 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 2 1 2 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 4 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 1 1 3 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 2 0 3 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 2 1 3 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 4 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 4 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 1 1 4 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 3 1 2 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 2 0 4 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 3 0 3 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 3 1 3 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 3 0 4 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 4 0 3 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 2 1 4 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 4 1 2 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 3 1 4 0 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 4 0 4 0 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 4 1 3 0 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 4 1 4 0 0 0 0 0 0 0 0 0 0 , mySum: 9
thread: 2, maxBlockLvlSize: 9
thread: 2, maxInBlockLvlSize: 7
thread: 2, AllTableSize: 1200, maxSubsetsSize: 64
thread: 1, NSTable size: 43
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 1, i: 1, maxN[i].weit: 5, maxN[i].idx: 1, blockDimSize[i]: 5
thread: 1, i: 2, maxN[i].weit: 4, maxN[i].idx: 2, blockDimSize[i]: 4
thread: 1, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 1, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 1, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 1, i: 6, maxN[i].weit: 3, maxN[i].idx: 6, blockDimSize[i]: 3
thread: 1, i: 7, maxN[i].weit: 2, maxN[i].idx: 7, blockDimSize[i]: 2
thread: 1, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 1, divisor[i]: 5, blockDimSize[i]: 1
thread: 1, i: 2, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, i: 3, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 6, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 7, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, largestBlockVec.elm: 0 0 0 0 4 1 1 0 0 0 0 0 0 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 2 1 2 2 2 2 3 2 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 1 5 2 2 1 1 1 1 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 4 1 1 0 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 4 1 1 0 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 1 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 3 0 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 3 1 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 3 1 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 4 0 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 4 1 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 4 1 1 0 0 0 0 0 0 0 0 0 , mySum: 6
thread: 0, NSTable size: 21
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 0, i: 1, maxN[i].weit: 5, maxN[i].idx: 1, blockDimSize[i]: 5
thread: 0, i: 2, maxN[i].weit: 4, maxN[i].idx: 2, blockDimSize[i]: 4
thread: 0, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 0, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 0, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 0, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 0, i: 7, maxN[i].weit: 2, maxN[i].idx: 7, blockDimSize[i]: 2
thread: 0, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 1, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, i: 2, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 3, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 5, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 7, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, largestBlockVec.elm: 0 0 0 0 0 4 1 2 0 0 0 0 0 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 0 2 1 2 1 3 0 3 2 2 0 0 0 
thread: 0, divisorComp: 0 0 0 0 1 5 2 3 1 0 1 1 1 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 4 1 2 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 4 1 2 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 3 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 1 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 3 0 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 1 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 0 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 1 2 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 3 0 2 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 3 1 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 4 0 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 4 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 3 1 2 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 4 0 2 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 4 1 1 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 4 1 2 0 0 0 0 0 0 0 0 , mySum: 7
thread: 1, maxBlockLvlSize: 4
thread: 1, maxInBlockLvlSize: 50
thread: 1, AllTableSize: 3840, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 6
thread: 0, maxInBlockLvlSize: 36
thread: 0, AllTableSize: 4320, maxSubsetsSize: 64
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 5
copy the latest feasible solution to instance takes time: 0.005137
thread: 3, sOPT: 5
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 1 0 0 0 0 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 1 0 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 1 0 0 0 0 0 0 
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 6
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 0 2 0 0 0 0 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 0 1 1 0 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 1 0 1 0 0 0 0 
thread: 0, allBlocks[7]: 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 0 1 1 0 0 0 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[8]: 0 2 0 0 0 0 0 0 
copy the latest feasible solution to instance takes time: 0.065505
thread: 2, sOPT: 6
thread: 0, allBlocks[9]: 0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[9]: 0 2 1 0 0 0 0 0 
thread: 0, allBlocks[10]: 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 0 3 0 0 0 0 0 0 
thread: 0, allBlocks[11]: 0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 0 2 0 1 0 0 0 0 
thread: 0, allBlocks[12]: 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[12]: 0 1 1 1 0 0 0 0 
thread: 0, allBlocks[13]: 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[13]: 0 1 0 2 0 0 0 0 
thread: 0, allBlocks[14]: 0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[14]: 0 0 1 2 0 0 0 0 
thread: 0, allBlocks[15]: 0 0 0 0 0 3 1 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[15]: 0 3 1 0 0 0 0 0 
thread: 0, allBlocks[16]: 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[16]: 0 4 0 0 0 0 0 0 
thread: 0, allBlocks[17]: 0 0 0 0 0 1 1 2 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[17]: 0 1 1 2 0 0 0 0 
thread: 0, allBlocks[18]: 0 0 0 0 0 3 0 1 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[18]: 0 3 0 1 0 0 0 0 
thread: 0, allBlocks[19]: 0 0 0 0 0 2 1 1 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[19]: 0 2 1 1 0 0 0 0 
thread: 0, allBlocks[20]: 0 0 0 0 0 2 0 2 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[20]: 0 2 0 2 0 0 0 0 
thread: 0, allBlocks[21]: 0 0 0 0 0 2 1 2 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[21]: 0 2 1 2 0 0 0 0 
thread: 0, allBlocks[22]: 0 0 0 0 0 3 0 2 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[22]: 0 3 0 2 0 0 0 0 
thread: 0, allBlocks[23]: 0 0 0 0 0 3 1 1 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[23]: 0 3 1 1 0 0 0 0 
thread: 0, allBlocks[24]: 0 0 0 0 0 4 0 1 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[24]: 0 4 0 1 0 0 0 0 
thread: 0, allBlocks[25]: 0 0 0 0 0 4 1 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[25]: 0 4 1 0 0 0 0 0 
thread: 0, allBlocks[26]: 0 0 0 0 0 3 1 2 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[26]: 0 3 1 2 0 0 0 0 
thread: 0, allBlocks[27]: 0 0 0 0 0 4 0 2 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[27]: 0 4 0 2 0 0 0 0 
thread: 0, allBlocks[28]: 0 0 0 0 0 4 1 1 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[28]: 0 4 1 1 0 0 0 0 
thread: 0, allBlocks[29]: 0 0 0 0 0 4 1 2 0 0 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[29]: 0 4 1 2 0 0 0 0 
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 7
copy the latest feasible solution to instance takes time: 0.209795
thread: 0, sOPT: 10
copy the latest feasible solution to instance takes time: 0.08375
thread: 1, sOPT: 7
Thread: 1, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: Thread: 2, MlBk function is done, and BkID for all processes are collected.03, MlBk function is done, and BkID for all processes are collected., MlBk function is done, and BkID for all processes are collected.


sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 104, UB: 116
BKID: 0, LB: 104, UB: 116, OPT: 10
Dynamic Programming Runtime: 1.40101
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 1
Iteration: 2, UB: 116, LB: 104start at time: 1505254832
thread: 0, MlBk is called with LB: 104, UB: 107
 thread: 0, LongJobs.size() 16
thread: thread: 1, MlBk is called with LB: 107, UB: 110
2, MlBk is called with LB: 110, UB: 113
thread: 3, MlBk is called with LB: 113, UB: 116
 thread: 3, LongJobs.size() 16
 thread: 2, LongJobs.size() 16
 thread: 1, LongJobs.size() 16
thread: 2, NSTable size: 19
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 2, i: 1, maxN[i].weit: 5, maxN[i].idx: 1, blockDimSize[i]: 5
thread: 2, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 2, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 2, i: 4, maxN[i].weit: 5, maxN[i].idx: 4, blockDimSize[i]: 5
thread: 2, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 2, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 2, i: 7, maxN[i].weit: 2, maxN[i].idx: 7, blockDimSize[i]: 2
thread: 2, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 1, divisor[i]: 5, blockDimSize[i]: 1
thread: 2, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 4, divisor[i]: 5, blockDimSize[i]: 1
thread: 2, i: 5, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 7, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, NSTable size: 19
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: thread: 20, largestBlockVec.elm: , maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 1, i: 1, maxN[i].weit: 5, maxN[i].idx: 1, blockDimSize[i]: 5
thread: 1, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 1, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 1, i: 4, maxN[i].weit: 5, maxN[i].idx: 4, blockDimSize[i]: 5
thread: 1, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 1, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 1, i: 7, maxN[i].weit: 2, maxN[i].idx: 7, blockDimSize[i]: 2
thread: 1, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 1, divisor[i]: 5, blockDimSize[i]: 1
thread: 1, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 4, divisor[i]: 5, blockDimSize[i]: 1
0 0 thread: 1, i: 05 , divisor[i]: 1, blockDimSize[i]: 03
 thread: 1, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 7, divisor[i]: 1, blockDimSize[i]: 2
0 thread: 1, largestBlockVec.elm: 0 0 4 2 0 0 0 40  0 0 00  0 00  04  2 
0 thread: 2, blockDimSizeComp: 0 0 0 0 0 2 1 1 2 1 0 0 3 2 2 0 
thread: 4 0 0 0 0 20 , divisorComp: 00  0 0 
0 0thread: 1, blockDimSizeComp: 0 0 0 0 0 2 1 1 2 1 0 0 3 2 2 0 
thread: 1, divisorComp: 0 0 0 0 0 1 5 3 1 5 3 1 5 0 0 1 1 1 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 4 2 0 4 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 4 2 0 4 0 0 0  1 5 0 0 1 1 1 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 4
 2 0 4 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 4 2 0 4 0 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
thread: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
10 0 0 0 0 0 0 1 0 0 0 , allBlocks: 00  0 00  00 0  0 00  , mySum: 01
 0 0 0 0 0 0 0 1 0 1 0 0 0 00 0 0 0 0 0 0 0 0 , mySum: 0 
0 0 0 0 0 0 0 0 0 1 0 0 0 00 0 0  , mySum: 10
 0 0 0 0 0 0 1 0 0 0 0 0 0 0, mySum:  02 
0 0 0 0 0 0 0 2 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 00 0  00  0 0, mySum:  1
, mySum: 0 0 0 0 0 0 0 1 0 1 0 0 0 02 0 
00 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0  0 , mySum: 0 0 21
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0  01 , mySum:  2
0 0 0 0 0 0 0 2 0 0 0 0 0 00 0  00 , mySum:  2
0 0 0 0 0 0 1 1 0 0 0 0 0 00 0  0 0, mySum:  2
0 0 0 0 0 0 0 0 0 2 0 0 0 0 00  00  0 , mySum: 02 , mySum: 
20 0 0 0 0 0 1 0 0 1 0 0 
0 00 0 0 0 0 0 0 0 0 2 0 0 0 0 , mySum:  20 
00 0 0 0 0 0 0 0 0 3 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 1 0 0  00  0 00  , mySum: 03 0
 , mySum: 0 0 0 0 0 0 2 1 0 0 0 0 0 02
0 0 0 0 0 0 0 0 0 3 0 0 0 0  0 0 , mySum: 03 
0 , mySum: 0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 3
0 0 0 0 0 0 2 0 0 1 0 0 00 0 0  0 , mySum: , mySum: 33

0 0 0 0 0 0 2 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0, mySum: 3
0 0 0 0 0 0 3 0 0 0 0 0 0 0 0  0 , mySum: 30
0 0 0 0 0 0 1 2 0 0 0 0 0 0 0  0 , mySum: 30
 00 0 0 0 0 0 1 1 0 1 0 0 0 0  0 0 0, mySum:  3
0 0 0 0 0 0 1 0 0 2 0 0 0 0 0 00 , mySum:  3, mySum: 
3
0 0 0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 0 1 2 0 0 0 00  00  0, mySum:  0 30
 0 0 0 0 0 0 0 1 0 2 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 1 0 1 0 0 0 00  0, mySum:  30 , mySum: 
3
0 0 0 0 0 0 1 0 0 2 0 0 0 0 0 0 0 0 1 0 0 3 0 0 00 0 0 0  , mySum: 0 30
 0 0 0 0 0 0 0 2 0 1 0 0 0 00 0  0 , mySum: , mySum: 3
0 0 0 0 0 0 0 1 0 2 0 0 0 40 0
 00 0 0 0 0 0 4 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 0 0 3 0 0  0 , mySum: 4
0 0 0 0 0 0 2 1 0 1 0 0 0 0 0 0 0 0 0, mySum:  40
 0 0 0 0 0 0 4 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 2 0 2 0 0 0 0 00 0  , mySum: 4
0 0 0 0 0 0 1 1 0 2 0 0 0 0 00 0 , mySum:  40
 0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 2 1 0 1 0 0 0 0 00  00  , mySum: 4, mySum: 
40 0 0 0 0 0 3 1 0 0 0 0 0 0 0 0 , mySum: 
40 0 0 0 0 0 0 2 0 2 0 0 
00 0 0 0 0 0 1 2 0 1 0 0 0 0 0 0 0 0 , mySum:  40
 0 0 0 0 0 0 1 1 0 2 0 0 , mySum: 4
0 0 0 0 0 0 2 2 0 0 0 0 0 0 0 00  , mySum: 04 
0 0 0 0 0 0 0 3 0 0 1 0 0 0 0 00 0 , mySum:  4
0 0 0 0 0 0 0 1 0 3 0 0 0 0 0 , mySum: 0 , mySum: 4
40 0 0 0 0 0 2 0 0 2 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 4 0 0 00 0  0, mySum:  0 4, mySum: 
40 0 0 0 0 0 2 1 0 2 0 0 0 0 0
 0 0 0 0 0 0 0 3 1 0 0 0, mySum: 5
0 0 0 0 0 0 2 2 0 1 0 0 0 0 0 0 0 0 0  0 , mySum: 04 
0 0 0 0 0 0 1 2 0 1 0 0 0 0, mySum:  05 0
 , mySum: 0 0 0 0 0 0 4 1 0 0 0 0 0 0 0 4
0 0 0 0 0 0 2 2 0 0 0 00 0  0 0 , mySum: 0 , mySum: 54

0 0 0 0 0 0 3 0 0 1 0 0 00 0 0 0 0 0 3 0 0 2  00  0 00  0, mySum: 4 0
 0 00 0 0 0 0 0 0 1 0 3 0 0 0 0  , mySum: 05 
0 , mySum: 0 0 0 0 0 0 3 1 0 1 0 0 0 0 0 4
0 0 0 0 0 0 2 0 0 2 0 0 00  0, mySum:  0 05 
, mySum: 0 0 0 0 0 0 4 0 0 1 0 0 0 0 0 40 , mySum: 5
0 0 0 0 0 0 3 2 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 2 1 0 2 0 0, mySum:  05 
00 0 0 0 0 0 0 2 0 3 0 0 0 0 0  0 0 , mySum: 50
0 0 0 0 0 0 2 2 0 1 0 0  , mySum: 5
0 0 0 0 0 0 2 0 0 3 0 0 0 0 00 0 , mySum:  50 
00 0 0 0 0 0 1 0 0 4 0 0 0 0 0  0 0, mySum:  5
0 0 0 0 0 0 0 1 0 4 0 0 0 0 , mySum: 5
0 0 0 0 0 0 4 1 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 2 0 2 0 0 0 0 00 0 , mySum:  5
0 0 0 0 0 0 1 1 0 3 0 0 0 0 0 00 , mySum:  5
thread: 0, NSTable size: 0 0 180
 00 0 0 4 1 0 1 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 2 0 4 0  00  thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, mySum: 5
0 0 0 0 0 0 3 0 0 2 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 3 1 0 1 0 0 0 0 0 0 , mySum: 6
0 0 0, blockDimSize[i]:  0 0 0 4 02 0 
2thread: 0 0 0 0 , mySum: 5
0 0 0 0 0 0 4 0 0 1 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 3 2 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 2 0 3 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 2 0 0 3 0 0  0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 3 2 0 1 0 0 0 0 0 0 00 , mySum:  06 
00 0 0 0 0 0 3 1 0 2 0 0 0 0  , mySum: 5
0 0 0 0 0 0 1 0 0 4 0 0 0 0 00 0 , mySum: 5
0 0 0 0 0 0 0 1 0 4 , i: 0 0 0 0 0 0 , mySum: 5
0 0 , mySum: 6
0 0 0 0 0 0 1 1 0 4 0 0 0 0 00 0 0 0 0 0 1 2 0 2 0 0 0 0 0 0 , mySum: 5
10 0 , maxN[i].weit: 0 0 0 5, maxN[i].idx: 0 1 1 0 3 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 4 1 0 1 0 0 10 0 0 0 , mySum: 6
 0 , mySum: 6
0 0 0 0 0 0 3 0 0 3 0 0 0 0 0 0 00 , mySum: 6 
00 0 0 0 0 0 1 2 0 3 0 0 0 0 0 0  00  , mySum: 0 , blockDimSize[i]: 0 2 0 4 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 4 0 0 2 0 0 0 0 5
0thread: 0, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3 
0thread: 0, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 0, i: 4, maxN[i].weit: 56, maxN[i].idx: 4, blockDimSize[i]: 5
thread: 0, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 0, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 0, i: 7, maxN[i].weit: 2, maxN[i].idx: 7, blockDimSize[i]: 2
 thread: 0, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 1, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, i: 5, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 7, divisor[i]: 1, blockDimSize[i]: 2

thread: 0, largestBlockVec.elm: 0 0 0 0 0 0 0 4 2 0 0 0 00 0 0 0 0 , mySum: 6
0 0 0 0 0 0 2 2 0 2 0 0 0 0 0 0 , mySum: 0 0 4 2 6
00 0 0 0 0 0 3 2 0 1 0 0 0 0 0 4 0 0 0 0 0  0 
thread: 0, blockDimSizeComp: 0 0 0 0 0 2 1 1 2 0 0 1, mySum:  06 
0 0 0 0 0 0 2 0 0 4 0 0 0 0  0 , mySum: 6
0 0 0 0 0 0 3 1 0 2 0 0 00 0 , mySum: 6
0 0 0 0 0 0 2 1 0 3 0 0 0 0 0  0 0 0, mySum:  60
0 0 0 0 0 0 2 1 0 4 0 0 0 0  , mySum: 6
0 0 0 0 0 0 1 1 0 4 0 0 0 00 0 0 , mySum: 6
0 3 2 2 00 
 thread: 0, divisorComp: 0 0 0 0 0 1 5 3 1  0 , mySum: 7
0 0 0 0 0 0 4 1 0 2 0 0 0 5 0 0 1 1 1 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 4 2 0 4 00 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 4 2 0 4 0 0 0  
0 0 0 0 0 3 0 0 3 0 0 0 00  00 , mySum:  70 , mySum: 
6
0 0 0 0 0 0 1 2 0 3 0 0 00 0 0 0 0 0 4 0 0 3 0 0  0 0 00  00  0 , mySum: , mySum: 76

0 0 0 0 0 0 4 2 0 1 0 0 0 0 0 0 0 0 0 0 4 2 0 0 00 0  00  , mySum: 7
0 0 0 0 0 0 0 3 2 0 2 0 0 0 0 0 00 0 , mySum: 6
0 0 0 0 0 0 2 2 0 2 0 0 0 0  , mySum: 0 70
0 0 0 0 0 0 3 1 0 3 0 0 0 0 0  , mySum: 6
0 0 0 0 0 0 2 0 0 4 0 0 0 00  0, mySum:  0 7, mySum: 
6
0 0 0 0 0 0 3 0 0 4 0 0 0 0 0 0 0 0 0 0 0 0 2 1 0 3 0, mySum: 7
0 0 0 0 0 0 1 2 0 4 0 0 0 0  0 0 , mySum: 07
0 0 0 0 0 0 2 2 0 3 0 0 0 0  0 0 0, mySum:  7
0 0 0 0 0 0 3 2 0 3 0 0 0 0 0 00  , mySum: 08 
00 0 0 0 0 0 3 1 0 4 0 0 0 0  , mySum: 6
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 00 00 0 0 0 2 1 0 4 0 0 0 0 0 0 , mySum: 7
 0 0 0 0 0 0 00  0 , mySum: 00 
 00 0 0 0 0 0 0 0 0 0 1 0 0  , mySum: 8
00 0 0 0 0 0 4 0 0 4 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0  0 , mySum: 8
0 0 0 0 0 0 4 1 0 3 0 0 0 00 0 0 , mySum: 8
0 0 4 1 00  0 0 0 0 0 2 2 0 4 00  02   , mySum: 01
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0  0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 4 0 0 3 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 00  0, mySum:  0 2, mySum: 7

0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 0 4 2 0 2 0 0 0 0 0 00  00  0, mySum:  , mySum: 0 0 0 0 0 0 4 2 0 1 0 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 3 2 0 2 0 0 00 0 0 0 , mySum: 7
8
0 0 0 0 0 0 3 2 0 4 0 0 0 0 00 0 , mySum: 9
 , mySum: 2
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 4 1 0 4 0 0  0 0 0 00  00 00  03  , mySum: 19
  00 30 0 0 0 0 0 4 2 0 3 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 3 0 0 4 0 0 0 0 0 , mySum: 9
0 0 0 0 0 0 4 2 0 4 0 0 0 0 0  0 0 0 , mySum: 7
0 0 0 0 0 0 1 2 0 4 0 0 0 0 , mySum: 010 0 
0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 2 0 0 0 0 0  0 , mySum: , mySum: 72

0 0 0 0 0 0 2 2 0 3 0 0 00 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 3 2 0 3 0 0 0  0 00  0 0, mySum:  8
0 0 0 0 0 0 3 1 0 4 0 0 00 0 0  0 , mySum: , mySum: 2
8
0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 00 0 0 0 0 0 4 0 0 4 0  0 , mySum: 0 0 30
 0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 , mySum: 03
0 0 0 0 0 0 2 0 0 1 0 0 0 0 0 0  , mySum: , mySum: 83

0 0 0 0 0 0 4 1 0 3 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 0 2 2 0 4 0 0 0 0 0 , mySum: 30
0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0  , mySum: 30
 00 0 0 0 0 0 1 1 0 1 0 0 0 0  0 00 , mySum:  8
, mySum: 0 0 0 0 0 0 4 2 0 2 0 0 3
0 0 0 0 0 0 1 0 0 2 0 0 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 0 3 2 0 4 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 0 1 0 0 0 0 0 00 , mySum:  30
 0 0 0 0 0 0 0 1 0 2 0 0 0 0 00 0 , mySum: 9
0 0 0 0 0 0 4 1 0 4 0 0 0  0 0 00  , mySum: , mySum: 93
0 0 0 0 0 0 4 2 0 3 0 0 0 
00 0 0 0 0 0 1 0 0 3 0 0 0 0 0  0 , mySum: 04 0 
, mySum: 90 0 0 0 0 0 4 0 0 0 0 0 0 0 0
 00 0 0 0 0 0 4 2 0 4 0  0, mySum:  40
 0 0 0 0 0 0 2 1 0 1 0 0 0 0 0 0 0 0 , mySum: 10
0 , mySum: 4
0 0 0 0 0 0 0 2 0 2 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 1 0 2 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 3 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 2 0 1 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 3 0 0 1 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 1 0 3 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 2 0 0 2 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 2 1 0 2 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 2 2 0 1 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 4 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 3 0 0 2 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 3 1 0 1 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 4 0 0 1 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 3 2 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 2 0 3 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 2 0 0 3 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 0 0 4 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 1 0 4 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 2 0 2 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 1 0 3 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 4 1 0 1 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 2 0 4 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 4 0 0 2 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 3 2 0 1 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 3 1 0 2 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 1 1 0 4 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 3 0 0 3 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 1 2 0 3 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 4 2 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 2 2 0 2 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 2 0 0 4 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 2 1 0 3 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 2 1 0 4 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 4 1 0 2 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 4 0 0 3 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 4 2 0 1 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 3 2 0 2 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 3 1 0 3 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 3 0 0 4 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 1 2 0 4 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 2 2 0 3 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 3 2 0 3 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 0 3 1 0 4 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 0 4 0 0 4 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 0 4 1 0 3 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 0 2 2 0 4 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 0 4 2 0 2 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 0 3 2 0 4 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 0 4 1 0 4 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 0 4 2 0 3 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 0 4 2 0 4 0 0 0 0 0 0 , mySum: 10
thread: 3, NSTable size: 21
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 4
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 3, i: 1, maxN[i].weit: 5, maxN[i].idx: 1, blockDimSize[i]: 5
thread: 3, i: 2, maxN[i].weit: 4, maxN[i].idx: 2, blockDimSize[i]: 4
thread: 3, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 3, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 3, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 3, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 3, i: 7, maxN[i].weit: 2, maxN[i].idx: 7, blockDimSize[i]: 2
thread: 3, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 1, divisor[i]: 5, blockDimSize[i]: 1
thread: 3, i: 2, divisor[i]: 2, blockDimSize[i]: 2
thread: 3, i: 3, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 3, i: 5, divisor[i]: 1, blockDimSize[i]: 3
thread: 3, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 7, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, largestBlockVec.elm: 0 0 0 0 0 4 1 2 0 0 0 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 0 2 1 2 1 3 0 3 2 2 0 0 0 
thread: 3, divisorComp: 0 0 0 0 1 5 2 3 1 0 1 1 1 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 4 1 2 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 4 1 2 0 0 0 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 3 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 1 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 3 0 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 1 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 0 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 1 2 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 3 0 2 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 3 1 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 4 0 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 4 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 3 1 2 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 4 0 2 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 4 1 1 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 4 1 2 0 0 0 0 0 0 0 0 , mySum: 7
thread: 2, maxBlockLvlSize: 13
thread: 2, maxInBlockLvlSize: 14
thread: 2, AllTableSize: 3600, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 13
thread: 0, maxInBlockLvlSize: 14
thread: 0, AllTableSize: 3600, maxSubsetsSize: 64
thread: 1, maxBlockLvlSize: 13
thread: 1, maxInBlockLvlSize: 14
thread: 1, AllTableSize: 3600, maxSubsetsSize: 64
thread: 3, maxBlockLvlSize: 6
thread: 3, maxInBlockLvlSize: 36
thread: 3, AllTableSize: 4320, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 1 0 0 0 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 1 0 0 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 1 0 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 1 0 1 0 0 0 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 2 0 0 0 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 0 2 0 0 0 0 0 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 0 1 1 0 0 0 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[8]: 0 0 0 0 2 0 0 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[9]: 0 1 0 0 1 0 0 0 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 0 0 0 0 3 0 0 0 
thread: 0, allBlocks[11]: 0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 0 2 1 0 0 0 0 0 
thread: 0, allBlocks[12]: 0 0 0 0 0 0 2 0 0 1 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[12]: 0 2 0 0 1 0 0 0 
thread: 0, allBlocks[13]: 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[13]: 0 3 0 0 0 0 0 0 
thread: 0, allBlocks[14]: 0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[14]: 0 1 2 0 0 0 0 0 
thread: 0, allBlocks[15]: 0 0 0 0 0 0 1 1 0 1 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[15]: 0 1 1 0 1 0 0 0 
thread: 0, allBlocks[16]: 0 0 0 0 0 0 1 0 0 2 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[16]: 0 1 0 0 2 0 0 0 
thread: 0, allBlocks[17]: 0 0 0 0 0 0 0 2 0 1 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[17]: 0 0 2 0 1 0 0 0 
thread: 0, allBlocks[18]: 0 0 0 0 0 0 0 1 0 2 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[18]: 0 0 1 0 2 0 0 0 
thread: 0, allBlocks[19]: 0 0 0 0 0 0 1 0 0 3 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[19]: 0 1 0 0 3 0 0 0 
thread: 0, allBlocks[20]: 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[20]: 0 4 0 0 0 0 0 0 
thread: 0, allBlocks[21]: 0 0 0 0 0 0 2 1 0 1 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[21]: 0 2 1 0 1 0 0 0 
thread: 0, allBlocks[22]: 0 0 0 0 0 0 0 2 0 2 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[22]: 0 0 2 0 2 0 0 0 
thread: 0, allBlocks[23]: 0 0 0 0 0 0 1 1 0 2 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[23]: 0 1 1 0 2 0 0 0 
thread: 0, allBlocks[24]: 0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[24]: 0 0 0 0 4 0 0 0 
thread: 0, allBlocks[25]: 0 0 0 0 0 0 3 1 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[25]: 0 3 1 0 0 0 0 0 
thread: 0, allBlocks[26]: 0 0 0 0 0 0 1 2 0 1 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[26]: 0 1 2 0 1 0 0 0 
thread: 0, allBlocks[27]: 0 0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[27]: 0 2 2 0 0 0 0 0 
thread: 0, allBlocks[28]: 0 0 0 0 0 0 3 0 0 1 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[28]: 0 3 0 0 1 0 0 0 
thread: 0, allBlocks[29]: 0 0 0 0 0 0 0 1 0 3 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[29]: 0 0 1 0 3 0 0 0 
thread: 0, allBlocks[30]: 0 0 0 0 0 0 2 0 0 2 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[30]: 0 2 0 0 2 0 0 0 
thread: 0, allBlocks[31]: 0 0 0 0 0 0 2 1 0 2 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[31]: 0 2 1 0 2 0 0 0 
thread: 0, allBlocks[32]: 0 0 0 0 0 0 2 2 0 1 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[32]: 0 2 2 0 1 0 0 0 
thread: 0, allBlocks[33]: 0 0 0 0 0 0 4 1 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[33]: 0 4 1 0 0 0 0 0 
thread: 0, allBlocks[34]: 0 0 0 0 0 0 3 0 0 2 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[34]: 0 3 0 0 2 0 0 0 
thread: 0, allBlocks[35]: 0 0 0 0 0 0 3 1 0 1 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[35]: 0 3 1 0 1 0 0 0 
thread: 0, allBlocks[36]: 0 0 0 0 0 0 4 0 0 1 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[36]: 0 4 0 0 1 0 0 0 
thread: 0, allBlocks[37]: 0 0 0 0 0 0 3 2 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[37]: 0 3 2 0 0 0 0 0 
thread: 0, allBlocks[38]: 0 0 0 0 0 0 0 2 0 3 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[38]: 0 0 2 0 3 0 0 0 
thread: 0, allBlocks[39]: 0 0 0 0 0 0 2 0 0 3 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[39]: 0 2 0 0 3 0 0 0 
thread: 0, allBlocks[40]: 0 0 0 0 0 0 1 0 0 4 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[40]: 0 1 0 0 4 0 0 0 
thread: 0, allBlocks[41]: 0 0 0 0 0 0 0 1 0 4 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[41]: 0 0 1 0 4 0 0 0 
thread: 0, allBlocks[42]: 0 0 0 0 0 0 1 2 0 2 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[42]: 0 1 2 0 2 0 0 0 
thread: 0, allBlocks[43]: 0 0 0 0 0 0 1 1 0 3 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[43]: 0 1 1 0 3 0 0 0 
thread: 0, allBlocks[44]: 0 0 0 0 0 0 4 1 0 1 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[44]: 0 4 1 0 1 0 0 0 
thread: 0, allBlocks[45]: 0 0 0 0 0 0 0 2 0 4 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[45]: 0 0 2 0 4 0 0 0 
thread: 0, allBlocks[46]: 0 0 0 0 0 0 4 0 0 2 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[46]: 0 4 0 0 2 0 0 0 
thread: 0, allBlocks[47]: 0 0 0 0 0 0 3 2 0 1 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[47]: 0 3 2 0 1 0 0 0 
thread: 0, allBlocks[48]: 0 0 0 0 0 0 3 1 0 2 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[48]: 0 3 1 0 2 0 0 0 
thread: 0, allBlocks[49]: 0 0 0 0 0 0 1 1 0 4 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[49]: 0 1 1 0 4 0 0 0 
thread: 0, allBlocks[50]: 0 0 0 0 0 0 3 0 0 3 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[50]: 0 3 0 0 3 0 0 0 
thread: 0, allBlocks[51]: 0 0 0 0 0 0 1 2 0 3 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[51]: 0 1 2 0 3 0 0 0 
thread: 0, allBlocks[52]: 0 0 0 0 0 0 4 2 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[52]: 0 4 2 0 0 0 0 0 
thread: 0, allBlocks[53]: 0 0 0 0 0 0 2 2 0 2 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[53]: 0 2 2 0 2 0 0 0 
thread: 0, allBlocks[54]: 0 0 0 0 0 0 2 0 0 4 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[54]: 0 2 0 0 4 0 0 0 
thread: 0, allBlocks[55]: 0 0 0 0 0 0 2 1 0 3 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[55]: 0 2 1 0 3 0 0 0 
thread: 0, allBlocks[56]: 0 0 0 0 0 0 2 1 0 4 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[56]: 0 2 1 0 4 0 0 0 
thread: 0, allBlocks[57]: 0 0 0 0 0 0 4 1 0 2 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[57]: 0 4 1 0 2 0 0 0 
thread: 0, allBlocks[58]: 0 0 0 0 0 0 4 0 0 3 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[58]: 0 4 0 0 3 0 0 0 
thread: 0, allBlocks[59]: 0 0 0 0 0 0 4 2 0 1 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[59]: 0 4 2 0 1 0 0 0 
thread: 0, allBlocks[60]: 0 0 0 0 0 0 3 2 0 2 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[60]: 0 3 2 0 2 0 0 0 
thread: 0, allBlocks[61]: 0 0 0 0 0 0 3 1 0 3 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[61]: 0 3 1 0 3 0 0 0 
thread: 0, allBlocks[62]: 0 0 0 0 0 0 3 0 0 4 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[62]: 0 3 0 0 4 0 0 0 
thread: 0, allBlocks[63]: 0 0 0 0 0 0 1 2 0 4 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[63]: 0 1 2 0 4 0 0 0 
thread: 0, allBlocks[64]: 0 0 0 0 0 0 2 2 0 3 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[64]: 0 2 2 0 3 0 0 0 
thread: 0, allBlocks[65]: 0 0 0 0 0 0 3 2 0 3 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[65]: 0 3 2 0 3 0 0 0 
thread: 0, allBlocks[66]: 0 0 0 0 0 0 3 1 0 4 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[66]: 0 3 1 0 4 0 0 0 
thread: 0, allBlocks[67]: 0 0 0 0 0 0 4 0 0 4 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[67]: 0 4 0 0 4 0 0 0 
thread: 0, allBlocks[68]: 0 0 0 0 0 0 4 1 0 3 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[68]: 0 4 1 0 3 0 0 0 
thread: 0, allBlocks[69]: 0 0 0 0 0 0 2 2 0 4 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[69]: 0 2 2 0 4 0 0 0 
thread: 0, allBlocks[70]: 0 0 0 0 0 0 4 2 0 2 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[70]: 0 4 2 0 2 0 0 0 
thread: 0, allBlocks[71]: 0 0 0 0 0 0 3 2 0 4 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[71]: 0 3 2 0 4 0 0 0 
thread: 0, allBlocks[72]: 0 0 0 0 0 0 4 1 0 4 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[72]: 0 4 1 0 4 0 0 0 
thread: 0, allBlocks[73]: 0 0 0 0 0 0 4 2 0 3 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[73]: 0 4 2 0 3 0 0 0 
thread: 0, allBlocks[74]: 0 0 0 0 0 0 4 2 0 4 0 0 0 0 0 0 mySum: 10
thread: 0, blockNoZero[74]: 0 4 2 0 4 0 0 0 
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
Thread: 2, gpu_BlockDP is done.
Thread: 0, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.445407
thread: 1, sOPT: 10
copy the latest feasible solution to instance takes time: 0.607665
thread: 0, sOPT: 10
copy the latest feasible solution to instance takes time: 0.721101
thread: 2, sOPT: 10
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.120864
thread: 3, sOPT: 10
Thread: 3, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: Thread: 12, MlBk function is done, and BkID for all processes are collected., MlBk function is done, and BkID for all processes are collected.0
, MlBk function is done, and BkID for all processes are collected.

sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 104, UB: 106
BKID: 0, LB: 104, UB: 106, OPT: 10
Dynamic Programming Runtime: 2.90514
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 2
Iteration: 3, UB: 106, LB: 104start at time: 1505254833
thread: 0, MlBk is called with LB: 104, UB: 105
 thread: 0, LongJobs.size() 16
thread: 1, MlBk is called with LB: 105, UB: 106
 thread: 1, LongJobs.size() 16
thread: 1, NSTable size: 18
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 1, i: 1, maxN[i].weit: 5, maxN[i].idx: 1, blockDimSize[i]: 5
thread: 1, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 1, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 1, i: 4, maxN[i].weit: 5, maxN[i].idx: 4, blockDimSize[i]: 5
thread: 1, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 1, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 1, i: 7, maxN[i].weit: 2, maxN[i].idx: 7, blockDimSize[i]: 2
thread: 1, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 1, divisor[i]: 5, blockDimSize[i]: 1
thread: 1, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 4, divisor[i]: 5, blockDimSize[i]: 1
thread: 1, i: 5, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 7, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, largestBlockVec.elm: 0 0 0 0 0 0 4 2 0 4 0 0 0 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 0 0 2 1 1 2 1 0 0 3 2 2 0 
thread: 1, divisorComp: 0 0 0 0 0 1 5 3 1 5 0 0 1 1 1 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 4 2 0 4 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 4 2 0 4 0 0 0 
thread: 0, NSTable size: 18
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 1, allBlocks: 0 0 0 thread: 0 00 , i: 10, maxN[i].weit:  05 , maxN[i].idx: 0 10, blockDimSize[i]:  5
0 thread: 0, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 0, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
0 0 thread: 0 00, i: 4 , maxN[i].weit: 0 0 5, mySum: , maxN[i].idx: 04
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 , blockDimSize[i]: 15 0
 thread: 0, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 0, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 0, i: 7, maxN[i].weit: 2, maxN[i].idx: 7, blockDimSize[i]: 2
0 0 0 0thread:  0, i: 00 0, divisor[i]:  10, blockDimSize[i]:  0 2, mySum: 
1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0thread: 0, i: 1, divisor[i]: 5, blockDimSize[i]: 1
thread:  0, i: 2, divisor[i]: 3, blockDimSize[i]: 01 0 
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, i: 5, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 7, divisor[i]: 1, blockDimSize[i]: 2
0 0 thread: 00, largestBlockVec.elm:  0 0, mySum: 2 
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 1 0 0 00 0  0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 1 00  0 00  0 0 0 4, mySum: 2 
2 0 0 0 0 0 0 0 0 0 3 0 0 0 0 00 0 , mySum:  3
0 0 0 0 0 0 2 1 0 0 0 0 40  00  00  00  , mySum: 0 30
 0 0 0 0 0 0 2 0 0 1 0 00 0 0  
0thread: 0, blockDimSizeComp: 0 0 0 0 0 2 1 1 2 1 0 0 3 2 2 0 
thread: 0, divisorComp: 0 0 0 0 0  0 , mySum: 3
0 0 0 0 0 0 3 0 0 0 0 0 0 01 5 3 1 5 0 0 1  01  10  , mySum: 0 3
thread: 0, largestBlockVec: 0 0 0 0 0 0 4 2 
0 40 0 0 0 0 0 1 2 0 0 0 0 0  0 0 00  , mySum: 03 0
 0 0 0 0 0 0 1 1 0 1 0 0 0 00 0  0 , mySum: 03 
00 0 0 0 0 0 1 0 0 2 0 0  
thread: 0, largestNoZeroBlockVec: 0 4 2 0 4 0 0 0 0
 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 0 1 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 1 0 2 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 0 0 3 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 2 1 0 1 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 2 0 2 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 1 0 2 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 3 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 2 0 1 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 3 0 0 1 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 1 0 3 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 2 0 0 2 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 2 1 0 2 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 2 2 0 1 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 4 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 3 0 0 2 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 3 1 0 1 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 4 0 0 1 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 3 2 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 2 0 3 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0thread:  0, allBlocks: 20  0 00 0  00  03  00  00 0  0 00  00  0, mySum: 5
 0 0 0 0 0 0 1 0 0 4 0 0 0 0 00 0  00  0, mySum: 5 
0 0 0 0 0 0 0 0 1 0 4 0 0 0 0 0, mySum:  0 0, mySum: 
50 0 0 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 2 0 2 0 0 00 0  00  0 , mySum: , mySum: 51

0 0 0 0 0 0 1 1 0 3 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 00 0  00 , mySum:  5
00 0 0 0 0 0 4 1 0 1 0 0 0  0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 00 0 0  0 0, mySum: 1 0
 , mySum: 60 0 0 0 0 0 0 1 0 1 0 0 0
 0 0 0 0 0 0 0 0 2 0 4 0 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 6
00 0 0 0 0 0 4 0 0 2 0 0 0  0 0 0 , mySum: 20
 0 0 0 0 0 0 0 2 0 0 0 0 0 00  0 00 , mySum:  2
0 0 0 0 0 0 1 1 0 0 0 0 , mySum: 0 60
0 0 0 0 0 0 3 2 0 1 0 0 0 0 0  0 0, mySum:  0 6, mySum: 
20 0 0 0 0 0 3 1 0 2 0 0 0 
0 0 0 0 0 0 0 0 0 0 2 00 0 0  0 00  , mySum: 0 6, mySum: 2

0 0 0 0 0 0 1 1 0 4 0 0 0 0 0 0 0 0 0 0 1 0 0 1 00 0  0 00 0  0, mySum:  6, mySum: 
0 0 0 0 0 0 3 0 0 3 0 0 0 0 0 02 , mySum: 6
0 0 0 0 0 0 1 2 0 3 0 0 0 
00 0 0 0 0 0 0 0 0 3 0 0 0  00  00  , mySum: 0 6, mySum: 
3
0 0 0 0 0 0 4 2 0 0 0 0 0 0 0 0 0 0 0 2 1 0 0 0 00 0  0 00  00 , mySum: 3 
0 0 0 0 0 0 2 0 0 1 0 0 , mySum: 0 0 60
 00 0 0 0 0 0 2 2 0 2 0 0 0 0 0  0 , mySum: , mySum: 6
0 0 0 0 0 0 2 0 0 4 0 0 03
0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 , mySum: 6 
0 0 0 0 0 0 2 1 0 3 0 0 00 0 0 0 , mySum:  30 
00 0 0 0 0 0 1 2 0 0 0 0  0 , mySum: 6
0 0 0 0 0 0 2 1 0 4 0 0 0 00 0  0 , mySum: 70
 0 0 0 0 0 0 4 1 0 2 0 0 00 0 , mySum: 3
0 0 0 0 0 0 1 1 0 1 0 0 0  0 00  00  , mySum: 30
 , mySum: 70 0 0 0 0 0 1 0 0 2 0 0 
0 0 0 0 0 0 0 4 0 0 3 0 00 0 0 0  0 0, mySum:  0 7, mySum: 
3
0 0 0 0 0 0 4 2 0 1 0 0 0 0 0 0 0 0 0 0 2 0 1 0 0 0 , mySum: 70
0 0 0 0 0 0 3 2 0 2 0 0 0 0  0 00  0 , mySum: 07 
00 0 0 0 0 0 3 1 0 3 0 0 0  0 0 00 , mySum:  7, mySum: 3

0 0 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 3 0 0 4 0 00 0  00  0 0, mySum:  30
 0 0 0 0 0 0 1 0 0 3 0 0 0 0 , mySum: 0 07 
0 0 0 0 0 0 1 2 0 4 0 0 0 0 , mySum: 0 0 4, mySum: 
7
0 0 0 0 0 0 2 2 0 3 0 0 0 0 0 0 0 0 0 0 4 0 0 0 00 0  00  , mySum: 7
00 0 0 0 0 0 3 2 0 3 0 0 0 0 0  0 , mySum: 80
0 0 0 0 0 0 3 1 0 4 0 0 0  0 , mySum: 4
0 0 0 0 0 0 2 1 0 1 0 0 0 00 0  0 , mySum: 04 0
 , mySum: 8
0 0 0 0 0 0 0 2 0 2 0 00 0 0 0 0 0 4 0 0 4 0 0 0  0 00  00  0 , mySum: 08 
, mySum: 40 0 0 0 0 0 4 1 0 3 0 0 0 0
 0 0 0 0 0 0 1 1 0 2 00 0 , mySum: 8
 0 0 0 0 0 0 2 2 0 4 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 4 0 0 00 0  0 0 0, mySum: 4 0
 , mySum: 80 0 0 0 0 0 3 1 0 0 0 0 
0 0 0 0 0 0 0 4 2 0 2 0 00 0 0 , mySum: 4 
00 0 0 0 0 0 1 2 0 1 0 0 0  0 00  0 , mySum: 40
0 0 0 0 0 0 2 2 0 0 0 0  0 , mySum: 8
0 0 0 0 0 0 3 2 0 4 0 0 00 0 0 0 , mySum:  40 0
 0 0 0 0 0 0 0 3 0 0 1 0 0, mySum: 9
0 0 0 0 0 0 4 1 0 4 0 0 0  0 0 0 0 , mySum: 04
 0 0 0 0 0 0 0 1 0 3 0 0 00 0  00 , mySum:  9
00 0 0 0 0 0 4 2 0 3 0 0 0 0 0  0, mySum:  4, mySum: 
90 0 0 0 0 0 2 0 0 2 0 0 0
 0 0 0 0 0 0 4 2 0 4 0 0 00 0  00  0 , mySum: 010
 , mySum: 4
0 0 0 0 0 0 2 1 0 2 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 2 2 0 1 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 4 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 3 0 0 2 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 3 1 0 1 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 4 0 0 1 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 3 2 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 2 0 3 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 2 0 0 3 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 0 0 4 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 1 0 4 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 2 0 2 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 1 0 3 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 4 1 0 1 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 2 0 4 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 4 0 0 2 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 3 2 0 1 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 3 1 0 2 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 1 1 0 4 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 3 0 0 3 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 1 2 0 3 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 4 2 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 2 2 0 2 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 2 0 0 4 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 2 1 0 3 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 2 1 0 4 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 4 1 0 2 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 4 0 0 3 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 4 2 0 1 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 3 2 0 2 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 3 1 0 3 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 3 0 0 4 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 1 2 0 4 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 2 2 0 3 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 3 2 0 3 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 0 3 1 0 4 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 0 4 0 0 4 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 0 4 1 0 3 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 0 2 2 0 4 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 0 4 2 0 2 0 0 0 0 0 0 , mySum: 8
0 0 0 0 0 0 3 2 0 4 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 0 4 1 0 4 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 0 4 2 0 3 0 0 0 0 0 0 , mySum: 9
0 0 0 0 0 0 4 2 0 4 0 0 0 0 0 0 , mySum: 10
thread: 1, maxBlockLvlSize: 13
thread: 1, maxInBlockLvlSize: 14
thread: 1, AllTableSize: 3600, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 13
thread: 0, maxInBlockLvlSize: 14
thread: 0, AllTableSize: 3600, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 1 0 0 0 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 1 0 0 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 1 0 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 1 0 1 0 0 0 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 2 0 0 0 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 0 2 0 0 0 0 0 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 0 1 1 0 0 0 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[8]: 0 0 0 0 2 0 0 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[9]: 0 1 0 0 1 0 0 0 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 0 0 0 0 3 0 0 0 
thread: 0, allBlocks[11]: 0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 0 2 1 0 0 0 0 0 
thread: 0, allBlocks[12]: 0 0 0 0 0 0 2 0 0 1 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[12]: 0 2 0 0 1 0 0 0 
thread: 0, allBlocks[13]: 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[13]: 0 3 0 0 0 0 0 0 
thread: 0, allBlocks[14]: 0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[14]: 0 1 2 0 0 0 0 0 
thread: 0, allBlocks[15]: 0 0 0 0 0 0 1 1 0 1 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[15]: 0 1 1 0 1 0 0 0 
thread: 0, allBlocks[16]: 0 0 0 0 0 0 1 0 0 2 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[16]: 0 1 0 0 2 0 0 0 
thread: 0, allBlocks[17]: 0 0 0 0 0 0 0 2 0 1 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[17]: 0 0 2 0 1 0 0 0 
thread: 0, allBlocks[18]: 0 0 0 0 0 0 0 1 0 2 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[18]: 0 0 1 0 2 0 0 0 
thread: 0, allBlocks[19]: 0 0 0 0 0 0 1 0 0 3 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[19]: 0 1 0 0 3 0 0 0 
thread: 0, allBlocks[20]: 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[20]: 0 4 0 0 0 0 0 0 
thread: 0, allBlocks[21]: 0 0 0 0 0 0 2 1 0 1 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[21]: 0 2 1 0 1 0 0 0 
thread: 0, allBlocks[22]: 0 0 0 0 0 0 0 2 0 2 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[22]: 0 0 2 0 2 0 0 0 
thread: 0, allBlocks[23]: 0 0 0 0 0 0 1 1 0 2 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[23]: 0 1 1 0 2 0 0 0 
thread: 0, allBlocks[24]: 0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[24]: 0 0 0 0 4 0 0 0 
thread: 0, allBlocks[25]: 0 0 0 0 0 0 3 1 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[25]: 0 3 1 0 0 0 0 0 
thread: 0, allBlocks[26]: 0 0 0 0 0 0 1 2 0 1 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[26]: 0 1 2 0 1 0 0 0 
thread: 0, allBlocks[27]: 0 0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[27]: 0 2 2 0 0 0 0 0 
thread: 0, allBlocks[28]: 0 0 0 0 0 0 3 0 0 1 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[28]: 0 3 0 0 1 0 0 0 
thread: 0, allBlocks[29]: 0 0 0 0 0 0 0 1 0 3 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[29]: 0 0 1 0 3 0 0 0 
thread: 0, allBlocks[30]: 0 0 0 0 0 0 2 0 0 2 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[30]: 0 2 0 0 2 0 0 0 
thread: 0, allBlocks[31]: 0 0 0 0 0 0 2 1 0 2 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[31]: 0 2 1 0 2 0 0 0 
thread: 0, allBlocks[32]: 0 0 0 0 0 0 2 2 0 1 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[32]: 0 2 2 0 1 0 0 0 
thread: 0, allBlocks[33]: 0 0 0 0 0 0 4 1 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[33]: 0 4 1 0 0 0 0 0 
thread: 0, allBlocks[34]: 0 0 0 0 0 0 3 0 0 2 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[34]: 0 3 0 0 2 0 0 0 
thread: 0, allBlocks[35]: 0 0 0 0 0 0 3 1 0 1 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[35]: 0 3 1 0 1 0 0 0 
thread: 0, allBlocks[36]: 0 0 0 0 0 0 4 0 0 1 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[36]: 0 4 0 0 1 0 0 0 
thread: 0, allBlocks[37]: 0 0 0 0 0 0 3 2 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[37]: 0 3 2 0 0 0 0 0 
thread: 0, allBlocks[38]: 0 0 0 0 0 0 0 2 0 3 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[38]: 0 0 2 0 3 0 0 0 
thread: 0, allBlocks[39]: 0 0 0 0 0 0 2 0 0 3 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[39]: 0 2 0 0 3 0 0 0 
thread: 0, allBlocks[40]: 0 0 0 0 0 0 1 0 0 4 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[40]: 0 1 0 0 4 0 0 0 
thread: 0, allBlocks[41]: 0 0 0 0 0 0 0 1 0 4 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[41]: 0 0 1 0 4 0 0 0 
thread: 0, allBlocks[42]: 0 0 0 0 0 0 1 2 0 2 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[42]: 0 1 2 0 2 0 0 0 
thread: 0, allBlocks[43]: 0 0 0 0 0 0 1 1 0 3 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[43]: 0 1 1 0 3 0 0 0 
thread: 0, allBlocks[44]: 0 0 0 0 0 0 4 1 0 1 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[44]: 0 4 1 0 1 0 0 0 
thread: 0, allBlocks[45]: 0 0 0 0 0 0 0 2 0 4 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[45]: 0 0 2 0 4 0 0 0 
thread: 0, allBlocks[46]: 0 0 0 0 0 0 4 0 0 2 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[46]: 0 4 0 0 2 0 0 0 
thread: 0, allBlocks[47]: 0 0 0 0 0 0 3 2 0 1 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[47]: 0 3 2 0 1 0 0 0 
thread: 0, allBlocks[48]: 0 0 0 0 0 0 3 1 0 2 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[48]: 0 3 1 0 2 0 0 0 
thread: 0, allBlocks[49]: 0 0 0 0 0 0 1 1 0 4 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[49]: 0 1 1 0 4 0 0 0 
thread: 0, allBlocks[50]: 0 0 0 0 0 0 3 0 0 3 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[50]: 0 3 0 0 3 0 0 0 
thread: 0, allBlocks[51]: 0 0 0 0 0 0 1 2 0 3 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[51]: 0 1 2 0 3 0 0 0 
thread: 0, allBlocks[52]: 0 0 0 0 0 0 4 2 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[52]: 0 4 2 0 0 0 0 0 
thread: 0, allBlocks[53]: 0 0 0 0 0 0 2 2 0 2 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[53]: 0 2 2 0 2 0 0 0 
thread: 0, allBlocks[54]: 0 0 0 0 0 0 2 0 0 4 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[54]: 0 2 0 0 4 0 0 0 
thread: 0, allBlocks[55]: 0 0 0 0 0 0 2 1 0 3 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[55]: 0 2 1 0 3 0 0 0 
thread: 0, allBlocks[56]: 0 0 0 0 0 0 2 1 0 4 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[56]: 0 2 1 0 4 0 0 0 
thread: 0, allBlocks[57]: 0 0 0 0 0 0 4 1 0 2 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[57]: 0 4 1 0 2 0 0 0 
thread: 0, allBlocks[58]: 0 0 0 0 0 0 4 0 0 3 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[58]: 0 4 0 0 3 0 0 0 
thread: 0, allBlocks[59]: 0 0 0 0 0 0 4 2 0 1 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[59]: 0 4 2 0 1 0 0 0 
thread: 0, allBlocks[60]: 0 0 0 0 0 0 3 2 0 2 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[60]: 0 3 2 0 2 0 0 0 
thread: 0, allBlocks[61]: 0 0 0 0 0 0 3 1 0 3 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[61]: 0 3 1 0 3 0 0 0 
thread: 0, allBlocks[62]: 0 0 0 0 0 0 3 0 0 4 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[62]: 0 3 0 0 4 0 0 0 
thread: 0, allBlocks[63]: 0 0 0 0 0 0 1 2 0 4 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[63]: 0 1 2 0 4 0 0 0 
thread: 0, allBlocks[64]: 0 0 0 0 0 0 2 2 0 3 0 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[64]: 0 2 2 0 3 0 0 0 
thread: 0, allBlocks[65]: 0 0 0 0 0 0 3 2 0 3 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[65]: 0 3 2 0 3 0 0 0 
thread: 0, allBlocks[66]: 0 0 0 0 0 0 3 1 0 4 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[66]: 0 3 1 0 4 0 0 0 
thread: 0, allBlocks[67]: 0 0 0 0 0 0 4 0 0 4 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[67]: 0 4 0 0 4 0 0 0 
thread: 0, allBlocks[68]: 0 0 0 0 0 0 4 1 0 3 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[68]: 0 4 1 0 3 0 0 0 
thread: 0, allBlocks[69]: 0 0 0 0 0 0 2 2 0 4 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[69]: 0 2 2 0 4 0 0 0 
thread: 0, allBlocks[70]: 0 0 0 0 0 0 4 2 0 2 0 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[70]: 0 4 2 0 2 0 0 0 
thread: 0, allBlocks[71]: 0 0 0 0 0 0 3 2 0 4 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[71]: 0 3 2 0 4 0 0 0 
thread: 0, allBlocks[72]: 0 0 0 0 0 0 4 1 0 4 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[72]: 0 4 1 0 4 0 0 0 
thread: 0, allBlocks[73]: 0 0 0 0 0 0 4 2 0 3 0 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[73]: 0 4 2 0 3 0 0 0 
thread: 0, allBlocks[74]: 0 0 0 0 0 0 4 2 0 4 0 0 0 0 0 0 mySum: 10
thread: 0, blockNoZero[74]: 0 4 2 0 4 0 0 0 
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.158614
thread: 0, sOPT: 10
copy the latest feasible solution to instance takes time: 0.151108
thread: 1, sOPT: 10
BKID: 0, LB: 104, UB: 104, OPT: 10
Dynamic Programming Runtime: 0.887982
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 3
********************************************************
Total execution on UB and LB is: 3
OUT of Bk while loop  
UB    104
LB    104
T1    104
T2    104
OPT   10
nMachines   10
BkID	0
AllProbData.size()    3
ck :   2
AllProbData[ck].Ttable    104
ck :   1
AllProbData[ck].Ttable    105
ck :   0
AllProbData[ck].Ttable    115
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan108
Main Scheduling is Done
File 3-9 is Done.
******************************
Reading File...
File 3-10 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 173, LB: 96start at time: 1505254834
thread: 0, MlBk is called with LB: 96, UB: 115thread: 
thread: 3, MlBk is called with LB: 153, UB: 173
2, MlBk is called with LB: thread: 134, UB: 153
1, MlBk is called with LB: 115, UB: 134
 thread: 0, LongJobs.size() 15
 thread: 3, LongJobs.size() 14
 thread: 2, LongJobs.size() 15
 thread: 1, LongJobs.size() 15
thread: 3, NSTable size: 23
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 6
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 3, i: 1, maxN[i].weit: 4, maxN[i].idx: 1, blockDimSize[i]: 4
thread: 3, i: 2, maxN[i].weit: 7, maxN[i].idx: 2, blockDimSize[i]: 7
thread: 3, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 3, i: 0, divisor[i]: 1, blockDimSize[i]: 3
thread: 3, i: 1, divisor[i]: 2, blockDimSize[i]: 2
thread: 3, i: 2, divisor[i]: 7, blockDimSize[i]: 1
thread: 3, i: 3, divisor[i]: 2, blockDimSize[i]: 2
thread: 3, largestBlockVec.elm: 0 0 0 0 1 6 1 0 0 0 0 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 3 2 1 2 0 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 1 2 7 2 0 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 1 6 1 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 1 6 1 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 3 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 2 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 3 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 5 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 4 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 3 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 4 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 6 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 5 1 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 4 1 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 5 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 6 1 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 5 1 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 6 0 0 0 0 0 0 0 0 0 0 , mySum: 7
0 0 0 0 1 6 1 0 0 0 0 0 0 0 0 0 , mySum: 8
thread: 3, maxBlockLvlSize: 4
thread: 3, maxInBlockLvlSize: 4
thread: 3, AllTableSize: 336, maxSubsetsSize: 64
thread: 2, NSTable size: 23
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 5
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 2, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 2, i: 2, maxN[i].weit: 6, maxN[i].idx: 2, blockDimSize[i]: 6
thread: 2, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 2, i: 4, maxN[i].weit: 4, maxN[i].idx: 4, blockDimSize[i]: 4
thread: 2, i: 0, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, i: 1, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 2, divisor[i]: 2, blockDimSize[i]: 3
thread: 2, i: 3, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 4, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, largestBlockVec.elm: 0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 0 2 3 3 3 2 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 2 1 2 1 2 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 1 0 1 0 1 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 , mySum: 3
thread: 2, maxBlockLvlSize: 3
thread: 2, maxInBlockLvlSize: 26
thread: 2, AllTableSize: 864, maxSubsetsSize: 64
thread: 1, NSTable size: 26
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 5
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 1, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 1, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 1, i: 3, maxN[i].weit: 6, maxN[i].idx: 3, blockDimSize[i]: 6
thread: 1, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 1, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 1, i: 6, maxN[i].weit: 3, maxN[i].idx: 6, blockDimSize[i]: 3
thread: 1, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 3, divisor[i]: 2, blockDimSize[i]: 3
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 6, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, largestBlockVec.elm: 0 0 0 0 0 2 2 1 0 0 0 0 0 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 0 2 1 1 3 3 2 3 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 1 3 3 2 1 1 1 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 2 2 1 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 2 2 1 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 2 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 1 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 2 1 0 0 0 0 0 0 0 0 , mySum: 5
thread: 0, NSTable size: 18
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 5
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 0, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 0, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 0, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 0, i: 4, maxN[i].weit: 6, maxN[i].idx: 4, blockDimSize[i]: 6
thread: 0, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 0, i: 6, maxN[i].weit: 4, maxN[i].idx: 6, blockDimSize[i]: 4
thread: 0, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 2, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 2, blockDimSize[i]: 3
thread: 0, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 6, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, largestBlockVec.elm: 0 0 0 0 0 0 2 0 0 1 0 1 0 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 0 0 2 1 3 2 3 2 2 0 0 0 0 
thread: 0, divisorComp: 0 0 0 0 0 1 3 1 1 2 1 2 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 2 0 0 1 0 1 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 2 0 0 1 0 1 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 1 0 1 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 0 0 0 0 1 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 0 0 1 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 0 0 1 0 1 0 0 0 0 , mySum: 4
thread: 1, maxBlockLvlSize: 5
thread: 1, maxInBlockLvlSize: 26
thread: 1, AllTableSize: 1944, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 4
thread: 0, maxInBlockLvlSize: 36
thread: 0, AllTableSize: 1728, maxSubsetsSize: 64
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 6
copy the latest feasible solution to instance takes time: 0.018869
thread: 3, sOPT: 6
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 0 0 1 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 1 0 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 0 0 1 0 1 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 1 0 0 0 0 1 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 1 0 0 1 0 0 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 0 2 0 0 0 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 1 0 0 1 0 1 0 0 0 0 mySum: 3
thread: 0, blockNoZero[8]: 0 1 0 0 1 0 1 
thread: 0, allBlocks[9]: 0 0 0 0 0 0 2 0 0 0 0 1 0 0 0 0 mySum: 3
thread: 0, blockNoZero[9]: 0 2 0 0 0 0 1 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 2 0 0 1 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 0 2 0 0 1 0 0 
thread: 0, allBlocks[11]: 0 0 0 0 0 0 2 0 0 1 0 1 0 0 0 0 mySum: 4
thread: 0, blockNoZero[11]: 0 2 0 0 1 0 1 
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 7
copy the latest feasible solution to instance takes time: 0.054582
thread: 2, sOPT: 7
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 8
copy the latest feasible solution to instance takes time: 0.078021
thread: 1, sOPT: 8
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 2e-06
thread: 0, sOPT: 11
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: 1, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 3, MlBk function is done, and BkID for all processes are collected.
2, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: 1 -1 -1 -1
Pick seg 1 for next iteration where LB: 106, UB: 125
BKID: 0, LB: 106, UB: 125, OPT: 8
Dynamic Programming Runtime: 0.795869
Execution time between LB and UB is: 0
By far, all LB UB calculation runtime: 0
Iteration: 2, UB: 125, LB: 106start at time: 1505254834
thread: 0, MlBk is called with LB: 106, UB: 111
 thread: 0, LongJobs.size() 15
thread: thread: 1, MlBk is called with LB: 111, UB: 116
3, MlBk is called with LB: 121, UB: 126
thread: 2, MlBk is called with LB: 116, UB: 121
 thread: 2, LongJobs.size() 15
 thread: 1, LongJobs.size() 15
 thread: 3, LongJobs.size() 15
thread: 2, NSTable size: 22
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2thread: , alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 5
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 12, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 2, i: 1, maxN[i].weit: 3, NSTable size: , maxN[i].idx: 1, blockDimSize[i]: 3
thread: 2, i: 2, maxN[i].weit: 3, maxN[i].idx: 222
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 5
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 1, i: 1, maxN[i].weit: 3, maxN[i].idx: , blockDimSize[i]: 3
thread: 2, i: 3, maxN[i].weit: 6, maxN[i].idx: 3, blockDimSize[i]: 6
1thread: 2, i: 4, maxN[i].weit: 3, blockDimSize[i]: , maxN[i].idx: 34
, blockDimSize[i]: thread: 1, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 1, i: 3, maxN[i].weit: 6, maxN[i].idx: 3, blockDimSize[i]: 6
thread: 1, i: 3
thread: 2, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3thread: 
2thread: thread: 01, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: , NSTable size: 2, i: 
6, maxN[i].weit: 3, maxN[i].idx: 6, blockDimSize[i]: 3
thread: 1, i: 6, maxN[i].weit: 3, maxN[i].idx: 6, blockDimSize[i]: 3
21
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 5
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 0, maxN[i].weit: thread: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 1, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 3, divisor[i]: 2, blockDimSize[i]: 3
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 6, divisor[i]: 1, blockDimSize[i]: 3
thread: thread: 1, largestBlockVec.elm: 0 00, i:  201, i: , maxN[i].weit: 30 , maxN[i].idx: 1, blockDimSize[i]: 3
thread: 0, i: 02, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 0, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 0, i: 4, maxN[i].weit: 6, maxN[i].idx: 4, blockDimSize[i]: 6
thread: 0, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 0, i: 6, maxN[i].weit: 4, maxN[i].idx: 6, blockDimSize[i]: 4
 thread: 0, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 2, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 2, blockDimSize[i]: 3
thread: 0, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 6, divisor[i]: 2, blockDimSize[i]: 2
0thread: 0, largestBlockVec.elm: 0  0 0 , divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 3, divisor[i]: 2, blockDimSize[i]: 3
thread: 2, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 6, divisor[i]: 1, blockDimSize[i]: 3
thread: 02, largestBlockVec.elm: 0  0 02 0  02 0  02  22 10   10 01   0 00  00  0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 0 2 1 1 3 3 02 3 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 1 3 3 2 1 1  01  00 1 0 
thread: 1, blockDimSizeComp: 0 0 0 0 2 1 1 3 3 2 0 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 0 0 2 1 3 2 3  32  0 00 0 0 0 
thread: 1, divisorComp: 0 0 0 0 1 3 3 2 1 1 0 0  0 1
thread: 2, largestBlockVec: 0 0 0 0 0 2 2 1 0 0  00 0  020 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 2 2 1 0 0 0  
 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 2 2 1 0 0 0 0 0 0 0
 0 thread: 0, divisorComp: 0 0 0 0 0 1 3 1 1 2 10  20  00 0  0 
0thread: 1, largestNoZeroBlockVec: 0 2 2 1 0 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0  0 00  0 , mySum: 
0thread: 0, largestBlockVec: 0 0 0 0 0 0 2 0 0 1 
0 10 0 0 0 0 0 0 1 0 0 0 0  0thread: 01, allBlocks:  0 0 00   000 0 
thread: 0, largestNoZeroBlockVec: 0 2 0 0 1 0 1 
 0 0 0 0 0 0 0 0 0 0 0 0  0 , mySum: 00 , mySum: 
1
0 0 0 0 0 0 1 0 0 0 0 0 0thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 00 0  00  0 00  0 0 00   0 10 0 , mySum: , mySum: 10 

00 0 0 0 0 0 0 0 0 0 0 1 00 0 0 0 0 1 0 0 0 0 0 0  0 00 0  0 0 0  0 , mySum: 1
0 0 0 0 0 0 1 1 0 0 00 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0  0 , mySum: 02 0, mySum: 
1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0  0 0 , mySum: 01 
00 0 0 0 0 0 1 0 0 0 0 0 0  0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 00  00  00 , mySum:  02
, mySum: 1
 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 0 1 thread: 0 0 0 0 0 0 0 0 , mySum: 3
00 0 0 0 0 1 2 003 0 , mySum: 2 
0 , NSTable size: 0 0 026 
0  thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 5
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 02
 thread: 3, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 03
0 0 thread: 03, i:  21, maxN[i].weit:  300, maxN[i].idx:  2, blockDimSize[i]: 03  , mySum: 0  00  001 
0 0 0 0 0 0 1 1 0 0 0 0 0  0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 00 , mySum:  301 , mySum: 2


0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 thread: 3, i: 3, maxN[i].weit: 6, maxN[i].idx:  30, blockDimSize[i]:  6
0thread:  30 , i: 0 4, mySum: , maxN[i].weit: 200 0 0 0  0 0
 0 , mySum: 33
, maxN[i].idx: 0 0 0 0 0 1 2 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 1 0 1 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 0 0 0 0 1 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 0 0 1 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 0 0 1 0 1 0 0 0 0 , mySum: 4
4, blockDimSize[i]: 03
thread: 3, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 thread: 3, i: 6, maxN[i].weit: 3, maxN[i].idx: 6, blockDimSize[i]: 3
0thread:  30, i:  , mySum: 2
0 0 , mySum: 4
0 0 0 0 0 2 1 1 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 1 0 0 0 0 0 0 00 0 , mySum: 4
0 0 0 0 0 2 2 0 0 0 0 0 0 0  0 0 , mySum: 3
0 0 0 0 0 2 0 1 0 0 0 0 0 00  00  0, mySum: 4 
, mySum: 0 0 0 0 0 2 2 1 0 0 0 0 0 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, i: 3, divisor[i]: 2, blockDimSize[i]: 3
thread: 3, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 3, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 6, divisor[i]: 1, blockDimSize[i]: 3
0thread: 3, largestBlockVec.elm: 0  0 0 0, mySum: 53
 0 0 0 2 
2 0 0 0 0 0 1 2 0 0 0 0 0 0 0 01 0  , mySum: 3
0 0 0 0 0 0 2 1 0 00  00  00  00  0 00 0  0 0, mySum:  3
0 0 0 0 0 1 2 1 0 0 0 0 00 
thread: 3, blockDimSizeComp: 0 0 0 0 2 1 1 3 3 0 0 0 , mySum: 4 
0 0 0 0 0 2 1 1 0 0 0 0 0 02 0 0  3, mySum:  4
0 0 0 0 0 2 2 0 0 0 0 0 0 00 0 0  , mySum: 4
0 0 0 0 0 2 2 1 0 0 0 0 00 0 0 0 
thread: 3, divisorComp: 0 0 0 0 1 3 3 2 1 1 0 0 0 , mySum: 5
 1 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 2 2 1 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 2 2 1 0 0 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 2 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 1 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 2 1 0 0 0 0 0 0 0 0 , mySum: 5
thread: 0, maxBlockLvlSize: 4
thread: 0, maxInBlockLvlSize: 36
thread: 0, AllTableSize: 1728, maxSubsetsSize: 64
thread: 2, maxBlockLvlSize: 5
thread: 2, maxInBlockLvlSize: 26
thread: 2, AllTableSize: 1944, maxSubsetsSize: 64
thread: 1, maxBlockLvlSize: 5
thread: 1, maxInBlockLvlSize: 26
thread: 1, AllTableSize: 1944, maxSubsetsSize: 64
thread: 3, maxBlockLvlSize: 5
thread: 3, maxInBlockLvlSize: 26
thread: 3, AllTableSize: 1944, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 0 0 1 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 1 0 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 0 0 1 0 1 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 1 0 0 0 0 1 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 1 0 0 1 0 0 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 0 2 0 0 0 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 1 0 0 1 0 1 0 0 0 0 mySum: 3
thread: 0, blockNoZero[8]: 0 1 0 0 1 0 1 
thread: 0, allBlocks[9]: 0 0 0 0 0 0 2 0 0 0 0 1 0 0 0 0 mySum: 3
thread: 0, blockNoZero[9]: 0 2 0 0 0 0 1 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 2 0 0 1 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 0 2 0 0 1 0 0 
thread: 0, allBlocks[11]: 0 0 0 0 0 0 2 0 0 1 0 1 0 0 0 0 mySum: 4
thread: 0, blockNoZero[11]: 0 2 0 0 1 0 1 
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 8
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 8
copy the latest feasible solution to instance takes time: 0.261551
thread: 2, sOPT: 8
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 8
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.251673
thread: 3, sOPT: 8
copy the latest feasible solution to instance takes time: 0.175225
thread: 1, sOPT: 8
copy the latest feasible solution to instance takes time: 0.166371
thread: 0, sOPT: 10
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 2, MlBk function is done, and BkID for all processes are collected.
1, MlBk function is done, and BkID for all processes are collected.
Thread: 3, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 106, UB: 109
BKID: 0, LB: 106, UB: 109, OPT: 10
Dynamic Programming Runtime: 1.50933
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 1
Iteration: 3, UB: 109, LB: 106start at time: 1505254835
thread: 0, MlBk is called with LB: 106, UB: 107
 thread: 0, LongJobs.size() 15
thread: thread: 1, MlBk is called with LB: 1072, UB: , MlBk is called with LB: 108108, UB: 
109
 thread: 2, LongJobs.size() 15
 thread: 1, LongJobs.size() 15
thread: 2, NSTable size: 21
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 5
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 2, i: 1, maxN[i].weit: thread: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 2, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 2, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 2, i: 4, maxN[i].weit: 6, maxN[i].idx: 4, blockDimSize[i]: 6
thread: 2, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 2, i: 6, maxN[i].weit: 4, maxN[i].idx: 6, blockDimSize[i]: 4
thread: 2, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 2, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 4, divisor[i]: 2, blockDimSize[i]: 3
thread: 2, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 6, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, largestBlockVec.elm: 0 0 0 0 0 0 2 0 0 1 0 1 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 0 0 2 1 3 2 3 2 2 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 0 1 3 1 1 2 1 2 0 0 1, NSTable size: 18
0thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]:  0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 10 
thread: 2, largestBlockVec: 0 0 0 0 0 0 2 , i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 90 0 1 0 1 0 0 0 0 , alltableelemets[maxindex].elm[i]: 
5
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15thread: , alltableelemets[maxindex].elm[i]: thread: 2, largestNoZeroBlockVec: 0 2 0 0 1 0 1 
thread: 2, allBlocks: 0 0 0 00 0 0 0 0 0 0 0 , NSTable size: 0 180
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 5
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 0, maxN[i].weit: 2, maxN[i].idx:  0 00 0, blockDimSize[i]:  2
thread: 0, i: 1, maxN[i].weit: 3, maxN[i].idx: , mySum: 1, blockDimSize[i]: 3
0
0thread: 
0, i: thread: 1, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
2thread: 1, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
0 0 0 0 0 0 0 0 0 0 0 1 0thread:  1, i: , maxN[i].weit: 0 023 0 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0, maxN[i].weit: 3, maxN[i].idx:  2, blockDimSize[i]: 03 
, mySum: , maxN[i].idx: thread: 1, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2, blockDimSize[i]: 23
thread: 0, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 10, i: 4, maxN[i].weit: 6, maxN[i].idx: 4, blockDimSize[i]: 6
thread: 0, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 0, i: 6, maxN[i].weit: 4, maxN[i].idx: 6, blockDimSize[i]: 4

thread: 0, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 2, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 2, blockDimSize[i]: 3
thread: 0, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 6, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, largestBlockVec.elm: 0 0 00  0 
0thread: 1, i: 4, maxN[i].weit: 6, maxN[i].idx: 4, blockDimSize[i]: 06
 0 0 0 0thread:  1, i: 05, maxN[i].weit:  2, maxN[i].idx: 5 1 0 10 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 , mySum: 2
 , blockDimSize[i]: 0 0 2 0 0 2
1thread: 1, i: 6, maxN[i].weit: 4, maxN[i].idx: 6, blockDimSize[i]: 4
 thread: 1, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 2, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 4, divisor[i]: 2, blockDimSize[i]: 3
thread: 1, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 6, divisor[i]: 2, blockDimSize[i]: 2
thread: 0 1 0 00 0 0 0 0 0 1 0 0 1 0 0 0 10 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 , largestBlockVec.elm: 0 0  0 0 0 0 2 0 00  1 00 0 , mySum: 2
0 0 0 0 0 0 1 0 0 1 0 1 0  1 0 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 0 0 2 1 3 2 30 0  02  2 , mySum: 03
0 0 0 0 0 0 2 0 0 0 0 1 0 00  
0thread: 0, blockDimSizeComp: 0 0 0 0 0 2 1 3 0 , mySum:  23 3
  2 2 0 0 0 0 
thread: 0, divisorComp: 0 0 0 0 0 1 3 1 1 20  01  02  0 0 0 0 0 0 2 0 0 1 0 0 0 00 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 2 0 0 1  0 0 , mySum: 3
0 0 0 0 0 0 2 0 0 1 0 1 0 00 1 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 2 0 0 1 0 1 

thread: 1, divisorComp: 0 0 0 0 0 1 3 1  0 0 , mySum: 4
1 2 1 2 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 2 0 0 thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 01  00 0  10  0 00  0 00  , mySum: 00 

thread: 1, largestNoZeroBlockVec: 0 2 0 0 1 0 1 
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 thread: 01 0, allBlocks:  00  00  00 0 0  0 00  00  , mySum: 01 
00 0 0 0 0 0 0 0 0 1 0 1 0 0 0  0 0 0 00  , mySum: 02 0
 0 0 0 0 0 0 1 0 0 0 0 1 0 0 00 0  , mySum: 2, mySum: 
0 0 0 0 0 0 1 0 0 1 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 1 00 0  00  0 , mySum: 02
 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0, mySum:  0 , mySum: 12
0 0 0 0 0 0 1 0 0 1 0 1 0 0
 0 0 0 0 0 0 0 0 0 1 0 0 00 0 0  0 0, mySum:  1, mySum: 3

0 0 0 0 0 0 2 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 00 0 0  0 0 0, mySum:  , mySum: 13

0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 2 0 0 1 0 00 0  00  0 00  , mySum: 02 , mySum: 
3
0 0 0 0 0 0 2 0 0 1 0 1 00 0 0 0 0 0 1 0 0 0 0  0 0 0 , mySum: 41
 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 1 0 1 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 0 0 0 0 1 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 0 0 1 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 0 0 1 0 1 0 0 0 0 , mySum: 4
thread: 2, maxBlockLvlSize: 4
thread: 2, maxInBlockLvlSize: 36
thread: 2, AllTableSize: 1728, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 4
thread: 0, maxInBlockLvlSize: 36
thread: 0, AllTableSize: 1728, maxSubsetsSize: 64
thread: 1, maxBlockLvlSize: 4
thread: 1, maxInBlockLvlSize: 36
thread: 1, AllTableSize: 1728, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 0 0 1 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 1 0 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 0 0 1 0 1 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 1 0 0 0 0 1 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 1 0 0 1 0 0 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 0 2 0 0 0 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 1 0 0 1 0 1 0 0 0 0 mySum: 3
thread: 0, blockNoZero[8]: 0 1 0 0 1 0 1 
thread: 0, allBlocks[9]: 0 0 0 0 0 0 2 0 0 0 0 1 0 0 0 0 mySum: 3
thread: 0, blockNoZero[9]: 0 2 0 0 0 0 1 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 2 0 0 1 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 0 2 0 0 1 0 0 
thread: 0, allBlocks[11]: 0 0 0 0 0 0 2 0 0 1 0 1 0 0 0 0 mySum: 4
thread: 0, blockNoZero[11]: 0 2 0 0 1 0 1 
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 11
copy the latest feasible solution to instance takes time: 7e-06
thread: 1, sOPT: 11
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 4e-06
thread: 0, sOPT: 11
copy the latest feasible solution to instance takes time: 0.052077
thread: 2, sOPT: 10
BKID: 0, LB: 108, UB: 108, OPT: 10
Dynamic Programming Runtime: 0.82156
Execution time between LB and UB is: 0
By far, all LB UB calculation runtime: 1
********************************************************
Total execution on UB and LB is: 1
OUT of Bk while loop  
UB    108
LB    108
T1    108
T2    108
OPT   10
nMachines   10
BkID	0
AllProbData.size()    3
ck :   2
AllProbData[ck].Ttable    108
ck :   1
AllProbData[ck].Ttable    108
ck :   0
AllProbData[ck].Ttable    124
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan112
Main Scheduling is Done
File 3-10 is Done.
******************************
Reading File...
File 3-11 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 243, LB: 143start at time: 1505254835
thread: 0, MlBk is called with LB: 143, UB: 168
thread: 3, MlBk is called with LB: 218, UB: 243
 thread: 0, LongJobs.size() 18
thread: 2, MlBk is called with LB: 193, UB: 218
 thread: 3, LongJobs.size() 16
thread: 1, MlBk is called with LB: 168, UB: 193
 thread: 2, LongJobs.size() 16
 thread: 1, LongJobs.size() 17
thread: 3, NSTable size: 24
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 7
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 4
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: thread: 3, i: 27, NSTable size: 18, alltableelemets[maxindex].elm[i]: 0

thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 7
0thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 2
, maxN[i].weit: thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 08, maxN[i].idx: 0, blockDimSize[i]: 8, maxN[i].weit: 
8thread: 3, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 3, i: 2, maxN[i].weit: , maxN[i].idx: 5, maxN[i].idx: 2, blockDimSize[i]: 05, blockDimSize[i]: 
8thread: 3, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4

thread: 2, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: thread: 32, i: , i: 02, divisor[i]: , maxN[i].weit: 2, blockDimSize[i]: 5, maxN[i].idx: 42
thread: 3, i: 1, divisor[i]: 1, blockDimSize[i]: 3
thread: 3, i: 2, divisor[i]: 5, blockDimSize[i]: 1
thread: 3, i: 3, divisor[i]: 2, blockDimSize[i]: 2
, blockDimSize[i]: 5
thread: 2, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 3, largestBlockVec.elm: thread: 2, i: 00, divisor[i]:  2, blockDimSize[i]: 4
thread: 2, i: 1, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 2, divisor[i]: 5, blockDimSize[i]: 1
thread: 2, i: 3, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, largestBlockVec.elm: 0 0 0 0 1 0 4 1 0 0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 0 4 3 1 2 0 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 2 1 5 2 0 0 0 0 0 0 0 0 
0 thread: 2, largestBlockVec: 0 0 0 0 1 0 4 1 0 00  10  0 0 0 0 0 04 
 1thread: 2, largestNoZeroBlockVec: 1 0 4 1 
 0 0 0 0 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 4 3 1 2 0 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 2 1 5 2 0 0 0 0 0 0 0 0 0 
thread: thread: 2, allBlocks: 0 30 0, largestBlockVec:  00  0 00  0 0 10 0  04  0 1 00 0  0 00 0  00  00  0 0 0, mySum: 0 
0 0 0 0 0 0 0 1 0 0 0 00  0 0
 thread: 3, largestNoZeroBlockVec: 1 0 4 1 
0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 3 0 thread: 0 0 03 0, allBlocks:  0 00  0 00 0  0 00  , mySum: 3
00 0 0 0 0 0 2 1 0 0 0 0 0 0 0 0  , mySum: 03
0 0 0 0 1 0 1 1 0 0  00  0 00  0 00  0 00 0  0 0, mySum:  0, mySum: 3
0 0 0 0 0 0 1 0 0 0 0 
0 0 00 0 0 0 1 0 2 0 0 0 0  0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 3 1 0 0 0 0 0 00 0 0  0, mySum:  4
0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 , mySum: 01 0 
0 0 0 0 0 1 0 0 0 0 00 0  , mySum: 0 40 
00 0 0 0 1 0 2 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 2 0 0 0 0  0 0 , mySum: 4
0 0 0 0 1 0 3 0 0 0 0 0 0 00 0  00 , mySum:  4
0 0 0 0 0 0 4 1 0 0 0 0 00 0 0 0 , mySum: 2 
0 0 0 1 0 1 0 0 0 0 00 0 0  00  00 0  , mySum: 5, mySum: 
0 0 0 0 1 0 3 1 0 0 0 0 0 2
0 0 0 1 0 0 1 0 0 00 0  00  00  , mySum: 0 05 
0 , mySum: 20 0 0 0 1 0 4 0 0 0 0 0 0 0 0 
00 0 0 0 0 1 1 0 0 , mySum: 5
0 0 0 0 1 0 4 1 0 0 0 0 0 0 0 0 0 0  0 00  , mySum: 0 20 
, mySum: 6
0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 3 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 1 0 2 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 1 0 3 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 4 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 1 0 3 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 1 0 4 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 1 0 4 1 0 0 0 0 0 0 0 0 0 , mySum: 6
thread: 2, maxBlockLvlSize: 4
thread: 2, maxInBlockLvlSize: 6
thread: 2, AllTableSize: 480, maxSubsetsSize: 64
thread: 3, maxBlockLvlSize: 4
thread: 3, maxInBlockLvlSize: 6
thread: 3, AllTableSize: 480, maxSubsetsSize: 64
thread: 1, NSTable size: 30
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 5
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 1, i: 1, maxN[i].weit: 6, maxN[i].idx: 1, blockDimSize[i]: 6
thread: 1, i: 2, maxN[i].weit: 4, maxN[i].idx: 2, blockDimSize[i]: 4
thread: 1, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 1, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 1, i: 5, maxN[i].weit: 4, maxN[i].idx: 5, blockDimSize[i]: 4
thread: 1, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 1, divisor[i]: 2, blockDimSize[i]: 3
thread: 1, i: 2, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, i: 3, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 5, divisor[i]: 1, blockDimSize[i]: 4
thread: 1, largestBlockVec.elm: 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 2 3 2 2 3 4 0 0 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 1 2 2 2 1 1 0 0 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 1 1 1 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 , mySum: 3
thread: 0, NSTable size: 25
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 7
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 0, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 0, i: 2, maxN[i].weit: 8, maxN[i].idx: 2, blockDimSize[i]: 8
thread: 0, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 0, i: 4, maxN[i].weit: 5, maxN[i].idx: 4, blockDimSize[i]: 5
thread: 0, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 0, i: 6, maxN[i].weit: 4, maxN[i].idx: 6, blockDimSize[i]: 4
thread: 0, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 2, divisor[i]: 2, blockDimSize[i]: 4
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 6, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, largestBlockVec.elm: 0 0 0 0 0 0 1 0 4 0 1 0 0 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 2 2 0 4 2 1 2 2 0 0 0 0 0 
thread: 0, divisorComp: 0 0 0 1 1 0 2 1 5 1 2 0 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 1 0 4 0 1 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 1 0 4 0 1 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 2 0 1 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 0 1 0 1 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 3 0 1 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 0 2 0 1 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 0 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 4 0 1 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 0 3 0 1 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 0 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 0 4 0 1 0 0 0 0 0 , mySum: 6
thread: 1, maxBlockLvlSize: 3
thread: 1, maxInBlockLvlSize: 60
thread: 1, AllTableSize: 2304, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 4
thread: 0, maxInBlockLvlSize: 30
thread: 0, AllTableSize: 2560, maxSubsetsSize: 64
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 6
copy the latest feasible solution to instance takes time: 0.02615
thread: 3, sOPT: 6
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 6
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 
copy the latest feasible solution to instance takes time: 0.034345
thread: 2, sOPT: 6
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 1 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 0 0 1 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 0 0 2 0 0 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 0 1 0 1 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 0 1 0 0 0 1 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 0 0 0 0 1 0 1 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[8]: 0 0 0 0 3 0 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 0 0 0 2 0 1 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[9]: 0 0 0 0 2 0 1 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 1 0 1 0 1 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 0 0 1 0 1 0 1 
thread: 0, allBlocks[11]: 0 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 0 0 1 0 2 0 0 
thread: 0, allBlocks[12]: 0 0 0 0 0 0 0 0 3 0 1 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[12]: 0 0 0 0 3 0 1 
thread: 0, allBlocks[13]: 0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[13]: 0 0 0 0 4 0 0 
thread: 0, allBlocks[14]: 0 0 0 0 0 0 1 0 2 0 1 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[14]: 0 0 1 0 2 0 1 
thread: 0, allBlocks[15]: 0 0 0 0 0 0 1 0 3 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[15]: 0 0 1 0 3 0 0 
thread: 0, allBlocks[16]: 0 0 0 0 0 0 0 0 4 0 1 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[16]: 0 0 0 0 4 0 1 
thread: 0, allBlocks[17]: 0 0 0 0 0 0 1 0 3 0 1 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[17]: 0 0 1 0 3 0 1 
thread: 0, allBlocks[18]: 0 0 0 0 0 0 1 0 4 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[18]: 0 0 1 0 4 0 0 
thread: 0, allBlocks[19]: 0 0 0 0 0 0 1 0 4 0 1 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[19]: 0 0 1 0 4 0 1 
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.115782
thread: 0, sOPT: 10
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 8
copy the latest feasible solution to instance takes time: 0.040744
thread: 1, sOPT: 8
Thread: 1, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 2, MlBk function is done, and BkID for all processes are collected.Thread: 
30, MlBk function is done, and BkID for all processes are collected.
, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 143, UB: 156
BKID: 0, LB: 143, UB: 156, OPT: 10
Dynamic Programming Runtime: 1.08863
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 1
Iteration: 2, UB: 156, LB: 143start at time: 1505254836
thread: 0, MlBk is called with LB: 143, UB: 146
 thread: 0, LongJobs.size() 18
thread: thread: thread: 13, MlBk is called with LB: 152, UB: 156
, MlBk is called with LB: 146, UB: 149
2, MlBk is called with LB: 149, UB: 152
 thread: 1, LongJobs.size() 18
 thread: 2, LongJobs.size() 18
 thread: 3, LongJobs.size() 18
thread: 1, NSTable size: 22
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 7
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 1, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 1, i: 2, maxN[i].weit: 8, maxN[i].idx: 2, blockDimSize[i]: 8
thread: 1, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 1, i: 4, maxN[i].weit: 5, maxN[i].idx: 4, blockDimSize[i]: 5
thread: 1, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 1, i: 6, maxN[i].weit: 4, maxN[i].idx: 6, blockDimSize[i]: 4
thread: 1, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 2, divisor[i]: 2, blockDimSize[i]: 4
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 4, divisor[i]: 5, blockDimSize[i]: 1
thread: 1, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 6, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, largestBlockVec.elm: 0 0 0 0 0 0 1 0 4 0 1 0 0 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 2 2 0 4 2 1 2 2 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 1 1 0 2 1 5 1 2 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 1 0 4 0 1 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 1 0 4 0 1 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 2 0 1 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 0 1 0 1 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 3 0 1 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 0 2 0 1 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 0 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 4 0 1 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 0 3 0 1 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 0 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 0 4 0 1 0 0 0 0 0 , mySum: 6
thread: 0, NSTable size: 22
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 7
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 0, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 0, i: 2, maxN[i].weit: 8, maxN[i].idx: 2, blockDimSize[i]: 8
thread: 0, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 0, i: 4, maxN[i].weit: 5, maxN[i].idx: 4, blockDimSize[i]: 5
thread: 0, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 0, i: 6, maxN[i].weit: 4, maxN[i].idx: 6, blockDimSize[i]: 4
thread: 0, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 2, divisor[i]: 2, blockDimSize[i]: 4
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 6, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, largestBlockVec.elm: 0 0 0 0 0 0 1 0 4 0 1 0 0 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 2 2 0 4 2 1 2 2 0 0 0 0 0 
thread: 0, divisorComp: 0 0 0 1 1 0 2 1 5 1 2 0 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 1 0 4 0 1 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 1 0 4 0 1 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 2 0 1 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 0 1 0 1 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 3 0 1 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 0 2 0 1 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 0 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 4 0 1 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 0 3 0 1 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 0 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 0 4 0 1 0 0 0 0 0 , mySum: 6
thread: 3, NSTable size: 25
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 7
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 3, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 3, i: 2, maxN[i].weit: 8, maxN[i].idx: 2, blockDimSize[i]: 8
thread: 3, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 3, i: 4, maxN[i].weit: 5, maxN[i].idx: 4, blockDimSize[i]: 5
thread: 3, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 3, i: 6, maxN[i].weit: 4, maxN[i].idx: 6, blockDimSize[i]: 4
thread: 3, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 2, divisor[i]: 2, blockDimSize[i]: 4
thread: 3, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 4, divisor[i]: 5, blockDimSize[i]: 1
thread: 3, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 6, divisor[i]: 2, blockDimSize[i]: 2
thread: 3, largestBlockVec.elm: 0 0 0 0 0 0 1 0 4 0 1 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 2 2 0 4 2 1 2 2 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 1 1 0 2 1 5 1 2 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 0 1 0 4 0 1 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 0 1 0 4 0 1 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 2 0 1 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 0 1 0 1 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 3 0 1 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 0 2 0 1 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 0 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 4 0 1 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 0 3 0 1 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 0 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 0 4 0 1 0 0 0 0 0 , mySum: 6
thread: 1, maxBlockLvlSize: 4
thread: 1, maxInBlockLvlSize: 30
thread: 1, AllTableSize: 2560, maxSubsetsSize: 64
thread: 2, NSTable size: 22
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 7
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 2, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 2, i: 2, maxN[i].weit: 8, maxN[i].idx: 2, blockDimSize[i]: 8
thread: 2, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 2, i: 4, maxN[i].weit: 5, maxN[i].idx: 4, blockDimSize[i]: 5
thread: 2, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 2, i: 6, maxN[i].weit: 4, maxN[i].idx: 6, blockDimSize[i]: 4
thread: 2, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 2, divisor[i]: 2, blockDimSize[i]: 4
thread: 2, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 4, divisor[i]: 5, blockDimSize[i]: 1
thread: 2, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 6, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, largestBlockVec.elm: 0 0 0 0 0 0 1 0 4 0 1 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 2 2 0 4 2 1 2 2 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 1 1 0 2 1 5 1 2 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 1 0 4 0 1 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 1 0 4 0 1 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 2 0 1 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 0 1 0 1 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 3 0 1 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 0 2 0 1 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 0 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 4 0 1 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 0 3 0 1 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 0 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 0 4 0 1 0 0 0 0 0 , mySum: 6
thread: 0, maxBlockLvlSize: 4
thread: 0, maxInBlockLvlSize: 30
thread: 0, AllTableSize: 2560, maxSubsetsSize: 64
thread: 3, maxBlockLvlSize: 4
thread: 3, maxInBlockLvlSize: 30
thread: 3, AllTableSize: 2560, maxSubsetsSize: 64
thread: 2, maxBlockLvlSize: 4
thread: 2, maxInBlockLvlSize: 30
thread: 2, AllTableSize: 2560, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 1 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 0 0 1 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 0 0 2 0 0 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 0 1 0 1 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 0 1 0 0 0 1 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 0 0 0 0 1 0 1 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[8]: 0 0 0 0 3 0 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 0 0 0 2 0 1 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[9]: 0 0 0 0 2 0 1 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 1 0 1 0 1 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 0 0 1 0 1 0 1 
thread: 0, allBlocks[11]: 0 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 0 0 1 0 2 0 0 
thread: 0, allBlocks[12]: 0 0 0 0 0 0 0 0 3 0 1 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[12]: 0 0 0 0 3 0 1 
thread: 0, allBlocks[13]: 0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[13]: 0 0 0 0 4 0 0 
thread: 0, allBlocks[14]: 0 0 0 0 0 0 1 0 2 0 1 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[14]: 0 0 1 0 2 0 1 
thread: 0, allBlocks[15]: 0 0 0 0 0 0 1 0 3 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[15]: 0 0 1 0 3 0 0 
thread: 0, allBlocks[16]: 0 0 0 0 0 0 0 0 4 0 1 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[16]: 0 0 0 0 4 0 1 
thread: 0, allBlocks[17]: 0 0 0 0 0 0 1 0 3 0 1 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[17]: 0 0 1 0 3 0 1 
thread: 0, allBlocks[18]: 0 0 0 0 0 0 1 0 4 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[18]: 0 0 1 0 4 0 0 
thread: 0, allBlocks[19]: 0 0 0 0 0 0 1 0 4 0 1 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[19]: 0 0 1 0 4 0 1 
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 10
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.315972
thread: 3, sOPT: 10
copy the latest feasible solution to instance takes time: 0.305993
thread: 1, sOPT: 10
copy the latest feasible solution to instance takes time: 0.401764
thread: 2, sOPT: 10
copy the latest feasible solution to instance takes time: 0.318072
thread: 0, sOPT: 10
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: Thread: 21, MlBk function is done, and BkID for all processes are collected., MlBk function is done, and BkID for all processes are collected.3

, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 143, UB: 145
BKID: 0, LB: 143, UB: 145, OPT: 10
Dynamic Programming Runtime: 2.08963
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 2
Iteration: 3, UB: 145, LB: 143start at time: 1505254837
thread: 0, MlBk is called with LB: 143, UB: 144
 thread: 0, LongJobs.size() 19
thread: 1, MlBk is called with LB: 144, UB: 145
 thread: 1, LongJobs.size() 18
thread: 1, NSTable size: 22
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 7
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 1, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 1, i: 2, maxN[i].weit: 8, maxN[i].idx: 2, blockDimSize[i]: 8
thread: 1, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 1, i: 4, maxN[i].weit: 5, maxN[i].idx: 4, blockDimSize[i]: 5
thread: 1, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 1, i: 6, maxN[i].weit: 4, maxN[i].idx: 6, blockDimSize[i]: 4
thread: 1, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 2, divisor[i]: 2, blockDimSize[i]: 4
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 4, divisor[i]: 5, blockDimSize[i]: 1
thread: 1, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 6, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, largestBlockVec.elm: 0 0 0 0 0 0 1 0 4 0 1 0 0 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 2 2 0 4 2 1 2 2 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 1 1 0 2 1 5 1 2 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 1 0 4 0 1 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 1 0 4 0 1 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 2 0 1 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 0 1 0 1 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 3 0 1 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 0 2 0 1 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 1 0 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 4 0 1 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 0 3 0 1 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 0 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 1 0 4 0 1 0 0 0 0 0 , mySum: 6
thread: 1, maxBlockLvlSize: 4
thread: 1, maxInBlockLvlSize: 30
thread: 1, AllTableSize: 2560, maxSubsetsSize: 64
thread: 0, NSTable size: 32
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 5
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 0, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 0, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 0, i: 3, maxN[i].weit: 6, maxN[i].idx: 3, blockDimSize[i]: 6
thread: 0, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 0, i: 5, maxN[i].weit: 4, maxN[i].idx: 5, blockDimSize[i]: 4
thread: 0, i: 6, maxN[i].weit: 3, maxN[i].idx: 6, blockDimSize[i]: 3
thread: 0, i: 7, maxN[i].weit: 4, maxN[i].idx: 7, blockDimSize[i]: 4
thread: 0, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 2, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 3, divisor[i]: 2, blockDimSize[i]: 3
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 5, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 6, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 7, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, largestBlockVec.elm: 0 0 0 0 0 0 0 1 0 1 0 1 0 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 2 3 0 3 3 2 2 3 2 0 0 0 0 
thread: 0, divisorComp: 0 0 0 1 1 0 1 2 1 2 1 2 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 1 0 1 0 1 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 0 1 0 1 0 1 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 0 1 0 1 0 0 0 0 , mySum: 3
thread: 0, maxBlockLvlSize: 3
thread: 0, maxInBlockLvlSize: 262
thread: 0, AllTableSize: 10368, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 0 0 1 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 0 0 0 1 0 0 
Thread: 1, gpu_BlockDP is done.
thread: 0, allBlocks[3]: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 0 1 0 0 0 0 
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.148146
thread: 1, sOPT: 10
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 0 0 0 1 0 1 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 0 0 1 0 0 0 1 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 0 0 1 0 1 0 0 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 0 1 0 1 0 1 0 0 0 0 mySum: 3
thread: 0, blockNoZero[7]: 0 0 0 1 0 1 0 1 
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 1e-06
thread: 0, sOPT: 11
BKID: 0, LB: 144, UB: 144, OPT: 10
Dynamic Programming Runtime: 3.22559
Execution time between LB and UB is: 2
By far, all LB UB calculation runtime: 4
********************************************************
Total execution on UB and LB is: 4
OUT of Bk while loop  
UB    144
LB    144
T1    144
T2    144
OPT   10
nMachines   10
BkID	0
AllProbData.size()    3
ck :   2
AllProbData[ck].Ttable    144
ck :   1
AllProbData[ck].Ttable    144
ck :   0
AllProbData[ck].Ttable    155
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan154
Main Scheduling is Done
File 3-11 is Done.
******************************
Reading File...
File 3-12 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 191, LB: 99start at time: 1505254839
thread: 0, MlBk is called with LB: 99, UB: 122
thread: thread: 2, MlBk is called with LB: 145, UB: 168
3thread: 1, MlBk is called with LB: 122, UB: 145
, MlBk is called with LB: 168, UB: 191
 thread: 0, LongJobs.size() 16
 thread: 2, LongJobs.size() 11
 thread: 3, LongJobs.size() 10
 thread: 1, LongJobs.size() 13
thread: 3, NSTable size: 19
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 3, i: 1, maxN[i].weit: 4, maxN[i].idx: 1, blockDimSize[i]: 4
thread: 3, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 3, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 3, i: 0, divisor[i]: 2, blockDimSize[i]: 2
thread: 3, i: 1, divisor[i]: 2, blockDimSize[i]: 2
thread: 3, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, i: 3, divisor[i]: 1, blockDimSize[i]: 3
thread: 3, largestBlockVec.elm: 0 0 0 1 0 1 2 0 0 0 0 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 2 0 2 1 3 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 2 0 2 3 1 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 1 0 1 2 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 1 1 2 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 0 1 2 0 0 0 0 0 0 0 0 0 , mySum: 4
thread: 3, maxBlockLvlSize: 4
thread: 3, maxInBlockLvlSize: 4
thread: 3, AllTableSize: 144, maxSubsetsSize: 64
thread: 2, NSTable size: 26
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 2, i: 1, maxN[i].weit: 4, maxN[i].idx: 1, blockDimSize[i]: 4
thread: 2, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 2, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 2, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 2, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 2, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 1, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 3, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 4, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 5, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, largestBlockVec.elm: 0 0 0 0 1 0 0 2 2 0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 2 2 0 2 1 1 3 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 1 2 0 1 3 3 1 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 1 0 0 2 2 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 1 0 2 2 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 1 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 2 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 2 2 0 0 0 0 0 0 0 , mySum: 5
thread: 2, maxBlockLvlSize: 5
thread: 2, maxInBlockLvlSize: 7
thread: 2, AllTableSize: 432, maxSubsetsSize: 64
thread: 1, NSTable size: 28
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 1, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 1, i: 2, maxN[i].weit: 4, maxN[i].idx: 2, blockDimSize[i]: 4
thread: 1, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 1, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 1, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 1, i: 6, maxN[i].weit: 3, maxN[i].idx: 6, blockDimSize[i]: 3
thread: 1, i: 0, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 2, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 4, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 5, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 6, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, largestBlockVec.elm: 0 0 0 2 0 1 0 0 2 0 0 0 0 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 1 2 2 0 2 1 3 3 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 3 1 2 0 1 3 1 1 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 2 0 1 0 0 2 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 2 0 1 0 2 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 2 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 0 1 0 0 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 2 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 2 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 2 0 1 0 0 2 0 0 0 0 0 0 0 , mySum: 5
thread: 1, maxBlockLvlSize: 5
thread: 1, maxInBlockLvlSize: 18
thread: 1, AllTableSize: 1296, maxSubsetsSize: 64
thread: 0, NSTable size: 26
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 0, maxN[i].weit: 5, maxN[i].idx: 0, blockDimSize[i]: 5
thread: 0, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 0, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 0, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 0, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 0, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 0, i: 6, maxN[i].weit: 3, maxN[i].idx: 6, blockDimSize[i]: 3
thread: 0, i: 7, maxN[i].weit: 3, maxN[i].idx: 7, blockDimSize[i]: 3
thread: 0, i: 0, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 3, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 5, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 6, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 7, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, largestBlockVec.elm: 0 0 0 0 4 0 0 1 0 0 0 2 0 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 0 1 2 2 2 0 0 2 1 0 3 3 0 
thread: 0, divisorComp: 0 0 0 0 5 1 1 2 0 0 1 3 0 1 1 0 
thread: 0, largestBlockVec: 0 0 0 0 4 0 0 1 0 0 0 2 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 4 0 0 1 0 2 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 0 0 0 0 0 1 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 1 0 0 0 1 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 0 0 0 0 2 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 1 0 0 0 2 0 0 0 0 , mySum: 3
0 0 0 0 3 0 0 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 1 0 0 0 2 0 0 0 0 , mySum: 4
0 0 0 0 3 0 0 0 0 0 0 1 0 0 0 0 , mySum: 4
0 0 0 0 2 0 0 1 0 0 0 1 0 0 0 0 , mySum: 4
0 0 0 0 2 0 0 0 0 0 0 2 0 0 0 0 , mySum: 4
0 0 0 0 2 0 0 1 0 0 0 2 0 0 0 0 , mySum: 5
0 0 0 0 3 0 0 0 0 0 0 2 0 0 0 0 , mySum: 5
0 0 0 0 3 0 0 1 0 0 0 1 0 0 0 0 , mySum: 5
0 0 0 0 4 0 0 0 0 0 0 1 0 0 0 0 , mySum: 5
0 0 0 0 4 0 0 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 3 0 0 1 0 0 0 2 0 0 0 0 , mySum: 6
0 0 0 0 4 0 0 0 0 0 0 2 0 0 0 0 , mySum: 6
0 0 0 0 4 0 0 1 0 0 0 1 0 0 0 0 , mySum: 6
0 0 0 0 4 0 0 1 0 0 0 2 0 0 0 0 , mySum: 7
thread: 0, maxBlockLvlSize: 6
thread: 0, maxInBlockLvlSize: 36
thread: 0, AllTableSize: 4320, maxSubsetsSize: 64
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 5
copy the latest feasible solution to instance takes time: 0.007586
thread: 3, sOPT: 5
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 5
copy the latest feasible solution to instance takes time: 0.020643
thread: 2, sOPT: 5
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 1 0 0 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 0 1 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 1 0 0 0 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 0 0 0 2 0 0 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 0 0 1 0 1 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 1 0 0 0 0 1 0 0 
thread: 0, allBlocks[7]: 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 1 0 0 1 0 0 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[8]: 2 0 0 0 0 0 0 0 
thread: 0, allBlocks[9]: 0 0 0 0 2 0 0 1 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[9]: 2 0 0 1 0 0 0 0 
thread: 0, allBlocks[10]: 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 3 0 0 0 0 0 0 0 
thread: 0, allBlocks[11]: 0 0 0 0 2 0 0 0 0 0 0 1 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 2 0 0 0 0 1 0 0 
thread: 0, allBlocks[12]: 0 0 0 0 1 0 0 1 0 0 0 1 0 0 0 0 mySum: 3
thread: 0, blockNoZero[12]: 1 0 0 1 0 1 0 0 
Thread: 1, gpu_BlockDP is done.
thread: 0, allBlocks[13]: 0 0 0 0 1 0 0 0 0 0 0 2 0 0 0 0 mySum: 3
thread: 0, blockNoZero[13]: 1 0 0 0 0 2 0 0 
thread: 0, allBlocks[14]: 0 0 0 0 0 0 0 1 0 0 0 2 0 0 0 0 mySum: 3
thread: 0, blockNoZero[14]: 0 0 0 1 0 2 0 0 
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 7
copy the latest feasible solution to instance takes time: 0.044604
thread: 1, sOPT: 7
thread: 0, allBlocks[15]: 0 0 0 0 3 0 0 1 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[15]: 3 0 0 1 0 0 0 0 
thread: 0, allBlocks[16]: 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[16]: 4 0 0 0 0 0 0 0 
thread: 0, allBlocks[17]: 0 0 0 0 1 0 0 1 0 0 0 2 0 0 0 0 mySum: 4
thread: 0, blockNoZero[17]: 1 0 0 1 0 2 0 0 
thread: 0, allBlocks[18]: 0 0 0 0 3 0 0 0 0 0 0 1 0 0 0 0 mySum: 4
thread: 0, blockNoZero[18]: 3 0 0 0 0 1 0 0 
thread: 0, allBlocks[19]: 0 0 0 0 2 0 0 1 0 0 0 1 0 0 0 0 mySum: 4
thread: 0, blockNoZero[19]: 2 0 0 1 0 1 0 0 
thread: 0, allBlocks[20]: 0 0 0 0 2 0 0 0 0 0 0 2 0 0 0 0 mySum: 4
thread: 0, blockNoZero[20]: 2 0 0 0 0 2 0 0 
thread: 0, allBlocks[21]: 0 0 0 0 2 0 0 1 0 0 0 2 0 0 0 0 mySum: 5
thread: 0, blockNoZero[21]: 2 0 0 1 0 2 0 0 
thread: 0, allBlocks[22]: 0 0 0 0 3 0 0 0 0 0 0 2 0 0 0 0 mySum: 5
thread: 0, blockNoZero[22]: 3 0 0 0 0 2 0 0 
thread: 0, allBlocks[23]: 0 0 0 0 3 0 0 1 0 0 0 1 0 0 0 0 mySum: 5
thread: 0, blockNoZero[23]: 3 0 0 1 0 1 0 0 
thread: 0, allBlocks[24]: 0 0 0 0 4 0 0 0 0 0 0 1 0 0 0 0 mySum: 5
thread: 0, blockNoZero[24]: 4 0 0 0 0 1 0 0 
thread: 0, allBlocks[25]: 0 0 0 0 4 0 0 1 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[25]: 4 0 0 1 0 0 0 0 
thread: 0, allBlocks[26]: 0 0 0 0 3 0 0 1 0 0 0 2 0 0 0 0 mySum: 6
thread: 0, blockNoZero[26]: 3 0 0 1 0 2 0 0 
thread: 0, allBlocks[27]: 0 0 0 0 4 0 0 0 0 0 0 2 0 0 0 0 mySum: 6
thread: 0, blockNoZero[27]: 4 0 0 0 0 2 0 0 
thread: 0, allBlocks[28]: 0 0 0 0 4 0 0 1 0 0 0 1 0 0 0 0 mySum: 6
thread: 0, blockNoZero[28]: 4 0 0 1 0 1 0 0 
thread: 0, allBlocks[29]: 0 0 0 0 4 0 0 1 0 0 0 2 0 0 0 0 mySum: 7
thread: 0, blockNoZero[29]: 4 0 0 1 0 2 0 0 
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.073236
thread: 0, sOPT: 10
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: Thread: 31, MlBk function is done, and BkID for all processes are collected.2, MlBk function is done, and BkID for all processes are collected., MlBk function is done, and BkID for all processes are collected.


sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 99, UB: 111
BKID: 0, LB: 99, UB: 111, OPT: 10
Dynamic Programming Runtime: 0.91549
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 1
Iteration: 2, UB: 111, LB: 99start at time: 1505254840
thread: 0, MlBk is called with LB: 99, UB: 102
 thread: 0, LongJobs.size() 16
thread: thread: 1, MlBk is called with LB: 102, UB: 105
2, MlBk is called with LB: 105, UB: 108
thread: 3, MlBk is called with LB: 108, UB: 111
 thread: 3, LongJobs.size() 16
 thread: 1, LongJobs.size() 16
 thread: 2, LongJobs.size() 16
thread: 1, NSTable size: 22
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 5, maxN[i].idx: 0, blockDimSize[i]: 5
thread: 1, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 1, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 1, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 1, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 1, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 1, i: 6, maxN[i].weit: 3, maxN[i].idx: 6, blockDimSize[i]: 3
thread: 1, i: 7, maxN[i].weit: 3, maxN[i].idx: 7, blockDimSize[i]: 3
thread: 1, i: 0, divisor[i]: 5, blockDimSize[i]: 1
thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 3, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 5, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 6, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 7, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, largestBlockVec.elm: 0 0 0 0 4 0 0 1 0 0 0 2 0 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 0 1 2 2 2 0 0 2 1 0 3 3 0 
thread: 1, divisorComp: 0 0 0 0 5 1 1 2 0 0 1 3 0 1 1 0 
thread: 1, largestBlockVec: 0 0 0 0 4 0 0 1 0 0 0 2 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 4 0 0 1 0 2 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 0 0 0 0 0 1 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 1 0 0 0 1 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 0 0 0 0 2 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 1 0 0 0 2 0 0 0 0 , mySum: 3
0 0 0 0 3 0 0 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 1 0 0 0 2 0 0 0 0 , mySum: 4
0 0 0 0 3 0 0 0 0 0 0 1 0 0 0 0 , mySum: 4
0 0 0 0 2 0 0 1 0 0 0 1 0 0 0 0 , mySum: 4
0 0 0 0 2 0 0 0 0 0 0 2 0 0 0 0 , mySum: 4
0 0 0 0 2 0 0 1 0 0 0 2 0 0 0 0 , mySum: 5
0 0 0 0 3 0 0 0 0 0 0 2 0 0 0 0 , mySum: 5
0 0 0 0 3 0 0 1 0 0 0 1 0 0 0 0 , mySum: 5
0 0 0 0 4 0 0 0 0 0 0 1 0 0 0 0 , mySum: 5
0 0 0 0 4 0 0 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 3 0 0 1 0 0 0 2 0 0 0 0 , mySum: 6
0 0 0 0 4 0 0 0 0 0 0 2 0 0 0 0 , mySum: 6
0 0 0 0 4 0 0 1 0 0 0 1 0 0 0 0 , mySum: 6
0 0 0 0 4 0 0 1 0 0 0 2 0 0 0 0 , mySum: 7
thread: 0, NSTable size: 19
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 0, maxN[i].weit: 5, maxN[i].idx: 0, blockDimSize[i]: 5
thread: 0, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 0, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 0, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 0, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 0, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 0, i: 6, maxN[i].weit: 3, maxN[i].idx: 6, blockDimSize[i]: 3
thread: 0, i: 7, maxN[i].weit: 3, maxN[i].idx: 7, blockDimSize[i]: 3
thread: 0, i: 0, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 3, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 5, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 6, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 7, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, largestBlockVec.elm: 0 0 0 0 4 0 0 1 0 0 0 2 0 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 0 1 2 2 2 0 0 2 1 0 3 3 0 
thread: 0, divisorComp: 0 0 0 0 5 1 1 2 0 0 1 3 0 1 1 0 
thread: 0, largestBlockVec: 0 0 0 0 4 0 0 1 0 0 0 2 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 4 0 0 1 0 2 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 0 0 0 0 0 1 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 1 0 0 0 1 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 0 0 0 0 2 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 1 0 0 0 2 0 0 0 0 , mySum: 3
0 0 0 0 3 0 0 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 1 0 0 0 2 0 0 0 0 , mySum: 4
0 0 0 0 3 0 0 0 0 0 0 1 0 0 0 0 , mySum: 4
0 0 0 0 2 0 0 1 0 0 0 1 0 0 0 0 , mySum: 4
0 0 0 0 2 0 0 0 0 0 0 2 0 0 0 0 , mySum: 4
0 0 0 0 2 0 0 1 0 0 0 2 0 0 0 0 , mySum: 5
0 0 0 0 3 0 0 0 0 0 0 2 0 0 0 0 , mySum: 5
0 0 0 0 3 0 0 1 0 0 0 1 0 0 0 0 , mySum: 5
0 0 0 0 4 0 0 0 0 0 0 1 0 0 0 0 , mySum: 5
0 0 0 0 4 0 0 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 3 0 0 1 0 0 0 2 0 0 0 0 , mySum: 6
0 0 0 0 4 0 0 0 0 0 0 2 0 0 0 0 , mySum: 6
0 0 0 0 4 0 0 1 0 0 0 1 0 0 0 0 , mySum: 6
0 0 0 0 4 0 0 1 0 0 0 2 0 0 0 0 , mySum: 7
thread: 3, NSTable size: 26
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 4
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 5, maxN[i].idx: 0, blockDimSize[i]: 5
thread: 3, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 3, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 3, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 3, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 3, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 3, i: 6, maxN[i].weit: 3, maxN[i].idx: 6, blockDimSize[i]: 3
thread: 3, i: 7, maxN[i].weit: 3, maxN[i].idx: 7, blockDimSize[i]: 3
thread: 3, i: 0, divisor[i]: 5, blockDimSize[i]: 1
thread: 3, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 3, divisor[i]: 2, blockDimSize[i]: 2
thread: 3, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 5, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, i: 6, divisor[i]: 1, blockDimSize[i]: 3
thread: 3thread: , i: 27, NSTable size: , divisor[i]: 221
, blockDimSize[i]: thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 23
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 
5thread: , maxN[i].idx: 3, largestBlockVec.elm: 0, blockDimSize[i]: 50
thread: 2, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]:  2
thread: 2, i: 2, maxN[i].weit: 02 , maxN[i].idx: 2, blockDimSize[i]: 2
thread: 2, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 2, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 2, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 2, i: 6, maxN[i].weit: 3, maxN[i].idx: 6, blockDimSize[i]: 3
thread: 2, i: 7, maxN[i].weit: 3, maxN[i].idx: 7, blockDimSize[i]: 3
0thread: 2, i: 0, divisor[i]:  5, blockDimSize[i]: 01 
thread: 2, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 3, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 5, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 6, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 7, divisor[i]: 1, blockDimSize[i]: 3
4thread: 2, largestBlockVec.elm:  0 0 0 0 1 0 0 0 0 0 42  0 0 0 00  
thread: 3, blockDimSizeComp: 0 0 0 0 1 2 2 2 0 0 2 1 0 3 3 0 
thread: 3, divisorComp: 0 0 0 0 5 10 1 2 0  0 11  3 0 1 1 0 
thread: 3, largestBlockVec: 0 0 0 0 4 0 00  10 0  0 0 20  20  00  0 00  0
 thread: 3, largestNoZeroBlockVec: 4 0 0 1 0 2 0 0 0
 
thread: 2, blockDimSizeComp: 0 0 0 0 1 2 2 2 0 0 2 1 0 3 3 0 
thread: 2, divisorComp: 0 0 0 0 5 1 1 2 0 0 1 3 0 1 1 0 
thread: 2, largestBlockVec: 0 0 0 0 4 0 0 1 0 0 0 2 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 4 0 0 1 0 2 0 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 0 0 0 1 0 0 0thread:  2, allBlocks: 00  , mySum: 02 
00 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 , mySum: 2
 0 0 0 0 1 0 0 1 00  00  0 0 00 0  0 00  0, mySum:  2
0 0 0 0 2 0 0 0 0 0 0 00 0 0 0 0  0 0 00 0  , mySum: 00
 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
00 0 0  , mySum: 0 20
 0 0 0 0 2 0 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 3 0 0 0 0 0 00 0 0  0 0 00 , mySum:  3
0 0 0 0 2 0 0 0 0 0 0 11  00  0 00  0 0, mySum:  3
0 0 0 0 1 0 0 1 0 0 0 1 0 00 0  00  0, mySum:  3
00 0 0 0 1 0 0 0 0 0 0 2 0 0  0 00 , mySum:  1
, mySum: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 2 3
0 0 0 0 0 0 0 1 0 0 0 2 0 0 0 0 , mySum: 20
 0 00 0 0 0 0 0 0 1 0 0 0 1 0  0 00  0 , mySum: , mySum: 2
30 0 0 0 1 0 0 0 0 0
 0 0 0 0 3 0 0 1 0 0 0 0 0 0 00 0  , mySum: 4
0 0 0 0 4 0 0 0 0 0 0 0 01 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 1 0 0 0 2 0  0 0 00 , mySum:  4
0 0 0 0 3 0 0 0 0 0 0 1 0 0 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 00  00  , mySum: 2
00 0 0 0 2 0 0 1 0 0 0 0  0 , mySum: 04 
00 0 0 0 2 0 0 1 0 0 0 1 0 0  0 , mySum: 3
0 0 0 0 3 0 0 0 0 0 0 0 0 00 0  0 0, mySum:  3
0 0 0 0 2 0 0 0 0 0 0 1 0 , mySum: 0 4
00 0 0 0 2 0 0 0 0 0 0 2 0 0 0 , mySum: 3
0 0 0 0 1 0 0 1 0 0 0 1 0 0 0 , mySum: 4
0 0 0 0 2 0 0 1 0 0 0 2 0 0 0 0 , mySum:  30 0 
0 , mySum: 0 0 0 0 1 0 0 0 0 0 0 2 0 0 50 0
 , mySum: 30 0 0 0 3 0 0 0 0 0 0 2 0 0
 0 0 0 0 0 0 0 1 0 0 0 20 0  00  , mySum: 05 0 
0 0 0 0 3 0 0 1 0 0 0 1 0 0 0, mySum:  0 3, mySum: 
0 0 0 0 3 0 0 1 0 0 0 0 0 0 50 0
0 0 0 0 4 0 0 0 0 0 0 1 0 0 0  , mySum: 04 
, mySum: 0 0 0 0 4 0 0 0 0 0 0 0 0 05 0
 0 0 0 0 4 0 0 1 0 0 0 0 0 00 , mySum: 4
0 0 0 0 1 0 0 1 0 0 0 2  0 0 , mySum: 5
00 0 0 0 3 0 0 1 0 0 0 2 0  0 0 00 , mySum:  6
0 0 0 0 4 0 0 0 0 0 0 2 0 00 0 0  , mySum: 6
0 0 0 0 4 0 0 1 0 0 0 1 0 0 , mySum: 4
0 0 0 0 3 0 0 0 0 0 0 1 0 0 0 , mySum: 60
 0 0 0 0 4 0 0 1 0 0 0 2 0 0 0 0 , mySum: 4
0 0 0 0 2 0 0 1 0 0 0 1 0 00 0  00  0 , mySum: , mySum: 74
0 0 0 0 2 0 0 0 0 0 0 2 0
 0 0 0 , mySum: 4
0 0 0 0 2 0 0 1 0 0 0 2 0 0 0 0 , mySum: 5
0 0 0 0 3 0 0 0 0 0 0 2 0 0 0 0 , mySum: 5
0 0 0 0 3 0 0 1 0 0 0 1 0 0 0 0 , mySum: 5
0 0 0 0 4 0 0 0 0 0 0 1 0 0 0 0 , mySum: 5
0 0 0 0 4 0 0 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 3 0 0 1 0 0 0 2 0 0 0 0 , mySum: 6
0 0 0 0 4 0 0 0 0 0 0 2 0 0 0 0 , mySum: 6
0 0 0 0 4 0 0 1 0 0 0 1 0 0 0 0 , mySum: 6
0 0 0 0 4 0 0 1 0 0 0 2 0 0 0 0 , mySum: 7
thread: 1, maxBlockLvlSize: 6
thread: 1, maxInBlockLvlSize: 36
thread: 1, AllTableSize: 4320, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 6
thread: 0, maxInBlockLvlSize: 36
thread: 0, AllTableSize: 4320, maxSubsetsSize: 64
thread: 3, maxBlockLvlSize: 6
thread: 3, maxInBlockLvlSize: 36
thread: 3, AllTableSize: 4320, maxSubsetsSize: 64
thread: 2, maxBlockLvlSize: 6
thread: 2, maxInBlockLvlSize: 36
thread: 2, AllTableSize: 4320, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 1 0 0 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 0 1 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 1 0 0 0 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 0 0 0 2 0 0 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 0 0 1 0 1 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 1 0 0 0 0 1 0 0 
thread: 0, allBlocks[7]: 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 1 0 0 1 0 0 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[8]: 2 0 0 0 0 0 0 0 
thread: 0, allBlocks[9]: 0 0 0 0 2 0 0 1 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[9]: 2 0 0 1 0 0 0 0 
thread: 0, allBlocks[10]: 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 3 0 0 0 0 0 0 0 
thread: 0, allBlocks[11]: 0 0 0 0 2 0 0 0 0 0 0 1 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 2 0 0 0 0 1 0 0 
thread: 0, allBlocks[12]: 0 0 0 0 1 0 0 1 0 0 0 1 0 0 0 0 mySum: 3
thread: 0, blockNoZero[12]: 1 0 0 1 0 1 0 0 
thread: 0, allBlocks[13]: 0 0 0 0 1 0 0 0 0 0 0 2 0 0 0 0 mySum: 3
thread: 0, blockNoZero[13]: 1 0 0 0 0 2 0 0 
thread: 0, allBlocks[14]: 0 0 0 0 0 0 0 1 0 0 0 2 0 0 0 0 mySum: 3
thread: 0, blockNoZero[14]: 0 0 0 1 0 2 0 0 
thread: 0, allBlocks[15]: 0 0 0 0 3 0 0 1 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[15]: 3 0 0 1 0 0 0 0 
thread: 0, allBlocks[16]: 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[16]: 4 0 0 0 0 0 0 0 
thread: 0, allBlocks[17]: 0 0 0 0 1 0 0 1 0 0 0 2 0 0 0 0 mySum: 4
thread: 0, blockNoZero[17]: 1 0 0 1 0 2 0 0 
thread: 0, allBlocks[18]: 0 0 0 0 3 0 0 0 0 0 0 1 0 0 0 0 mySum: 4
thread: 0, blockNoZero[18]: 3 0 0 0 0 1 0 0 
thread: 0, allBlocks[19]: 0 0 0 0 2 0 0 1 0 0 0 1 0 0 0 0 mySum: 4
thread: 0, blockNoZero[19]: 2 0 0 1 0 1 0 0 
thread: 0, allBlocks[20]: 0 0 0 0 2 0 0 0 0 0 0 2 0 0 0 0 mySum: 4
thread: 0, blockNoZero[20]: 2 0 0 0 0 2 0 0 
thread: 0, allBlocks[21]: 0 0 0 0 2 0 0 1 0 0 0 2 0 0 0 0 mySum: 5
thread: 0, blockNoZero[21]: 2 0 0 1 0 2 0 0 
thread: 0, allBlocks[22]: 0 0 0 0 3 0 0 0 0 0 0 2 0 0 0 0 mySum: 5
thread: 0, blockNoZero[22]: 3 0 0 0 0 2 0 0 
thread: 0, allBlocks[23]: 0 0 0 0 3 0 0 1 0 0 0 1 0 0 0 0 mySum: 5
thread: 0, blockNoZero[23]: 3 0 0 1 0 1 0 0 
thread: 0, allBlocks[24]: 0 0 0 0 4 0 0 0 0 0 0 1 0 0 0 0 mySum: 5
thread: 0, blockNoZero[24]: 4 0 0 0 0 1 0 0 
thread: 0, allBlocks[25]: 0 0 0 0 4 0 0 1 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[25]: 4 0 0 1 0 0 0 0 
thread: 0, allBlocks[26]: 0 0 0 0 3 0 0 1 0 0 0 2 0 0 0 0 mySum: 6
thread: 0, blockNoZero[26]: 3 0 0 1 0 2 0 0 
thread: 0, allBlocks[27]: 0 0 0 0 4 0 0 0 0 0 0 2 0 0 0 0 mySum: 6
thread: 0, blockNoZero[27]: 4 0 0 0 0 2 0 0 
thread: 0, allBlocks[28]: 0 0 0 0 4 0 0 1 0 0 0 1 0 0 0 0 mySum: 6
thread: 0, blockNoZero[28]: 4 0 0 1 0 1 0 0 
thread: 0, allBlocks[29]: 0 0 0 0 4 0 0 1 0 0 0 2 0 0 0 0 mySum: 7
thread: 0, blockNoZero[29]: 4 0 0 1 0 2 0 0 
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.513975
thread: 1, sOPT: 10
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.665219
thread: 3, sOPT: 10
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 4e-06
thread: 0, sOPT: 11
copy the latest feasible solution to instance takes time: 0.262048
thread: 2, sOPT: 10
Thread: 2, MlBk function is done, and BkID for all processes are collected.
Thread: 1, MlBk function is done, and BkID for all processes are collected.Thread: 
3, MlBk function is done, and BkID for all processes are collected.
Thread: 0, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: 1 -1 -1 -1
Pick seg 1 for next iteration where LB: 101, UB: 104
BKID: 0, LB: 101, UB: 104, OPT: 10
Dynamic Programming Runtime: 3.3551
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 2
Iteration: 3, UB: 104, LB: 101start at time: 1505254841
thread: 0, MlBk is called with LB: 101, UB: 102
thread:  thread: 0, LongJobs.size() 2, MlBk is called with LB: 103, UB: 104
16
thread: 1, MlBk is called with LB: 102, UB: 103
 thread: 2, LongJobs.size() 16
 thread: 1, LongJobs.size() 16
thread: 2, NSTable size: 22
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 5, maxN[i].idx: 0, blockDimSize[i]: 5
thread: 2, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 2, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 2, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 2, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 2, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 2, i: 6, maxN[i].weit: 3, maxN[i].idx: 6, blockDimSize[i]: 3
thread: 2, i: 7, maxN[i].weit: 3, maxN[i].idx: 7, blockDimSize[i]: 3
thread: 2, i: 0, divisor[i]: 5, blockDimSize[i]: 1
thread: 2, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 3, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 5, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 6, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 7, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, largestBlockVec.elm: 0 0 0 0 4 0 0 1 0 0 0 2 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 0 1 2 2 2 0 0 2 1 0 3 3 0 
thread: 2, divisorComp: 0 0 0 0 5 1 1 2 0 0 1 3 0 1 1 0 
thread: 2, largestBlockVec: 0 0 0 0 4 0 0 1 0 0 0 2 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 4 0 0 1 0 2 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 0 0 0 0 0 1 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 1 0 0 0 1 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 0 0 0 0 2 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 1 0 0 0 2 0 0 0 0 , mySum: 3
0 0 0 0 3 0 0 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 1 0 0 0 2 0 0 0 0 , mySum: 4
0 0 0 0 3 0 0 0 0 0 0 1 0 0 0 0 , mySum: 4
0 0 0 0 2 0 0 1 0 0 0 1 0 0 0 0 , mySum: 4
0 0 0 0 2 0 0 0 0 0 0 2 0 0 0 0 , mySum: 4
0 0 0 0 2 0 0 1 0 0 0 2 0 0 0 0 , mySum: 5
0thread:  0 01 , NSTable size: 0 3 022 0 0 
0 thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0 00 2, maxN[i].weit:  0 50 0, maxN[i].idx:  0, blockDimSize[i]: 05 
, mySum: 5thread: 1, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2

0 0 0 0 3 0 0 1 0 0 0 1 0 0 0 0 , mySum: 5
thread: 0 0 0 0 4 0 0 0 0 0 0 1 0 0 0 10, i:  2, maxN[i].weit: , mySum: 2, maxN[i].idx: 52, blockDimSize[i]: 
20 0 0 0 4 0 0 1 0 0 0 
0 thread: 1, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
0 thread: 0 10, i: 4, maxN[i].weit: 2 , maxN[i].idx: 04 , blockDimSize[i]: , mySum: 25

0 0 0 0 3 0 0 1 0 0 0 2 0 0 0 0 , mySum: 6
0 0 0thread:  10 , i: 4 05, maxN[i].weit:  3, maxN[i].idx: 05 , blockDimSize[i]: 03
thread: 1, i: 6, maxN[i].weit: 3, maxN[i].idx: 6, blockDimSize[i]: 3
thread: 1, i:  0 0 0 72, maxN[i].weit:  30, maxN[i].idx:  07 0, blockDimSize[i]:  0 3, mySum: 
6
thread: 0 0 0 0 4 0 0 1 0 0 0 1 0 0 0 0 , mySum: 6
0 0 0 0 4 0 0 1 0 0 0 2 01 0 0 , i: 00 , divisor[i]: , mySum: 57, blockDimSize[i]: 1

thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 3, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 5, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 6, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 7, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, largestBlockVec.elm: 0 0 0 0 4 0 0 1 0 0 0 2 0 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 0 1 2 2 2 0 0 2 1 0 3 3 0 
thread: 1, divisorComp: 0 0 0 0 5 1 1 2 0 0 1 3 0 1 1 0 
thread: 1, largestBlockVec: 0 0 0 0 4 0 0 1 0 0 0 2 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 4 0 0 1 0 2 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 0 0 0 0 0 1 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 1 0 0 0 1 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 0 0 0 0 2 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 1 0 0 0 2 0 0 0 0 , mySum: 3
0 0 0 0 3 0 0 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 1 0 0 0 2 0 0 0 0 , mySum: 4
0 0 0 0 3 0 0 0 0 0 0 1 0 0 0 0 , mySum: 4
0 0 0 0 2 0 0 1 0 0 0 1 0 0 0 0 , mySum: 4
0 0 0 0 2 0 0 0 0 0 0 2 0 0 0 0 , mySum: 4
0 0 0 0 2 0 0 1 0 0 0 2 0 0 0 0 , mySum: 5
0 0 0 0 3 0 0 0 0 0 0 2 0 0 0 0 , mySum: 5
0 0 0 0 3 0 0 1 0 0 0 1 0 0 0 0 , mySum: 5
0 0 0 0 4 0 0 0 0 0 0 1 0 0 0 0 , mySum: 5
0 0 0 0 4 0 0 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 3 0 0 1 0 0 0 2 0 0 0 0 , mySum: 6
0 0 0 0 4 0 0 0 0 0 0 2 0 0 0 0 , mySum: 6
0 0 0 0 4 0 0 1 0 0 0 1 0 0 0 0 , mySum: 6
0 0 0 0 4 0 0 1 0 0 0 2 0 0 0 0 , mySum: 7
thread: 0, NSTable size: 19
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 0, maxN[i].weit: 5, maxN[i].idx: 0, blockDimSize[i]: 5
thread: 0, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 0, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 0, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 0, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 0, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 0, i: 6, maxN[i].weit: 3, maxN[i].idx: 6, blockDimSize[i]: 3
thread: 0, i: 7, maxN[i].weit: 3, maxN[i].idx: 7, blockDimSize[i]: 3
thread: 0, i: 0, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 3, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 5, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 6, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 7, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, largestBlockVec.elm: 0 0 0 0 4 0 0 1 0 0 0 2 0 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 0 1 2 2 2 0 0 2 1 0 3 3 0 
thread: 0, divisorComp: 0 0 0 0 5 1 1 2 0 0 1 3 0 1 1 0 
thread: 0, largestBlockVec: 0 0 0 0 4 0 0 1 0 0 0 2 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 4 0 0 1 0 2 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 0 0 0 0 0 1 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 1 0 0 0 1 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 0 0 0 0 2 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 1 0 0 0 2 0 0 0 0 , mySum: 3
0 0 0 0 3 0 0 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 1 0 0 0 2 0 0 0 0 , mySum: 4
0 0 0 0 3 0 0 0 0 0 0 1 0 0 0 0 , mySum: 4
0 0 0 0 2 0 0 1 0 0 0 1 0 0 0 0 , mySum: 4
0 0 0 0 2 0 0 0 0 0 0 2 0 0 0 0 , mySum: 4
0 0 0 0 2 0 0 1 0 0 0 2 0 0 0 0 , mySum: 5
0 0 0 0 3 0 0 0 0 0 0 2 0 0 0 0 , mySum: 5
0 0 0 0 3 0 0 1 0 0 0 1 0 0 0 0 , mySum: 5
0 0 0 0 4 0 0 0 0 0 0 1 0 0 0 0 , mySum: 5
0 0 0 0 4 0 0 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 3 0 0 1 0 0 0 2 0 0 0 0 , mySum: 6
0 0 0 0 4 0 0 0 0 0 0 2 0 0 0 0 , mySum: 6
0 0 0 0 4 0 0 1 0 0 0 1 0 0 0 0 , mySum: 6
0 0 0 0 4 0 0 1 0 0 0 2 0 0 0 0 , mySum: 7
thread: 2, maxBlockLvlSize: 6
thread: 2, maxInBlockLvlSize: 36
thread: 2, AllTableSize: 4320, maxSubsetsSize: 64
thread: 1, maxBlockLvlSize: 6
thread: 1, maxInBlockLvlSize: 36
thread: 1, AllTableSize: 4320, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 6
thread: 0, maxInBlockLvlSize: 36
thread: 0, AllTableSize: 4320, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 1 0 0 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 0 1 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 1 0 0 0 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 0 0 0 2 0 0 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 0 0 1 0 1 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 1 0 0 0 0 1 0 0 
thread: 0, allBlocks[7]: 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 1 0 0 1 0 0 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[8]: 2 0 0 0 0 0 0 0 
thread: 0, allBlocks[9]: 0 0 0 0 2 0 0 1 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[9]: 2 0 0 1 0 0 0 0 
thread: 0, allBlocks[10]: 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 3 0 0 0 0 0 0 0 
thread: 0, allBlocks[11]: 0 0 0 0 2 0 0 0 0 0 0 1 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 2 0 0 0 0 1 0 0 
thread: 0, allBlocks[12]: 0 0 0 0 1 0 0 1 0 0 0 1 0 0 0 0 mySum: 3
thread: 0, blockNoZero[12]: 1 0 0 1 0 1 0 0 
thread: 0, allBlocks[13]: 0 0 0 0 1 0 0 0 0 0 0 2 0 0 0 0 mySum: 3
thread: 0, blockNoZero[13]: 1 0 0 0 0 2 0 0 
thread: 0, allBlocks[14]: 0 0 0 0 0 0 0 1 0 0 0 2 0 0 0 0 mySum: 3
thread: 0, blockNoZero[14]: 0 0 0 1 0 2 0 0 
thread: 0, allBlocks[15]: 0 0 0 0 3 0 0 1 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[15]: 3 0 0 1 0 0 0 0 
thread: 0, allBlocks[16]: 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[16]: 4 0 0 0 0 0 0 0 
thread: 0, allBlocks[17]: 0 0 0 0 1 0 0 1 0 0 0 2 0 0 0 0 mySum: 4
thread: 0, blockNoZero[17]: 1 0 0 1 0 2 0 0 
thread: 0, allBlocks[18]: 0 0 0 0 3 0 0 0 0 0 0 1 0 0 0 0 mySum: 4
thread: 0, blockNoZero[18]: 3 0 0 0 0 1 0 0 
thread: 0, allBlocks[19]: 0 0 0 0 2 0 0 1 0 0 0 1 0 0 0 0 mySum: 4
thread: 0, blockNoZero[19]: 2 0 0 1 0 1 0 0 
thread: 0, allBlocks[20]: 0 0 0 0 2 0 0 0 0 0 0 2 0 0 0 0 mySum: 4
thread: 0, blockNoZero[20]: 2 0 0 0 0 2 0 0 
thread: 0, allBlocks[21]: 0 0 0 0 2 0 0 1 0 0 0 2 0 0 0 0 mySum: 5
thread: 0, blockNoZero[21]: 2 0 0 1 0 2 0 0 
thread: 0, allBlocks[22]: 0 0 0 0 3 0 0 0 0 0 0 2 0 0 0 0 mySum: 5
thread: 0, blockNoZero[22]: 3 0 0 0 0 2 0 0 
thread: 0, allBlocks[23]: 0 0 0 0 3 0 0 1 0 0 0 1 0 0 0 0 mySum: 5
thread: 0, blockNoZero[23]: 3 0 0 1 0 1 0 0 
thread: 0, allBlocks[24]: 0 0 0 0 4 0 0 0 0 0 0 1 0 0 0 0 mySum: 5
thread: 0, blockNoZero[24]: 4 0 0 0 0 1 0 0 
thread: 0, allBlocks[25]: 0 0 0 0 4 0 0 1 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[25]: 4 0 0 1 0 0 0 0 
thread: 0, allBlocks[26]: 0 0 0 0 3 0 0 1 0 0 0 2 0 0 0 0 mySum: 6
thread: 0, blockNoZero[26]: 3 0 0 1 0 2 0 0 
thread: 0, allBlocks[27]: 0 0 0 0 4 0 0 0 0 0 0 2 0 0 0 0 mySum: 6
thread: 0, blockNoZero[27]: 4 0 0 0 0 2 0 0 
thread: 0, allBlocks[28]: 0 0 0 0 4 0 0 1 0 0 0 1 0 0 0 0 mySum: 6
thread: 0, blockNoZero[28]: 4 0 0 1 0 1 0 0 
thread: 0, allBlocks[29]: 0 0 0 0 4 0 0 1 0 0 0 2 0 0 0 0 mySum: 7
thread: 0, blockNoZero[29]: 4 0 0 1 0 2 0 0 
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 5e-06
thread: 0, sOPT: 11
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.205946
thread: 2, sOPT: 10
copy the latest feasible solution to instance takes time: 0.231444
thread: 1, sOPT: 10
BKID: 0, LB: 102, UB: 102, OPT: 10
Dynamic Programming Runtime: 2.01457
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 3
********************************************************
Total execution on UB and LB is: 3
OUT of Bk while loop  
UB    102
LB    102
T1    102
T2    102
OPT   10
nMachines   10
BkID	0
AllProbData.size()    3
ck :   2
AllProbData[ck].Ttable    102
ck :   1
AllProbData[ck].Ttable    103
ck :   0
AllProbData[ck].Ttable    110
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan106
Main Scheduling is Done
File 3-12 is Done.
******************************
Reading File...
File 3-13 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 190, LB: 97start at time: 1505254842
thread: 0, MlBk is called with LB: 97, UB: 120
thread: 3, MlBk is called with LB: 166, UB: 190
 thread: 0, LongJobs.size() 13
thread: 2, MlBk is called with LB: thread: 143, UB: 1661, MlBk is called with LB: 
120, UB: 143
 thread: 3, LongJobs.size() 12
 thread: 2, LongJobs.size() 12
 thread: 1, LongJobs.size() 13
thread: 3, NSTable size: 20
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 5
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 3, i: 1, maxN[i].weit: 6, maxN[i].idx: 1, blockDimSize[i]: 6
thread: 3, i: 2, maxN[i].weit: 4, maxN[i].idx: 2, blockDimSize[i]: 4
thread: 3, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 3, i: 0, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, i: 1, divisor[i]: 2, blockDimSize[i]: 3
thread: 3, i: 2, divisor[i]: 2, blockDimSize[i]: 2
thread: 3, i: 3, divisor[i]: 1, blockDimSize[i]: 3
thread: 3, largestBlockVec.elm: 0 0 0 2 1 0 1 0 0 0 0 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 1 3 0 2 3 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 3 2 0 2 1 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 2 1 0 1 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 2 1 1 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 2 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 2 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 4
thread: 3, maxBlockLvlSize: 4
thread: 3, maxInBlockLvlSize: 5
thread: 3, AllTableSize: 216, maxSubsetsSize: 64
thread: 2, NSTable size: 24
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 2, i: 1, maxN[i].weit: 5, maxN[i].idx: 1, blockDimSize[i]: 5
thread: 2, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 2, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 2, i: 4, maxN[i].weit: 4, maxN[i].idx: 4, blockDimSize[i]: 4
thread: 2, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 2, i: 0, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 1, divisor[i]: 5, blockDimSize[i]: 1
thread: 2, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 4, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, largestBlockVec.elm: 0 0 0 0 2 4 0 0 1 0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 0 1 1 2 2 2 2 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 3 5 1 1 2 1 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 2 4 0 0 1 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 2 4 0 0 1 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 0 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 0 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 1 0 0 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 2 0 0 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 3 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 3 0 0 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 4 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 3 0 0 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 4 0 0 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 2 0 0 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 3 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 4 0 0 1 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 3 0 0 1 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 4 0 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 4 0 0 1 0 0 0 0 0 0 0 , mySum: 7
thread: 2, maxBlockLvlSize: 6
thread: 2, maxInBlockLvlSize: 6
thread: 2, AllTableSize: 480, maxSubsetsSize: 64
thread: 1, NSTable size: 22
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 1, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 1, i: 2, maxN[i].weit: 5, maxN[i].idx: 2, blockDimSize[i]: 5
thread: 1, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 1, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 1, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 1, i: 6, maxN[i].weit: 3, maxN[i].idx: 6, blockDimSize[i]: 3
thread: 1, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 2, divisor[i]: 5, blockDimSize[i]: 1
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 5, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 6, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, largestBlockVec.elm: 0 0 0 0 0 2 4 0 0 2 0 0 0 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 2 0 1 1 2 2 1 3 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 1 0 3 5 1 1 3 1 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 2 4 0 0 2 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 2 4 0 0 2 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 1 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 0 0 2 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 0 0 1 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 0 0 2 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 0 0 0 2 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 1 0 0 1 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 2 0 0 1 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 1 0 0 2 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 2 0 0 2 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 3 0 0 1 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 4 0 0 1 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 3 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 3 0 0 2 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 3 0 0 1 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 1 0 0 2 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 2 0 0 2 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 2 0 0 1 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 4 0 0 1 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 2 4 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 2 3 0 0 1 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 2 2 0 0 2 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 3 0 0 2 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 4 0 0 2 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 2 3 0 0 2 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 4 0 0 2 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 2 4 0 0 1 0 0 0 0 0 0 , mySum: 7
0 0 0 0 0 2 4 0 0 2 0 0 0 0 0 0 , mySum: 8
thread: 0, NSTable size: 17
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 0, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 0, i: 2, maxN[i].weit: 5, maxN[i].idx: 2, blockDimSize[i]: 5
thread: 0, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 0, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 0, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 0, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 0, i: 7, maxN[i].weit: 2, maxN[i].idx: 7, blockDimSize[i]: 2
thread: 0, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 2, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 5, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 7, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, largestBlockVec.elm: 0 0 0 0 0 0 0 2 4 0 0 0 2 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 0 2 0 0 1 1 2 0 2 1 2 2 0 
thread: 0, divisorComp: 0 0 0 0 1 0 0 3 5 1 0 1 3 1 1 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 2 4 0 0 0 2 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 2 4 0 0 2 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 1 0 0 0 , mySum: 3
0 0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 1 1 0 0 0 1 0 0 0 , mySum: 3
0 0 0 0 0 0 0 1 0 0 0 0 2 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 2 0 0 0 1 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 1 0 0 0 2 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 0 0 0 0 2 0 0 0 , mySum: 4
0 0 0 0 0 0 0 2 1 0 0 0 1 0 0 0 , mySum: 4
0 0 0 0 0 0 0 2 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 1 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 1 2 0 0 0 1 0 0 0 , mySum: 4
0 0 0 0 0 0 0 1 1 0 0 0 2 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 2 0 0 0 2 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 3 0 0 0 1 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 1 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 0 4 0 0 0 1 0 0 0 , mySum: 5
0 0 0 0 0 0 0 2 3 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 0 3 0 0 0 2 0 0 0 , mySum: 5
0 0 0 0 0 0 0 1 3 0 0 0 1 0 0 0 , mySum: 5
0 0 0 0 0 0 0 2 1 0 0 0 2 0 0 0 , mySum: 5
0 0 0 0 0 0 0 1 2 0 0 0 2 0 0 0 , mySum: 5
0 0 0 0 0 0 0 2 2 0 0 0 1 0 0 0 , mySum: 5
0 0 0 0 0 0 0 1 4 0 0 0 1 0 0 0 , mySum: 6
0 0 0 0 0 0 0 2 4 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 2 3 0 0 0 1 0 0 0 , mySum: 6
0 0 0 0 0 0 0 2 2 0 0 0 2 0 0 0 , mySum: 6
0 0 0 0 0 0 0 1 3 0 0 0 2 0 0 0 , mySum: 6
0 0 0 0 0 0 0 0 4 0 0 0 2 0 0 0 , mySum: 6
0 0 0 0 0 0 0 2 3 0 0 0 2 0 0 0 , mySum: 7
0 0 0 0 0 0 0 1 4 0 0 0 2 0 0 0 , mySum: 7
0 0 0 0 0 0 0 2 4 0 0 0 1 0 0 0 , mySum: 7
0 0 0 0 0 0 0 2 4 0 0 0 2 0 0 0 , mySum: 8
thread: 1, maxBlockLvlSize: 9
thread: 1, maxInBlockLvlSize: 7
thread: 1, AllTableSize: 1080, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 9
thread: 0, maxInBlockLvlSize: 10
thread: 0, AllTableSize: 1440, maxSubsetsSize: 64
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 5
copy the latest feasible solution to instance takes time: 0.011123
thread: 3, sOPT: 5
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 1 0 0 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 1 0 0 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 1 0 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 1 0 0 1 0 0 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 0 2 0 0 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 1 1 0 0 0 0 0 
Thread: 2, gpu_BlockDP is done.
thread: 0, allBlocks[7]: 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 0 1 0 0 0 1 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 mySum: 2
thread: 0, blockNoZero[8]: 0 0 0 0 0 2 0 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[9]: 0 2 0 0 0 0 0 0 
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 6
thread: 0, allBlocks[10]: 0 0 0 0 0 0 0 2 0 0 0 0 1 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 0 2 0 0 0 1 0 0 
thread: 0, allBlocks[11]: 0 0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 0 1 2 0 0 0 0 0 
thread: 0, allBlocks[12]: 0 0 0 0 0 0 0 1 1 0 0 0 1 0 0 0 mySum: 3
thread: 0, blockNoZero[12]: 0 1 1 0 0 1 0 0 
thread: 0, allBlocks[13]: 0 0 0 0 0 0 0 1 0 0 0 0 2 0 0 0 mySum: 3
thread: 0, blockNoZero[13]: 0 1 0 0 0 2 0 0 
thread: 0, allBlocks[14]: 0 0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[14]: 0 2 1 0 0 0 0 0 
thread: 0, allBlocks[15]: 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[15]: 0 0 3 0 0 0 0 0 
thread: 0, allBlocks[16]: 0 0 0 0 0 0 0 0 2 0 0 0 1 0 0 0 mySum: 3
thread: 0, blockNoZero[16]: 0 0 2 0 0 1 0 0 
thread: 0, allBlocks[17]: 0 0 0 0 0 0 0 0 1 0 0 0 2 0 0 0 mySum: 3
thread: 0, blockNoZero[17]: 0 0 1 0 0 2 0 0 
copy the latest feasible solution to instance takes time: 0.024541
thread: 2, sOPT: 6
thread: 0, allBlocks[18]: 0 0 0 0 0 0 0 2 0 0 0 0 2 0 0 0 mySum: 4
thread: 0, blockNoZero[18]: 0 2 0 0 0 2 0 0 
thread: 0, allBlocks[19]: 0 0 0 0 0 0 0 2 1 0 0 0 1 0 0 0 mySum: 4
thread: 0, blockNoZero[19]: 0 2 1 0 0 1 0 0 
thread: 0, allBlocks[20]: 0 0 0 0 0 0 0 2 2 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[20]: 0 2 2 0 0 0 0 0 
thread: 0, allBlocks[21]: 0 0 0 0 0 0 0 1 3 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[21]: 0 1 3 0 0 0 0 0 
thread: 0, allBlocks[22]: 0 0 0 0 0 0 0 1 2 0 0 0 1 0 0 0 mySum: 4
thread: 0, blockNoZero[22]: 0 1 2 0 0 1 0 0 
thread: 0, allBlocks[23]: 0 0 0 0 0 0 0 1 1 0 0 0 2 0 0 0 mySum: 4
thread: 0, blockNoZero[23]: 0 1 1 0 0 2 0 0 
thread: 0, allBlocks[24]: 0 0 0 0 0 0 0 0 2 0 0 0 2 0 0 0 mySum: 4
thread: 0, blockNoZero[24]: 0 0 2 0 0 2 0 0 
thread: 0, allBlocks[25]: 0 0 0 0 0 0 0 0 3 0 0 0 1 0 0 0 mySum: 4
thread: 0, blockNoZero[25]: 0 0 3 0 0 1 0 0 
thread: 0, allBlocks[26]: 0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[26]: 0 0 4 0 0 0 0 0 
thread: 0, allBlocks[27]: 0 0 0 0 0 0 0 1 4 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[27]: 0 1 4 0 0 0 0 0 
thread: 0, allBlocks[28]: 0 0 0 0 0 0 0 0 4 0 0 0 1 0 0 0 mySum: 5
thread: 0, blockNoZero[28]: 0 0 4 0 0 1 0 0 
thread: 0, allBlocks[29]: 0 0 0 0 0 0 0 2 3 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[29]: 0 2 3 0 0 0 0 0 
thread: 0, allBlocks[30]: 0 0 0 0 0 0 0 0 3 0 0 0 2 0 0 0 mySum: 5
thread: 0, blockNoZero[30]: 0 0 3 0 0 2 0 0 
thread: 0, allBlocks[31]: 0 0 0 0 0 0 0 1 3 0 0 0 1 0 0 0 mySum: 5
thread: 0, blockNoZero[31]: 0 1 3 0 0 1 0 0 
thread: 0, allBlocks[32]: 0 0 0 0 0 0 0 2 1 0 0 0 2 0 0 0 mySum: 5
thread: 0, blockNoZero[32]: 0 2 1 0 0 2 0 0 
thread: 0, allBlocks[33]: 0 0 0 0 0 0 0 1 2 0 0 0 2 0 0 0 mySum: 5
thread: 0, blockNoZero[33]: 0 1 2 0 0 2 0 0 
thread: 0, allBlocks[34]: 0 0 0 0 0 0 0 2 2 0 0 0 1 0 0 0 mySum: 5
thread: 0, blockNoZero[34]: 0 2 2 0 0 1 0 0 
thread: 0, allBlocks[35]: 0 0 0 0 0 0 0 1 4 0 0 0 1 0 0 0 mySum: 6
thread: 0, blockNoZero[35]: 0 1 4 0 0 1 0 0 
thread: 0, allBlocks[36]: 0 0 0 0 0 0 0 2 4 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[36]: 0 2 4 0 0 0 0 0 
thread: 0, allBlocks[37]: 0 0 0 0 0 0 0 2 3 0 0 0 1 0 0 0 mySum: 6
thread: 0, blockNoZero[37]: 0 2 3 0 0 1 0 0 
thread: 0, allBlocks[38]: 0 0 0 0 0 0 0 2 2 0 0 0 2 0 0 0 mySum: 6
thread: 0, blockNoZero[38]: 0 2 2 0 0 2 0 0 
thread: 0, allBlocks[39]: 0 0 0 0 0 0 0 1 3 0 0 0 2 0 0 0 mySum: 6
thread: 0, blockNoZero[39]: 0 1 3 0 0 2 0 0 
thread: 0, allBlocks[40]: 0 0 0 0 0 0 0 0 4 0 0 0 2 0 0 0 mySum: 6
thread: 0, blockNoZero[40]: 0 0 4 0 0 2 0 0 
thread: 0, allBlocks[41]: 0 0 0 0 0 0 0 2 3 0 0 0 2 0 0 0 mySum: 7
thread: 0, blockNoZero[41]: 0 2 3 0 0 2 0 0 
thread: 0, allBlocks[42]: 0 0 0 0 0 0 0 1 4 0 0 0 2 0 0 0 mySum: 7
thread: 0, blockNoZero[42]: 0 1 4 0 0 2 0 0 
thread: 0, allBlocks[43]: 0 0 0 0 0 0 0 2 4 0 0 0 1 0 0 0 mySum: 7
thread: 0, blockNoZero[43]: 0 2 4 0 0 1 0 0 
thread: 0, allBlocks[44]: 0 0 0 0 0 0 0 2 4 0 0 0 2 0 0 0 mySum: 8
thread: 0, blockNoZero[44]: 0 2 4 0 0 2 0 0 
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 7
copy the latest feasible solution to instance takes time: 0.042626
thread: 1, sOPT: 7
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.025434
thread: 0, sOPT: 9
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: Thread: 2, MlBk function is done, and BkID for all processes are collected.13, MlBk function is done, and BkID for all processes are collected., MlBk function is done, and BkID for all processes are collected.


sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 97, UB: 109
BKID: 0, LB: 97, UB: 109, OPT: 9
Dynamic Programming Runtime: 0.419309
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 1
Iteration: 2, UB: 109, LB: 97start at time: 1505254843
thread: 0, MlBk is called with LB: 97, UB: 100
 thread: 0, LongJobs.size() 13
thread: thread: thread: 3, MlBk is called with LB: 21, MlBk is called with LB: 100, UB: 103, MlBk is called with LB: 106103, UB: 
106
, UB: 109
 thread: 3, LongJobs.size() 13
 thread: 1, LongJobs.size() 13
 thread: 2, LongJobs.size() 13
thread: 0, NSTable size: 12
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 0, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 0, i: 2, maxN[i].weit: 5, maxN[i].idx: 2, blockDimSize[i]: 5
thread: 0, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 0, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 0, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 0, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 0, i: 7, maxN[i].weit: 2, maxN[i].idx: 7, blockDimSize[i]: 2
thread: 0, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 2, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 5, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 7, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, largestBlockVec.elm: 0 0 0 0 0 0 0 2 4 0 0 0 2 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 0 2 0 0 1 1 2 0 2 1 2 2 0 
thread: 0, divisorComp: 0 0 0 0 1 0 0 3 5 1 0 1 3 1 1 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 2 4 0 0 0 2 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 2 4 0 0 2 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 1 0 0 0 , mySum: 3
0 0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 1 1 0 0 0 1 0 0 0 , mySum: 3
0 0 0 0 0 0 0 1 0 0 0 0 2 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 2 0 0 0 1 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 1 0 0 0 2 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 0 0 0 0 2 0 0 0 , mySum: 4
0 0 0 0 0 0 0 2 1 0 0 0 1 0 0 0 , mySum: 4
0 0 0 0 0 0 0 2 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 1 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 1 2 0 0 0 1 0 0 0 , mySum: 4
0 0 0 0 0 0 0 1 1 0 0 0 2 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 2 0 0 0 2 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 3 0 0 0 1 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 1 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 0 4 0 0 0 1 0 0 0 , mySum: 5
0 0 0 0 0 0 0 2 3 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 0 3 0 0 0 2 0 0 0 , mySum: 5
0 0 0 0 0 0 0 1 3 0 0 0 1 0 0 0 , mySum: 5
0 0 0 0 0 0 0 2 1 0 0 0 2 0 0 0 , mySum: 5
0 0 0 0 0 0 0 1 2 0 0 0 2 0 0 0 , mySum: 5
0 0 0 0 0 0 0 2 2 0 0 0 1 0 0 0 , mySum: 5
0 0 0 0 0 0 0 1 4 0 0 0 1 0 0 0 , mySum: 6
0 0 0 0 0 0 0 2 4 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 2 3 0 0 0 1 0 0 0 , mySum: 6
0 0 0 0 0 0 0 2 2 0 0 0 2 0 0 0 , mySum: 6
0 0 0 0 0 0 0 1 3 0 0 0 2 0 0 0 , mySum: 6
0 0 0 0 0 0 0 0 4 0 0 0 2 0 0 0 , mySum: 6
0 0 0 0 0 0 0 2 3 0 0 0 2 0 0 0 , mySum: 7
0 0 0 0 0 0 0 1 4 0 0 0 2 0 0 0 , mySum: 7
0 0 0 0 0 0 0 2 4 0 0 0 1 0 0 0 , mySum: 7
0 0 0 0 0 0 0 2 4 0 0 0 2 0 0 0 , mySum: 8
thread: 1, NSTable size: 12
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 1, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 1, i: 2, maxN[i].weit: 5, maxN[i].idx: 2, blockDimSize[i]: 5
thread: 1, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 1, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 1, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 1, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 1, i: 7, maxN[i].weit: 2, maxN[i].idx: 7, blockDimSize[i]: 2
thread: 1, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 2, divisor[i]: 5, blockDimSize[i]: 1
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 5, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 7, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, largestBlockVec.elm: 0 0 0 0 0 0 0 2 4 0 0 0 2 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 0 2 0 0 1 1 2 0 2 1 2 2 0 
thread: 1, divisorComp: 0 0 0 0 1 0 0 3 5 1 0 1 3 1 1 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 2 4 0 0 0 2 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 2 4 0 0 2 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 1 0 0 0 , mySum: 3
0 0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 1 1 0 0 0 1 0 0 0 , mySum: 3
0 0 0 0 0 0 0 1 0 0 0 0 2 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 2 0 0 0 1 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 1 0 0 0 2 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 0 0 0 0 2 0 0 0 , mySum: 4
0 0 0 0 0 0 0 2 1 0 0 0 1 0 0 0 , mySum: 4
0 0 0 0 0 0 0 2 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 1 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 1 2 0 0 0 1 0 0 0 , mySum: 4
0 0 0 0 0 0 0 1 1 0 0 0 2 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 2 0 0 0 2 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 3 0 0 0 1 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 1 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 0 4 0 0 0 1 0 0 0 , mySum: 5
0 0 0 0 0 0 0 2 3 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 0 3 0 0 0 2 0 0 0 , mySum: 5
0 0 0 0 0 0 0 1 3 0 0 0 1 0 0 0 , mySum: 5
0 0 0 0 0 0 0 2 1 0 0 0 2 0 0 0 , mySum: 5
0 0 0 0 0 0 0 1 2 0 0 0 2 0 0 0 , mySum: 5
0 0 0 0 0 0 0 2 2 0 0 0 1 0 0 0 , mySum: 5
0 0 0 0 0 0 0 1 4 0 0 0 1 0 0 0 , mySum: 6
0 0 0 0 0 0 0 2 4 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 2 3 0 0 0 1 0 0 0 , mySum: 6
0 0 0 0 0 0 0 2 2 0 0 0 2 0 0 0 , mySum: 6
0 0 0 0 0 0 0 1 3 0 0 0 2 0 0 0 , mySum: 6
0 0 0 0 0 0 0 0 4 0 0 0 2 0 0 0 , mySum: 6
0 0 0 0 0 0 0 2 3 0 0 0 2 0 0 0 , mySum: 7
0 0 0 0 0 0 0 1 4 0 0 0 2 0 0 0 , mySum: 7
0 0 0 0 0 0 0 2 4 0 0 0 1 0 0 0 , mySum: 7
0 0 0 0 0 0 0 2 4 0 0 0 2 0 0 0 , mySum: 8
thread: 0, maxBlockLvlSize: 9
thread: 0, maxInBlockLvlSize: 10
thread: 0, AllTableSize: 1440, maxSubsetsSize: 64
thread: 2, NSTable size: 14
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 2, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 2, i: 2, maxN[i].weit: 5, maxN[i].idx: 2, blockDimSize[i]: 5
thread: 2, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 2, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 2, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 2, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 2, i: 7, maxN[i].weit: 2, maxN[i].idx: 7, blockDimSize[i]: 2
thread: 2, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 2, divisor[i]: 5, blockDimSize[i]: 1
thread: 2, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 5, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 7, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, largestBlockVec.elm: 0 0 0 0 0 0 0 2 4 0 0 0 2 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 0 2 0 0 1 1 2 0 2 1 2 2 0 
thread: 2, divisorComp: 0 0 0 0 1 0 0 3 5 1 0 1 3 1 1 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 0 2 4 0 0 0 2 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 2 4 0 0 2 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 1 0 0 0 , mySum: 3
0 0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 1 1 0 0 0 1 0 0 0 , mySum: 3
0 0 0 0 0 0 0 1 0 0 0 0 2 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 2 0 0 0 1 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 1 0 0 0 2 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 0 0 0 0 2 0 0 0 , mySum: 4
0 0 0 0 0 0 0 2 1 0 0 0 1 0 0 0 , mySum: 4
0 0 0 0 0 0 0 2 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 1 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 1 2 0 0 0 1 0 0 0 , mySum: 4
0 0 0 0 0 0 0 1 1 0 0 0 2 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 2 0 0 0 2 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 3 0 0 0 1 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 1 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 0 4 0 0 0 1 0 0 0 , mySum: 5
0 0 0 0 0 0 0 2 3 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 0 3 0 0 0 2 0 0 0 , mySum: 5
0 0 0 0 0 0 0 1 3 0 0 0 1 0 0 0 , mySum: 5
0 0 0 0 0 0 0 2 1 0 0 0 2 0 0 0 , mySum: 5
0 0 0 0 0 0 0 1 2 0 0 0 2 0 0 0 , mySum: 5
0 0 0 0 0 0 0 2 2 0 0 0 1 0 0 0 , mySum: 5
0 0 0 0 0 0 0 1 4 0 0 0 1 0 0 0 , mySum: 6
0 0 0 0 0 0 0 2 4 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 2 3 0 0 0 1 0 0 0 , mySum: 6
0 0 0 0 0 0 0 2 2 0 0 0 2 0 0 0 , mySum: 6
0 0 0 0 0 0 0 1 3 0 0 0 2 0 0 0 , mySum: 6
0 0 0 0 0 0 0 0 4 0 0 0 2 0 0 0 , mySum: 6
0 0 0 0 0 0 0 2 3 0 0 0 2 0 0 0 , mySum: 7
0 0 0 0 0 0 0 1 4 0 0 0 2 0 0 0 , mySum: 7
0 0 0 0 0 0 0 2 4 0 0 0 1 0 0 0 , mySum: 7
0 0 0 0 0 0 0 2 4 0 0 0 2 0 0 0 , mySum: 8
thread: 1, maxBlockLvlSize: 9
thread: 1, maxInBlockLvlSize: 10
thread: 1, AllTableSize: 1440, maxSubsetsSize: 64
thread: 3, NSTable size: 14
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 3, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 3, i: 2, maxN[i].weit: 5, maxN[i].idx: 2, blockDimSize[i]: 5
thread: 3, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 3, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 3, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 3, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 3, i: 7, maxN[i].weit: 2, maxN[i].idx: 7, blockDimSize[i]: 2
thread: 3, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, i: 2, divisor[i]: 5, blockDimSize[i]: 1
thread: 3, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 5, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 7, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, largestBlockVec.elm: 0 0 0 0 0 0 0 2 4 0 0 0 2 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 0 2 0 0 1 1 2 0 2 1 2 2 0 
thread: 3, divisorComp: 0 0 0 0 1 0 0 3 5 1 0 1 3 1 1 0 
thread: 3, largestBlockVec: 0 0 0 0 0 0 0 2 4 0 0 0 2 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 2 4 0 0 2 0 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 1 0 0 0 , mySum: 3
0 0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 1 1 0 0 0 1 0 0 0 , mySum: 3
0 0 0 0 0 0 0 1 0 0 0 0 2 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 2 0 0 0 1 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 1 0 0 0 2 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 0 0 0 0 2 0 0 0 , mySum: 4
0 0 0 0 0 0 0 2 1 0 0 0 1 0 0 0 , mySum: 4
0 0 0 0 0 0 0 2 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 1 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 1 2 0 0 0 1 0 0 0 , mySum: 4
0 0 0 0 0 0 0 1 1 0 0 0 2 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 2 0 0 0 2 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 3 0 0 0 1 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 1 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 0 4 0 0 0 1 0 0 0 , mySum: 5
0 0 0 0 0 0 0 2 3 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 0 3 0 0 0 2 0 0 0 , mySum: 5
0 0 0 0 0 0 0 1 3 0 0 0 1 0 0 0 , mySum: 5
0 0 0 0 0 0 0 2 1 0 0 0 2 0 0 0 , mySum: 5
0 0 0 0 0 0 0 1 2 0 0 0 2 0 0 0 , mySum: 5
0 0 0 0 0 0 0 2 2 0 0 0 1 0 0 0 , mySum: 5
0 0 0 0 0 0 0 1 4 0 0 0 1 0 0 0 , mySum: 6
0 0 0 0 0 0 0 2 4 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 2 3 0 0 0 1 0 0 0 , mySum: 6
0 0 0 0 0 0 0 2 2 0 0 0 2 0 0 0 , mySum: 6
0 0 0 0 0 0 0 1 3 0 0 0 2 0 0 0 , mySum: 6
0 0 0 0 0 0 0 0 4 0 0 0 2 0 0 0 , mySum: 6
0 0 0 0 0 0 0 2 3 0 0 0 2 0 0 0 , mySum: 7
0 0 0 0 0 0 0 1 4 0 0 0 2 0 0 0 , mySum: 7
0 0 0 0 0 0 0 2 4 0 0 0 1 0 0 0 , mySum: 7
0 0 0 0 0 0 0 2 4 0 0 0 2 0 0 0 , mySum: 8
thread: 2, maxBlockLvlSize: 9
thread: 2, maxInBlockLvlSize: 10
thread: 2, AllTableSize: 1440, maxSubsetsSize: 64
thread: 3, maxBlockLvlSize: 9
thread: 3, maxInBlockLvlSize: 10
thread: 3, AllTableSize: 1440, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 1 0 0 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 1 0 0 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 1 0 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 1 0 0 1 0 0 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 0 2 0 0 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 1 1 0 0 0 0 0 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 0 1 0 0 0 1 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 mySum: 2
thread: 0, blockNoZero[8]: 0 0 0 0 0 2 0 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[9]: 0 2 0 0 0 0 0 0 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 0 2 0 0 0 0 1 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 0 2 0 0 0 1 0 0 
thread: 0, allBlocks[11]: 0 0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 0 1 2 0 0 0 0 0 
thread: 0, allBlocks[12]: 0 0 0 0 0 0 0 1 1 0 0 0 1 0 0 0 mySum: 3
thread: 0, blockNoZero[12]: 0 1 1 0 0 1 0 0 
thread: 0, allBlocks[13]: 0 0 0 0 0 0 0 1 0 0 0 0 2 0 0 0 mySum: 3
thread: 0, blockNoZero[13]: 0 1 0 0 0 2 0 0 
thread: 0, allBlocks[14]: 0 0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[14]: 0 2 1 0 0 0 0 0 
thread: 0, allBlocks[15]: 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[15]: 0 0 3 0 0 0 0 0 
thread: 0, allBlocks[16]: 0 0 0 0 0 0 0 0 2 0 0 0 1 0 0 0 mySum: 3
thread: 0, blockNoZero[16]: 0 0 2 0 0 1 0 0 
thread: 0, allBlocks[17]: 0 0 0 0 0 0 0 0 1 0 0 0 2 0 0 0 mySum: 3
thread: 0, blockNoZero[17]: 0 0 1 0 0 2 0 0 
thread: 0, allBlocks[18]: 0 0 0 0 0 0 0 2 0 0 0 0 2 0 0 0 mySum: 4
thread: 0, blockNoZero[18]: 0 2 0 0 0 2 0 0 
thread: 0, allBlocks[19]: 0 0 0 0 0 0 0 2 1 0 0 0 1 0 0 0 mySum: 4
thread: 0, blockNoZero[19]: 0 2 1 0 0 1 0 0 
thread: 0, allBlocks[20]: 0 0 0 0 0 0 0 2 2 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[20]: 0 2 2 0 0 0 0 0 
thread: 0, allBlocks[21]: 0 0 0 0 0 0 0 1 3 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[21]: 0 1 3 0 0 0 0 0 
thread: 0, allBlocks[22]: 0 0 0 0 0 0 0 1 2 0 0 0 1 0 0 0 mySum: 4
thread: 0, blockNoZero[22]: 0 1 2 0 0 1 0 0 
thread: 0, allBlocks[23]: 0 0 0 0 0 0 0 1 1 0 0 0 2 0 0 0 mySum: 4
thread: 0, blockNoZero[23]: 0 1 1 0 0 2 0 0 
thread: 0, allBlocks[24]: 0 0 0 0 0 0 0 0 2 0 0 0 2 0 0 0 mySum: 4
thread: 0, blockNoZero[24]: 0 0 2 0 0 2 0 0 
thread: 0, allBlocks[25]: 0 0 0 0 0 0 0 0 3 0 0 0 1 0 0 0 mySum: 4
thread: 0, blockNoZero[25]: 0 0 3 0 0 1 0 0 
thread: 0, allBlocks[26]: 0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[26]: 0 0 4 0 0 0 0 0 
thread: 0, allBlocks[27]: 0 0 0 0 0 0 0 1 4 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[27]: 0 1 4 0 0 0 0 0 
thread: 0, allBlocks[28]: 0 0 0 0 0 0 0 0 4 0 0 0 1 0 0 0 mySum: 5
thread: 0, blockNoZero[28]: 0 0 4 0 0 1 0 0 
thread: 0, allBlocks[29]: 0 0 0 0 0 0 0 2 3 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[29]: 0 2 3 0 0 0 0 0 
thread: 0, allBlocks[30]: 0 0 0 0 0 0 0 0 3 0 0 0 2 0 0 0 mySum: 5
thread: 0, blockNoZero[30]: 0 0 3 0 0 2 0 0 
thread: 0, allBlocks[31]: 0 0 0 0 0 0 0 1 3 0 0 0 1 0 0 0 mySum: 5
thread: 0, blockNoZero[31]: 0 1 3 0 0 1 0 0 
thread: 0, allBlocks[32]: 0 0 0 0 0 0 0 2 1 0 0 0 2 0 0 0 mySum: 5
thread: 0, blockNoZero[32]: 0 2 1 0 0 2 0 0 
thread: 0, allBlocks[33]: 0 0 0 0 0 0 0 1 2 0 0 0 2 0 0 0 mySum: 5
thread: 0, blockNoZero[33]: 0 1 2 0 0 2 0 0 
thread: 0, allBlocks[34]: 0 0 0 0 0 0 0 2 2 0 0 0 1 0 0 0 mySum: 5
thread: 0, blockNoZero[34]: 0 2 2 0 0 1 0 0 
thread: 0, allBlocks[35]: 0 0 0 0 0 0 0 1 4 0 0 0 1 0 0 0 mySum: 6
thread: 0, blockNoZero[35]: 0 1 4 0 0 1 0 0 
thread: 0, allBlocks[36]: 0 0 0 0 0 0 0 2 4 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[36]: 0 2 4 0 0 0 0 0 
thread: 0, allBlocks[37]: 0 0 0 0 0 0 0 2 3 0 0 0 1 0 0 0 mySum: 6
thread: 0, blockNoZero[37]: 0 2 3 0 0 1 0 0 
thread: 0, allBlocks[38]: 0 0 0 0 0 0 0 2 2 0 0 0 2 0 0 0 mySum: 6
thread: 0, blockNoZero[38]: 0 2 2 0 0 2 0 0 
thread: 0, allBlocks[39]: 0 0 0 0 0 0 0 1 3 0 0 0 2 0 0 0 mySum: 6
thread: 0, blockNoZero[39]: 0 1 3 0 0 2 0 0 
thread: 0, allBlocks[40]: 0 0 0 0 0 0 0 0 4 0 0 0 2 0 0 0 mySum: 6
thread: 0, blockNoZero[40]: 0 0 4 0 0 2 0 0 
thread: 0, allBlocks[41]: 0 0 0 0 0 0 0 2 3 0 0 0 2 0 0 0 mySum: 7
thread: 0, blockNoZero[41]: 0 2 3 0 0 2 0 0 
thread: 0, allBlocks[42]: 0 0 0 0 0 0 0 1 4 0 0 0 2 0 0 0 mySum: 7
thread: 0, blockNoZero[42]: 0 1 4 0 0 2 0 0 
thread: 0, allBlocks[43]: 0 0 0 0 0 0 0 2 4 0 0 0 1 0 0 0 mySum: 7
thread: 0, blockNoZero[43]: 0 2 4 0 0 1 0 0 
thread: 0, allBlocks[44]: 0 0 0 0 0 0 0 2 4 0 0 0 2 0 0 0 mySum: 8
thread: 0, blockNoZero[44]: 0 2 4 0 0 2 0 0 
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 11
copy the latest feasible solution to instance takes time: 5e-06
thread: 1, sOPT: 11
Thread: 0, gpu_BlockDP is done.
Thread: 3, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 5e-06
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 10
thread: 0, sOPT: 11
copy the latest feasible solution to instance takes time: 0.06623
thread: 2, sOPT: 10
copy the latest feasible solution to instance takes time: 0.060063
thread: 3, sOPT: 10
Thread: 3, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 1, MlBk function is done, and BkID for all processes are collected.
0, MlBk function is done, and BkID for all processes are collected.
Thread: 2, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: 1 1 -1 -1
Pick seg 2 for next iteration where LB: 102, UB: 105
BKID: 0, LB: 102, UB: 105, OPT: 10
Dynamic Programming Runtime: 0.850215
Execution time between LB and UB is: 0
By far, all LB UB calculation runtime: 1
Iteration: 3, UB: 105, LB: 102start at time: 1505254843
thread: 0, MlBk is called with LB: 102, UB: 103
 thread: 0, LongJobs.size() 13
thread: thread: 2, MlBk is called with LB: 1104, UB: , MlBk is called with LB: 103105, UB: 104

 thread: 2, LongJobs.size() 13
 thread: 1, LongJobs.size() 13
thread: 1, NSTable size: 14
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0thread: 
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 1
2thread: 1, i: , NSTable size: 5, alltableelemets[maxindex].elm[i]: 140
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0

thread: 2thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: , i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 2
1thread: 2, i: , i: 0, maxN[i].weit: 28, maxN[i].idx: 0, alltableelemets[maxindex].elm[i]: , blockDimSize[i]: 4
2thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0
, maxN[i].weit: 2thread: 1, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 1, i: 2, maxN[i].weit: 5, maxN[i].idx: 0, blockDimSize[i]: 2
, maxN[i].idx: thread: 2, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 2, i: 2, maxN[i].weit: 5, maxN[i].idx: 2, blockDimSize[i]: 5
thread: 2, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 2, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: thread: 2, i: 05, maxN[i].weit: 3, NSTable size: 214
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 1, maxN[i].idx: 
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 5, blockDimSize[i]: 3, blockDimSize[i]: 
13thread: 2, i: , alltableelemets[maxindex].elm[i]: 6, maxN[i].weit: 25
thread: 1, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 1, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 1, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 1, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 1, i: 7, maxN[i].weit: 2, maxN[i].idx: 7, blockDimSize[i]: 2
thread: 1, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 2, divisor[i]: 5, blockDimSize[i]: 1
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 5, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 7, divisor[i]: 1, blockDimSize[i]: 2
, maxN[i].idx: thread: 1, largestBlockVec.elm: 0 0 0 0 0 0 0 2 64 0 , blockDimSize[i]: 02 0
 thread: 2, i: 7, maxN[i].weit: 2, maxN[i].idx: 7, blockDimSize[i]: 2
2 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 0 2 0 0 1 1 2 0 thread: 2 1 2 22, i:  0 0
thread: 1, divisorComp: 0 0 0 0 1 0 0 3 5 1 0 1 3 1, divisor[i]:  11 , blockDimSize[i]: 0 2
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 2 4 0 0 0 2 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 2 4 0 0 2 0 0 

thread: 2, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 2, divisor[i]: 5, blockDimSize[i]: 1
thread: 2, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 5, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 7, divisor[i]: 1, blockDimSize[i]: 2
1thread: 2, largestBlockVec.elm: 0 
0thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 thread: 0 0 0 2 4 0 00 , i:  014 , alltableelemets[maxindex].elm[i]: 02 , mySum: 1
1
0 0thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread:  0 00 , i: 0  0
thread: 2, blockDimSizeComp: 0 0 0 0 2 0 0 10 0 0 0  1 02 0  , maxN[i].weit: 0 2 1 2 2 0 
thread: 2, divisorComp: 0 0 0 0 1 20 0 3 5 1 0 1 3 1 1 0, maxN[i].idx:  
thread: 2, largestBlockVec: 0 0 0 0 0 0 0 20 4 0 0 0 2 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 2 4 0 0 2 0 0 
1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 1 0 0 0 1 0 0, blockDimSize[i]:  0 , mySum: 22
0 0 0 0 0 0 0 0 2 0 0 0 0 
0 0 thread: 0 0, mySum: , i: 2
0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 1, maxN[i].weit: 3, maxN[i].idx: 1, mySum: , blockDimSize[i]: 2
30 0 0 0 0 0 0 1 0 0 0 0 1 0
 0 thread: thread: 20, i: , allBlocks: 00 20 , maxN[i].weit: 05, maxN[i].idx:   0 2, mySum: 20, blockDimSize[i]:  0
50 0 0 0 0 0 0 0 0 0 0 0 2  0 0 0 , mySum: 2

thread: 0, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 0, i: 4, maxN[i].weit: 2, maxN[i].idx: 0 0 0 0 0 0 0 0 0 0 , mySum: 00
0 0 0 0 0 0 0 0 0 0 0 0  0 0 0 0 0 0 2 0 0 0 0 0 4, blockDimSize[i]: 2
thread: 0, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 0, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 0, i: 7, maxN[i].weit: 2, maxN[i].idx: 7, blockDimSize[i]: 2
1thread: 0, i: 0, divisor[i]: 1, blockDimSize[i]: 2
0 0 0 , mySum: 2thread: 
0, i: 0 0 0 0 0 0 0 2 0 0 0 0 1 01, divisor[i]:  03 , blockDimSize[i]: 10
  , mySum: 3
0 0 0 0 0 0 0 1 2 0 00 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 1 1 0 0 0 1 0  0 00  , mySum: 10
 0 0 0 0 0 0 0 1 0 0 0 0 0thread: 0, i: 2, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 5, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 7, divisor[i]: 1, blockDimSize[i]: 2
 thread: 0, largestBlockVec.elm: 0 00  0 0 0, mySum: 3
0 0 0 0 0 0 0 1 0 0 0 0 2 0 0  00  , mySum: 3
0 0 0 0 0 0 0 2 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 1 0 0 0 0 00 0 0 , mySum: 3
0 0 0 0 0 0 0 0 3 0 0 0 0 0  0 0 , mySum: 1
0 0 0 0 0 0 0 0 1 0 0 0 1 00 0 , mySum: 3
0 0 0 0 0 0 0 0 2 0 0 0 1 0  0 0 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 1 0 0 0 2 0 00 0  , mySum: 020
0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 2  4 0 0 0 2 0, mySum:  30
 0 0 0 0 0 0 0 2 0 0 0 0 2  0 00 0  00 , mySum: 2
0 0 0 0 0 0 0 1 0 0 0 0 1 
thread: 0, blockDimSizeComp: 0 0 0 0 2 0 0 1 1 0 0  02  0, mySum: 2 02 1 2 2 0 
thread: 0, divisorComp: 0 0 0 0 1 0 0 3  , mySum: 4
0 0 0 0 0 0 0 2 1 0 05 1 0 1  30  11  10 0 0 
 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 2 42 0  00  0, mySum: 0  , mySum: 042 

0 0 0 0 0 0 0 2 0 0 0 0 0 02 0  0 00  0 0 0 0 0 0 0 2 2 0 0 00 , mySum:  20
0 0 0 0 0 0 0 2 0 0 0 0 1 0 0  00  0 0, mySum:  3
, mySum: 4
0 0 0 0 0 0 0 1 3 0 0 0 0 0 00 0 0 0 0 0 0 1 2 0 
0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 1 1 0 0 0 1 thread: 0, largestNoZeroBlockVec: 0 2 4 0 0 2 0 0 00 
 0 , mySum: 3
0 0 0 0 0 0 0 1 0 0 0 0 2 0 , mySum: 4
0 0 0 0 0 0 0 1 2 0 0 0 1 0 0 0 , mySum: 3 
0 0 0 0 0 0 0 0 2 1 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 1 1 0 0 0 2 0 0 0 , mySum: 30
 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 2 0 0 0 2 0thread: 0, allBlocks: 0 0 0 0 0 0 0  00 0 00  0, mySum: 3  0 , mySum: 0 04 0 

00 0 0 0 0 0 0 0 2 0 0 0 1 0 0 0 0 0 0 0 0 3 0 0 0 1 0  0 000   00 , mySum: 0 0 , mySum: 3
0 0 0 0 0 0 0 0 1 0 0 0 2 0  , mySum: 04 
0 , mySum: 00 0 0 0 0 0 0 0 4 0 0 0 0 0 3
0 0 0 0 0 0 0 2 0 0 0 0 2 00  0 0, mySum: 4 
0 0 0 0 0 0 0 0 1 4 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0  01  00  , mySum: 5
0 0 0 0 0 0 0 0 4 0 0 0 , mySum: 1
00 0 0 0 0 0 0 1 0 0 0 0 0 0 0  1 0 00 , mySum: 0 , mySum: 5
0 0 0 0 0 0 0 2 3 0 0 0 0 4
0 0 0 0 0 0 0 2 1 0 0 0 1 00 0  00 0   , mySum: 5, mySum: 
0 0 0 0 0 0 0 0 3 0 0 0 2 0 0 0 4
0 0 0 0 0 0 0 2 2 0 0 0 0 0, mySum: 5 
00 0 0 0 0 0 0 1 3 0 0 0 1 0 0 , mySum: 4
0 0 0 0 0 0 0 1 3 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 2 1 0 0 0 2 0 0 0  0 0 0, mySum: 4
, mySum: 5
0 0 0 0 0 0 0 1 2 0 0 0 2 0 0 0 0 0 0 0 0 1 2 0 0  , mySum: 1
0 0 0 0 0 0 0 0 1 0 0 0 00  10 0  00 0 0 , mySum: 5
0 0 0 0 0 0 0 2 2 0 0 0 1 , mySum: 1
0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 00 0  0  0 0 , mySum: 4
0 0 0 0 0 0 0 1 1 0 0 0 2 , mySum: 5
0 0 0 0 0 0 0 1 4 0 0 0 1 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 2 0 0 0 2 00 0 0 , mySum: 4
, mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 00 0 0 , mySum: 2
 0 , mySum: 6
0 0 0 0 0 0 0 2 4 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0  0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 0 0 0 0 01 0 0 0 , mySum: 2
0 0 0 , mySum: 06 0
 0 0 0 0 0 0 0 2 3 0 0 0 1 0 0 0  00 0  0 00, mySum:  6
0 0 0 0 0 0 0 2 2 0 0 0 2  0 3 0 0 0 1 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 1 3 0 0 0 2 00 0 0 , mySum: 6
0 0 0 0 00 0  0 0  00 0 , mySum:  00 0 0 0 4 0 0 0 2 0 0 0 , mySum: 6 
0 0 0 0 0 0 0 2 3 0 0 0 2 0 2 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 00 0 0 , mySum: 7
0 0 0 0 0 0 0 1 4 0 0 0 2 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 1 0  0 0 , mySum: 3
4
0 0 0 0 0 0 0 1 4 0 0 0 0 0 00 0  000  , mySum: 5
00 0 0 0 0 0 0 0 4 0 0 0 1  0 0 0 0 1 2 0 0 0 0 0 0  0 , mySum: 3
0 0 0 0 0 0 0 1 1 0 0 0 , mySum: 7
0 0 0 0 0 0 0 2 4 0 0 0 1 0 1 00  00  0 , mySum: 3
0 0 0 0 0 0 0 1 0 0 0 0 2 0, mySum: 7
0 0 0 0 0 0 0 2 4 0 0 0 2 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 , mySum: 8
 0 0 , mySum: 3
0 0 0 0 0 0 0 0 3 0 0 0 00 0 0 , mySum: 5 
00 0 0 0 0 0 0 2 3 0 0 0 0  0 0 00 0  , mySum: , mySum: 35

0 0 0 0 0 0 0 0 3 0 0 0 20 0 0 0 0 0 0 0 2 0 0 0  1 00  0 00 0  , mySum: 5, mySum: 
0 0 0 0 0 0 0 1 3 0 0 0 1 0 30 0
 0 0 0 0 0 0 0 0 1 0 0 0 2 0, mySum:  0 50
 , mySum: 0 0 0 0 0 0 0 2 1 0 0 0 2 0 03 0 
, mySum: 0 0 0 0 0 0 0 2 0 0 0 0 25
0 0 0 0 0 0 0 1 2 0 0 0 2  0 0 00 0  , mySum: 50 
, mySum: 4
0 0 0 0 0 0 0 2 2 0 0 0 10 0 0 0 0 0 0 2 1 0 0 0  1 00  0 00 0  , mySum: , mySum: 45

0 0 0 0 0 0 0 1 4 0 0 0 1 0 00 0 0 0 0 0 0 2 2 0 0 0  0 0 00  0, mySum: 6 
0 0 0 0 0 0 0 2 4 0 0 0 0 0 0 , mySum: 0 , mySum: 64

0 0 0 0 0 0 0 2 3 0 0 0 1 00 0 0 0 0 0 0 1 3 0 0  0 0 , mySum: 6
00 0 0 0 0 0 0 2 2 0 0 0 2 0  0 00  , mySum: 6
0 0 0 0 0 0 0 0 1 3 0 0 0 20 0 , mySum: 4 
0 0 0 0 0 0 0 0 1 2 0 0 0 1 00 0  0 0, mySum:  4, mySum: 6

0 0 0 0 0 0 0 0 4 0 0 0 2 0 00 0 0 0 0 0 0 1 1 0 0 0  2 0 00  , mySum: 06
 0 0 0 0 0 0 0 2 3 0 0 0 2 0 0, mySum:  0 , mySum: 47
0 0 0 0 0 0 0 1 4 0 0 0 2 
0 0 0 0 0 0 0 0 0 2 0 0 0 20 0  0 0 0, mySum:  4
, mySum: 0 0 0 0 0 0 0 0 3 0 0 0 1 70 0
 0 0 0 0 0 0 0 2 4 0 0 0 1 00 0  0 , mySum: , mySum: 7
0 0 0 0 0 0 0 2 4 0 0 0 2 0 40 0 , mySum: 
8
0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 1 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 0 4 0 0 0 1 0 0 0 , mySum: 5
0 0 0 0 0 0 0 2 3 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 0 3 0 0 0 2 0 0 0 , mySum: 5
0 0 0 0 0 0 0 1 3 0 0 0 1 0 0 0 , mySum: 5
0 0 0 0 0 0 0 2 1 0 0 0 2 0 0 0 , mySum: 5
0 0 0 0 0 0 0 1 2 0 0 0 2 0 0 0 , mySum: 5
0 0 0 0 0 0 0 2 2 0 0 0 1 0 0 0 , mySum: 5
0 0 0 0 0 0 0 1 4 0 0 0 1 0 0 0 , mySum: 6
0 0 0 0 0 0 0 2 4 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 2 3 0 0 0 1 0 0 0 , mySum: 6
0 0 0 0 0 0 0 2 2 0 0 0 2 0 0 0 , mySum: 6
0 0 0 0 0 0 0 1 3 0 0 0 2 0 0 0 , mySum: 6
0 0 0 0 0 0 0 0 4 0 0 0 2 0 0 0 , mySum: 6
0 0 0 0 0 0 0 2 3 0 0 0 2 0 0 0 , mySum: 7
0 0 0 0 0 0 0 1 4 0 0 0 2 0 0 0 , mySum: 7
0 0 0 0 0 0 0 2 4 0 0 0 1 0 0 0 , mySum: 7
0 0 0 0 0 0 0 2 4 0 0 0 2 0 0 0 , mySum: 8
thread: 1, maxBlockLvlSize: 9
thread: 1, maxInBlockLvlSize: 10
thread: 1, AllTableSize: 1440, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 9
thread: 0, maxInBlockLvlSize: 10
thread: 0, AllTableSize: 1440, maxSubsetsSize: 64
thread: 2, maxBlockLvlSize: 9
thread: 2, maxInBlockLvlSize: 10
thread: 2, AllTableSize: 1440, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 1 0 0 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 1 0 0 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 1 0 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 1 0 0 1 0 0 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 0 2 0 0 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 1 1 0 0 0 0 0 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 0 1 0 0 0 1 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 mySum: 2
thread: 0, blockNoZero[8]: 0 0 0 0 0 2 0 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[9]: 0 2 0 0 0 0 0 0 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 0 2 0 0 0 0 1 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 0 2 0 0 0 1 0 0 
thread: 0, allBlocks[11]: 0 0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 0 1 2 0 0 0 0 0 
thread: 0, allBlocks[12]: 0 0 0 0 0 0 0 1 1 0 0 0 1 0 0 0 mySum: 3
thread: 0, blockNoZero[12]: 0 1 1 0 0 1 0 0 
thread: 0, allBlocks[13]: 0 0 0 0 0 0 0 1 0 0 0 0 2 0 0 0 mySum: 3
thread: 0, blockNoZero[13]: 0 1 0 0 0 2 0 0 
thread: 0, allBlocks[14]: 0 0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[14]: 0 2 1 0 0 0 0 0 
thread: 0, allBlocks[15]: 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[15]: 0 0 3 0 0 0 0 0 
thread: 0, allBlocks[16]: 0 0 0 0 0 0 0 0 2 0 0 0 1 0 0 0 mySum: 3
thread: 0, blockNoZero[16]: 0 0 2 0 0 1 0 0 
thread: 0, allBlocks[17]: 0 0 0 0 0 0 0 0 1 0 0 0 2 0 0 0 mySum: 3
thread: 0, blockNoZero[17]: 0 0 1 0 0 2 0 0 
thread: 0, allBlocks[18]: 0 0 0 0 0 0 0 2 0 0 0 0 2 0 0 0 mySum: 4
thread: 0, blockNoZero[18]: 0 2 0 0 0 2 0 0 
thread: 0, allBlocks[19]: 0 0 0 0 0 0 0 2 1 0 0 0 1 0 0 0 mySum: 4
thread: 0, blockNoZero[19]: 0 2 1 0 0 1 0 0 
thread: 0, allBlocks[20]: 0 0 0 0 0 0 0 2 2 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[20]: 0 2 2 0 0 0 0 0 
thread: 0, allBlocks[21]: 0 0 0 0 0 0 0 1 3 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[21]: 0 1 3 0 0 0 0 0 
thread: 0, allBlocks[22]: 0 0 0 0 0 0 0 1 2 0 0 0 1 0 0 0 mySum: 4
thread: 0, blockNoZero[22]: 0 1 2 0 0 1 0 0 
thread: 0, allBlocks[23]: 0 0 0 0 0 0 0 1 1 0 0 0 2 0 0 0 mySum: 4
thread: 0, blockNoZero[23]: 0 1 1 0 0 2 0 0 
thread: 0, allBlocks[24]: 0 0 0 0 0 0 0 0 2 0 0 0 2 0 0 0 mySum: 4
thread: 0, blockNoZero[24]: 0 0 2 0 0 2 0 0 
thread: 0, allBlocks[25]: 0 0 0 0 0 0 0 0 3 0 0 0 1 0 0 0 mySum: 4
thread: 0, blockNoZero[25]: 0 0 3 0 0 1 0 0 
thread: 0, allBlocks[26]: 0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[26]: 0 0 4 0 0 0 0 0 
thread: 0, allBlocks[27]: 0 0 0 0 0 0 0 1 4 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[27]: 0 1 4 0 0 0 0 0 
thread: 0, allBlocks[28]: 0 0 0 0 0 0 0 0 4 0 0 0 1 0 0 0 mySum: 5
thread: 0, blockNoZero[28]: 0 0 4 0 0 1 0 0 
thread: 0, allBlocks[29]: 0 0 0 0 0 0 0 2 3 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[29]: 0 2 3 0 0 0 0 0 
thread: 0, allBlocks[30]: 0 0 0 0 0 0 0 0 3 0 0 0 2 0 0 0 mySum: 5
thread: 0, blockNoZero[30]: 0 0 3 0 0 2 0 0 
thread: 0, allBlocks[31]: 0 0 0 0 0 0 0 1 3 0 0 0 1 0 0 0 mySum: 5
thread: 0, blockNoZero[31]: 0 1 3 0 0 1 0 0 
thread: 0, allBlocks[32]: 0 0 0 0 0 0 0 2 1 0 0 0 2 0 0 0 mySum: 5
thread: 0, blockNoZero[32]: 0 2 1 0 0 2 0 0 
thread: 0, allBlocks[33]: 0 0 0 0 0 0 0 1 2 0 0 0 2 0 0 0 mySum: 5
thread: 0, blockNoZero[33]: 0 1 2 0 0 2 0 0 
thread: 0, allBlocks[34]: 0 0 0 0 0 0 0 2 2 0 0 0 1 0 0 0 mySum: 5
thread: 0, blockNoZero[34]: 0 2 2 0 0 1 0 0 
thread: 0, allBlocks[35]: 0 0 0 0 0 0 0 1 4 0 0 0 1 0 0 0 mySum: 6
thread: 0, blockNoZero[35]: 0 1 4 0 0 1 0 0 
thread: 0, allBlocks[36]: 0 0 0 0 0 0 0 2 4 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[36]: 0 2 4 0 0 0 0 0 
thread: 0, allBlocks[37]: 0 0 0 0 0 0 0 2 3 0 0 0 1 0 0 0 mySum: 6
thread: 0, blockNoZero[37]: 0 2 3 0 0 1 0 0 
thread: 0, allBlocks[38]: 0 0 0 0 0 0 0 2 2 0 0 0 2 0 0 0 mySum: 6
thread: 0, blockNoZero[38]: 0 2 2 0 0 2 0 0 
thread: 0, allBlocks[39]: 0 0 0 0 0 0 0 1 3 0 0 0 2 0 0 0 mySum: 6
thread: 0, blockNoZero[39]: 0 1 3 0 0 2 0 0 
thread: 0, allBlocks[40]: 0 0 0 0 0 0 0 0 4 0 0 0 2 0 0 0 mySum: 6
thread: 0, blockNoZero[40]: 0 0 4 0 0 2 0 0 
thread: 0, allBlocks[41]: 0 0 0 0 0 0 0 2 3 0 0 0 2 0 0 0 mySum: 7
thread: 0, blockNoZero[41]: 0 2 3 0 0 2 0 0 
thread: 0, allBlocks[42]: 0 0 0 0 0 0 0 1 4 0 0 0 2 0 0 0 mySum: 7
thread: 0, blockNoZero[42]: 0 1 4 0 0 2 0 0 
thread: 0, allBlocks[43]: 0 0 0 0 0 0 0 2 4 0 0 0 1 0 0 0 mySum: 7
thread: 0, blockNoZero[43]: 0 2 4 0 0 1 0 0 
thread: 0, allBlocks[44]: 0 0 0 0 0 0 0 2 4 0 0 0 2 0 0 0 mySum: 8
thread: 0, blockNoZero[44]: 0 2 4 0 0 2 0 0 
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.10011
thread: 2, sOPT: 10
copy the latest feasible solution to instance takes time: 0.118912
thread: 1, sOPT: 10
copy the latest feasible solution to instance takes time: 0.074354
thread: 0, sOPT: 10
BKID: 0, LB: 102, UB: 102, OPT: 10
Dynamic Programming Runtime: 0.628552
Execution time between LB and UB is: 0
By far, all LB UB calculation runtime: 1
********************************************************
Total execution on UB and LB is: 1
OUT of Bk while loop  
UB    102
LB    102
T1    102
T2    102
OPT   10
nMachines   10
BkID	0
AllProbData.size()    3
ck :   2
AllProbData[ck].Ttable    102
ck :   1
AllProbData[ck].Ttable    104
ck :   0
AllProbData[ck].Ttable    108
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan110
Main Scheduling is Done
File 3-13 is Done.
******************************
Reading File...
File 3-14 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 200, LB: 101start at time: 1505254843
thread: 0, MlBk is called with LB: 101, UB: 126
thread: 3, MlBk is called with LB: 176, UB: 201
 thread: 0, LongJobs.size() 13
 thread: 3, LongJobs.size() 11
thread: 2, MlBk is called with LB: 151, UB: 176
thread: 1, MlBk is called with LB: 126, UB: 151
 thread: 2, LongJobs.size() 11
 thread: 1, LongJobs.size() 13
thread: 3, NSTable size: 36
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: thread: 32, NSTable size: 24, i: 10, alltableelemets[maxindex].elm[i]: 0

thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
, alltableelemets[maxindex].elm[i]: thread: 3, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 03

thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 2, maxN[i].idx: thread: 3, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 3, i: 2, maxN[i].weit: 4, maxN[i].idx: 2, blockDimSize[i]: 4
0thread: 3, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 3, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
, blockDimSize[i]: thread: 3, i: 5, maxN[i].weit: 2, maxN[i].idx: 25
, blockDimSize[i]: 2
thread: 2, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 2, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 2, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: thread: 3, i: 0, divisor[i]: 32, blockDimSize[i]: , i: 41, maxN[i].weit: 
4thread: 3, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 2, divisor[i]: 2, blockDimSize[i]: 2
thread: 3, i: 3, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 3, i: 5, divisor[i]: 1, blockDimSize[i]: 2
, maxN[i].idx: 4, blockDimSize[i]: 4
thread: 2, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 3thread: , largestBlockVec.elm: 2, i: 0, divisor[i]: 01, blockDimSize[i]: 2 
thread: 2, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 3, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, i: 4, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, i: 5, divisor[i]: 3, blockDimSize[i]: 1
0 thread: 20, largestBlockVec.elm:  02  0 0 1 2 0 00  0 0 00  0 01  0 10  0 0 2 
0 thread: 3, blockDimSizeComp: 0 0 0 1 2 2 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 2 2 2 2 2 1 3 2 0 0 10 0  0 00  00  0 00  0 0 

thread: 2, divisorComp: 0 0 0 1 1 1 2 2 3 thread: 3, divisorComp: 0 0 0 3 1 2 03 1  1 00  0 00  00  00  00  00  
thread: 3, largestBlockVec: 0 0 0 2 0 1 
2 0thread: 2, largestBlockVec: 0 0 0 0 0 0 1 1 2  00  0 0 00  00  00  0 00  0
thread: 2, largestNoZeroBlockVec: 0 0 0 1 1 2 
 0 
thread: 3, largestNoZeroBlockVec: 2 0 1 2 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0thread:  31, allBlocks:  0 10  00  0 00 0  00  0 00  0 0 0, mySum: 2
 0 0 0 0 0 0 1 0 1 00  0 00  0 00  00 0 , mySum:  20
0 0 0 0 0 0 1 1 0 0 0 0 0  0 0 00 , mySum:  2
0 0 0 0 0 0 0 1 2 0 0 0 0 00 0  0 , mySum: , mySum: 3
0 0 0 0 0 0 1 0 2 0 0 0 0
0 0 0 0 0 0 1 0 00 0  0 00 0  00  0 , mySum: 03 
00 0 0 0 0 0 1 1 1 0 0 0 0  , mySum: 1
0 0 0 0 0 1 0 0 0 00 0  00  00 0  0, mySum:  30 , mySum: 
10 0 0 0 0 0 1 1 2 0 0 0 0 0 0 0
 , mySum: 0 0 0 1 0 0 0 0 0 4
0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 2 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 0 1 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 2 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 2 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 2 0 1 2 0 0 0 0 0 0 0 0 0 , mySum: 5
thread: 2, maxBlockLvlSize: 4
thread: 2, maxInBlockLvlSize: 10
thread: 2, AllTableSize: 384, maxSubsetsSize: 64
thread: 1, NSTable size: 26
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 1, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 1, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 1, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 1, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 1, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 1, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 1, i: 0, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 3, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 5, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, largestBlockVec.elm: 0 0 0 2 0 2 0 0 1 0 0 0 0 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 1 0 1 2 0 2 3 3 2 0 0 0 0 
thread: 1, divisorComp: 0 0 0 3 0 3 1 0 2 1 1 1 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 2 0 2 0 0 1 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 2 2 0 1 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 2 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 0 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 0 2 0 0 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 2 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 2 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 2 0 2 0 0 1 0 0 0 0 0 0 0 , mySum: 5
thread: 3, maxBlockLvlSize: 5
thread: 3, maxInBlockLvlSize: 7
thread: 3, AllTableSize: 432, maxSubsetsSize: 64
thread: 0, NSTable size: 19
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 0, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 0, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 0, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 0, i: 4, maxN[i].weit: 4, maxN[i].idx: 4, blockDimSize[i]: 4
thread: 0, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 0, i: 6, maxN[i].weit: 3, maxN[i].idx: 6, blockDimSize[i]: 3
thread: 0, i: 7, maxN[i].weit: 2, maxN[i].idx: 7, blockDimSize[i]: 2
thread: 0, i: 0, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 5, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 6, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 7, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, largestBlockVec.elm: 0 0 0 0 2 0 0 0 0 1 2 0 0 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 0 1 2 2 2 0 2 1 3 0 2 0 0 
thread: 0, divisorComp: 0 0 0 0 3 1 1 1 0 2 3 1 0 1 0 0 
thread: 0, largestBlockVec: 0 0 0 0 2 0 0 0 0 1 2 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 2 0 0 0 1 2 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 1 2 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 0 0 0 2 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 0 0 1 1 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 0 0 0 0 1 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 0 0 0 1 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 0 0 1 2 0 0 0 0 0 , mySum: 4
0 0 0 0 2 0 0 0 0 0 2 0 0 0 0 0 , mySum: 4
0 0 0 0 2 0 0 0 0 1 1 0 0 0 0 0 , mySum: 4
0 0 0 0 2 0 0 0 0 1 2 0 0 0 0 0 , mySum: 5
thread: 1, maxBlockLvlSize: 5
thread: 1, maxInBlockLvlSize: 18
thread: 1, AllTableSize: 1296, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 5
thread: 0, maxInBlockLvlSize: 25
thread: 0, AllTableSize: 1728, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 1 0 0 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 0 0 1 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 1 0 0 0 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 1 0 0 0 1 0 0 0 
Thread: 2, gpu_BlockDP is done.
thread: 0, allBlocks[5]: 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 2 0 0 0 0 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 1 0 0 0 0 1 0 0 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 0 0 0 0 1 1 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[8]: 0 0 0 0 0 2 0 0 
Thread: 3, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 5
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 5
copy the latest feasible solution to instance takes time: 0.026344
thread: 2, sOPT: 5
copy the latest feasible solution to instance takes time: 0.038243
thread: 3, sOPT: 5
thread: 0, allBlocks[9]: 0 0 0 0 0 0 0 0 0 1 2 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[9]: 0 0 0 0 1 2 0 0 
thread: 0, allBlocks[10]: 0 0 0 0 1 0 0 0 0 0 2 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 1 0 0 0 0 2 0 0 
thread: 0, allBlocks[11]: 0 0 0 0 1 0 0 0 0 1 1 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 1 0 0 0 1 1 0 0 
thread: 0, allBlocks[12]: 0 0 0 0 2 0 0 0 0 0 1 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[12]: 2 0 0 0 0 1 0 0 
thread: 0, allBlocks[13]: 0 0 0 0 2 0 0 0 0 1 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[13]: 2 0 0 0 1 0 0 0 
thread: 0, allBlocks[14]: 0 0 0 0 1 0 0 0 0 1 2 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[14]: 1 0 0 0 1 2 0 0 
thread: 0, allBlocks[15]: 0 0 0 0 2 0 0 0 0 0 2 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[15]: 2 0 0 0 0 2 0 0 
thread: 0, allBlocks[16]: 0 0 0 0 2 0 0 0 0 1 1 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[16]: 2 0 0 0 1 1 0 0 
thread: 0, allBlocks[17]: 0 0 0 0 2 0 0 0 0 1 2 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[17]: 2 0 0 0 1 2 0 0 
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 8
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.064869
thread: 1, sOPT: 8
copy the latest feasible solution to instance takes time: 0.048288
thread: 0, sOPT: 9
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: Thread: 13, MlBk function is done, and BkID for all processes are collected., MlBk function is done, and BkID for all processes are collected.2

, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 101, UB: 114
BKID: 0, LB: 101, UB: 114, OPT: 9
Dynamic Programming Runtime: 0.628907
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 1
Iteration: 2, UB: 114, LB: 101start at time: 1505254844
thread: 0, MlBk is called with LB: 101, UB: 104
thread: 3, MlBk is called with LB: 110, UB: 114
 thread: 0, LongJobs.size() 13
 thread: 3, LongJobs.size() 13
thread: 1, MlBk is called with LB: 104, UB: 107
thread: 2, MlBk is called with LB: 107, UB: 110
 thread: 1, LongJobs.size() 13
 thread: 2, LongJobs.size() 13
thread: 0, NSTable size: 12
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: thread: 1, NSTable size: 12
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 00
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 1
thread: , i: 1, i: 0, maxN[i].weit: 103, alltableelemets[maxindex].elm[i]: , maxN[i].idx: 00
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 0, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 0, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 0, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 0, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 0, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 0, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 0, i: 7, maxN[i].weit: 2, maxN[i].idx: 7, blockDimSize[i]: 2
, blockDimSize[i]: thread: 0, i: 0, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 3, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 5, divisor[i]: 1, blockDimSize[i]: 2
3thread: 0, i: 6, divisor[i]: 
1, blockDimSize[i]: 2
thread: 0, i: 7, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, largestBlockVec.elm: 0 0 thread: 01 , i: 0 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
0thread: 1, i: 2, maxN[i].weit: 2, maxN[i].idx:  2, blockDimSize[i]: 2
thread: 1, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 1, i: 4, maxN[i].weit: 3, maxN[i].idx: 42, blockDimSize[i]: 3 
0thread: 1, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 1, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 1, i: 7, maxN[i].weit: 2, maxN[i].idx: 7, blockDimSize[i]: 2
 thread: 1, i: 0, divisor[i]: 3, blockDimSize[i]: 21 
thread: 1, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 3, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 7, divisor[i]: 1, blockDimSize[i]: 2
0thread: 1 , largestBlockVec.elm: 0 00  1 00  0 0 0 0
 thread: 0, blockDimSizeComp: 0 0 0 0 0 1 0 1 0 2 00  2 3 2 2 20  
thread: 0, divisorComp: 0 0 0 0 0 3 0 3 0 1 0 2 1 1 2 0 2 1 1 
thread: 0, largestBlockVec: 0 0 0 0 0 2 00  0 20  01 0  00  0 10  0 0
thread: 1, blockDimSizeComp: 0 0 0 0 0 1 0 1 0  2 00  02 3  2 02  2
 
thread: 0, largestNoZeroBlockVec: 2 2 0 1 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 0 3 0 3 0 1 0 2 1 1 1 1 
thread: 1, largestBlockVec: 0 0 0 0 0 2 0 2 0 0 0 1 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 2 2 0 1 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
thread: 0 0 1, allBlocks: 00 0  00 0  0 00  0 00  0 00 0  1 00  0 00 0  , mySum: 10
 0 0 0 0 0 0 0 1 0 0 0 0 0 0 00  0 0, mySum: 1 0
 00 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0  0 0 0 0 0 1 0 00 0 0  10  0, mySum:  10 
00 0 0 0 0 0 0 1 0 0 0 0 0 0  00  0 , mySum: , mySum: 12

0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 00 0  00 0  , mySum: 20
0 0 0 0 0 1 0 0 0 0 0 1 0 0 0  0 , mySum: , mySum: 12

0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 10 0 0  00  0 0, mySum:  2
, mySum: 0 0 0 0 0 0 0 2 0 0 0 0 02 0 0
 00 0 0 0 0 2 0 0 0 0 0 0 0 0 0  , mySum: 0 , mySum: 22
0 0 0 0 0 1 0 1 0 0 0 1 0 
0 0 0 0 0 0 1 0 0 0 0 0 10 0 0  00  0 , mySum: , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 3
0 0 0 0 0 2 0 1 0 0 0 0 0 0 00 0  , mySum: 30
0 0 0 0 0 2 0 0 0 0 0 1 0 0  0 00 0  , mySum: 3, mySum: 
2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 00 0 0 0 0 1 0 2 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 1  0 0 0 0 , mySum: 3
00 0 0 0 0 0 0 2 0 0 0 1 0  0 0 0 , mySum: 30
 00 0 0 0 0 2 0 1 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 2 0 0 0 1 0  0 0 0 , mySum: 3
0 0 0 0 0 2 0 0 0 0 0 1 0 0 00  00 , mySum:  4
00 0 0 0 0 2 0 1 0 0 0 1 0  0, mySum:  30
 00 0 0 0 0 1 0 2 0 0 0 0 0 0  0, mySum:  40
 , mySum: 0 0 0 0 0 2 0 2 0 0 0 0 0 0 3
0 0 0 0 0 0 0 2 0 0 0 1 00 0 , mySum: 4
 0 0 0 0 0 2 0 2 0 0 0 1 0 0 0 0 , mySum: 30
 0 0 0 0 0 0 1 0 2 0 0 0 1 00 , mySum: 5
 0 0 0 , mySum: 4
0 0 0 0 0 2 0 1 0 0 0 1 0 0 0 0 , mySum: 4
0 0 0 0 0 2 0 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 0 2 0 0 0 1 0 0 0 0 , mySum: 5
thread: 2, NSTable size: 14
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: thread: 32, NSTable size: , i: 7, alltableelemets[maxindex].elm[i]: 192
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 1

thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 1
1thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 0
, maxN[i].weit: 3, maxN[i].idx: thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 0, blockDimSize[i]: 3
thread: 2, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 2, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 27
thread: 2, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 2, i: 4, maxN[i].weit: 3, maxN[i].idx: , alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 4, blockDimSize[i]: 3
thread: 2, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 2, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 2, i: 7, maxN[i].weit: 2, maxN[i].idx: 7, blockDimSize[i]: 2
3, maxN[i].idx: thread: 0, blockDimSize[i]: 32, i: 0
, divisor[i]: 3, blockDimSize[i]: thread: 13, i: 1
, maxN[i].weit: thread: 2, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 3, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 7, divisor[i]: 1, blockDimSize[i]: 2
2, maxN[i].idx: thread: 21, largestBlockVec.elm: , blockDimSize[i]: 2
0thread:  3, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 3, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 3, i: 04, maxN[i].weit:  4, maxN[i].idx: 4, blockDimSize[i]: 4
thread: 3, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 3, i: 6, maxN[i].weit: 3, maxN[i].idx: 6, blockDimSize[i]: 3
thread: 3, i: 7, maxN[i].weit: 2, maxN[i].idx: 7, blockDimSize[i]: 2
0thread:  3, i: 0 0, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 4, divisor[i]: 2, blockDimSize[i]: 2
thread: 3, i: 5, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, i: 6, divisor[i]: 1, blockDimSize[i]: 3
thread: 3, i: 7, divisor[i]: 1, blockDimSize[i]: 2
0thread: 3, largestBlockVec.elm:  0 2 00  2 0 0 0 02 0  01  0 00  0 00  10  
2thread: 2, blockDimSizeComp: 0 0 0 0 0 1 0 1 0 2 0 2 3  2 2 20  0
 thread: 2, divisorComp: 0 0 0 0 0 3 0 3 0 1 00 2 1  1 1 01 0  
thread: 3, blockDimSizeComp: 0 0 0 0 1 2 
2thread: 2, largestBlockVec: 0 0 0 0 0 2 0  22  00 0  0 12 0 1  3 0 00 0  
thread: 2, largestNoZeroBlockVec: 2 2 0 1 0 0 0 0 
2 0 0 
thread: 3, divisorComp: 0 0 0 0 3 1 1 1 0 2 3 1 0 1 0 0 
thread: 3, largestBlockVec: 0 0 0 0 2 0 0 0 0 1 2 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 2 0 0 0 1 2 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0thread:  3, allBlocks: 00  01  0 00  0 00  , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 00  0 00  00 0  0 0, mySum:  02
 0 0 0 0 0 1 0 0 0 0 0 1 0 00 0  00 , mySum:  2
0 0 0 0 0 1 0 1 0 0 0 0 00 0  00  0 00  , mySum: 0, mySum: 
20 0 0 0 0 0 0 0 0 0 1 0 
0 0 0 0 0 0 2 0 0 0 0 0 0 00  00  0 00  , mySum: 1, mySum: 
2
0 0 0 0 0 1 0 1 0 0 0 1 00 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
 0 0 0 0 0 2 0 1 0 0 0 0 0 10  00  00  , mySum: 3
0 0 0 0 0 2 0 0 0 0 0 1 0 00  00  00  0, mySum: 3 
, mySum: 0 0 0 0 0 1 0 2 0 0 0 0 1
0 0 0 0 1 0 0 0 0 00 0  0 00 0  00  0 0, mySum: 3 
, mySum: 10 0 0 0 0 0 0 2 0 0 0 1 0 0
 0 0 0 0 1 0 0 0 00 0 , mySum: 3
0 0 0 0 0 1 0 2 0 0 0 1 0 0  0 01  , mySum: 40
 0 0 0 0 0 2 0 1 0 0 0 1 0 00  00  0 , mySum: 04
0 0 0 0 0 2 0 2 0 0 0 0 0 0  00  0 , mySum: 40 
, mySum: 0 0 0 0 0 2 0 2 0 0 0 1 0 2
0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 1 2 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 0 0 0 2 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 0 0 1 1 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 0 0 0 0 1 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 0 0 0 1 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 0 0 1 2 0 0 0 0 0 , mySum: 4
0 0 0 0 2 0 0 0 0 0 2 0 0 0 0 0 , mySum: 4
0 0 0 0 2 0 0 0 0 1 1 0 0 0 0 0 , mySum: 4
0 0 0 0 2 0 0 0 0 1 2 0 0 0 0 0 , mySum: 5
thread: 1, maxBlockLvlSize: 5
thread: 1, maxInBlockLvlSize: 25
thread: 1, AllTableSize: 1728, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 5
thread: 0, maxInBlockLvlSize: 25
thread: 0, AllTableSize: 1728, maxSubsetsSize: 64
thread: 2, maxBlockLvlSize: 5
thread: 2, maxInBlockLvlSize: 25
thread: 2, AllTableSize: 1728, maxSubsetsSize: 64
thread: 3, maxBlockLvlSize: 5
thread: 3, maxInBlockLvlSize: 25
thread: 3, AllTableSize: 1728, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 1 0 0 0 0 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 1 0 0 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 1 0 0 0 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 1 0 1 0 0 0 0 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 2 0 0 0 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 1 0 0 1 0 0 0 0 
thread: 0, allBlocks[7]: 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 1 1 0 0 0 0 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[8]: 2 0 0 0 0 0 0 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 mySum: 3
thread: 0, blockNoZero[9]: 1 1 0 1 0 0 0 0 
thread: 0, allBlocks[10]: 0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 2 1 0 0 0 0 0 0 
thread: 0, allBlocks[11]: 0 0 0 0 0 2 0 0 0 0 0 1 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 2 0 0 1 0 0 0 0 
thread: 0, allBlocks[12]: 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[12]: 1 2 0 0 0 0 0 0 
thread: 0, allBlocks[13]: 0 0 0 0 0 0 0 2 0 0 0 1 0 0 0 0 mySum: 3
thread: 0, blockNoZero[13]: 0 2 0 1 0 0 0 0 
thread: 0, allBlocks[14]: 0 0 0 0 0 1 0 2 0 0 0 1 0 0 0 0 mySum: 4
thread: 0, blockNoZero[14]: 1 2 0 1 0 0 0 0 
thread: 0, allBlocks[15]: 0 0 0 0 0 2 0 1 0 0 0 1 0 0 0 0 mySum: 4
thread: 0, blockNoZero[15]: 2 1 0 1 0 0 0 0 
thread: 0, allBlocks[16]: 0 0 0 0 0 2 0 2 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[16]: 2 2 0 0 0 0 0 0 
thread: 0, allBlocks[17]: 0 0 0 0 0 2 0 2 0 0 0 1 0 0 0 0 mySum: 5
thread: 0, blockNoZero[17]: 2 2 0 1 0 0 0 0 
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 11
copy the latest feasible solution to instance takes time: 1e-05
thread: 1, sOPT: 11
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 9
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 7e-06
thread: 0, sOPT: 11
copy the latest feasible solution to instance takes time: 0.133169
thread: 2, sOPT: 10
copy the latest feasible solution to instance takes time: 0.14932
thread: 3, sOPT: 9
Thread: 3, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 1, MlBk function is done, and BkID for all processes are collected.Thread: 
2, MlBk function is done, and BkID for all processes are collected.
0, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: 1 1 -1 -1
Pick seg 2 for next iteration where LB: 106, UB: 109
BKID: 0, LB: 106, UB: 109, OPT: 10
Dynamic Programming Runtime: 1.20444
Execution time between LB and UB is: 0
By far, all LB UB calculation runtime: 1
Iteration: 3, UB: 109, LB: 106start at time: 1505254844
thread: 0, MlBk is called with LB: 106, UB: 107
 thread: 0, LongJobs.size() 13
thread: thread: 1, MlBk is called with LB: 107, UB: 1082, MlBk is called with LB: 
108, UB: 109
 thread: 1, LongJobs.size() 13
 thread: 2, LongJobs.size() 13
thread: 1, NSTable size: 12
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 1, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 1, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 1, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 2, NSTable size: 14thread: 
1, i: 4, maxN[i].weit: thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
3thread: 2, i: 4, maxN[i].idx: , alltableelemets[maxindex].elm[i]: 40
, blockDimSize[i]: thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 2
3thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 0

thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: thread: 1, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 1, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 1, i: 7, maxN[i].weit: 2, maxN[i].idx: 7, blockDimSize[i]: 2
3
thread: 2, i: 1, maxN[i].weit: 3thread: , maxN[i].idx: 1, i: 10, blockDimSize[i]: , divisor[i]: 3
3thread: 2, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2, blockDimSize[i]: 
thread: 2, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 2, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 31
thread: 2, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 2, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 2, i: 7, maxN[i].weit: 2, maxN[i].idx: 7, blockDimSize[i]: 2

thread: 2thread: 1, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 3, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 7, divisor[i]: 1, blockDimSize[i]: 2
, i: 0, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 3, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 7, divisor[i]: 1, blockDimSize[i]: 2
thread: thread: 12, largestBlockVec.elm: , largestBlockVec.elm: 0 0 0 00  0 00  0 2 0 0 22  0 2 0 00  0 01  00  0 10  0 
0thread: 2, blockDimSizeComp: 0 0 0 0 0 1 0 1 0 2 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 0 0 1 0 1 0 2  0 2 3 2 2 2 
thread: 2, divisorComp: 0 0thread:  0 0 0 3 0 3 00, NSTable size: 12
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 0, maxN[i].weit: 3 , maxN[i].idx: 0, blockDimSize[i]: 3
0 1 0 2 1 1 1 1 
thread: 2, largestBlockVec: 0 0 0 0 0 2 0 2 0 0 0 1 0 thread: 0 0 0 
2 3 2 2 thread: 22, largestNoZeroBlockVec: 0 2 
2, i:  0 1 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 0 3 0 3 0 1 0 21 , maxN[i].weit: 31, maxN[i].idx:  1, blockDimSize[i]: 13 
thread: 0, i: 2, maxN[i].weit: 2, maxN[i].idx: 12, blockDimSize[i]: 2 
thread: 0, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 0, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 2, allBlocks: 0 0 0thread:  0 001 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 
thread: 1, largestBlockVec: 0 0 0 0 0 2 0 2 0 0 0 1 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 2 2 0 1 0 0 0 0 
, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
 thread: 0, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 0, i: 7, maxN[i].weit: 2, maxN[i].idx: 7, blockDimSize[i]: 2
thread: 1, allBlocks: 0 0 0 0 0 0 00  00thread:  0  0, i: 000 , mySum: , divisor[i]:  013, blockDimSize[i]:  1
00 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0  00 0  0, mySum: 1 
00 0 0 
0 0 0 0  1, mySum:  0thread: 0, i: 1, divisor[i]: 3, blockDimSize[i]: 1 
thread: 0, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 3, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 7, divisor[i]: 1, blockDimSize[i]: 2
0thread: 0, largestBlockVec.elm:  00  1 00 0 0  0 0 0 , mySum: 20 02
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 0 0 0 1 0 
0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 00 0 0 0 0 0 0 0 0 0 0  0 10  00  00 0   0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 12
0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0  00 0 0 1 0  0 , mySum: 00 0 0 
thread: 0, blockDimSizeComp: 0 0 0 0 0 1 0  1 0 2 0 2 3 2 2 2 0 
, mySum: 1thread: 0, divisorComp: 0 0 0 0 0 3 0 3 
0 1 0 2 1 1 1 10 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 2 0 2 0 , mySum: 2 
00 0 0 0 0 0 0 2 0 0 0 0 0  0 1 00 0  002
 0 , mySum: 2
0 0 0 0 0 1 0 0 0 0 0 1 00  00 0  0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 2 2 0 1 0 0 0 0 
0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 1 0  1 00 0  0 01  0 00  0 00 , mySum:  2
0 0 0 0 0 1 0 1 0 0 0 0 , mySum: 3
0 0 0 0 0 2 0 1 0 0 0 0 01 0 0 0 0 , mySum: 3
0 0 0 0 0 2 0 1 0 0 0 0 0 0  00  00  0 thread: , mySum: , mySum: 33
00 0 0 0 0 2 0 0 0 0 0 1 
0 0 0 0 , mySum: 3
, allBlocks: 0 0 0 00 0  00  0 0 0 10 0  2 0 0 0 0 0 0 0 00  00, mySum:  0 2 0 0 0 0 0 1 0 0 03 0
 , mySum: 0 0 0 0 0 0 0 2 0 0 0 1 0 3
00 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 2 0 0 0 1  0 0 , mySum: 3
0 0 0 0 0 0 0 2 0 0 0 1 0 00 0  0 00  0  , mySum: , mySum: 4
0 0 0 0 0 2 0 1 0 0 0 1 0 00  00 0  00 30 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1
0 0 0 0 0 1 0 2 0 0 0 1 0  0 00  00  00 , mySum:  4
 , mySum: 1
00 0 0 0 0 0 0 1 0 0 0 0 0  00  00 0  , mySum: 1
, mySum: 4
00 0 0 0 0 2 0 2 0 0 0 0 0 0 0 0  00 , mySum:  40 00  1 0
00 0 0 0 0 2 0 2 0 0 0 1 0 0  0 0 0 00  2 0 1 0 0 0 1 0 0 00   000  , mySum:  0 0 0 5, mySum: 1, mySum: 

0 0 0 0 0 0 0 1 0 0 40 1 0
 0 0 0 0 0 2 0 2 0 0 0 0 0 0 00 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0  0 , mySum: 4
00 0 0 0 0 2 0 2 0 0 0 1 0 0  0 0 0, mySum:  50 0 
0 , mySum: 2
0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 , mySum: 3
0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 0 0 0 0 0 1 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 0 0 0 1 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 2 0 0 0 1 0 0 0 0 , mySum: 4
0 0 0 0 0 2 0 1 0 0 0 1 0 0 0 0 , mySum: 4
0 0 0 0 0 2 0 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 0 2 0 0 0 1 0 0 0 0 , mySum: 5
thread: 1, maxBlockLvlSize: 5
thread: 1, maxInBlockLvlSize: 25
thread: 1, AllTableSize: 1728, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 5
thread: 0, maxInBlockLvlSize: 25
thread: 0, AllTableSize: 1728, maxSubsetsSize: 64
thread: 2, maxBlockLvlSize: 5
thread: 2, maxInBlockLvlSize: 25
thread: 2, AllTableSize: 1728, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 1 0 0 0 0 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 1 0 0 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 1 0 0 0 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 1 0 1 0 0 0 0 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 2 0 0 0 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 1 0 0 1 0 0 0 0 
thread: 0, allBlocks[7]: 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 1 1 0 0 0 0 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[8]: 2 0 0 0 0 0 0 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 mySum: 3
thread: 0, blockNoZero[9]: 1 1 0 1 0 0 0 0 
thread: 0, allBlocks[10]: 0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 2 1 0 0 0 0 0 0 
thread: 0, allBlocks[11]: 0 0 0 0 0 2 0 0 0 0 0 1 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 2 0 0 1 0 0 0 0 
thread: 0, allBlocks[12]: 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[12]: 1 2 0 0 0 0 0 0 
thread: 0, allBlocks[13]: 0 0 0 0 0 0 0 2 0 0 0 1 0 0 0 0 mySum: 3
thread: 0, blockNoZero[13]: 0 2 0 1 0 0 0 0 
thread: 0, allBlocks[14]: 0 0 0 0 0 1 0 2 0 0 0 1 0 0 0 0 mySum: 4
thread: 0, blockNoZero[14]: 1 2 0 1 0 0 0 0 
thread: 0, allBlocks[15]: 0 0 0 0 0 2 0 1 0 0 0 1 0 0 0 0 mySum: 4
thread: 0, blockNoZero[15]: 2 1 0 1 0 0 0 0 
thread: 0, allBlocks[16]: 0 0 0 0 0 2 0 2 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[16]: 2 2 0 0 0 0 0 0 
thread: 0, allBlocks[17]: 0 0 0 0 0 2 0 2 0 0 0 1 0 0 0 0 mySum: 5
thread: 0, blockNoZero[17]: 2 2 0 1 0 0 0 0 
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 11
copy the latest feasible solution to instance takes time: 4e-06
thread: 1, sOPT: 11
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 3e-06
thread: 0, sOPT: 11
copy the latest feasible solution to instance takes time: 0.053519
thread: 2, sOPT: 10
BKID: 0, LB: 108, UB: 108, OPT: 10
Dynamic Programming Runtime: 0.743241
Execution time between LB and UB is: 0
By far, all LB UB calculation runtime: 1
********************************************************
Total execution on UB and LB is: 1
OUT of Bk while loop  
UB    108
LB    108
T1    108
T2    108
OPT   10
nMachines   10
BkID	0
AllProbData.size()    3
ck :   2
AllProbData[ck].Ttable    108
ck :   1
AllProbData[ck].Ttable    108
ck :   0
AllProbData[ck].Ttable    113
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan115
Main Scheduling is Done
File 3-14 is Done.
******************************
Reading File...
File 3-15 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 192, LB: 98start at time: 1505254844
thread: 0, MlBk is called with LB: 98, UB: 121
thread: 3, MlBk is called with LB: 167, UB: 192
thread: 2, MlBk is called with LB: 144, UB: 167thread: 
1, MlBk is called with LB: 121 thread: 0, LongJobs.size() 14
, UB: 144
 thread: 3, LongJobs.size() 10
 thread: 2, LongJobs.size() 10
 thread: 1, LongJobs.size() 11
thread: 3, NSTable size: 24
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 3, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 3, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 3, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 3, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 3, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, i: 3, divisor[i]: 2, blockDimSize[i]: 2
thread: 3, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 3, largestBlockVec.elm: 0 0 0 0 2 2 1 0 0 0 0 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 2 1 1 2 3 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 1 3 3 2 1 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 2 2 1 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 2 2 1 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 2 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 1 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 2 1 0 0 0 0 0 0 0 0 0 , mySum: 5
thread: 2, NSTable size: 22
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0thread: 
3thread: 2, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 2, maxBlockLvlSize: , i: 51, maxN[i].weit: 3
, maxN[i].idx: thread: 3, maxInBlockLvlSize: 4
thread: 3, AllTableSize: 216, maxSubsetsSize: 64
1, blockDimSize[i]: 3
thread: 2, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 2, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 2, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 2, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 2, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 4, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 5, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, largestBlockVec.elm: 0 0 0 0 0 2 2 0 2 0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 0 2 1 1 2 1 3 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 1 3 3 1 3 1 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 2 2 0 2 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 2 2 0 2 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 0 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 1 0 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 2 0 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 2 0 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 0 0 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 1 0 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 2 0 2 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 1 0 2 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 2 0 1 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 2 0 2 0 0 0 0 0 0 0 , mySum: 6
thread: 1, NSTable size: 25
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 1, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 1, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 1, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 1, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 1, i: 5, maxN[i].weit: 4, maxN[i].idx: 5, blockDimSize[i]: 4
thread: 1, i: 6, maxN[i].weit: 3, maxN[i].idx: 6, blockDimSize[i]: 3
thread: 1, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 4, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 5, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, i: 6, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, largestBlockVec.elm: 0 0 0 0 0 0 0 2 0 1 2 0 0 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 2 2 2 2 1 0 2 1 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 1 1 1 1 3 0 2 3 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 2 0 1 2 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 0 0 2 1 2 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 1 2 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 1 0 0 2 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 0 0 1 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 0 1 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 1 0 1 2 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 2 0 0 2 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 2 0 1 1 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 2 0 1 2 0 0 0 0 0 , mySum: 5
thread: 2, maxBlockLvlSize: 7
thread: 2, maxInBlockLvlSize: 4
thread: 2, AllTableSize: 324, maxSubsetsSize: 64
thread: 1, maxBlockLvlSize: 5
thread: 1, maxInBlockLvlSize: 10
thread: 1, AllTableSize: 576, maxSubsetsSize: 64
thread: 0, NSTable size: 24
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 0, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 0, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 0, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 0, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 0, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 0, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 0, i: 7, maxN[i].weit: 3, maxN[i].idx: 7, blockDimSize[i]: 3
thread: 0, i: 0, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 3, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 4, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 5, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 7, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, largestBlockVec.elm: 0 0 0 0 1 0 0 0 2 0 2 0 0 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 0 2 2 2 0 1 0 1 0 3 2 3 0 
thread: 0, divisorComp: 0 0 0 0 2 1 1 0 3 0 3 0 1 1 1 0 
thread: 0, largestBlockVec: 0 0 0 0 1 0 0 0 2 0 2 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 1 0 0 2 2 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 1 0 2 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 2 0 1 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 0 0 0 2 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 0 1 0 1 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 2 0 2 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 0 1 0 2 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 0 2 0 1 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 0 2 0 2 0 0 0 0 0 , mySum: 5
thread: 0, maxBlockLvlSize: 5
thread: 0, maxInBlockLvlSize: 36
thread: 0, AllTableSize: 2592, maxSubsetsSize: 64
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 5
copy the latest feasible solution to instance takes time: 0.014511
thread: 3, sOPT: 5
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 5
copy the latest feasible solution to instance takes time: 0.015841
thread: 2, sOPT: 5
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 7
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 0 
copy the latest feasible solution to instance takes time: 0.020014
thread: 1, sOPT: 7
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 1 0 0 0 
thread: 0, allBlocks[2]: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 1 0 0 0 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 0 1 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 0 1 1 0 0 0 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 0 0 2 0 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 0 0 0 2 0 0 0 
thread: 0, allBlocks[7]: 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 1 0 0 0 1 0 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[8]: 1 0 0 1 0 0 0 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 0 0 0 1 0 2 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[9]: 0 0 0 1 2 0 0 0 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 0 0 2 0 1 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 0 0 0 2 1 0 0 0 
thread: 0, allBlocks[11]: 0 0 0 0 1 0 0 0 0 0 2 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 1 0 0 0 2 0 0 0 
thread: 0, allBlocks[12]: 0 0 0 0 1 0 0 0 1 0 1 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[12]: 1 0 0 1 1 0 0 0 
thread: 0, allBlocks[13]: 0 0 0 0 1 0 0 0 2 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[13]: 1 0 0 2 0 0 0 0 
thread: 0, allBlocks[14]: 0 0 0 0 0 0 0 0 2 0 2 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[14]: 0 0 0 2 2 0 0 0 
thread: 0, allBlocks[15]: 0 0 0 0 1 0 0 0 1 0 2 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[15]: 1 0 0 1 2 0 0 0 
thread: 0, allBlocks[16]: 0 0 0 0 1 0 0 0 2 0 1 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[16]: 1 0 0 2 1 0 0 0 
thread: 0, allBlocks[17]: 0 0 0 0 1 0 0 0 2 0 2 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[17]: 1 0 0 2 2 0 0 0 
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.045326
thread: 0, sOPT: 9
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: Thread: 23, MlBk function is done, and BkID for all processes are collected.1, MlBk function is done, and BkID for all processes are collected., MlBk function is done, and BkID for all processes are collected.


sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 98, UB: 110
BKID: 0, LB: 98, UB: 110, OPT: 9
Dynamic Programming Runtime: 0.532252
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 1
Iteration: 2, UB: 110, LB: 98start at time: 1505254845
thread: 0, MlBk is called with LB: 98, UB: 101
 thread: 0, LongJobs.size() 14
thread: thread: 3, MlBk is called with LB: 107, UB: 110
1, MlBk is called with LB: 101, UB: 104
thread: 2, MlBk is called with LB: 104, UB: 107
 thread:  thread: 2, LongJobs.size() 143
, LongJobs.size() 14
 thread: 1, LongJobs.size() 14
thread: 1, NSTable size: 20
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 1, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 1, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 1, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 1, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 1, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 1, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 1, i: 7, maxN[i].weit: 3, maxN[i].idx: 7, blockDimSize[i]: 3
thread: 1, i: 0, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 3, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 4, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 5, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 7, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, largestBlockVec.elm: 0 0 0 0 1 0 0 0 2 0 2 0 0 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 0 2 2 2 0 1 0 1 0 3 2 3 0 
thread: 1, divisorComp: 0 0 0 0 2 1 1 0 3 0 3 0 1 1 1 0 
thread: 1, largestBlockVec: 0 0 0 0 1 0 0 0 2 0 2 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 1 0 0 2 2 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0thread:  0 0 0 0 30, NSTable size:  240
 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 2 0 0 0 thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 0 0 , mySum: 20
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 5
, alltableelemets[maxindex].elm[i]: 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 1 0 0 0 1
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 0
0thread: 3, i: 8, alltableelemets[maxindex].elm[i]:  20 0
 0 thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: , mySum: 10, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 42
0 0 0 0 0 0 0 0 1 0 2 0, maxN[i].idx:  00, blockDimSize[i]:  4
thread: 3, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
0thread: 0, NSTable size: 18thread: 
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
3thread: 0, i: , i: 4, alltableelemets[maxindex].elm[i]: 32
, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 3, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 3, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 3, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 3, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 3, i: 7, maxN[i].weit: 3, maxN[i].idx: 7, blockDimSize[i]: 3
 thread: 3, i: 0, divisor[i]: 2, blockDimSize[i]: 2
thread: 3, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 3, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, i: 4, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, i: 5, divisor[i]: 1, blockDimSize[i]: 3
thread: 3, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 7, divisor[i]: 1, blockDimSize[i]: 3
thread: thread: 3, largestBlockVec.elm: 0 00 , i: 00 50  , alltableelemets[maxindex].elm[i]: 01
1 0 0 0 2 0thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
 thread: 0, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
 2thread: , mySum:  3
0, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 0, i: 2, maxN[i].weit: 20 0 0 , maxN[i].idx: 0 2, blockDimSize[i]: 02
thread: 0, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 0, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 0, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 0, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 0, i: 7, maxN[i].weit: 3, maxN[i].idx: 7, blockDimSize[i]: 3
thread: 00 , i: 0, divisor[i]: 02 , blockDimSize[i]: 02
  0 0 
thread: 3, blockDimSizeComp: 0 0 0 0 2 2 2 0 1 thread: 0, i: 0 11 0, divisor[i]: 01, blockDimSize[i]: 2
thread: 0, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 3, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 4, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 5, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 7, divisor[i]: 1, blockDimSize[i]: 3
 thread: 0, largestBlockVec.elm: 0 0 0 00  02   03 1  120  3 00 0 
thread: 3, divisorComp: 0 0 0 0 2 1 1 0 3  0 3 0 1 1 1 0 
thread: 3, largestBlockVec: 0 0 0 0 1 0 0 0 2 0 2 0 00  0 0 00 0  0 0 , mySum: 3
0 0 0 0 1 0 0 0 0 0 
2 0 0 0 0 0 , mySum: 3
thread: 3, largestNoZeroBlockVec: 1 0 0 2 2 0 0 0 
 2 0 2 0 0 0 0 0 1 0 0 0 1 0 1 0 0 00 0  0 , mySum: 03 0
 0 0 0 0 1 0 0 0 2 0 0 0 0 0 00  0
 thread: 0, blockDimSizeComp: 0 0 0 0 2 2 2 0 1 0 , mySum: 3
10 0 0 0 0 0 0 0 2 0 2 0 0 0 0 0 3  2 03 thread: , mySum:  4
3, allBlocks: 0 00  0 00 0 0 0 0 0 0 0 0 0 0 0  0
thread: 0, divisorComp: 0 0 0 0 2 1 1 0 3 0 0  , mySum: 30
 0 0 0 0 0 0 0 0 0 0 1 0 00 0 1 0 0 0 1 0 2 0 0 0 0 0 0 1 , mySum: 1 41 
0  
thread: 0, largestBlockVec: 0 0 0 0 1 0 0 0 2 00 0  20  0 0 0 0 1 0 0 0 2 0 1 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 1 0 0 2 2 0 0 0 
, mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 00 0  00  0 0 , mySum: 01 , mySum: 
4
0 0 0 0 1 0 0 0 2 0 2 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 5
0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 1 0 1 0 0 0thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0  , mySum: 00 
0 0 0 0 0 0 0 0 0 0 0 1 0 0, mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0  , mySum: 2
0 0 0 0 0 0 0 0 0 0 2 0 0 0 00 0  0, mySum:  2
00 0 0 0 1 0 0 0 0 0 1 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0  0 0 00 0  , mySum: 1, mySum: 
2
thread: 2, NSTable size: 200
 thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 0 40
thread: 2, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 2, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 2, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 2, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 2, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 2, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 2, i: 7, maxN[i].weit: 3, maxN[i].idx: 7, blockDimSize[i]: 3
thread: 20 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 1 0 1 0 0  0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 2 00  0 00 0  0 00  0 0, mySum:  2
, mySum: 0 0 0 0 0 0 0 0 1 0 2 0 0 0 0 2
, i: 0 0 0 0 0 0 0 00 00 0 2 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 0 0 1 0 0 0 , mySum:  30 
00 0 0 0 0 0 0 0 2 0 1 0 0  , mySum: 2
0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 1 0 2 0 0 00 0  0 0, mySum:  3, divisor[i]: 
0 , mySum: 3
0 0 0 0 0 0 0 0 2 0 1 0 0 00 0 0 , mySum: 3
2, blockDimSize[i]: 20
 thread: 2, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 3, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 4, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 5, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 7, divisor[i]: 1, blockDimSize[i]: 3
 thread: 2, largestBlockVec.elm: 00  0 0 010   0 000 0  00 1   1 0 0 00  200   0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 0 1 0 1 0 0 0 0 00  0 0 2, mySum:  0 2 0 02 0  0 30
0 0 0 0 1 0 0 0 2 0 0 0 0 0 0 0 , mySum: 03 
0 , mySum: 0 0 0 0 1 0 0 0 1 0 1 0 0 3
0 0 0 0 0 0 0 0 2 0 2 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 0 2 0 0 0 0 00 0 0 , mySum: 3
 0 0 00  0
 0  0 , mySum: 4
0 0 0 0 1 0 0 0 1 0 2 0 0 0 00 0 0 0 0 2 0 2 0 0 0 0 thread: 2, blockDimSizeComp: 0 0 0 0 2 2  2 0 1 0 1 0 3 2 03 , mySum:  40
0 0 0 0 1 0 0 0 2 0 1 0 0 0 , mySum: 4
0 0 0 0 1 0 0 0 1 0 2 0 0 0 0 0 00 , mySum: 4 
00 0 0 0 1 0 0 0 2 0 1 0  
thread: 2, divisorComp: 0 0 0 0 2 1 1 0 3 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 0 2 0 2 0 0 0 0 03 0   , mySum: 5
0 1 1 1 0 
thread: 2, largestBlockVec: 0 0 0 0 1 0 0 0 2, mySum: 4
0 0 0 0 1 0 0 0 2 0 2 0  0 2 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 1 0 0 2 2 0 0 0 0
 0 0 0 , mySum: 5
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 1 0 2 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 2 0 1 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 0 0 0 2 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 0 1 0 1 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 2 0 2 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 0 1 0 2 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 0 2 0 1 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 0 2 0 2 0 0 0 0 0 , mySum: 5
thread: 1, maxBlockLvlSize: 5
thread: 1, maxInBlockLvlSize: 36
thread: 1, AllTableSize: 2592, maxSubsetsSize: 64
thread: 3, maxBlockLvlSize: 5
thread: 3, maxInBlockLvlSize: 36
thread: 3, AllTableSize: 2592, maxSubsetsSize: 64
thread: 2, maxBlockLvlSize: 5
thread: 2, maxInBlockLvlSize: 36
thread: 2, AllTableSize: 2592, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 5
thread: 0, maxInBlockLvlSize: 36
thread: 0, AllTableSize: 2592, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 1 0 0 0 
thread: 0, allBlocks[2]: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 1 0 0 0 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 0 1 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 0 1 1 0 0 0 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 0 0 2 0 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 0 0 0 2 0 0 0 
thread: 0, allBlocks[7]: 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 1 0 0 0 1 0 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[8]: 1 0 0 1 0 0 0 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 0 0 0 1 0 2 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[9]: 0 0 0 1 2 0 0 0 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 0 0 2 0 1 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 0 0 0 2 1 0 0 0 
thread: 0, allBlocks[11]: 0 0 0 0 1 0 0 0 0 0 2 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 1 0 0 0 2 0 0 0 
thread: 0, allBlocks[12]: 0 0 0 0 1 0 0 0 1 0 1 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[12]: 1 0 0 1 1 0 0 0 
thread: 0, allBlocks[13]: 0 0 0 0 1 0 0 0 2 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[13]: 1 0 0 2 0 0 0 0 
thread: 0, allBlocks[14]: 0 0 0 0 0 0 0 0 2 0 2 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[14]: 0 0 0 2 2 0 0 0 
thread: 0, allBlocks[15]: 0 0 0 0 1 0 0 0 1 0 2 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[15]: 1 0 0 1 2 0 0 0 
thread: 0, allBlocks[16]: 0 0 0 0 1 0 0 0 2 0 1 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[16]: 1 0 0 2 1 0 0 0 
thread: 0, allBlocks[17]: 0 0 0 0 1 0 0 0 2 0 2 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[17]: 1 0 0 2 2 0 0 0 
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 9
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.439914
thread: 2, sOPT: 10
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.550275
thread: 3, sOPT: 9
copy the latest feasible solution to instance takes time: 0.400332
thread: 1, sOPT: 10
copy the latest feasible solution to instance takes time: 0.221378
thread: 0, sOPT: 10
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: 1, MlBk function is done, and BkID for all processes are collected.Thread: 
Thread: 3, MlBk function is done, and BkID for all processes are collected.
2, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 98, UB: 100
BKID: 0, LB: 98, UB: 100, OPT: 10
Dynamic Programming Runtime: 2.27994
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 2
Iteration: 3, UB: 100, LB: 98start at time: 1505254846
thread: 0, MlBk is called with LB: 98, UB: 99
 thread: 0, LongJobs.size() 14
thread: 1, MlBk is called with LB: 99, UB: 100
 thread: 1, LongJobs.size() 14
thread: 1, NSTable size: 18
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 3thread: 
0thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: , NSTable size: 118, i: 6, alltableelemets[maxindex].elm[i]: 1

thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 3
4thread: 0, maxN[i].idx: , i: 5, alltableelemets[maxindex].elm[i]: 1
0thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 1, blockDimSize[i]: 
4thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 11
, alltableelemets[maxindex].elm[i]: thread: 1, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 1, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 02
thread: 1, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 1, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 1, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 1, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 1, i: 7, maxN[i].weit: 3, maxN[i].idx: 7, blockDimSize[i]: 3

thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 0, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 3, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 4, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 5, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 7, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 10, i: 0, maxN[i].weit: 4, maxN[i].idx: , largestBlockVec.elm: 0, blockDimSize[i]: 4
0thread: 0 , i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 0, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 02
thread: 0, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 0, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 0, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 0, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 0, i: 7, maxN[i].weit: 3, maxN[i].idx: 7, blockDimSize[i]: 3
 thread: 0, i: 0, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 3, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 4, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 5, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 7, divisor[i]: 1, blockDimSize[i]: 3
0thread: 0, largestBlockVec.elm:  00  0 10  0 0 0 0 1 0 2 00  2 00  0 02 0  00 
thread: 1, blockDimSizeComp: 0 0 0 0 2 2 2 0 1 0 1  0 3 2 3 0 2
 thread: 1, divisorComp: 0 0 0 0 2 1 1 0 3 00 0 0 0 0  3
 thread: 0, blockDimSizeComp: 0 0 0 0 2 2 2 0 1 00 1  0 3 12  13 0  
thread: 0, divisorComp: 0 0 0 0 2 1 1 0 3 0 13 0 1  01  
1thread: 1, largestBlockVec: 0 0 0 0 1 0 0 0 2 0 2  00  0
thread: 0, largestBlockVec: 0 0 0 0 1 0 0 0 2 0  2 0 0 00  00  0
thread: 1, largestNoZeroBlockVec: 1 0 0 2 2 0 0 0 
 0 
thread: 0, largestNoZeroBlockVec: 1 0 0 2 2 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0thread:  00, allBlocks:  0 , mySum: 01 0
 0 0 0 0 0 0 0 0 1 0 1 0 0 00 0  00  0, mySum: 2
 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 0 00 0  , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 00 0  00  , mySum: , mySum: 1
20 0 0 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 2 00 0 0 , mySum: 1
 0 0 0 0 0 0 0 0 1 0 1 0 00 0 0  0 , mySum: 02 
00 0 0 0 0 0 0 0 2 0 0 0 0  0 0 00 , mySum:  2
, mySum: 0 0 0 0 1 0 0 0 0 0 1 0 0 20 0 
00 0 0 0 0 0 0 0 0 0 2 0 0 0  0 , mySum: 0 , mySum: 22

0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 1 0 00 0 0  0 00  0 0, mySum: 2 
, mySum: 0 0 0 0 1 0 0 0 1 0 0 0 0 02
0 0 0 0 0 0 0 0 1 0 2 0 0 0  0 0 00 , mySum:  2, mySum: 
0 0 0 0 0 0 0 0 1 0 2 0 0 0 03 0 , mySum: 
30 0 0 0 0 0 0 0 2 0 1 0 0 
00 0 0 0 0 0 0 0 2 0 1 0 0 0  0 00  0, mySum:  3, mySum: 
30 0 0 0 1 0 0 0 0 0 2 0 0 0
 0 0 0 0 1 0 0 0 0 0 2 00 0 0  0 00  , mySum: , mySum: 33

0 0 0 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 1 0 0 0 1 0 1 0 , mySum: 3
0 0 0 0 1 0 0 0 2 0 0 0 0 00 0  00 , mySum:  3
0 0 0 0 0 0 0 0 2 0 2 0 00 0 0 , mySum: 3 
00 0 0 0 1 0 0 0 2 0 0 0 0  0 00  00  , mySum: 3, mySum: 
40 0 0 0 0 0 0 0 2 0 2 0 
00 0 0 0 1 0 0 0 1 0 2 0  0 0 0 , mySum: 40
0 0 0 0 1 0 0 0 1 0 2 0 0  0 00  0 0, mySum:  4
0 0 0 0 1 0 0 0 2 0 1 0 0 00 0  , mySum: 04 
, mySum: 0 0 0 0 1 0 0 0 2 0 1 0 0 0 0 40 , mySum: 
40 0 0 0 1 0 0 0 2 0 2 0 0
 00 0 0 0 1 0 0 0 2 0 2  0 0 00 0  , mySum: 0 50 , mySum: 
5
thread: 0, maxBlockLvlSize: 5
thread: 0, maxInBlockLvlSize: 36
thread: 0, AllTableSize: 2592, maxSubsetsSize: 64
thread: 1, maxBlockLvlSize: 5
thread: 1, maxInBlockLvlSize: 36
thread: 1, AllTableSize: 2592, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 1 0 0 0 
thread: 0, allBlocks[2]: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 1 0 0 0 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 0 1 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 0 1 1 0 0 0 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 0 0 2 0 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 0 0 0 2 0 0 0 
thread: 0, allBlocks[7]: 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 1 0 0 0 1 0 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[8]: 1 0 0 1 0 0 0 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 0 0 0 1 0 2 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[9]: 0 0 0 1 2 0 0 0 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 0 0 2 0 1 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 0 0 0 2 1 0 0 0 
thread: 0, allBlocks[11]: 0 0 0 0 1 0 0 0 0 0 2 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 1 0 0 0 2 0 0 0 
thread: 0, allBlocks[12]: 0 0 0 0 1 0 0 0 1 0 1 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[12]: 1 0 0 1 1 0 0 0 
thread: 0, allBlocks[13]: 0 0 0 0 1 0 0 0 2 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[13]: 1 0 0 2 0 0 0 0 
thread: 0, allBlocks[14]: 0 0 0 0 0 0 0 0 2 0 2 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[14]: 0 0 0 2 2 0 0 0 
thread: 0, allBlocks[15]: 0 0 0 0 1 0 0 0 1 0 2 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[15]: 1 0 0 1 2 0 0 0 
thread: 0, allBlocks[16]: 0 0 0 0 1 0 0 0 2 0 1 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[16]: 1 0 0 2 1 0 0 0 
thread: 0, allBlocks[17]: 0 0 0 0 1 0 0 0 2 0 2 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[17]: 1 0 0 2 2 0 0 0 
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.108866
thread: 1, sOPT: 10
copy the latest feasible solution to instance takes time: 0.084567
thread: 0, sOPT: 10
BKID: 0, LB: 98, UB: 98, OPT: 10
Dynamic Programming Runtime: 0.761
Execution time between LB and UB is: 0
By far, all LB UB calculation runtime: 2
********************************************************
Total execution on UB and LB is: 2
OUT of Bk while loop  
UB    98
LB    98
T1    98
T2    98
OPT   10
nMachines   10
BkID	0
AllProbData.size()    3
ck :   2
AllProbData[ck].Ttable    98
ck :   1
AllProbData[ck].Ttable    99
ck :   0
AllProbData[ck].Ttable    109
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan101
Main Scheduling is Done
File 3-15 is Done.
******************************
Reading File...
File 3-16 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 195, LB: 99start at time: 1505254846
thread: 0, MlBk is called with LB: 99, UB: 123thread: 
thread: 3, MlBk is called with LB: 171, UB: 195
thread: 1, MlBk is called with LB: 123, UB: 147
2, MlBk is called with LB: 147, UB: 171
 thread: 0, LongJobs.size() 15
 thread: 3, LongJobs.size() 9
 thread: 2, LongJobs.size() 10
 thread: 1, LongJobs.size() 13
thread: 3, NSTable size: 21
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 4
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 3, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 3, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 3, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 3, i: 4, maxN[i].weit: 5, maxN[i].idx: 4, blockDimSize[i]: 5
thread: 3, i: 0, divisor[i]: 2, blockDimSize[i]: 1
thread: 3, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 4, divisor[i]: 5, blockDimSize[i]: 1
thread: 3, largestBlockVec.elm: 0 0 0 1 2 0 0 4 0 0 0 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 1 1 2 2 1 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 2 3 1 1 5 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 1 2 0 0 4 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 1 2 0 0 4 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 0 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 1 0 0 0 3 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 3 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 1 1 0 0 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 1 2 0 0 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 0 0 3 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 4 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 1 0 0 0 4 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 1 1 0 0 3 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 1 2 0 0 2 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 0 0 4 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 1 2 0 0 3 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 1 1 0 0 4 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 1 2 0 0 4 0 0 0 0 0 0 0 0 , mySum: 7
thread: 3, maxBlockLvlSize: 6
thread: 3, maxInBlockLvlSize: 2
thread: 3, AllTableSize: 120, maxSubsetsSize: 64
thread: 2, NSTable size: 30
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 2, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 2, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 2, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 2, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 2, i: 5, maxN[i].weit: 4, maxN[i].idx: 5, blockDimSize[i]: 4
thread: 2, i: 6, maxN[i].weit: 3, maxN[i].idx: 6, blockDimSize[i]: 3
thread: 2, i: 0, divisor[i]: 2, blockDimSize[i]: 1
thread: 2, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 5, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, i: 6, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, largestBlockVec.elm: 0 0 0 1 0 0 0 0 1 2 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 1 2 2 2 2 2 1 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 2 1 1 1 1 2 3 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 1 0 0 0 0 1 2 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 1 0 0 0 0 1 2 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 1 2 0 0 0 0 0 0 , mySum: 3
0 0 0 1 0 0 0 0 0 2 0 0 0 0 0 0 , mySum: 3
0 0 0 1 0 0 0 0 1 1 0 0 0 0 0 0 , mySum: 3
0 0 0 1 0 0 0 0 1 2 0 0 0 0 0 0 , mySum: 4
thread: 2, maxBlockLvlSize: 4
thread: 2, maxInBlockLvlSize: 10
thread: 2, AllTableSize: 384, maxSubsetsSize: 64
thread: 1, NSTable size: 30
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 1, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 1, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 1, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 1, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 1, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 1, i: 6, maxN[i].weit: 4, maxN[i].idx: 6, blockDimSize[i]: 4
thread: 1, i: 7, maxN[i].weit: 2, maxN[i].idx: 7, blockDimSize[i]: 2
thread: 1, i: 0, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 6, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, i: 7, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, largestBlockVec.elm: 0 0 0 1 2 0 0 0 0 0 1 0 0 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 2 1 0 2 2 2 2 2 2 0 0 0 0 
thread: 1, divisorComp: 0 0 0 2 3 0 1 1 1 1 2 1 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 1 2 0 0 0 0 0 1 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 1 2 0 0 0 0 1 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 1 0 0 0 0 0 , mySum: 3
0 0 0 1 1 0 0 0 0 0 1 0 0 0 0 0 , mySum: 3
0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 2 0 0 0 0 0 1 0 0 0 0 0 , mySum: 4
thread: 1, maxBlockLvlSize: 4
thread: 1, maxInBlockLvlSize: 35
thread: 1, AllTableSize: 1536, maxSubsetsSize: 64
thread: 0, NSTable size: 39
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 0, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 0, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 0, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 0, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 0, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 0, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 0, i: 7, maxN[i].weit: 3, maxN[i].idx: 7, blockDimSize[i]: 3
thread: 0, i: 8, maxN[i].weit: 2, maxN[i].idx: 8, blockDimSize[i]: 2
thread: 0, i: 9, maxN[i].weit: 2, maxN[i].idx: 9, blockDimSize[i]: 2
thread: 0, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 3, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 7, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 8, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 9, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, largestBlockVec.elm: 0 0 0 0 2 2 2 0 0 0 0 0 0 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 2 1 1 1 0 0 3 0 2 2 3 2 2 
thread: 0, divisorComp: 0 0 0 1 3 3 3 0 0 1 0 1 1 1 1 1 
thread: 0, largestBlockVec: 0 0 0 0 2 2 2 0 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 2 2 2 0 0 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 1 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 2 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 0 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 1 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 2 2 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 1 2 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 2 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 2 2 0 0 0 0 0 0 0 0 0 , mySum: 6
thread: 0, maxBlockLvlSize: 7
thread: 0, maxInBlockLvlSize: 66
thread: 0, AllTableSize: 7776, maxSubsetsSize: 64
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 4
copy the latest feasible solution to instance takes time: 0.006527
thread: 3, sOPT: 4
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 5
copy the latest feasible solution to instance takes time: 0.022957
thread: 2, sOPT: 5
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 1 0 0 0 0 0 0 
thread: 0, allBlocks[2]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 1 0 0 0 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 1 0 0 0 0 0 0 0 0 
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 7
copy the latest feasible solution to instance takes time: 0.053691
thread: 1, sOPT: 7
thread: 0, allBlocks[4]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 0 2 0 0 0 0 0 0 
thread: 0, allBlocks[5]: 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 0 1 1 0 0 0 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 0 2 0 0 0 0 0 0 0 
thread: 0, allBlocks[7]: 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 0 2 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[8]: 0 1 0 1 0 0 0 0 0 0 
thread: 0, allBlocks[9]: 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[9]: 0 1 1 0 0 0 0 0 0 0 
thread: 0, allBlocks[10]: 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 0 1 1 1 0 0 0 0 0 0 
thread: 0, allBlocks[11]: 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 0 2 1 0 0 0 0 0 0 0 
thread: 0, allBlocks[12]: 0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[12]: 0 2 0 1 0 0 0 0 0 0 
thread: 0, allBlocks[13]: 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[13]: 0 1 2 0 0 0 0 0 0 0 
thread: 0, allBlocks[14]: 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[14]: 0 1 0 2 0 0 0 0 0 0 
thread: 0, allBlocks[15]: 0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[15]: 0 0 2 1 0 0 0 0 0 0 
thread: 0, allBlocks[16]: 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[16]: 0 0 1 2 0 0 0 0 0 0 
thread: 0, allBlocks[17]: 0 0 0 0 1 1 2 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[17]: 0 1 1 2 0 0 0 0 0 0 
thread: 0, allBlocks[18]: 0 0 0 0 1 2 1 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[18]: 0 1 2 1 0 0 0 0 0 0 
thread: 0, allBlocks[19]: 0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[19]: 0 0 2 2 0 0 0 0 0 0 
thread: 0, allBlocks[20]: 0 0 0 0 2 0 2 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[20]: 0 2 0 2 0 0 0 0 0 0 
thread: 0, allBlocks[21]: 0 0 0 0 2 1 1 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[21]: 0 2 1 1 0 0 0 0 0 0 
thread: 0, allBlocks[22]: 0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[22]: 0 2 2 0 0 0 0 0 0 0 
thread: 0, allBlocks[23]: 0 0 0 0 1 2 2 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[23]: 0 1 2 2 0 0 0 0 0 0 
thread: 0, allBlocks[24]: 0 0 0 0 2 1 2 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[24]: 0 2 1 2 0 0 0 0 0 0 
thread: 0, allBlocks[25]: 0 0 0 0 2 2 1 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[25]: 0 2 2 1 0 0 0 0 0 0 
thread: 0, allBlocks[26]: 0 0 0 0 2 2 2 0 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[26]: 0 2 2 2 0 0 0 0 0 0 
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.15085
thread: 0, sOPT: 9
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: Thread: 13, MlBk function is done, and BkID for all processes are collected.2, MlBk function is done, and BkID for all processes are collected., MlBk function is done, and BkID for all processes are collected.


sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 99, UB: 112
BKID: 0, LB: 99, UB: 112, OPT: 9
Dynamic Programming Runtime: 1.62137
Execution time between LB and UB is: 2
By far, all LB UB calculation runtime: 2
Iteration: 2, UB: 112, LB: 99start at time: 1505254848
thread: 0, MlBk is called with LB: 99, UB: 102
 thread: 0, LongJobs.size() 16
thread: thread: thread: 3, MlBk is called with LB: 108, UB: 21121
, MlBk is called with LB: 102, UB: 105
 thread: 3, LongJobs.size() 15
, MlBk is called with LB: 105, UB: 108
 thread: 2, LongJobs.size() 16
 thread: 1, LongJobs.size() 16
thread: 3, NSTable size: 39
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 3, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 3, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 3, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 3, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 3, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 3, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 3, i: 7, maxN[i].weit: 3, maxN[i].idx: 7, blockDimSize[i]: 3
thread: 3, i: 8, maxN[i].weit: 2, maxN[i].idx: 8, blockDimSize[i]: 2
thread: 3, i: 9, maxN[i].weit: 2, maxN[i].idx: 9, blockDimSize[i]: 2
thread: 3, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, i: 3, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 3, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 7, divisor[i]: 1, blockDimSize[i]: 3
thread: 3, i: 8, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 9, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, largestBlockVec.elm: 0 0 0 0 2 2 2 0 0 0 0 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 2 1 1 1 0 0 3 0 2 2 3 2 2 
thread: 3, divisorComp: 0 0 0 1 3 3 3 0 0 1 0 1 1 1 1 1 
thread: 3, largestBlockVec: 0 0 0 0 2 2 2 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 2 2 2 0 0 0 0 0 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 1 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 2 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 0 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 1 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 2 2 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 1 2 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 2 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 2 2 0 0 0 0 0 0 0 0 0 , mySum: 6
thread: 1, NSTable size: 38
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 1, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 1, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 1, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 1, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 1, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 1, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 1, i: 7, maxN[i].weit: 3, maxN[i].idx: 7, blockDimSize[i]: 3
thread: 1, i: 8, maxN[i].weit: 2, maxN[i].idx: 8, blockDimSize[i]: 2
thread: 1, i: 9, maxN[i].weit: 2, maxN[i].idx: 9, blockDimSize[i]: 2
thread: 1, i: 0, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 7, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 8, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 9, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, largestBlockVec.elm: 0 0 0 2 2 2 0 0 0 0 0 0 0 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 1 1 1 3 0 0 3 0 2 2 3 2 2 
thread: 1, divisorComp: 0 0 0 3 3 3 1 0 0 1 0 1 1 1 1 1 
thread: 1, largestBlockVec: 0 0 0 2 2 2 0 0 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 2 2 2 0 0 0 0 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 1 2 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 1 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 2 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 2 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 2 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 1 2 2 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 2 1 2 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 2 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 2 2 2 0 0 0 0 0 0 0 0 0 0 , mySum: 6
thread: 3, maxBlockLvlSize: 7
thread: 3, maxInBlockLvlSize: 66
thread: 3, AllTableSize: 7776thread: , maxSubsetsSize: 64
2, NSTable size: 38
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 2, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 2, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 2, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 2, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 2, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 2, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 2, i: 7, maxN[i].weit: 3, maxN[i].idx: 7, blockDimSize[i]: 3
thread: 2, i: 8, maxN[i].weit: 2, maxN[i].idx: 8, blockDimSize[i]: 2
thread: 2, i: 9, maxN[i].weit: 2, maxN[i].idx: 9, blockDimSize[i]: 2
thread: 2, i: 0, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 3, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 7, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 8, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 9, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, largestBlockVec.elm: 0 0 0 2 2 2 0 0 0 0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 1 1 1 3 0 0 3 0 2 2 3 2 2 
thread: 2, divisorComp: 0 0 0 3 3 3 1 0 0 1 0 1 1 1 1 1 
thread: 2, largestBlockVec: 0 0 0 2 2 2 0 0 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 2 2 2 0 0 0 0 0 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 1 2 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 1 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 2 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 2 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 2 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 1 2 2 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 2 1 2 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 2 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 2 2 2 0 0 0 0 0 0 0 0 0 0 , mySum: 6
thread: 0, NSTable size: 32
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 0, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 0, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 0, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 0, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 0, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 0, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 0, i: 7, maxN[i].weit: 3, maxN[i].idx: 7, blockDimSize[i]: 3
thread: 0, i: 8, maxN[i].weit: 2, maxN[i].idx: 8, blockDimSize[i]: 2
thread: 0, i: 9, maxN[i].weit: 2, maxN[i].idx: 9, blockDimSize[i]: 2
thread: 0, i: 0, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 7, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 8, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 9, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, largestBlockVec.elm: 0 0 0 2 2 2 0 0 0 0 0 0 0 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 1 1 1 3 0 0 3 0 2 2 3 2 2 
thread: 0, divisorComp: 0 0 0 3 3 3 1 0 0 1 0 1 1 1 1 1 
thread: 0, largestBlockVec: 0 0 0 2 2 2 0 0 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 2 2 2 0 0 0 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 1 2 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 1 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 2 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 2 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 2 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 1 2 2 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 2 1 2 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 2 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 2 2 2 0 0 0 0 0 0 0 0 0 0 , mySum: 6
thread: 1, maxBlockLvlSize: 7
thread: 1, maxInBlockLvlSize: 96
thread: 1, AllTableSize: 11664, maxSubsetsSize: 64
thread: 2, maxBlockLvlSize: 7
thread: 2, maxInBlockLvlSize: 96
thread: 2, AllTableSize: 11664, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 7
thread: 0, maxInBlockLvlSize: 96
thread: 0, AllTableSize: 11664, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 1 0 0 0 0 0 0 0 
thread: 0, allBlocks[2]: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 1 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 1 0 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 2 0 0 0 0 0 0 0 
thread: 0, allBlocks[5]: 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 1 1 0 0 0 0 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 2 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[7]: 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 2 0 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[8]: 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[8]: 1 0 1 0 0 0 0 0 0 0 
thread: 0, allBlocks[9]: 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[9]: 1 1 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[10]: 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 1 1 1 0 0 0 0 0 0 0 
thread: 0, allBlocks[11]: 0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 2 1 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[12]: 0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[12]: 2 0 1 0 0 0 0 0 0 0 
thread: 0, allBlocks[13]: 0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[13]: 1 2 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[14]: 0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[14]: 1 0 2 0 0 0 0 0 0 0 
thread: 0, allBlocks[15]: 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[15]: 0 2 1 0 0 0 0 0 0 0 
thread: 0, allBlocks[16]: 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[16]: 0 1 2 0 0 0 0 0 0 0 
thread: 0, allBlocks[17]: 0 0 0 1 1 2 0 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[17]: 1 1 2 0 0 0 0 0 0 0 
thread: 0, allBlocks[18]: 0 0 0 1 2 1 0 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[18]: 1 2 1 0 0 0 0 0 0 0 
thread: 0, allBlocks[19]: 0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[19]: 0 2 2 0 0 0 0 0 0 0 
thread: 0, allBlocks[20]: 0 0 0 2 0 2 0 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[20]: 2 0 2 0 0 0 0 0 0 0 
thread: 0, allBlocks[21]: 0 0 0 2 1 1 0 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[21]: 2 1 1 0 0 0 0 0 0 0 
thread: 0, allBlocks[22]: 0 0 0 2 2 0 0 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[22]: 2 2 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[23]: 0 0 0 1 2 2 0 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[23]: 1 2 2 0 0 0 0 0 0 0 
thread: 0, allBlocks[24]: 0 0 0 2 1 2 0 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[24]: 2 1 2 0 0 0 0 0 0 0 
thread: 0, allBlocks[25]: 0 0 0 2 2 1 0 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[25]: 2 2 1 0 0 0 0 0 0 0 
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 9
thread: 0, allBlocks[26]: 0 0 0 2 2 2 0 0 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[26]: 2 2 2 0 0 0 0 0 0 0 
copy the latest feasible solution to instance takes time: 0.770365
thread: 3, sOPT: 9
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
copy the latest feasible solution to instance takes time: 1.28321
thread: 1, sOPT: 10
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.788165
thread: 2, sOPT: 10
copy the latest feasible solution to instance takes time: 0.508472
thread: 0, sOPT: 10
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 3, MlBk function is done, and BkID for all processes are collected.1, MlBk function is done, and BkID for all processes are collected.Thread: 

2, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 99, UB: 101
BKID: 0, LB: 99, UB: 101, OPT: 10
Dynamic Programming Runtime: 12.2398
Execution time between LB and UB is: 4
By far, all LB UB calculation runtime: 6
Iteration: 3, UB: 101, LB: 99start at time: 1505254852
thread: 0, MlBk is called with LB: 99, UB: 100
 thread: 0, LongJobs.size() 16
thread: 1, MlBk is called with LB: 100, UB: 101
 thread: 1, LongJobs.size() 16
thread: 1, NSTable size: 32
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 1, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 1, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 1, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 1, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 1, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 1, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 1, i: 7, maxN[i].weit: 3, maxN[i].idx: 7, blockDimSize[i]: 3
thread: 1, i: 8, maxN[i].weit: 2, maxN[i].idx: 8, blockDimSize[i]: 2
thread: 1, i: 9, maxN[i].weit: 2, maxN[i].idx: 9, blockDimSize[i]: 2
thread: 1, i: 0, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 7, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 8, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 9, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, largestBlockVec.elm: 0 0 0 2 2 2 0 0 0 0 0 0 0 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 1 1 1 3 0 0 3 0 2 2 3 2 2 
thread: 1, divisorComp: 0 0 0 3 3 3 1 0 0 1 0 1 1 1 1 1 
thread: 1, largestBlockVec: 0 0 0 2 2 2 0 0 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 2 2 2 0 0 0 0 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 1 2 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 1 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 2 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 2 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 2 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 1 2 2 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 2 1 2 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 2 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 2 2 2 0 0 0 0 0 0 0 0 0 0 , mySum: 6
thread: 0, NSTable size: 32
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 0, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 0, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 0, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 0, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 0, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 0, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 0, i: 7, maxN[i].weit: 3, maxN[i].idx: 7, blockDimSize[i]: 3
thread: 0, i: 8, maxN[i].weit: 2, maxN[i].idx: 8, blockDimSize[i]: 2
thread: 0, i: 9, maxN[i].weit: 2, maxN[i].idx: 9, blockDimSize[i]: 2
thread: 0, i: 0, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 7, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 8, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 9, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, largestBlockVec.elm: 0 0 0 2 2 2 0 0 0 0 0 0 0 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 1 1 1 3 0 0 3 0 2 2 3 2 2 
thread: 0, divisorComp: 0 0 0 3 3 3 1 0 0 1 0 1 1 1 1 1 
thread: 0, largestBlockVec: 0 0 0 2 2 2 0 0 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 2 2 2 0 0 0 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 1 2 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 1 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 2 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 2 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 2 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 1 2 2 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 2 1 2 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 2 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 2 2 2 0 0 0 0 0 0 0 0 0 0 , mySum: 6
thread: 1, maxBlockLvlSize: 7
thread: 1, maxInBlockLvlSize: 96
thread: 1, AllTableSize: 11664, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 7
thread: 0, maxInBlockLvlSize: 96
thread: 0, AllTableSize: 11664, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 1 0 0 0 0 0 0 0 
thread: 0, allBlocks[2]: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 1 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 1 0 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 2 0 0 0 0 0 0 0 
thread: 0, allBlocks[5]: 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 1 1 0 0 0 0 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 2 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[7]: 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 2 0 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[8]: 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[8]: 1 0 1 0 0 0 0 0 0 0 
thread: 0, allBlocks[9]: 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[9]: 1 1 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[10]: 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 1 1 1 0 0 0 0 0 0 0 
thread: 0, allBlocks[11]: 0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 2 1 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[12]: 0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[12]: 2 0 1 0 0 0 0 0 0 0 
thread: 0, allBlocks[13]: 0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[13]: 1 2 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[14]: 0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[14]: 1 0 2 0 0 0 0 0 0 0 
thread: 0, allBlocks[15]: 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[15]: 0 2 1 0 0 0 0 0 0 0 
thread: 0, allBlocks[16]: 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[16]: 0 1 2 0 0 0 0 0 0 0 
thread: 0, allBlocks[17]: 0 0 0 1 1 2 0 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[17]: 1 1 2 0 0 0 0 0 0 0 
thread: 0, allBlocks[18]: 0 0 0 1 2 1 0 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[18]: 1 2 1 0 0 0 0 0 0 0 
thread: 0, allBlocks[19]: 0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[19]: 0 2 2 0 0 0 0 0 0 0 
thread: 0, allBlocks[20]: 0 0 0 2 0 2 0 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[20]: 2 0 2 0 0 0 0 0 0 0 
thread: 0, allBlocks[21]: 0 0 0 2 1 1 0 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[21]: 2 1 1 0 0 0 0 0 0 0 
thread: 0, allBlocks[22]: 0 0 0 2 2 0 0 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[22]: 2 2 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[23]: 0 0 0 1 2 2 0 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[23]: 1 2 2 0 0 0 0 0 0 0 
thread: 0, allBlocks[24]: 0 0 0 2 1 2 0 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[24]: 2 1 2 0 0 0 0 0 0 0 
thread: 0, allBlocks[25]: 0 0 0 2 2 1 0 0 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[25]: 2 2 1 0 0 0 0 0 0 0 
thread: 0, allBlocks[26]: 0 0 0 2 2 2 0 0 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[26]: 2 2 2 0 0 0 0 0 0 0 
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.720292
thread: 1, sOPT: 10
copy the latest feasible solution to instance takes time: 0.479972
thread: 0, sOPT: 10
BKID: 0, LB: 99, UB: 99, OPT: 10
Dynamic Programming Runtime: 5.02796
Execution time between LB and UB is: 3
By far, all LB UB calculation runtime: 9
********************************************************
Total execution on UB and LB is: 9
OUT of Bk while loop  
UB    99
LB    99
T1    99
T2    99
OPT   10
nMachines   10
BkID	0
AllProbData.size()    3
ck :   2
AllProbData[ck].Ttable    99
ck :   1
AllProbData[ck].Ttable    100
ck :   0
AllProbData[ck].Ttable    111
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan102
Main Scheduling is Done
File 3-16 is Done.
******************************
Reading File...
File 3-17 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 209, LB: 109start at time: 1505254855
thread: 0, MlBk is called with LB: 109, UB: 134
thread: thread: 3, MlBk is called with LB: 184, UB: 2092, MlBk is called with LB: 
159, UB: 184thread: 1, MlBk is called with LB: 134, UB: 159

 thread: 0, LongJobs.size() 15
 thread: 3, LongJobs.size() 11
 thread:  thread: 1, LongJobs.size() 213, LongJobs.size() 
12
thread: 3, NSTable size: 20
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 4
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 3, i: 1, maxN[i].weit: 4, maxN[i].idx: 1, blockDimSize[i]: 4
thread: 3, i: 2, maxN[i].weit: 5, maxN[i].idx: 2, blockDimSize[i]: 5
thread: 3, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 3, i: 0, divisor[i]: 2, blockDimSize[i]: 2
thread: 3, i: 1, divisor[i]: 2, blockDimSize[i]: 2
thread: 3, i: 2, divisor[i]: 5, blockDimSize[i]: 1
thread: 3, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, largestBlockVec.elm: 0 0 0 1 1 0 4 0 0 0 0 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 2 2 0 1 2 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 2 2 0 5 1 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 1 1 0 4 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 1 1 4 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 3 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 1 0 0 3 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 1 1 0 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 4 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 1 0 0 4 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 1 1 0 3 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 1 1 0 4 0 0 0 0 0 0 0 0 0 , mySum: 6
thread: 3, maxBlockLvlSize: 4
thread: 3, maxInBlockLvlSize: 3
thread: 3, AllTableSize: 160, maxSubsetsSize: 64
thread: 2, NSTable size: 31
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 2, i: 1, maxN[i].weit: 4, maxN[i].idx: 1, blockDimSize[i]: 4
thread: 2, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 2, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 2, i: 4, maxN[i].weit: 5, maxN[i].idx: 4, blockDimSize[i]: 5
thread: 2, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 2, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 1, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 4, divisor[i]: 5, blockDimSize[i]: 1
thread: 2, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, largestBlockVec.elm: 0 0 0 0 1 2 0 0 4 0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 2 2 1 2 0 1 2 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 1 2 3 1 0 5 1 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 1 2 0 0 4 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 1 2 0 4 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 0 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 0 0 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 0 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 0 0 3 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 1 0 0 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 2 0 0 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 0 0 3 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 0 0 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 0 4 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 1 0 0 3 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 2 0 0 2 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 0 0 4 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 2 0 0 3 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 1 0 0 4 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 1 2 0 0 4 0 0 0 0 0 0 0 , mySum: 7
thread: 1, NSTable size: 29
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 1, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 1, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 1, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 1, i: 4, maxN[i].weit: 5, maxN[i].idx: 4, blockDimSize[i]: 5
thread: 1, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 1, i: 0, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 2, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 4, divisor[i]: 5, blockDimSize[i]: 1
thread: 1, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, largestBlockVec.elm: 0 0 0 2 2 0 0 0 0 4 0 0 0 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 1 1 3 3 0 0 1 2 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 3 3 1 1 0 0 5 1 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 2 2 0 0 0 0 4 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 2 2 0 0 4 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 , mySum: 2
0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 , mySum: 2
0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 , mySum: 3
0 0 0 1 1 0 0 0 0 1 0 0 0 0 0 0 , mySum: 3
0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 0 0 0 0 0 2 0 0 0 0 0 0 , mySum: 3
0 0 0 2 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 0 0 0 1 0 0 0 0 0 0 , mySum: 3
0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 0 0 2 0 0 0 0 0 0 , mySum: 3
0 0 0 2 0 0 0 0 0 2 0 0 0 0 0 0 , mySum: 4
0 0 0 1 2 0 0 0 0 1 0 0 0 0 0 0 , mySum: 4
0 0 0 2 1 0 0 0 0 1 0 0 0 0 0 0 , mySum: 4
0 0 0 2 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 1 1 0 0 0 0 2 0 0 0 0 0 0 , mySum: 4
0 0 0 1 0 0 0 0 0 3 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 0 0 0 0 2 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 0 0 0 3 0 0 0 0 0 0 , mySum: 4
0 0 0 1 1 0 0 0 0 3 0 0 0 0 0 0 , mySum: 5
0 0 0 1 0 0 0 0 0 4 0 0 0 0 0 0 , mySum: 5
0 0 0 1 2 0 0 0 0 2 0 0 0 0 0 0 , mySum: 5
0 0 0 2 2 0 0 0 0 1 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 0 0 0 0 3 0 0 0 0 0 0 , mySum: 5
0 0 0 2 0 0 0 0 0 3 0 0 0 0 0 0 , mySum: 5
0 0 0 0 1 0 0 0 0 4 0 0 0 0 0 0 , mySum: 5
0 0 0 2 1 0 0 0 0 2 0 0 0 0 0 0 , mySum: 5
0 0 0 1 1 0 0 0 0 4 0 0 0 0 0 0 , mySum: 6
0 0 0 2 2 0 0 0 0 2 0 0 0 0 0 0 , mySum: 6
0 0 0 2 1 0 0 0 0 3 0 0 0 0 0 0 , mySum: 6
0 0 0 2 0 0 0 0 0 4 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 0 0 0 0 4 0 0 0 0 0 0 , mySum: 6
0 0 0 1 2 0 0 0 0 3 0 0 0 0 0 0 , mySum: 6
0 0 0 2 1 0 0 0 0 4 0 0 0 0 0 0 , mySum: 7
0 0 0 1 2 0 0 0 0 4 0 0 0 0 0 0 , mySum: 7
0 0 0 2 2 0 0 0 0 3 0 0 0 0 0 0 , mySum: 7
0 0 0 2 2 0 0 0 0 4 0 0 0 0 0 0 , mySum: 8
thread: 2, maxBlockLvlSize: 6
thread: 2, maxInBlockLvlSize: 6
thread: 2, AllTableSize: 480, maxSubsetsSize: 64
thread: 1, maxBlockLvlSize: 9
thread: 1, maxInBlockLvlSize: 5
thread: 1, AllTableSize: 810, maxSubsetsSize: 64
thread: 0, NSTable size: 41
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 0, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 0, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 0, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 0, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 0, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 0, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 0, i: 7, maxN[i].weit: 2, maxN[i].idx: 7, blockDimSize[i]: 2
thread: 0, i: 8, maxN[i].weit: 4, maxN[i].idx: 8, blockDimSize[i]: 4
thread: 0, i: 9, maxN[i].weit: 2, maxN[i].idx: 9, blockDimSize[i]: 2
thread: 0, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 3, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 7, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 8, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 9, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, largestBlockVec.elm: 0 0 0 0 0 2 2 0 0 0 0 0 1 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 2 2 1 1 3 2 2 0 2 2 2 0 0 
thread: 0, divisorComp: 0 0 0 1 1 3 3 1 1 1 0 1 2 1 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 2 2 0 0 0 0 0 1 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 2 2 0 0 0 0 1 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 1 0 0 0 , mySum: 3
0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 0 0 0 0 0 0 1 0 0 0 , mySum: 3
0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 0 0 0 0 0 1 0 0 0 , mySum: 3
0 0 0 0 0 1 2 0 0 0 0 0 1 0 0 0 , mySum: 4
0 0 0 0 0 2 1 0 0 0 0 0 1 0 0 0 , mySum: 4
0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 2 0 0 0 0 0 1 0 0 0 , mySum: 5
thread: 0, maxBlockLvlSize: 5
thread: 0, maxInBlockLvlSize: 91
thread: 0, AllTableSize: 6912, maxSubsetsSize: 64
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 5
copy the latest feasible solution to instance takes time: 0.008458
thread: 3, sOPT: 5
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 6
copy the latest feasible solution to instance takes time: 0.023573
thread: 2, sOPT: 6
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 7
copy the latest feasible solution to instance takes time: 0.02784
thread: 1, sOPT: 7
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 0 0 0 1 0 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 0 1 0 0 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 1 0 0 0 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 0 1 0 0 0 0 1 0 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 0 0 2 0 0 0 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 0 1 0 0 0 0 0 1 0 
thread: 0, allBlocks[7]: 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 0 0 1 1 0 0 0 0 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[8]: 0 0 2 0 0 0 0 0 0 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 1 1 0 0 0 0 0 1 0 0 0 mySum: 3
thread: 0, blockNoZero[9]: 0 0 1 1 0 0 0 0 1 0 
thread: 0, allBlocks[10]: 0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 0 0 2 1 0 0 0 0 0 0 
thread: 0, allBlocks[11]: 0 0 0 0 0 2 0 0 0 0 0 0 1 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 0 0 2 0 0 0 0 0 1 0 
thread: 0, allBlocks[12]: 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[12]: 0 0 1 2 0 0 0 0 0 0 
thread: 0, allBlocks[13]: 0 0 0 0 0 0 2 0 0 0 0 0 1 0 0 0 mySum: 3
thread: 0, blockNoZero[13]: 0 0 0 2 0 0 0 0 1 0 
thread: 0, allBlocks[14]: 0 0 0 0 0 1 2 0 0 0 0 0 1 0 0 0 mySum: 4
thread: 0, blockNoZero[14]: 0 0 1 2 0 0 0 0 1 0 
thread: 0, allBlocks[15]: 0 0 0 0 0 2 1 0 0 0 0 0 1 0 0 0 mySum: 4
thread: 0, blockNoZero[15]: 0 0 2 1 0 0 0 0 1 0 
thread: 0, allBlocks[16]: 0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[16]: 0 0 2 2 0 0 0 0 0 0 
thread: 0, allBlocks[17]: 0 0 0 0 0 2 2 0 0 0 0 0 1 0 0 0 mySum: 5
thread: 0, blockNoZero[17]: 0 0 2 2 0 0 0 0 1 0 
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.12146
thread: 0, sOPT: 9
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 3, MlBk function is done, and BkID for all processes are collected.Thread: 
2, MlBk function is done, and BkID for all processes are collected.
1, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 109, UB: 122
BKID: 0, LB: 109, UB: 122, OPT: 9
Dynamic Programming Runtime: 1.2793
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 1
Iteration: 2, UB: 122, LB: 109start at time: 1505254856
thread: 0, MlBk is called with LB: 109, UB: 112
 thread: 0, LongJobs.size() 16
thread: thread: 1, MlBk is called with LB: 112, UB: 115
3, MlBk is called with LB: 118, UB: 122
 thread: 1, LongJobs.size() 16
 thread: 3, LongJobs.size() 15
thread: 2, MlBk is called with LB: 115, UB: 118
 thread: 2, LongJobs.size() 16
thread: 3, NSTable size: 41
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 3, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 3, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 3, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 3, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 3, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 3, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 3, i: 7, maxN[i].weit: 2, maxN[i].idx: 7, blockDimSize[i]: 2
thread: 3, i: 8, maxN[i].weit: 4, maxN[i].idx: 8, blockDimSize[i]: 4
thread: 3, i: 9, maxN[i].weit: 2, maxN[i].idx: 9, blockDimSize[i]: 2
thread: 3, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, i: 3, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 3, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 7, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 8, divisor[i]: 2, blockDimSize[i]: 2
thread: 3, i: 9, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, largestBlockVec.elm: 0 0 0 0 0 2 2 0 0 0 0 0 1 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 2 2 1 1 3 2 2 0 2 2 2 0 0 
thread: 3, divisorComp: 0 0 0 1 1 3 3 1 1 1 0 1 2 1 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 2 2 0 0 0 0 0 1 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 0 2 2 0 0 0 0 1 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 1 0 0 0 , mySum: 3
0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 0 0 0 0 0 0 1 0 0 0 , mySum: 3
0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 0 0 0 0 0 1 0 0 0 , mySum: 3
0 0 0 0 0 1 2 0 0 0 0 0 1 0 0 0 , mySum: 4
0 0 0 0 0 2 1 0 0 0 0 0 1 0 0 0 , mySum: 4
0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 2 0 0 0 0 0 1 0 0 0 , mySum: 5
thread: 0, NSTable size: 33
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 0, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 0, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 0, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 0, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 0, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 0, i: 6, maxN[i].weit: 3, maxN[i].idx: 6, blockDimSize[i]: 3
thread: 0, i: 7, maxN[i].weit: 5, maxN[i].idx: 7, blockDimSize[i]: 5
thread: 0, i: 8, maxN[i].weit: 2, maxN[i].idx: 8, blockDimSize[i]: 2
thread: 0, i: 0, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 6, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 7, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, i: 8, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, largestBlockVec.elm: 0 0 0 0 2 0 2 0 0 0 0 0 0 0 4 0 
thread: 0, blockDimSizeComp: 0 0 0 0 1 2 1 3 2 2 3 0 0 0 1 2 
thread: 0, divisorComp: 0 0 0 0 3 1 3 1 1 1 1 0 0 0 5 1 
thread: 0, largestBlockVec: 0 0 0 0 2 0 2 0 0 0 0 0 0 0 4 0 
thread: 0, largestNoZeroBlockVec: 2 0 2 0 0 0 0 4 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 , mySum: 3
0 0 0 0 1 0 1 0 0 0 0 0 0 0 1 0 , mySum: 3
0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 0 0 0 0 0 0 0 2 0 , mySum: 3
0 0 0 0 2 0 0 0 0 0 0 0 0 0 1 0 , mySum: 3
0 0 0 0 0 0 2 0 0 0 0 0 0 0 1 0 , mySum: 3
0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 0 0 0 0 0 0 0 2 0 , mySum: 3
0 0 0 0 2 0 0 0 0 0 0 0 0 0 2 0 , mySum: 4
0 0 0 0 1 0 2 0 0 0 0 0 0 0 1 0 , mySum: 4
0 0 0 0 2 0 1 0 0 0 0 0 0 0 1 0 , mySum: 4
0 0 0 0 2 0 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 1 0 0 0 0 0 0 0 2 0 , mySum: 4
0 0 0 0 1 0 0 0 0 0 0 0 0 0 3 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 0 , mySum: 4
0 0 0 0 0 0 2 0 0 0 0 0 0 0 2 0 , mySum: 4
0 0 0 0 0 0 1 0 0 0 0 0 0 0 3 0 , mySum: 4
0 0 0 0 1 0 1 0 0 0 0 0 0 0 3 0 , mySum: 5
0 0 0 0 1 0 0 0 0 0 0 0 0 0 4 0 , mySum: 5
0 0 0 0 1 0 2 0 0 0 0 0 0 0 2 0 , mySum: 5
0 0 0 0 2 0 2 0 0 0 0 0 0 0 1 0 , mySum: 5
0 0 0 0 0 0 2 0 0 0 0 0 0 0 3 0 , mySum: 5
0 0 0 0 2 0 0 0 0 0 0 0 0 0 3 0 , mySum: 5
0 0 0 0 0 0 1 0 0 0 0 0 0 0 4 0 , mySum: 5
0 0 0 0 2 0 1 0 0 0 0 0 0 0 2 0 , mySum: 5
0 0 0 0 1 0 1 0 0 0 0 0 0 0 4 0 , mySum: 6
0 0 0 0 2 0 2 0 0 0 0 0 0 0 2 0 , mySum: 6
0 0 0 0 2 0 1 0 0 0 0 0 0 0 3 0 , mySum: 6
0 0 0 0 2 0 0 0 0 0 0 0 0 0 4 0 , mySum: 6
0 0 0 0 0 0 2 0 0 0 0 0 0 0 4 0 , mySum: 6
0 0 0 0 1 0 2 0 0 0 0 0 0 0 3 0 , mySum: 6
0 0 0 0 2 0 1 0 0 0 0 0 0 0 4 0 , mySum: 7
0 0 0 0 1 0 2 0 0 0 0 0 0 0 4 0 , mySum: 7
0 0 0 0 2 0 2 0 0 0 0 0 0 0 3 0 , mySum: 7
0 0 0 0 2 0 2 0 0 0 0 0 0 0 4 0 , mySum: 8
thread: 1, NSTable size: 39
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 1, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 1, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 1, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 1, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 1, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 1, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 1, i: 7, maxN[i].weit: 2, maxN[i].idx: 7, blockDimSize[i]: 2
thread: 1, i: 8, maxN[i].weit: 4, maxN[i].idx: 8, blockDimSize[i]: 4
thread: 1, i: 9, maxN[i].weit: 2, maxN[i].idx: 9, blockDimSize[i]: 2
thread: 1, i: 0, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 7, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 8, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, i: 9, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, largestBlockVec.elm: 0 0 0 2 0 2 0 0 0 0 0 0 1 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 1 2 1 3 3 2 2 0 2 2 2 0 0 
thread: 1, divisorComp: 0 0 0 3 1 3 1 1 1 1 0 1 2 1 0 0 
thread: 1, largestBlockVec: 0 0 0 2 0 2 0 0 0 0 0 0 1 0 0 0 
thread: 1, largestNoZeroBlockVec: 2 0 2 0 0 0 0 0 1 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 , mySum: 2
0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 1 0 0 0 0 0 0 1 0 0 0 , mySum: 3
0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 2 0 0 0 0 0 0 0 0 1 0 0 0 , mySum: 3
0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 0 0 0 0 0 0 1 0 0 0 , mySum: 3
0 0 0 1 0 2 0 0 0 0 0 0 1 0 0 0 , mySum: 4
0 0 0 2 0 1 0 0 0 0 0 0 1 0 0 0 , mySum: 4
0 0 0 2 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 2 0 2 0 0 0 0 0 0 1 0 0 0 , mySum: 5
thread: 0, maxBlockLvlSize: 9
thread: 0, maxInBlockLvlSize: 36
thread: 0, AllTableSize: 6480, maxSubsetsSize: 64
thread: 2, NSTable size: 39
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 2, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 2, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 2, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 2, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 2, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 2, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 2, i: 7, maxN[i].weit: 2, maxN[i].idx: 7, blockDimSize[i]: 2
thread: 2, i: 8, maxN[i].weit: 4, maxN[i].idx: 8, blockDimSize[i]: 4
thread: 2, i: 9, maxN[i].weit: 2, maxN[i].idx: 9, blockDimSize[i]: 2
thread: 2, i: 0, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 3, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 7, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 8, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, i: 9, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, largestBlockVec.elm: 0 0 0 2 0 2 0 0 0 0 0 0 1 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 1 2 1 3 3 2 2 0 2 2 2 0 0 
thread: 2, divisorComp: 0 0 0 3 1 3 1 1 1 1 0 1 2 1 0 0 
thread: 2, largestBlockVec: 0 0 0 2 0 2 0 0 0 0 0 0 1 0 0 0 
thread: 2, largestNoZeroBlockVec: 2 0 2 0 0 0 0 0 1 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 , mySum: 2
0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 1 0 0 0 0 0 0 1 0 0 0 , mySum: 3
0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 2 0 0 0 0 0 0 0 0 1 0 0 0 , mySum: 3
0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 0 0 0 0 0 0 1 0 0 0 , mySum: 3
0 0 0 1 0 2 0 0 0 0 0 0 1 0 0 0 , mySum: 4
0 0 0 2 0 1 0 0 0 0 0 0 1 0 0 0 , mySum: 4
0 0 0 2 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 2 0 2 0 0 0 0 0 0 1 0 0 0 , mySum: 5
thread: 3, maxBlockLvlSize: 5
thread: 3, maxInBlockLvlSize: 91
thread: 3, AllTableSize: 6912, maxSubsetsSize: 64
thread: 1, maxBlockLvlSize: 5
thread: 1, maxInBlockLvlSize: 132
thread: 1, AllTableSize: 10368, maxSubsetsSize: 64
thread: 2, maxBlockLvlSize: 5
thread: 2, maxInBlockLvlSize: 132
thread: 2, AllTableSize: 10368, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 0 0 1 0 
thread: 0, allBlocks[2]: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 1 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 1 0 0 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 1 0 0 0 0 1 0 
thread: 0, allBlocks[5]: 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 1 0 1 0 0 0 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 0 2 0 0 0 0 0 0 
thread: 0, allBlocks[7]: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 mySum: 2
thread: 0, blockNoZero[7]: 1 0 0 0 0 0 0 1 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 mySum: 2
thread: 0, blockNoZero[8]: 0 0 0 0 0 0 0 2 0 
thread: 0, allBlocks[9]: 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[9]: 2 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 mySum: 3
thread: 0, blockNoZero[10]: 0 0 0 0 0 0 0 3 0 
thread: 0, allBlocks[11]: 0 0 0 0 1 0 1 0 0 0 0 0 0 0 1 0 mySum: 3
thread: 0, blockNoZero[11]: 1 0 1 0 0 0 0 1 0 
thread: 0, allBlocks[12]: 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[12]: 1 0 2 0 0 0 0 0 0 
thread: 0, allBlocks[13]: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 2 0 mySum: 3
thread: 0, blockNoZero[13]: 1 0 0 0 0 0 0 2 0 
thread: 0, allBlocks[14]: 0 0 0 0 2 0 0 0 0 0 0 0 0 0 1 0 mySum: 3
thread: 0, blockNoZero[14]: 2 0 0 0 0 0 0 1 0 
thread: 0, allBlocks[15]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 1 0 mySum: 3
thread: 0, blockNoZero[15]: 0 0 2 0 0 0 0 1 0 
thread: 0, allBlocks[16]: 0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[16]: 2 0 1 0 0 0 0 0 0 
thread: 0, allBlocks[17]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 2 0 mySum: 3
thread: 0, blockNoZero[17]: 0 0 1 0 0 0 0 2 0 
thread: 0, allBlocks[18]: 0 0 0 0 2 0 0 0 0 0 0 0 0 0 2 0 mySum: 4
thread: 0, blockNoZero[18]: 2 0 0 0 0 0 0 2 0 
thread: 0, allBlocks[19]: 0 0 0 0 1 0 2 0 0 0 0 0 0 0 1 0 mySum: 4
thread: 0, blockNoZero[19]: 1 0 2 0 0 0 0 1 0 
thread: 0, allBlocks[20]: 0 0 0 0 2 0 1 0 0 0 0 0 0 0 1 0 mySum: 4
thread: 0, blockNoZero[20]: 2 0 1 0 0 0 0 1 0 
thread: 0, allBlocks[21]: 0 0 0 0 2 0 2 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[21]: 2 0 2 0 0 0 0 0 0 
thread: 0, allBlocks[22]: 0 0 0 0 1 0 1 0 0 0 0 0 0 0 2 0 mySum: 4
thread: 0, blockNoZero[22]: 1 0 1 0 0 0 0 2 0 
thread: 0, allBlocks[23]: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 3 0 mySum: 4
thread: 0, blockNoZero[23]: 1 0 0 0 0 0 0 3 0 
thread: 0, allBlocks[24]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 0 mySum: 4
thread: 0, blockNoZero[24]: 0 0 0 0 0 0 0 4 0 
thread: 0, allBlocks[25]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 2 0 mySum: 4
thread: 0, blockNoZero[25]: 0 0 2 0 0 0 0 2 0 
thread: 0, allBlocks[26]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 3 0 mySum: 4
thread: 0, blockNoZero[26]: 0 0 1 0 0 0 0 3 0 
thread: 0, allBlocks[27]: 0 0 0 0 1 0 1 0 0 0 0 0 0 0 3 0 mySum: 5
thread: 0, blockNoZero[27]: 1 0 1 0 0 0 0 3 0 
thread: 0, allBlocks[28]: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 4 0 mySum: 5
thread: 0, blockNoZero[28]: 1 0 0 0 0 0 0 4 0 
thread: 0, allBlocks[29]: 0 0 0 0 1 0 2 0 0 0 0 0 0 0 2 0 mySum: 5
thread: 0, blockNoZero[29]: 1 0 2 0 0 0 0 2 0 
thread: 0, allBlocks[30]: 0 0 0 0 2 0 2 0 0 0 0 0 0 0 1 0 mySum: 5
thread: 0, blockNoZero[30]: 2 0 2 0 0 0 0 1 0 
thread: 0, allBlocks[31]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 3 0 mySum: 5
thread: 0, blockNoZero[31]: 0 0 2 0 0 0 0 3 0 
thread: 0, allBlocks[32]: 0 0 0 0 2 0 0 0 0 0 0 0 0 0 3 0 mySum: 5
thread: 0, blockNoZero[32]: 2 0 0 0 0 0 0 3 0 
thread: 0, allBlocks[33]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 4 0 mySum: 5
thread: 0, blockNoZero[33]: 0 0 1 0 0 0 0 4 0 
thread: 0, allBlocks[34]: 0 0 0 0 2 0 1 0 0 0 0 0 0 0 2 0 mySum: 5
thread: 0, blockNoZero[34]: 2 0 1 0 0 0 0 2 0 
thread: 0, allBlocks[35]: 0 0 0 0 1 0 1 0 0 0 0 0 0 0 4 0 mySum: 6
thread: 0, blockNoZero[35]: 1 0 1 0 0 0 0 4 0 
thread: 0, allBlocks[36]: 0 0 0 0 2 0 2 0 0 0 0 0 0 0 2 0 mySum: 6
thread: 0, blockNoZero[36]: 2 0 2 0 0 0 0 2 0 
thread: 0, allBlocks[37]: 0 0 0 0 2 0 1 0 0 0 0 0 0 0 3 0 mySum: 6
thread: 0, blockNoZero[37]: 2 0 1 0 0 0 0 3 0 
thread: 0, allBlocks[38]: 0 0 0 0 2 0 0 0 0 0 0 0 0 0 4 0 mySum: 6
thread: 0, blockNoZero[38]: 2 0 0 0 0 0 0 4 0 
thread: 0, allBlocks[39]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 4 0 mySum: 6
thread: 0, blockNoZero[39]: 0 0 2 0 0 0 0 4 0 
thread: 0, allBlocks[40]: 0 0 0 0 1 0 2 0 0 0 0 0 0 0 3 0 mySum: 6
thread: 0, blockNoZero[40]: 1 0 2 0 0 0 0 3 0 
thread: 0, allBlocks[41]: 0 0 0 0 2 0 1 0 0 0 0 0 0 0 4 0 mySum: 7
thread: 0, blockNoZero[41]: 2 0 1 0 0 0 0 4 0 
thread: 0, allBlocks[42]: 0 0 0 0 1 0 2 0 0 0 0 0 0 0 4 0 mySum: 7
thread: 0, blockNoZero[42]: 1 0 2 0 0 0 0 4 0 
thread: 0, allBlocks[43]: 0 0 0 0 2 0 2 0 0 0 0 0 0 0 3 0 mySum: 7
thread: 0, blockNoZero[43]: 2 0 2 0 0 0 0 3 0 
thread: 0, allBlocks[44]: 0 0 0 0 2 0 2 0 0 0 0 0 0 0 4 0 mySum: 8
thread: 0, blockNoZero[44]: 2 0 2 0 0 0 0 4 0 
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 1.01571
thread: 0, sOPT: 10
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.497853
thread: 3, sOPT: 9
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.503909
thread: 2, sOPT: 10
copy the latest feasible solution to instance takes time: 0.429712
thread: 1, sOPT: 10
Thread: 1, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 23, MlBk function is done, and BkID for all processes are collected.
, MlBk function is done, and BkID for all processes are collected.
Thread: 0, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 109, UB: 111
BKID: 0, LB: 109, UB: 111, OPT: 10
Dynamic Programming Runtime: 7.8908
Execution time between LB and UB is: 3
By far, all LB UB calculation runtime: 4
Iteration: 3, UB: 111, LB: 109start at time: 1505254859
thread: 0, MlBk is called with LB: 109, UB: 110
 thread: 0, LongJobs.size() 16
thread: 1, MlBk is called with LB: 110, UB: 111
 thread: 1, LongJobs.size() 16
thread: 1, NSTable size: 33
thread: 1, i: thread: 00, NSTable size: , alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 2
33thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 1

thread: 1, i: thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 0, i: 10, maxN[i].weit: , maxN[i].weit: 32, maxN[i].idx: , maxN[i].idx: 1, blockDimSize[i]: 02, blockDimSize[i]: 
3thread: 0, i: 2, maxN[i].weit: 3, maxN[i].idx: 2
, blockDimSize[i]: 3
thread: 1, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 1, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3thread: 0, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 
0, i: 4, maxN[i].weit: 2thread: 1, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: , maxN[i].idx: 1, i: 4, maxN[i].weit: 2, maxN[i].idx: 44, blockDimSize[i]: , blockDimSize[i]: 2
2thread: 1, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 1, i: 6, maxN[i].weit: 3, maxN[i].idx: 6, blockDimSize[i]: 3
thread: 1, i: 7, maxN[i].weit: 5, maxN[i].idx: 7, blockDimSize[i]: 5
thread: 
1, i: thread: 0, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 0, i: 6, maxN[i].weit: 3, maxN[i].idx: 6, blockDimSize[i]: 3
8, maxN[i].weit: 2, maxN[i].idx: 8, blockDimSize[i]: 2
thread: thread: 10, i: , i: 70, maxN[i].weit: 5, divisor[i]: , maxN[i].idx: 7, blockDimSize[i]: 35, blockDimSize[i]: 
thread: 0, i: 8, maxN[i].weit: 2, maxN[i].idx: 8, blockDimSize[i]: 2
thread: 0, i: 0, divisor[i]: 3, blockDimSize[i]: 11
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 2, divisor[i]: 3, blockDimSize[i]: 
1
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 6, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 7, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, i: 8, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: thread: 10, divisor[i]: 1, largestBlockVec.elm: , blockDimSize[i]: 2
0thread: 1, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 6, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 7, divisor[i]: 5, blockDimSize[i]: 1
thread: 1, i: 8, divisor[i]: 1, blockDimSize[i]: 2
 thread: 1, largestBlockVec.elm: 00  0 0 0 0 0 2 0 2 20  0 2 00  0 0 00  00  00  0 4 00  0
thread: 0, blockDimSizeComp: 0 0 0 0 1 2 1 3 2 2 3 4 0 
thread: 1, blockDimSizeComp: 0 0 0 0 1 2 1 3 2 2  3 00  00  0 01 1  22  
thread: 1, divisorComp: 0 0 0 0 3 1 3 1 1 
1 thread: 0, divisorComp: 0 0 0 0 3 1 3 1 1 1 0 0 0 5 1 
thread: 1, largestBlockVec: 0 0 0 0 2 0 2 0 0 01 0  0 0 10 4  00  
thread: 1, largestNoZeroBlockVec: 2 0 2 0 0 0 0 4 0 0
 0 5 1 
thread: 0, largestBlockVec: 0 0 0 0 2 0 2 0 0 0 0 0 0 0 4 0 
thread: 0, largestNoZeroBlockVec: 2 0 2 0 0 0 0 4 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0thread:  00, allBlocks:  0 , mySum: 20
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0  0 0 00 0  0, mySum:  0 20
 00 0 0 0 1 0 0 0 0 0 0 0 0  0 , mySum: 0
00 0 0 0 0 0 0 0 0 0 0 0 0  1 0 , mySum: 20
 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 20 0  , mySum: 2, mySum: 
0 0 0 0 2 0 0 0 0 0 0 0 0 0 10 0
 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 0 0 20
0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0  0 , mySum: 3
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 , mySum: 03 1 
00 0 0 0 1 0 2 0 0 0 0 0 0 0  0, mySum:  0 , mySum: 23

0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 2 0 , mySum: 03 0
 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
00 0 0 0 0 0 2 0 0 0 0 0 0  0 0 0 1, mySum:  0 2, mySum: 
0 0 0 0 1 0 0 0 0 0 0 0 0 03 1 0
 0 0 0 0 0 0 2 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 0 00 2 0  , mySum: 2
10 0 0 0 2 0 0 0 0 0 0 0 0 0  0 00  , mySum: 3, mySum: 
0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 20 , mySum: 3

0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 00 0  32  0 , mySum: 03 , mySum: 
3
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 00 0  2 0 , mySum: 14
 0 0 0 0 1 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 2 0 0 0 0 0 0 0 00 0 , mySum:  3
0 0 0 0 1 0 0 0 0 0 0 0 0 0 21 0  , mySum: 30
 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 1 0 4, mySum: 
0 0 0 0 2 0 1 0 0 0 0 0 0 0 13 0 
, mySum: 0 0 0 0 0 0 2 0 0 0 0 0 0 4
0 0 0 0 2 0 2 0 0 0 0 0 0 00 0  01  , mySum: 0 4
, mySum: 0 0 0 0 1 0 1 0 0 0 0 0 0 3
0 0 0 0 2 0 1 0 0 0 0 0 0 0 2 0 , mySum: 4
0 0 0 0 1 0 0 0 0 0 0 0 00 0 0 , mySum: 3
0 0 0 0 0 0 1 0 0 0 0 0 0 0  2 0 0, mySum:  33
 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 0 04  02  0, mySum:  , mySum: 44

0 0 0 0 0 0 2 0 0 0 0 0 00 0 0 0 1 0 2 0 0 0 0 0 0 2 0 , mySum: 4
 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 , mySum: 04 3
 0 0 0 0 2 0 1 0 0 0 0 0 0 0 10 0  , mySum: , mySum: 44
0 0 0 0 2 0 2 0 0 0 0 0 0 
0 0 0 0 0 1 0 1 0 0 0 0 00 0 , mySum: 4
0 0 0 0 1 0 1 0 0 0 0 0 0 0  2 0 , mySum: 04 0
 0 0 0 0 1 0 0 0 0 0 0 0 0 3 0 , mySum: 5
00 0 0 0 1 0 0 0 0 0 0 0 0  3 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 0 , mySum: 05 4
 0 0 0 0 1 0 2 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 2 0 0 0 0 0 0 0 2 0 , mySum: 5
0 0 0 0 2 0 2 0 0 0 0 0 00 2 0 , mySum: 4
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 , mySum:  53 0
 , mySum: 4
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 00 0 0  33  0 0, mySum: 5 
0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 2 0 0 0 0 0 0 0 00 4 0 , mySum: 5
0 0 0 0 1 0 2 0 0 0 0 0 0 0  2 0 , mySum: 05
0 0 0 0 2 0 2 0 0 0 0 0 0 0 3 0 , mySum: 5 
1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 2 0 0 0 0 0 0 00 4 0 , mySum: 5
 0 0 0 0 2 0 1 0 0 0 0 0 0 30 2 0  , mySum: 5
0 0 0 0 1 0 1 0 0 0 0 0 0 00 4  0, mySum:  5, mySum: 
60 0 0 0 2 0 0 0 0 0 0 0 0 0 3 0
 , mySum: 0 0 0 0 2 0 2 0 0 0 0 5
0 0 0 0 0 0 1 0 0 0 0 0 0 00 4 0  0, mySum:  0 52 
00 0 0 0 2 0 1 0 0 0 0 0 0  , mySum: 6
0 0 0 0 2 0 1 0 0 0 0 0 00 2 0 , mySum: 5
 0 0 0 0 1 0 1 0 0 0 0 0 0 00 3 0 , mySum: 6 
4 00 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 2 0 2 0 0 0 0 0 0 0  2 0 , mySum: 64
0 0 0 0 2 0 1 0 0 0 0 0 0 0  3 00 , mySum: 6 
0 0 0 0 0 0 2 0 0 0 0 0 0 0, mySum: 6
0 0 0 0 2 0 0 0 0 0 0 0 0  4 0 , mySum: 6
0 0 0 0 1 0 2 0 0 0 0 0 00 0 3  0 4, mySum:  60 , mySum: 
6
0 0 0 0 2 0 1 0 0 0 0 0 00 0 0 0 0 0 2 0 0 0 0 0 0  0 04  40  0 , mySum: , mySum: 67
0 0 0 0 1 0 2 0 0 0 0 0 0 
0 0 0 0 0 1 0 2 0 0 0 0 3 0 , mySum: 6
0 0 0 0 2 0 1 0 0 0 0 0 0 0 40 0  0, mySum:  70 
40 0 0 0 1 0 2 0 0 0 0 0 0 0 4  0 , mySum: 0 7, mySum: 7

0 0 0 0 2 0 2 0 0 0 0 0 0 0 0 0 0 0 2 0 2 0 0 0 0 3 0 , mySum: 7
0 0 0 0 2 0 2 0 0 0 0 0 0 00 0 0 3 0 , mySum: 7
0 0 0 0 2 0 2 0 0 0 0 0 0  0 4 40  0 , mySum: , mySum: 88

thread: 0, maxBlockLvlSize: 9
thread: 0, maxInBlockLvlSize: 36
thread: 0, AllTableSize: 6480, maxSubsetsSize: 64
thread: 1, maxBlockLvlSize: 9
thread: 1, maxInBlockLvlSize: 36
thread: 1, AllTableSize: 6480, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 0 0 1 0 
thread: 0, allBlocks[2]: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 1 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 1 0 0 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 1 0 0 0 0 1 0 
thread: 0, allBlocks[5]: 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 1 0 1 0 0 0 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 0 2 0 0 0 0 0 0 
thread: 0, allBlocks[7]: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 mySum: 2
thread: 0, blockNoZero[7]: 1 0 0 0 0 0 0 1 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 mySum: 2
thread: 0, blockNoZero[8]: 0 0 0 0 0 0 0 2 0 
thread: 0, allBlocks[9]: 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[9]: 2 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 mySum: 3
thread: 0, blockNoZero[10]: 0 0 0 0 0 0 0 3 0 
thread: 0, allBlocks[11]: 0 0 0 0 1 0 1 0 0 0 0 0 0 0 1 0 mySum: 3
thread: 0, blockNoZero[11]: 1 0 1 0 0 0 0 1 0 
thread: 0, allBlocks[12]: 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[12]: 1 0 2 0 0 0 0 0 0 
thread: 0, allBlocks[13]: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 2 0 mySum: 3
thread: 0, blockNoZero[13]: 1 0 0 0 0 0 0 2 0 
thread: 0, allBlocks[14]: 0 0 0 0 2 0 0 0 0 0 0 0 0 0 1 0 mySum: 3
thread: 0, blockNoZero[14]: 2 0 0 0 0 0 0 1 0 
thread: 0, allBlocks[15]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 1 0 mySum: 3
thread: 0, blockNoZero[15]: 0 0 2 0 0 0 0 1 0 
thread: 0, allBlocks[16]: 0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[16]: 2 0 1 0 0 0 0 0 0 
thread: 0, allBlocks[17]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 2 0 mySum: 3
thread: 0, blockNoZero[17]: 0 0 1 0 0 0 0 2 0 
thread: 0, allBlocks[18]: 0 0 0 0 2 0 0 0 0 0 0 0 0 0 2 0 mySum: 4
thread: 0, blockNoZero[18]: 2 0 0 0 0 0 0 2 0 
thread: 0, allBlocks[19]: 0 0 0 0 1 0 2 0 0 0 0 0 0 0 1 0 mySum: 4
thread: 0, blockNoZero[19]: 1 0 2 0 0 0 0 1 0 
thread: 0, allBlocks[20]: 0 0 0 0 2 0 1 0 0 0 0 0 0 0 1 0 mySum: 4
thread: 0, blockNoZero[20]: 2 0 1 0 0 0 0 1 0 
thread: 0, allBlocks[21]: 0 0 0 0 2 0 2 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[21]: 2 0 2 0 0 0 0 0 0 
thread: 0, allBlocks[22]: 0 0 0 0 1 0 1 0 0 0 0 0 0 0 2 0 mySum: 4
thread: 0, blockNoZero[22]: 1 0 1 0 0 0 0 2 0 
thread: 0, allBlocks[23]: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 3 0 mySum: 4
thread: 0, blockNoZero[23]: 1 0 0 0 0 0 0 3 0 
thread: 0, allBlocks[24]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 0 mySum: 4
thread: 0, blockNoZero[24]: 0 0 0 0 0 0 0 4 0 
thread: 0, allBlocks[25]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 2 0 mySum: 4
thread: 0, blockNoZero[25]: 0 0 2 0 0 0 0 2 0 
thread: 0, allBlocks[26]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 3 0 mySum: 4
thread: 0, blockNoZero[26]: 0 0 1 0 0 0 0 3 0 
thread: 0, allBlocks[27]: 0 0 0 0 1 0 1 0 0 0 0 0 0 0 3 0 mySum: 5
thread: 0, blockNoZero[27]: 1 0 1 0 0 0 0 3 0 
thread: 0, allBlocks[28]: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 4 0 mySum: 5
thread: 0, blockNoZero[28]: 1 0 0 0 0 0 0 4 0 
thread: 0, allBlocks[29]: 0 0 0 0 1 0 2 0 0 0 0 0 0 0 2 0 mySum: 5
thread: 0, blockNoZero[29]: 1 0 2 0 0 0 0 2 0 
thread: 0, allBlocks[30]: 0 0 0 0 2 0 2 0 0 0 0 0 0 0 1 0 mySum: 5
thread: 0, blockNoZero[30]: 2 0 2 0 0 0 0 1 0 
thread: 0, allBlocks[31]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 3 0 mySum: 5
thread: 0, blockNoZero[31]: 0 0 2 0 0 0 0 3 0 
thread: 0, allBlocks[32]: 0 0 0 0 2 0 0 0 0 0 0 0 0 0 3 0 mySum: 5
thread: 0, blockNoZero[32]: 2 0 0 0 0 0 0 3 0 
thread: 0, allBlocks[33]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 4 0 mySum: 5
thread: 0, blockNoZero[33]: 0 0 1 0 0 0 0 4 0 
thread: 0, allBlocks[34]: 0 0 0 0 2 0 1 0 0 0 0 0 0 0 2 0 mySum: 5
thread: 0, blockNoZero[34]: 2 0 1 0 0 0 0 2 0 
thread: 0, allBlocks[35]: 0 0 0 0 1 0 1 0 0 0 0 0 0 0 4 0 mySum: 6
thread: 0, blockNoZero[35]: 1 0 1 0 0 0 0 4 0 
thread: 0, allBlocks[36]: 0 0 0 0 2 0 2 0 0 0 0 0 0 0 2 0 mySum: 6
thread: 0, blockNoZero[36]: 2 0 2 0 0 0 0 2 0 
thread: 0, allBlocks[37]: 0 0 0 0 2 0 1 0 0 0 0 0 0 0 3 0 mySum: 6
thread: 0, blockNoZero[37]: 2 0 1 0 0 0 0 3 0 
thread: 0, allBlocks[38]: 0 0 0 0 2 0 0 0 0 0 0 0 0 0 4 0 mySum: 6
thread: 0, blockNoZero[38]: 2 0 0 0 0 0 0 4 0 
thread: 0, allBlocks[39]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 4 0 mySum: 6
thread: 0, blockNoZero[39]: 0 0 2 0 0 0 0 4 0 
thread: 0, allBlocks[40]: 0 0 0 0 1 0 2 0 0 0 0 0 0 0 3 0 mySum: 6
thread: 0, blockNoZero[40]: 1 0 2 0 0 0 0 3 0 
thread: 0, allBlocks[41]: 0 0 0 0 2 0 1 0 0 0 0 0 0 0 4 0 mySum: 7
thread: 0, blockNoZero[41]: 2 0 1 0 0 0 0 4 0 
thread: 0, allBlocks[42]: 0 0 0 0 1 0 2 0 0 0 0 0 0 0 4 0 mySum: 7
thread: 0, blockNoZero[42]: 1 0 2 0 0 0 0 4 0 
thread: 0, allBlocks[43]: 0 0 0 0 2 0 2 0 0 0 0 0 0 0 3 0 mySum: 7
thread: 0, blockNoZero[43]: 2 0 2 0 0 0 0 3 0 
thread: 0, allBlocks[44]: 0 0 0 0 2 0 2 0 0 0 0 0 0 0 4 0 mySum: 8
thread: 0, blockNoZero[44]: 2 0 2 0 0 0 0 4 0 
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.263274
thread: 1, sOPT: 10
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.130016
thread: 0, sOPT: 10
BKID: 0, LB: 109, UB: 109, OPT: 10
Dynamic Programming Runtime: 1.76198
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 5
********************************************************
Total execution on UB and LB is: 6
OUT of Bk while loop  
UB    109
LB    109
T1    109
T2    109
OPT   10
nMachines   10
BkID	0
AllProbData.size()    3
ck :   2
AllProbData[ck].Ttable    109
ck :   1
AllProbData[ck].Ttable    110
ck :   0
AllProbData[ck].Ttable    121
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan113
Main Scheduling is Done
File 3-17 is Done.
******************************
Reading File...
File 3-18 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 224, LB: 125start at time: 1505254861
thread: 0, MlBk is called with LB: 125, UB: thread: 150
thread: 3, MlBk is called with LB: 200, UB: 2225, MlBk is called with LB: 175, UB: 200

thread: 1, MlBk is called with LB: 150, UB: 175
 thread: 0, LongJobs.size() 16
 thread: 3, LongJobs.size() 12
 thread: 2, LongJobs.size() 14
 thread: 1, LongJobs.size() 14
thread: 3, NSTable size: 17
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 5
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 5
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 3, i: 1, maxN[i].weit: 6, maxN[i].idx: 1, blockDimSize[i]: 6
thread: 3, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 3, i: 3, maxN[i].weit: 6, maxN[i].idx: 3, blockDimSize[i]: 6
thread: 3, i: 0, divisor[i]: 2, blockDimSize[i]: 1
thread: 3, i: 1, divisor[i]: 2, blockDimSize[i]: 3
thread: 3, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 3, divisor[i]: 2, blockDimSize[i]: 3
thread: 3, largestBlockVec.elm: 0 0 0 1 1 0 1 0 0 0 0 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 1 3 2 3 0 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 2 2 1 2 0 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 1 1 0 1 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 1 1 0 1 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 3
thread: 3, maxBlockLvlSize: 3
thread: 3, maxInBlockLvlSize: 5
thread: 3, AllTableSize: 144, maxSubsetsSize: 64
thread: 1, NSTable size: 19
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 5
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 1, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 1, i: 2, maxN[i].weit: 4, maxN[i].idx: 2, blockDimSize[i]: 4
thread: 1, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 1, i: 4, maxN[i].weit: 6, maxN[i].idx: 4, blockDimSize[i]: 6
thread: 1, i: 0, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 2, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 4, divisor[i]: 2, blockDimSize[i]: 3
thread: 1, largestBlockVec.elm: 0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 0 2 3 2 2 3 0 0 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 2 1 2 1 2 0 0 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 1 0 1 0 1 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0thread:  2, NSTable size: 35
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 5
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 2, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 20
thread: 2, i: 2, maxN[i].weit: 6, maxN[i].idx: 2, blockDimSize[i]:  6
thread: 2, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 2, i: 4, maxN[i].weit: 5, maxN[i].idx: 1 0 1 0 40, blockDimSize[i]: 5
 0thread: 2, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
 thread: 2, i: 0, divisor[i]: 30, blockDimSize[i]:  1
thread: 2, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 2, divisor[i]: 2, blockDimSize[i]: 3
thread: 2, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 4, divisor[i]: 5, blockDimSize[i]: 1
thread: 2, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 20, largestBlockVec.elm:  00  0 00 0  , mySum: 20 
20 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 , mySum: 3
 0 1 0 4 0 0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 1 2 3 2 1 2 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 3 1 2 1 5 1 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 2 0 1 0 4 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 2 0 1 0 4 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 2 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 3 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 1 0 0 0 3 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 2 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 1 0 1 0 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 2 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 1 0 1 0 3 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 2 0 1 0 2 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 2 0 0 0 3 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 1 0 0 0 4 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 0 4 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 2 0 0 0 4 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 1 0 1 0 4 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 2 0 1 0 3 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 2 0 1 0 4 0 0 0 0 0 0 0 0 , mySum: 7
thread: 1, maxBlockLvlSize: 3
thread: 1, maxInBlockLvlSize: 18
thread: 1, AllTableSize: 576, maxSubsetsSize: 64
thread: 2, maxBlockLvlSize: 6
thread: 2, maxInBlockLvlSize: 7
thread: 2, AllTableSize: 720, maxSubsetsSize: 64
thread: 0, NSTable size: 41
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 0, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 0, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 0, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 0, i: 4, maxN[i].weit: 5, maxN[i].idx: 4, blockDimSize[i]: 5
thread: 0, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 0, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 0, i: 7, maxN[i].weit: 5, maxN[i].idx: 7, blockDimSize[i]: 5
thread: 0, i: 8, maxN[i].weit: 2, maxN[i].idx: 8, blockDimSize[i]: 2
thread: 0, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 7, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, i: 8, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, largestBlockVec.elm: 0 0 0 0 0 2 0 4 0 0 4 0 0 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 2 2 1 2 1 2 2 1 2 0 0 0 0 
thread: 0, divisorComp: 0 0 0 1 1 3 1 5 1 1 5 1 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 2 0 4 0 0 4 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 2 0 4 0 0 4 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 0 0 0 0 1 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 0 0 0 2 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 0 0 1 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 1 0 0 1 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 1 0 0 2 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 0 0 0 3 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 0 1 0 0 2 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 0 0 0 0 2 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 0 3 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 0 1 0 0 1 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 3 0 0 1 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 0 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 0 2 0 0 1 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 2 0 0 2 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 1 0 0 3 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 0 3 0 0 1 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 0 2 0 0 2 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 0 4 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 0 0 0 0 3 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 0 1 0 0 2 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 0 2 0 0 1 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 0 3 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 3 0 0 2 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 0 1 0 0 3 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 2 0 0 3 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 0 0 0 0 4 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 4 0 0 1 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 1 0 0 4 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 2 0 0 4 0 0 0 0 0 , mySum: 6
0 0 0 0 0 2 0 1 0 0 3 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 3 0 0 3 0 0 0 0 0 , mySum: 6
0 0 0 0 0 2 0 0 0 0 4 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 4 0 0 2 0 0 0 0 0 , mySum: 6
0 0 0 0 0 2 0 2 0 0 2 0 0 0 0 0 , mySum: 6
0 0 0 0 0 2 0 3 0 0 1 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 0 4 0 0 1 0 0 0 0 0 , mySum: 6
0 0 0 0 0 2 0 4 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 0 3 0 0 2 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 0 1 0 0 4 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 0 2 0 0 3 0 0 0 0 0 , mySum: 6
0 0 0 0 0 2 0 2 0 0 3 0 0 0 0 0 , mySum: 7
0 0 0 0 0 2 0 3 0 0 2 0 0 0 0 0 , mySum: 7
0 0 0 0 0 2 0 4 0 0 1 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 0 2 0 0 4 0 0 0 0 0 , mySum: 7
0 0 0 0 0 2 0 1 0 0 4 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 0 3 0 0 4 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 0 4 0 0 3 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 0 4 0 0 2 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 0 3 0 0 3 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 0 4 0 0 4 0 0 0 0 0 , mySum: 8
0 0 0 0 0 2 0 2 0 0 4 0 0 0 0 0 , mySum: 8
0 0 0 0 0 1 0 4 0 0 3 0 0 0 0 0 , mySum: 8
0 0 0 0 0 2 0 3 0 0 3 0 0 0 0 0 , mySum: 8
0 0 0 0 0 1 0 3 0 0 4 0 0 0 0 0 , mySum: 8
0 0 0 0 0 2 0 4 0 0 2 0 0 0 0 0 , mySum: 8
0 0 0 0 0 1 0 4 0 0 4 0 0 0 0 0 , mySum: 9
0 0 0 0 0 2 0 3 0 0 4 0 0 0 0 0 , mySum: 9
0 0 0 0 0 2 0 4 0 0 3 0 0 0 0 0 , mySum: 9
0 0 0 0 0 2 0 4 0 0 4 0 0 0 0 0 , mySum: 10
thread: 0, maxBlockLvlSize: 13
thread: 0, maxInBlockLvlSize: 20
thread: 0, AllTableSize: 4800, maxSubsetsSize: 64
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 5
copy the latest feasible solution to instance takes time: 0.00827
thread: 3, sOPT: 5
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 7
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 6
copy the latest feasible solution to instance takes time: 0.033034
thread: 1, sOPT: 7
copy the latest feasible solution to instance takes time: 0.035857
thread: 2, sOPT: 6
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 0 0 1 0 
thread: 0, allBlocks[2]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 1 0 0 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 0 0 1 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 0 0 1 0 0 1 0 
thread: 0, allBlocks[5]: 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 0 2 0 0 0 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 0 1 0 1 0 0 0 0 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 0 0 0 0 2 0 0 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[8]: 0 0 0 0 0 0 0 2 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[9]: 0 0 1 0 0 0 0 1 0 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 0 0 0 0 0 0 0 3 0 
thread: 0, allBlocks[11]: 0 0 0 0 0 2 0 0 0 0 1 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 0 0 2 0 0 0 0 1 0 
thread: 0, allBlocks[12]: 0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[12]: 0 0 2 0 1 0 0 0 0 
thread: 0, allBlocks[13]: 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[13]: 0 0 1 0 2 0 0 0 0 
thread: 0, allBlocks[14]: 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[14]: 0 0 0 0 3 0 0 0 0 
thread: 0, allBlocks[15]: 0 0 0 0 0 1 0 0 0 0 2 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[15]: 0 0 1 0 0 0 0 2 0 
thread: 0, allBlocks[16]: 0 0 0 0 0 0 0 2 0 0 1 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[16]: 0 0 0 0 2 0 0 1 0 
thread: 0, allBlocks[17]: 0 0 0 0 0 1 0 1 0 0 1 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[17]: 0 0 1 0 1 0 0 1 0 
thread: 0, allBlocks[18]: 0 0 0 0 0 0 0 1 0 0 2 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[18]: 0 0 0 0 1 0 0 2 0 
thread: 0, allBlocks[19]: 0 0 0 0 0 1 0 0 0 0 3 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[19]: 0 0 1 0 0 0 0 3 0 
thread: 0, allBlocks[20]: 0 0 0 0 0 1 0 1 0 0 2 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[20]: 0 0 1 0 1 0 0 2 0 
thread: 0, allBlocks[21]: 0 0 0 0 0 2 0 0 0 0 2 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[21]: 0 0 2 0 0 0 0 2 0 
thread: 0, allBlocks[22]: 0 0 0 0 0 1 0 3 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[22]: 0 0 1 0 3 0 0 0 0 
thread: 0, allBlocks[23]: 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[23]: 0 0 0 0 4 0 0 0 0 
thread: 0, allBlocks[24]: 0 0 0 0 0 2 0 1 0 0 1 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[24]: 0 0 2 0 1 0 0 1 0 
thread: 0, allBlocks[25]: 0 0 0 0 0 0 0 3 0 0 1 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[25]: 0 0 0 0 3 0 0 1 0 
thread: 0, allBlocks[26]: 0 0 0 0 0 2 0 2 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[26]: 0 0 2 0 2 0 0 0 0 
thread: 0, allBlocks[27]: 0 0 0 0 0 1 0 2 0 0 1 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[27]: 0 0 1 0 2 0 0 1 0 
thread: 0, allBlocks[28]: 0 0 0 0 0 0 0 2 0 0 2 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[28]: 0 0 0 0 2 0 0 2 0 
thread: 0, allBlocks[29]: 0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[29]: 0 0 0 0 0 0 0 4 0 
thread: 0, allBlocks[30]: 0 0 0 0 0 0 0 1 0 0 3 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[30]: 0 0 0 0 1 0 0 3 0 
thread: 0, allBlocks[31]: 0 0 0 0 0 1 0 3 0 0 1 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[31]: 0 0 1 0 3 0 0 1 0 
thread: 0, allBlocks[32]: 0 0 0 0 0 1 0 2 0 0 2 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[32]: 0 0 1 0 2 0 0 2 0 
thread: 0, allBlocks[33]: 0 0 0 0 0 1 0 4 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[33]: 0 0 1 0 4 0 0 0 0 
thread: 0, allBlocks[34]: 0 0 0 0 0 2 0 0 0 0 3 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[34]: 0 0 2 0 0 0 0 3 0 
thread: 0, allBlocks[35]: 0 0 0 0 0 2 0 1 0 0 2 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[35]: 0 0 2 0 1 0 0 2 0 
thread: 0, allBlocks[36]: 0 0 0 0 0 2 0 2 0 0 1 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[36]: 0 0 2 0 2 0 0 1 0 
thread: 0, allBlocks[37]: 0 0 0 0 0 2 0 3 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[37]: 0 0 2 0 3 0 0 0 0 
thread: 0, allBlocks[38]: 0 0 0 0 0 0 0 3 0 0 2 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[38]: 0 0 0 0 3 0 0 2 0 
thread: 0, allBlocks[39]: 0 0 0 0 0 1 0 1 0 0 3 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[39]: 0 0 1 0 1 0 0 3 0 
thread: 0, allBlocks[40]: 0 0 0 0 0 0 0 2 0 0 3 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[40]: 0 0 0 0 2 0 0 3 0 
thread: 0, allBlocks[41]: 0 0 0 0 0 1 0 0 0 0 4 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[41]: 0 0 1 0 0 0 0 4 0 
thread: 0, allBlocks[42]: 0 0 0 0 0 0 0 4 0 0 1 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[42]: 0 0 0 0 4 0 0 1 0 
thread: 0, allBlocks[43]: 0 0 0 0 0 0 0 1 0 0 4 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[43]: 0 0 0 0 1 0 0 4 0 
thread: 0, allBlocks[44]: 0 0 0 0 0 0 0 2 0 0 4 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[44]: 0 0 0 0 2 0 0 4 0 
thread: 0, allBlocks[45]: 0 0 0 0 0 2 0 1 0 0 3 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[45]: 0 0 2 0 1 0 0 3 0 
thread: 0, allBlocks[46]: 0 0 0 0 0 0 0 3 0 0 3 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[46]: 0 0 0 0 3 0 0 3 0 
thread: 0, allBlocks[47]: 0 0 0 0 0 2 0 0 0 0 4 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[47]: 0 0 2 0 0 0 0 4 0 
thread: 0, allBlocks[48]: 0 0 0 0 0 0 0 4 0 0 2 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[48]: 0 0 0 0 4 0 0 2 0 
thread: 0, allBlocks[49]: 0 0 0 0 0 2 0 2 0 0 2 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[49]: 0 0 2 0 2 0 0 2 0 
thread: 0, allBlocks[50]: 0 0 0 0 0 2 0 3 0 0 1 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[50]: 0 0 2 0 3 0 0 1 0 
thread: 0, allBlocks[51]: 0 0 0 0 0 1 0 4 0 0 1 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[51]: 0 0 1 0 4 0 0 1 0 
thread: 0, allBlocks[52]: 0 0 0 0 0 2 0 4 0 0 0 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[52]: 0 0 2 0 4 0 0 0 0 
thread: 0, allBlocks[53]: 0 0 0 0 0 1 0 3 0 0 2 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[53]: 0 0 1 0 3 0 0 2 0 
thread: 0, allBlocks[54]: 0 0 0 0 0 1 0 1 0 0 4 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[54]: 0 0 1 0 1 0 0 4 0 
thread: 0, allBlocks[55]: 0 0 0 0 0 1 0 2 0 0 3 0 0 0 0 0 mySum: 6
thread: 0, blockNoZero[55]: 0 0 1 0 2 0 0 3 0 
thread: 0, allBlocks[56]: 0 0 0 0 0 2 0 2 0 0 3 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[56]: 0 0 2 0 2 0 0 3 0 
thread: 0, allBlocks[57]: 0 0 0 0 0 2 0 3 0 0 2 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[57]: 0 0 2 0 3 0 0 2 0 
thread: 0, allBlocks[58]: 0 0 0 0 0 2 0 4 0 0 1 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[58]: 0 0 2 0 4 0 0 1 0 
thread: 0, allBlocks[59]: 0 0 0 0 0 1 0 2 0 0 4 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[59]: 0 0 1 0 2 0 0 4 0 
thread: 0, allBlocks[60]: 0 0 0 0 0 2 0 1 0 0 4 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[60]: 0 0 2 0 1 0 0 4 0 
thread: 0, allBlocks[61]: 0 0 0 0 0 0 0 3 0 0 4 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[61]: 0 0 0 0 3 0 0 4 0 
thread: 0, allBlocks[62]: 0 0 0 0 0 0 0 4 0 0 3 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[62]: 0 0 0 0 4 0 0 3 0 
thread: 0, allBlocks[63]: 0 0 0 0 0 1 0 4 0 0 2 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[63]: 0 0 1 0 4 0 0 2 0 
thread: 0, allBlocks[64]: 0 0 0 0 0 1 0 3 0 0 3 0 0 0 0 0 mySum: 7
thread: 0, blockNoZero[64]: 0 0 1 0 3 0 0 3 0 
thread: 0, allBlocks[65]: 0 0 0 0 0 0 0 4 0 0 4 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[65]: 0 0 0 0 4 0 0 4 0 
thread: 0, allBlocks[66]: 0 0 0 0 0 2 0 2 0 0 4 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[66]: 0 0 2 0 2 0 0 4 0 
thread: 0, allBlocks[67]: 0 0 0 0 0 1 0 4 0 0 3 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[67]: 0 0 1 0 4 0 0 3 0 
thread: 0, allBlocks[68]: 0 0 0 0 0 2 0 3 0 0 3 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[68]: 0 0 2 0 3 0 0 3 0 
thread: 0, allBlocks[69]: 0 0 0 0 0 1 0 3 0 0 4 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[69]: 0 0 1 0 3 0 0 4 0 
thread: 0, allBlocks[70]: 0 0 0 0 0 2 0 4 0 0 2 0 0 0 0 0 mySum: 8
thread: 0, blockNoZero[70]: 0 0 2 0 4 0 0 2 0 
thread: 0, allBlocks[71]: 0 0 0 0 0 1 0 4 0 0 4 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[71]: 0 0 1 0 4 0 0 4 0 
thread: 0, allBlocks[72]: 0 0 0 0 0 2 0 3 0 0 4 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[72]: 0 0 2 0 3 0 0 4 0 
thread: 0, allBlocks[73]: 0 0 0 0 0 2 0 4 0 0 3 0 0 0 0 0 mySum: 9
thread: 0, blockNoZero[73]: 0 0 2 0 4 0 0 3 0 
thread: 0, allBlocks[74]: 0 0 0 0 0 2 0 4 0 0 4 0 0 0 0 0 mySum: 10
thread: 0, blockNoZero[74]: 0 0 2 0 4 0 0 4 0 
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.081505
thread: 0, sOPT: 9
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 2, MlBk function is done, and BkID for all processes are collected.Thread: 
3, MlBk function is done, and BkID for all processes are collected.
1, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 125, UB: 138
BKID: 0, LB: 125, UB: 138, OPT: 9
Dynamic Programming Runtime: 0.754224
Execution time between LB and UB is: 0
By far, all LB UB calculation runtime: 0
Iteration: 2, UB: 138, LB: 125start at time: 1505254861
thread: 0, MlBk is called with LB: 125, UB: 128
 thread: 0, LongJobs.size() 18
thread: thread: thread: 312, MlBk is called with LB: , MlBk is called with LB: , MlBk is called with LB: 128134, UB: , UB: 131131, UB: 134138

 thread: 1, LongJobs.size() 17

 thread: 3, LongJobs.size() 16
 thread: 2, LongJobs.size() 16
thread: 2, NSTable size: 34
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 2, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 2, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 2, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 2, i: 4, maxN[i].weit: 5, maxN[i].idx: 4, blockDimSize[i]: 5
thread: 2, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 2, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 2, i: 7, maxN[i].weit: 5, maxN[i].idx: 7, blockDimSize[i]: 5
thread: 2, i: 8, maxN[i].weit: 2, maxN[i].idx: 8, blockDimSize[i]: 2
thread: 2, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 4, divisor[i]: 5, blockDimSize[i]: 1
thread: 2, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 7, divisor[i]: 5, blockDimSize[i]: 1
thread: 2, i: 8, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, largestBlockVec.elm: 0 0 0 0 0 2 0 4 0 0 4 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 2 2 1 2 1 2 2 1 2 0 0 0 0 
thread: 2, divisorComp: 0 0 0 1 1 3 1 5 1 1 5 1 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 2 0 4 0 0 4 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 2 0 4 0 0 4 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 0 0 0 0 1 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 0 0 0 2 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 0 0 1 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 1 0 0 1 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 1 0 0 2 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 0 0 0 3 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 0 1 0 0 2 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 0 0 0 0 2 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 0 3 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 0 1 0 0 1 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 3 0 0 1 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 0 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 0 2 0 0 1 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 2 0 0 2 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 1 0 0 3 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 0 3 0 0 1 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 0 2 0 0 2 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 0 4 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 0 0 0 0 3 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 0 1 0 0 2 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 0 2 0 0 1 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 0 3 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 3 0 0 2 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 0 1 0 0 3 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 2 0 0 3 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 0 0 0 0 4 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 4 0 0 1 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 1 0 0 4 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 2 0 0 4 0 0 0 0 0 , mySum: 6
0 0 0 0 0 2 0 1 0 0 3 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 3 0 0 3 0 0 0 0 0 , mySum: 6
0 0 0 0 0 2 0 0 0 0 4 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 4 0 0 2 0 0 0 0 0 , mySum: 6
0 0 0 0 0 2 0 2 0 0 2 0 0 0 0 0 , mySum: 6
0 0 0 0 0 2 0 3 0 0 1 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 0 4 0 0 1 0 0 0 0 0 , mySum: 6
0 0 0 0 0 2 0 4 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 0 3 0 0 2 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 0 1 0 0 4 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 0 2 0 0 3 0 0 0 0 0 , mySum: 6
0 0 0 0 0 2 0 2 0 0 3 0 0 0 0 0 , mySum: 7
0 0 0 0 0 2 0 3 0 0 2 0 0 0 0 0 , mySum: 7
0 0 0 0 0 2 0 4 0 0 1 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 0 2 0 0 4 0 0 0 0 0 , mySum: 7
0 0 0 0 0 2 0 1 0 0 4 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 0 3 0 0 4 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 0 4 0 0 3 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 0 4 0 0 2 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 0 3 0 0 3 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 0 4 0 0 4 0 0 0 0 0 , mySum: 8
0 0 0 0 0 2 0 2 0 0 4 0 0 0 0 0 , mySum: 8
0 0 0 0 0 1 0 4 0 0 3 0 0 0 0 0 , mySum: 8
0 0 0 0 0 2 0 3 0 0 3 0 0 0 0 0 , mySum: 8
0 0 0 0 0 1 0 3 0 0 4 0 0 0 0 0 , mySum: 8
0 0 0 0 0 2 0 4 0 0 2 0 0 0 0 0 , mySum: 8
0 0 0 0 0 1 0 4 0 0 4 0 0 0 0 0 , mySum: 9
0 0 0 0 0 2 0 3 0 0 4 0 0 0 0 0 , mySum: 9
0 0 0 0 0 2 0 4 0 0 3 0 0 0 0 0 , mySum: 9
0 0 0 0 0 2 0 4 0 0 4 0 0 0 0 0 , mySum: 10
thread: 3, NSTable size: 41
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 4
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 4
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 3, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 3, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 3, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 3, i: 4, maxN[i].weit: 5, maxN[i].idx: 4, blockDimSize[i]: 5
thread: 3, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 3, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 3, i: 7, maxN[i].weit: 5, maxN[i].idx: 7, blockDimSize[i]: 5
thread: 3, i: 8, maxN[i].weit: 2, maxN[i].idx: 8, blockDimSize[i]: 2
thread: 3, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 4, divisor[i]: 5, blockDimSize[i]: 1
thread: 3, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 7, divisor[i]: 5, blockDimSize[i]: 1
thread: 3, i: 8, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, largestBlockVec.elm: 0 0 0 0 0 2 0 4 0 0 4 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 2 2 1 2 1 2 2 1 2 0 0 0 0 
thread: 3, divisorComp: 0 0 0 1 1 3 1 5 1 1 5 1 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 2 0 4 0 0 4 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 0 2 0 4 0 0 4 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 0 0 0 0 1 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 0 0 0 2 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 0 0 1 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 1 0 0 1 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 1 0 0 2 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 0 0 0 0 3 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 0 1 0 0 2 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 0 0 0 0 2 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 0 3 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 0 1 0 0 1 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 3 0 0 1 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 0 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 0 2 0 0 1 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 2 0 0 2 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 1 0 0 3 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 0 3 0 0 1 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 0 2 0 0 2 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 0 4 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 0 0 0 0 3 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 0 1 0 0 2 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 0 2 0 0 1 0 0 0 0 0 , mySum: 5
0 0 0 0 0 2 0 3 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 3 0 0 2 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 0 1 0 0 3 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 2 0 0 3 0 0 0 0 0 , mySum: 5
0 0 0 0 0 1 0 0 0 0 4 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 4 0 0 1 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 1 0 0 4 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 2 0 0 4 0 0 0 0 0 , mySum: 6
0 0 0 0 0 2 0 1 0 0 3 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 3 0 0 3 0 0 0 0 0 , mySum: 6
0 0 0 0 0 2 0 0 0 0 4 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 4 0 0 2 0 0 0 0 0 , mySum: 6
0 0 0 0 0 2 0 2 0 0 2 0 0 0 0 0 , mySum: 6
0 0 0 0 0 2 0 3 0 0 1 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 0 4 0 0 1 0 0 0 0 0 , mySum: 6
0 0 0 0 0 2 0 4 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 0 3 0 0 2 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 0 1 0 0 4 0 0 0 0 0 , mySum: 6
0 0 0 0 0 1 0 2 0 0 3 0 0 0 0 0 , mySum: 6
0 0 0 0 0 2 0 2 0 0 3 0 0 0 0 0 , mySum: 7
0 0 0 0 0 2 0 3 0 0 2 0 0 0 0 0 , mySum: 7
0 0 0 0 0 2 0 4 0 0 1 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 0 2 0 0 4 0 0 0 0 0 , mySum: 7
0 0 0 0 0 2 0 1 0 0 4 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 0 3 0 0 4 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 0 4 0 0 3 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 0 4 0 0 2 0 0 0 0 0 , mySum: 7
0 0 0 0 0 1 0 3 0 0 3 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 0 4 0 0 4 0 0 0 0 0 , mySum: 8
0 0 0 0 0 2 0 2 0 0 4 0 0 0 0 0 , mySum: 8
0 0 0 0 0 1 0 4 0 0 3 0 0 0 0 0 , mySum: 8
0 0 0 0 0 2 0 3 0 0 3 0 0 0 0 0 , mySum: 8
0 0 0 0 0 1 0 3 0 0 4 0 0 0 0 0 , mySum: 8
0 0 0 0 0 2 0 4 0 0 2 0 0 0 0 0 , mySum: 8
0 0 0 0 0 1 0 4 0 0 4 0 0 0 0 0 , mySum: 9
0 0 0 0 0 2 0 3 0 0 4 0 0 0 0 0 , mySum: 9
0 0 0 0 0 2 0 4 0 0 3 0 0 0 0 0 , mySum: 9
0 0 0 0 0 2 0 4 0 0 4 0 0 0 0 0 , mySum: 10
thread: 1, NSTable size: 39
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 1, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 1, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 1, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 1, i: 4, maxN[i].weit: 5, maxN[i].idx: 4, blockDimSize[i]: 5
thread: 1, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 1, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 1, i: 7, maxN[i].weit: 5, maxN[i].idx: 7, blockDimSize[i]: 5
thread: 1, i: 8, maxN[i].weit: 2, maxN[i].idx: 8, blockDimSize[i]: 2
thread: 1, i: 0, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 2, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 4, divisor[i]: 5, blockDimSize[i]: 1
thread: 1, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 7, divisor[i]: 5, blockDimSize[i]: 1
thread: 1, i: 8, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, largestBlockVec.elm: 0 0 0 2 0 0 0 4 0 0 4 0 0 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 1 2 3 2 1 2 2 1 2 0 0 0 0 
thread: 1, divisorComp: 0 0 0 3 1 1 1 5 1 1 5 1 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 2 0 0 0 4 0 0 4 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 2 0 0 0 4 0 0 4 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 , mySum: 2
0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 , mySum: 3
0 0 0 2 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 3
0 0 0 2 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 0 0 0 0 0 0 2 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 0 0 1 0 0 0 0 0 , mySum: 3
0 0 0 1 0 0 0 1 0 0 1 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 1 0 0 2 0 0 0 0 0 , mySum: 3
0 0 0 1 0 0 0 0 0 0 3 0 0 0 0 0 , mySum: 4
0 0 0 1 0 0 0 1 0 0 2 0 0 0 0 0 , mySum: 4
0 0 0 2 0 0 0 0 0 0 2 0 0 0 0 0 , mySum: 4
0 0 0 1 0 0 0 3 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 2 0 0 0 1 0 0 1 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 3 0 0 1 0 0 0 0 0 , mySum: 4
0 0 0 2 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 1 0 0 0 2 0 0 1 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 2 0 0 2 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 0 1 0 0 3 0 0 0 0 0 , mySum: 4
0 0 0 1 0 0 0 3 0 0 1 0 0 0 0 0 , mySum: 5
0 0 0 1 0 0 0 2 0 0 2 0 0 0 0 0 , mySum: 5
0 0 0 1 0 0 0 4 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 2 0 0 0 0 0 0 3 0 0 0 0 0 , mySum: 5
0 0 0 2 0 0 0 1 0 0 2 0 0 0 0 0 , mySum: 5
0 0 0 2 0 0 0 2 0 0 1 0 0 0 0 0 , mySum: 5
0 0 0 2 0 0 0 3 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 3 0 0 2 0 0 0 0 0 , mySum: 5
0 0 0 1 0 0 0 1 0 0 3 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 2 0 0 3 0 0 0 0 0 , mySum: 5
0 0 0 1 0 0 0 0 0 0 4 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 4 0 0 1 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 1 0 0 4 0 0 0 0 0 , mySum: 5
0 0 0 0 0 0 0 2 0 0 4 0 0 0 0 0 , mySum: 6
0 0 0 2 0 0 0 1 0 0 3 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 3 0 0 3 0 0 0 0 0 , mySum: 6
0 0 0 2 0 0 0 0 0 0 4 0 0 0 0 0 , mySum: 6
0 0 0 0 0 0 0 4 0 0 2 0 0 0 0 0 , mySum: 6
0 0 0 2 0 0 0 2 0 0 2 0 0 0 0 0 , mySum: 6
0 0 0 2 0 0 0 3 0 0 1 0 0 0 0 0 , mySum: 6
0 0 0 1 0 0 0 4 0 0 1 0 0 0 0 0 , mySum: 6
0 0 0 2 0 0 0 4 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 1 0 0 0 3 0 0 2 0 0 0 0 0 , mySum: 6
0 0 0 1 0 0 0 1 0 0 4 0 0 0 0 0 , mySum: 6
0 0 0 1 0 0 0 2 0 0 3 0 0 0 0 0 , mySum: 6
0 0 0 2 0 0 0 2 0 0 3 0 0 0 0 0 , mySum: 7
0 0 0 2 0 0 0 3 0 0 2 0 0 0 0 0 , mySum: 7
0 0 0 2 0 0 0 4 0 0 1 0 0 0 0 0 , mySum: 7
0 0 0 1 0 0 0 2 0 0 4 0 0 0 0 0 , mySum: 7
0 0 0 2 0 0 0 1 0 0 4 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 0 3 0 0 4 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 0 4 0 0 3 0 0 0 0 0 , mySum: 7
0 0 0 1 0 0 0 4 0 0 2 0 0 0 0 0 , mySum: 7
0 0 0 1 0 0 0 3 0 0 3 0 0 0 0 0 , mySum: 7
0 0 0 0 0 0 0 4 0 0 4 0 0 0 0 0 , mySum: 8
0 0 0 2 0 0 0 2 0 0 4 0 0 0 0 0 , mySum: 8
0 0 0 1 0 0 0 4 0 0 3 0 0 0 0 0 , mySum: 8
0 0 0 2 0 0 0 3 0 0 3 0 0 0 0 0 , mySum: 8
0 0 0 1 0 0 0 3 0 0 4 0 0 0 0 0 , mySum: 8
0 0 0 2 0 0 0 4 0 0 2 0 0 0 0 0 , mySum: 8
0 0 0 1 0 0 0 4 0 0 4 0 0 0 0 0 , mySum: 9
0 0 0 2 0 0 0 3 0 0 4 0 0 0 0 0 , mySum: 9
0 0 0 2 0 0 0 4 0 0 3 0 0 0 0 0 , mySum: 9
0 0 0 2 0 0 0 4 0 0 4 0 0 0 0 0 , mySum: 10
thread: 2, maxBlockLvlSize: 13
thread: 2, maxInBlockLvlSize: 20
thread: 2, AllTableSize: 4800, maxSubsetsSize: 64
thread: 3, maxBlockLvlSize: 13
thread: 3, maxInBlockLvlSize: 20
thread: 3, AllTableSize: 4800, maxSubsetsSize: 64
thread: 1, maxBlockLvlSize: 13
thread: 1, maxInBlockLvlSize: 25
thread: 1, AllTableSize: 7200, maxSubsetsSize: 64
thread: 0, NSTable size: 46
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 0, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 0, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 0, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 0, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 0, i: 5, maxN[i].weit: 4, maxN[i].idx: 5, blockDimSize[i]: 4
thread: 0, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 0, i: 7, maxN[i].weit: 5, maxN[i].idx: 7, blockDimSize[i]: 5
thread: 0, i: 8, maxN[i].weit: 2, maxN[i].idx: 8, blockDimSize[i]: 2
thread: 0, i: 0, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 2, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 5, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 7, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, i: 8, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, largestBlockVec.elm: 0 0 0 2 0 0 0 0 0 1 0 0 4 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 1 3 0 3 2 3 2 2 0 1 2 0 0 
thread: 0, divisorComp: 0 0 0 3 1 0 1 1 1 2 1 0 5 1 0 0 
thread: 0, largestBlockVec: 0 0 0 2 0 0 0 0 0 1 0 0 4 0 0 0 
thread: 0, largestNoZeroBlockVec: 2 0 0 0 0 1 0 4 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 2
0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 , mySum: 2
0 0 0 1 0 0 0 0 0 0 0 0 2 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 , mySum: 3
0 0 0 1 0 0 0 0 0 1 0 0 1 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 1 0 0 2 0 0 0 , mySum: 3
0 0 0 2 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 3
0 0 0 2 0 0 0 0 0 0 0 0 1 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 1 0 0 3 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 , mySum: 4
0 0 0 1 0 0 0 0 0 0 0 0 3 0 0 0 , mySum: 4
0 0 0 2 0 0 0 0 0 1 0 0 1 0 0 0 , mySum: 4
0 0 0 1 0 0 0 0 0 1 0 0 2 0 0 0 , mySum: 4
0 0 0 2 0 0 0 0 0 0 0 0 2 0 0 0 , mySum: 4
0 0 0 1 0 0 0 0 0 1 0 0 3 0 0 0 , mySum: 5
0 0 0 2 0 0 0 0 0 1 0 0 2 0 0 0 , mySum: 5
0 0 0 2 0 0 0 0 0 0 0 0 3 0 0 0 , mySum: 5
0 0 0 1 0 0 0 0 0 0 0 0 4 0 0 0 , mySum: 5
0 0 0 0 0 0 0 0 0 1 0 0 4 0 0 0 , mySum: 5
0 0 0 2 0 0 0 0 0 0 0 0 4 0 0 0 , mySum: 6
0 0 0 1 0 0 0 0 0 1 0 0 4 0 0 0 , mySum: 6
0 0 0 2 0 0 0 0 0 1 0 0 3 0 0 0 , mySum: 6
0 0 0 2 0 0 0 0 0 1 0 0 4 0 0 0 , mySum: 7
thread: 0, maxBlockLvlSize: 6
thread: 0, maxInBlockLvlSize: 96
thread: 0, AllTableSize: 12960, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 0 0 1 0 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 0 0 0 1 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 1 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 1 0 0 0 0 1 0 0 0 
thread: 0, allBlocks[5]: 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 2 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 1 0 0 0 0 0 0 1 0 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 0 0 0 0 0 1 0 1 0 
Thread: 2, gpu_BlockDP is done.
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 mySum: 2
thread: 0, blockNoZero[8]: 0 0 0 0 0 0 0 2 0 
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
thread: 0, allBlocks[9]: 0 0 0 1 0 0 0 0 0 0 0 0 2 0 0 0 mySum: 3
thread: 0, blockNoZero[9]: 1 0 0 0 0 0 0 2 0 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 0 0 0 0 0 0 0 3 0 
thread: 0, allBlocks[11]: 0 0 0 1 0 0 0 0 0 1 0 0 1 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 1 0 0 0 0 1 0 1 0 
copy the latest feasible solution to instance takes time: 0.376832
thread: 2, sOPT: 10
Thread: 3, gpu_BlockDP is done.
thread: 0, allBlocks[12]: 0 0 0 0 0 0 0 0 0 1 0 0 2 0 0 0 mySum: 3
thread: 0, blockNoZero[12]: 0 0 0 0 0 1 0 2 0 
thread: 0, allBlocks[13]: 0 0 0 2 0 0 0 0 0 1 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[13]: 2 0 0 0 0 1 0 0 0 
thread: 0, allBlocks[14]: 0 0 0 2 0 0 0 0 0 0 0 0 1 0 0 0 mySum: 3
thread: 0, blockNoZero[14]: 2 0 0 0 0 0 0 1 0 
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 9
thread: 0, allBlocks[15]: 0 0 0 0 0 0 0 0 0 1 0 0 3 0 0 0 mySum: 4
thread: 0, blockNoZero[15]: 0 0 0 0 0 1 0 3 0 
thread: 0, allBlocks[16]: 0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 mySum: 4
thread: 0, blockNoZero[16]: 0 0 0 0 0 0 0 4 0 
thread: 0, allBlocks[17]: 0 0 0 1 0 0 0 0 0 0 0 0 3 0 0 0 mySum: 4
thread: 0, blockNoZero[17]: 1 0 0 0 0 0 0 3 0 
thread: 0, allBlocks[18]: 0 0 0 2 0 0 0 0 0 1 0 0 1 0 0 0 mySum: 4
thread: 0, blockNoZero[18]: 2 0 0 0 0 1 0 1 0 
thread: 0, allBlocks[19]: 0 0 0 1 0 0 0 0 0 1 0 0 2 0 0 0 mySum: 4
thread: 0, blockNoZero[19]: 1 0 0 0 0 1 0 2 0 
thread: 0, allBlocks[20]: 0 0 0 2 0 0 0 0 0 0 0 0 2 0 0 0 mySum: 4
thread: 0, blockNoZero[20]: 2 0 0 0 0 0 0 2 0 
copy the latest feasible solution to instance takes time: 0.429544
thread: 3, sOPT: 9
thread: 0, allBlocks[21]: 0 0 0 1 0 0 0 0 0 1 0 0 3 0 0 0 mySum: 5
thread: 0, blockNoZero[21]: 1 0 0 0 0 1 0 3 0 
thread: 0, allBlocks[22]: 0 0 0 2 0 0 0 0 0 1 0 0 2 0 0 0 mySum: 5
thread: 0, blockNoZero[22]: 2 0 0 0 0 1 0 2 0 
thread: 0, allBlocks[23]: 0 0 0 2 0 0 0 0 0 0 0 0 3 0 0 0 mySum: 5
thread: 0, blockNoZero[23]: 2 0 0 0 0 0 0 3 0 
thread: 0, allBlocks[24]: 0 0 0 1 0 0 0 0 0 0 0 0 4 0 0 0 mySum: 5
thread: 0, blockNoZero[24]: 1 0 0 0 0 0 0 4 0 
thread: 0, allBlocks[25]: 0 0 0 0 0 0 0 0 0 1 0 0 4 0 0 0 mySum: 5
thread: 0, blockNoZero[25]: 0 0 0 0 0 1 0 4 0 
thread: 0, allBlocks[26]: 0 0 0 2 0 0 0 0 0 0 0 0 4 0 0 0 mySum: 6
thread: 0, blockNoZero[26]: 2 0 0 0 0 0 0 4 0 
thread: 0, allBlocks[27]: 0 0 0 1 0 0 0 0 0 1 0 0 4 0 0 0 mySum: 6
thread: 0, blockNoZero[27]: 1 0 0 0 0 1 0 4 0 
thread: 0, allBlocks[28]: 0 0 0 2 0 0 0 0 0 1 0 0 3 0 0 0 mySum: 6
thread: 0, blockNoZero[28]: 2 0 0 0 0 1 0 3 0 
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
thread: 0, allBlocks[29]: 0 0 0 2 0 0 0 0 0 1 0 0 4 0 0 0 mySum: 7
thread: 0, blockNoZero[29]: 2 0 0 0 0 1 0 4 0 
copy the latest feasible solution to instance takes time: 0.285138
thread: 1, sOPT: 10
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.277781
thread: 0, sOPT: 10
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 2, MlBk function is done, and BkID for all processes are collected.Thread: 1, MlBk function is done, and BkID for all processes are collected.
3
, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 125, UB: 127
BKID: 0, LB: 125, UB: 127, OPT: 10
Dynamic Programming Runtime: 5.13577
Execution time between LB and UB is: 3
By far, all LB UB calculation runtime: 3
Iteration: 3, UB: 127, LB: 125start at time: 1505254864
thread: 0, MlBk is called with LB: 125, UB: 126
 thread: 0, LongJobs.size() 18
thread: 1, MlBk is called with LB: 126, UB: 127
 thread: 1, LongJobs.size() 18
thread: 1, NSTable size: 46
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 1, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 1, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 1, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 1, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 1, i: 5, maxN[i].weit: 4, maxN[i].idx: 5, blockDimSize[i]: 4
thread: 1, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 1, i: 7, maxN[i].weit: 5, maxN[i].idx: 7, blockDimSize[i]: 5
thread: 1, i: 8, maxN[i].weit: 2, maxN[i].idx: 8, blockDimSize[i]: 2
thread: 1, i: 0, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 2, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 5, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 7, divisor[i]: 5, blockDimSize[i]: 1
thread: 1, i: 8, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, largestBlockVec.elm: 0 0 0 2 0 0 0 0 0 1 0 0 4 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 1 3 0 3 2 3 2 2 0 1 2 0 0 
thread: 1, divisorComp: 0 0 0 3 1 0 1 1 1 2 1 0 5 1 0 0 
thread: 1, largestBlockVec: 0 0 0 2 0 0 0 0 0 1 0 0 4 0 0 0 
thread: 1, largestNoZeroBlockVec: 2 0 0 0 0 1 0 4 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 2
0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 , mySum: 2
0 0 0 1 0 0 0 0 0 0 0 0 2 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 , mySum: 3
0 0 0 1 0 0 0 0 0 1 0 0 1 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 1 0 0 2 0 0 0 , mySum: 3
0 0 0 2 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 3
0 0 0 2 0 0 0 0 0 0 0 0 1 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 1 0 0 3 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 , mySum: 4
0 0 0 1 0 0 0 0 0 0 0 0 3 0 0 0 , mySum: 4
0 0 0 2 0 0 0 0 0 1 0 0 1 0 0 0 , mySum: 4
0 0 0 1 0 0 0 0 0 1 0 0 2 0 0 0 , mySum: 4
0 0 0 2 0 0 0 0 0 0 0 0 2 0 0 0 , mySum: 4
0 0 0 1 0 0 0 0 0 1 0 0 3 0 0 0 , mySum: 5
0 0 0 2 0 0 0 0 0 1 0 0 2 0 0 0 , mySum: 5
0 0 0 2 0 0 0 0 0 0 0 0 3 0 0 0 , mySum: 5
0 0 0 1 0 0 0 0 0 0 0 0 4 0 0 0 , mySum: 5
0 0 0 0 0 0 0 0 0 1 0 0 4 0 0 0 , mySum: 5
0 0 0 2 0 0 0 0 0 0 0 0 4 0 0 0 , mySum: 6
0 0 0 1 0 0 0 0 0 1 0 0 4 0 0 0 , mySum: 6
0 0 0 2 0 0 0 0 0 1 0 0 3 0 0 0 , mySum: 6
0 0 0 2 0 0 0 0 0 1 0 0 4 0 0 0 , mySum: 7
thread: 0, NSTable size: 36
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 0, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 0, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 0, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 0, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 0, i: 5, maxN[i].weit: 4, maxN[i].idx: 5, blockDimSize[i]: 4
thread: 0, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 0, i: 7, maxN[i].weit: 5, maxN[i].idx: 7, blockDimSize[i]: 5
thread: 0, i: 8, maxN[i].weit: 2, maxN[i].idx: 8, blockDimSize[i]: 2
thread: 0, i: 0, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 2, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 5, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 7, divisor[i]: 5, blockDimSize[i]: 1
thread: 0, i: 8, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, largestBlockVec.elm: 0 0 0 2 0 0 0 0 0 1 0 0 4 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 1 3 0 3 2 3 2 2 0 1 2 0 0 
thread: 0, divisorComp: 0 0 0 3 1 0 1 1 1 2 1 0 5 1 0 0 
thread: 0, largestBlockVec: 0 0 0 2 0 0 0 0 0 1 0 0 4 0 0 0 
thread: 0, largestNoZeroBlockVec: 2 0 0 0 0 1 0 4 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 2
0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 , mySum: 2
0 0 0 1 0 0 0 0 0 0 0 0 2 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 , mySum: 3
0 0 0 1 0 0 0 0 0 1 0 0 1 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 1 0 0 2 0 0 0 , mySum: 3
0 0 0 2 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 3
0 0 0 2 0 0 0 0 0 0 0 0 1 0 0 0 , mySum: 3
0 0 0 0 0 0 0 0 0 1 0 0 3 0 0 0 , mySum: 4
0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 , mySum: 4
0 0 0 1 0 0 0 0 0 0 0 0 3 0 0 0 , mySum: 4
0 0 0 2 0 0 0 0 0 1 0 0 1 0 0 0 , mySum: 4
0 0 0 1 0 0 0 0 0 1 0 0 2 0 0 0 , mySum: 4
0 0 0 2 0 0 0 0 0 0 0 0 2 0 0 0 , mySum: 4
0 0 0 1 0 0 0 0 0 1 0 0 3 0 0 0 , mySum: 5
0 0 0 2 0 0 0 0 0 1 0 0 2 0 0 0 , mySum: 5
0 0 0 2 0 0 0 0 0 0 0 0 3 0 0 0 , mySum: 5
0 0 0 1 0 0 0 0 0 0 0 0 4 0 0 0 , mySum: 5
0 0 0 0 0 0 0 0 0 1 0 0 4 0 0 0 , mySum: 5
0 0 0 2 0 0 0 0 0 0 0 0 4 0 0 0 , mySum: 6
0 0 0 1 0 0 0 0 0 1 0 0 4 0 0 0 , mySum: 6
0 0 0 2 0 0 0 0 0 1 0 0 3 0 0 0 , mySum: 6
0 0 0 2 0 0 0 0 0 1 0 0 4 0 0 0 , mySum: 7
thread: 1, maxBlockLvlSize: 6
thread: 1, maxInBlockLvlSize: 96
thread: 1, AllTableSize: 12960, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 6
thread: 0, maxInBlockLvlSize: 96
thread: 0, AllTableSize: 12960, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 0 0 1 0 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 0 0 0 1 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 1 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 1 0 0 0 0 1 0 0 0 
thread: 0, allBlocks[5]: 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 2 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 1 0 0 0 0 0 0 1 0 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 0 0 0 0 0 1 0 1 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 mySum: 2
thread: 0, blockNoZero[8]: 0 0 0 0 0 0 0 2 0 
thread: 0, allBlocks[9]: 0 0 0 1 0 0 0 0 0 0 0 0 2 0 0 0 mySum: 3
thread: 0, blockNoZero[9]: 1 0 0 0 0 0 0 2 0 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 0 0 0 0 0 0 0 3 0 
thread: 0, allBlocks[11]: 0 0 0 1 0 0 0 0 0 1 0 0 1 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 1 0 0 0 0 1 0 1 0 
thread: 0, allBlocks[12]: 0 0 0 0 0 0 0 0 0 1 0 0 2 0 0 0 mySum: 3
thread: 0, blockNoZero[12]: 0 0 0 0 0 1 0 2 0 
thread: 0, allBlocks[13]: 0 0 0 2 0 0 0 0 0 1 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[13]: 2 0 0 0 0 1 0 0 0 
thread: 0, allBlocks[14]: 0 0 0 2 0 0 0 0 0 0 0 0 1 0 0 0 mySum: 3
thread: 0, blockNoZero[14]: 2 0 0 0 0 0 0 1 0 
thread: 0, allBlocks[15]: 0 0 0 0 0 0 0 0 0 1 0 0 3 0 0 0 mySum: 4
thread: 0, blockNoZero[15]: 0 0 0 0 0 1 0 3 0 
thread: 0, allBlocks[16]: 0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 mySum: 4
thread: 0, blockNoZero[16]: 0 0 0 0 0 0 0 4 0 
thread: 0, allBlocks[17]: 0 0 0 1 0 0 0 0 0 0 0 0 3 0 0 0 mySum: 4
thread: 0, blockNoZero[17]: 1 0 0 0 0 0 0 3 0 
thread: 0, allBlocks[18]: 0 0 0 2 0 0 0 0 0 1 0 0 1 0 0 0 mySum: 4
thread: 0, blockNoZero[18]: 2 0 0 0 0 1 0 1 0 
thread: 0, allBlocks[19]: 0 0 0 1 0 0 0 0 0 1 0 0 2 0 0 0 mySum: 4
thread: 0, blockNoZero[19]: 1 0 0 0 0 1 0 2 0 
thread: 0, allBlocks[20]: 0 0 0 2 0 0 0 0 0 0 0 0 2 0 0 0 mySum: 4
thread: 0, blockNoZero[20]: 2 0 0 0 0 0 0 2 0 
thread: 0, allBlocks[21]: 0 0 0 1 0 0 0 0 0 1 0 0 3 0 0 0 mySum: 5
thread: 0, blockNoZero[21]: 1 0 0 0 0 1 0 3 0 
thread: 0, allBlocks[22]: 0 0 0 2 0 0 0 0 0 1 0 0 2 0 0 0 mySum: 5
thread: 0, blockNoZero[22]: 2 0 0 0 0 1 0 2 0 
thread: 0, allBlocks[23]: 0 0 0 2 0 0 0 0 0 0 0 0 3 0 0 0 mySum: 5
thread: 0, blockNoZero[23]: 2 0 0 0 0 0 0 3 0 
thread: 0, allBlocks[24]: 0 0 0 1 0 0 0 0 0 0 0 0 4 0 0 0 mySum: 5
thread: 0, blockNoZero[24]: 1 0 0 0 0 0 0 4 0 
thread: 0, allBlocks[25]: 0 0 0 0 0 0 0 0 0 1 0 0 4 0 0 0 mySum: 5
thread: 0, blockNoZero[25]: 0 0 0 0 0 1 0 4 0 
thread: 0, allBlocks[26]: 0 0 0 2 0 0 0 0 0 0 0 0 4 0 0 0 mySum: 6
thread: 0, blockNoZero[26]: 2 0 0 0 0 0 0 4 0 
thread: 0, allBlocks[27]: 0 0 0 1 0 0 0 0 0 1 0 0 4 0 0 0 mySum: 6
thread: 0, blockNoZero[27]: 1 0 0 0 0 1 0 4 0 
thread: 0, allBlocks[28]: 0 0 0 2 0 0 0 0 0 1 0 0 3 0 0 0 mySum: 6
thread: 0, blockNoZero[28]: 2 0 0 0 0 1 0 3 0 
thread: 0, allBlocks[29]: 0 0 0 2 0 0 0 0 0 1 0 0 4 0 0 0 mySum: 7
thread: 0, blockNoZero[29]: 2 0 0 0 0 1 0 4 0 
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 3e-06
thread: 0, sOPT: 11
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.287274
thread: 1, sOPT: 10
BKID: 0, LB: 126, UB: 126, OPT: 10
Dynamic Programming Runtime: 4.34014
Execution time between LB and UB is: 3
By far, all LB UB calculation runtime: 6
********************************************************
Total execution on UB and LB is: 6
OUT of Bk while loop  
UB    126
LB    126
T1    126
T2    126
OPT   10
nMachines   10
BkID	0
AllProbData.size()    3
ck :   2
AllProbData[ck].Ttable    126
ck :   1
AllProbData[ck].Ttable    126
ck :   0
AllProbData[ck].Ttable    137
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan137
Main Scheduling is Done
File 3-18 is Done.
******************************
Reading File...
File 3-19 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 194, LB: 101start at time: 1505254867
thread: 0, MlBk is called with LB: 101, UB: 124thread: 
thread: 3, MlBk is called with LB: 170, UB: 194
2, MlBk is called with LB: 147, UB: 170thread: 
 thread: 0, LongJobs.size() 14
1, MlBk is called with LB: 124, UB: 147
 thread: 2, LongJobs.size() 13
 thread: 3, LongJobs.size() 12
 thread: 1, LongJobs.size() 13
thread: 3, NSTable size: 26
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 5
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 3, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 3, i: 2, maxN[i].weit: 6, maxN[i].idx: 2, blockDimSize[i]: 6
thread: 3, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 3, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 3, i: 0, divisor[i]: 2, blockDimSize[i]: 2
thread: 3, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 2, divisor[i]: 2, blockDimSize[i]: 3
thread: 3, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 4, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, largestBlockVec.elm: 0 0 0 1 0 1 0 2 0 0 0 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 2 2 3 2 1 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 2 1 2 1 3 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 1 0 1 0 2 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 1 0 1 0 2 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 0 1 0 2 0 0 0 0 0 0 0 0 , mySum: 4
thread: 3, maxBlockLvlSize: 4
thread: 3, maxInBlockLvlSize: 7
thread: 3, AllTableSize: 288, maxSubsetsSize: 64
thread: 2, NSTable size: 25
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 5, maxN[i].idx: 0, blockDimSize[i]: 5
thread: 2, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 2, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 2, i: 3, maxN[i].weit: 4, maxN[i].idx: 3, blockDimSize[i]: 4
thread: 2, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 2, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 2, i: 0, divisor[i]: 5, blockDimSize[i]: 1
thread: 2, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 3, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, largestBlockVec.elm: 0 0 0 0 4 0 2 1 0 0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 0 1 2 1 2 3 2 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 5 1 3 2 1 1 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 4 0 2 1 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 4 0 2 1 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 3 0 1 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 3 0 0 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 0 1 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 0 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 1 0 2 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 0 2 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 3 0 1 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 3 0 2 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 4 0 0 1 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 4 0 1 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 0 3 0 2 1 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 4 0 1 1 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 4 0 2 0 0 0 0 0 0 0 0 0 , mySum: 6
0 0 0 0 4 0 2 1 0 0 0 0 0 0 0 0 , mySum: 7
thread: 2, maxBlockLvlSize: 6
thread: 2, maxInBlockLvlSize: 7
thread: 2, AllTableSize: 720, maxSubsetsSize: 64
thread: 1, NSTable size: 23
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 1, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 1, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 1, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 1, i: 4, maxN[i].weit: 4, maxN[i].idx: 4, blockDimSize[i]: 4
thread: 1, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 1, i: 6, maxN[i].weit: 3, maxN[i].idx: 6, blockDimSize[i]: 3
thread: 1, i: 0, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 4, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 6, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, largestBlockVec.elm: 0 0 0 0 2 2 0 0 1 0 0 0 0 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 0 1 1 2 3 2 2 3 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 3 3 1 1 2 1 1 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 2 2 0 0 1 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 2 2 0 0 1 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 0 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 0 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 2 0 0 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 1 0 0 1 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 2 2 0 0 1 0 0 0 0 0 0 0 , mySum: 5
thread: 1, maxBlockLvlSize: 5
thread: 1, maxInBlockLvlSize: 18
thread: 1, AllTableSize: 1296, maxSubsetsSize: 64
thread: 0, NSTable size: 25
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 0, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 0, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 0, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 0, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 0, i: 5, maxN[i].weit: 4, maxN[i].idx: 5, blockDimSize[i]: 4
thread: 0, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 0, i: 7, maxN[i].weit: 2, maxN[i].idx: 7, blockDimSize[i]: 2
thread: 0, i: 8, maxN[i].weit: 2, maxN[i].idx: 8, blockDimSize[i]: 2
thread: 0, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 5, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 7, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 8, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, largestBlockVec.elm: 0 0 0 0 0 2 2 0 0 1 0 0 0 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 2 0 1 1 2 3 2 2 2 2 0 0 0 
thread: 0, divisorComp: 0 0 0 1 0 3 3 1 1 2 1 1 1 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 2 2 0 0 1 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 2 2 0 0 1 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 2 0 0 0 1 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 0 0 1 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 2 0 0 1 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 1 0 0 1 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 2 2 0 0 1 0 0 0 0 0 0 , mySum: 5
thread: 0, maxBlockLvlSize: 5
thread: 0, maxInBlockLvlSize: 50
thread: 0, AllTableSize: 3456, maxSubsetsSize: 64
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 5
copy the latest feasible solution to instance takes time: 0.016194
thread: 3, sOPT: 5
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 6
copy the latest feasible solution to instance takes time: 0.039776
thread: 2, sOPT: 6
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 1 0 0 0 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 1 0 0 0 0 0 0 
Thread: 1, gpu_BlockDP is done.
thread: 0, allBlocks[3]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 1 0 0 0 0 0 0 0 
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 7
copy the latest feasible solution to instance takes time: 0.044381
thread: 1, sOPT: 7
thread: 0, allBlocks[4]: 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 1 0 0 1 0 0 0 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 0 2 0 0 0 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 1 0 0 0 1 0 0 0 
thread: 0, allBlocks[7]: 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 0 1 1 0 0 0 0 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[8]: 0 2 0 0 0 0 0 0 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[9]: 0 1 1 0 0 1 0 0 0 
thread: 0, allBlocks[10]: 0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 0 2 1 0 0 0 0 0 0 
thread: 0, allBlocks[11]: 0 0 0 0 0 2 0 0 0 1 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 0 2 0 0 0 1 0 0 0 
thread: 0, allBlocks[12]: 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[12]: 0 1 2 0 0 0 0 0 0 
thread: 0, allBlocks[13]: 0 0 0 0 0 0 2 0 0 1 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[13]: 0 0 2 0 0 1 0 0 0 
thread: 0, allBlocks[14]: 0 0 0 0 0 1 2 0 0 1 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[14]: 0 1 2 0 0 1 0 0 0 
thread: 0, allBlocks[15]: 0 0 0 0 0 2 1 0 0 1 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[15]: 0 2 1 0 0 1 0 0 0 
thread: 0, allBlocks[16]: 0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[16]: 0 2 2 0 0 0 0 0 0 
thread: 0, allBlocks[17]: 0 0 0 0 0 2 2 0 0 1 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[17]: 0 2 2 0 0 1 0 0 0 
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.058439
thread: 0, sOPT: 9
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 2, MlBk function is done, and BkID for all processes are collected.Thread: 
31, MlBk function is done, and BkID for all processes are collected., MlBk function is done, and BkID for all processes are collected.

sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 101, UB: 113
BKID: 0, LB: 101, UB: 113, OPT: 9
Dynamic Programming Runtime: 0.850828
Execution time between LB and UB is: 0
By far, all LB UB calculation runtime: 0
Iteration: 2, UB: 113, LB: 101start at time: 1505254867
thread: 0, MlBk is called with LB: 101, UB: 104
 thread: 0, LongJobs.size() 16
thread: thread: thread: 1, MlBk is called with LB: 32104, UB: 107
, MlBk is called with LB: 107, UB: 110
, MlBk is called with LB: 110, UB: 113
 thread: 2, LongJobs.size() 14
 thread: 1, LongJobs.size() 15
 thread: 3, LongJobs.size() 14
thread: 2, NSTable size: 21
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 2, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 2, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 2, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 2, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 2, i: 5, maxN[i].weit: 4, maxN[i].idx: 5, blockDimSize[i]: 4
thread: 2, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 2, i: 7, maxN[i].weit: 2, maxN[i].idx: 7, blockDimSize[i]: 2
thread: 2, i: 8, maxN[i].weit: 2, maxN[i].idx: 8, blockDimSize[i]: 2
thread: 2, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 5, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 7, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 8, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, largestBlockVec.elm: 0 0 0 0 0 0 2 2 0 0 0 1 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 0 2 0 1 1 0 2 3 2 2 2 2 0 
thread: 2, divisorComp: 0 0 0 0 1 0 3 3 0 1 1 2 1 1 1 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 2 2 0 0 0 1 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 2 2 0 0 1 0 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 1 0 0 0 1 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 0 0 0 0 1 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 0 0 0 1 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 2 0 0 0 1 0 0 0 0 , mySum: 4
0 0 0 0 0 0 2 1 0 0 0 1 0 0 0 0 , mySum: 4
0 0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 2 2 0 0 0 1 0 0 0 0 , mySum: 5
thread: 3, NSTable size: 21
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 3, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 3, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 3, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 3, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 3, i: 5, maxN[i].weit: 4, maxN[i].idx: 5, blockDimSize[i]: 4
thread: 3, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 3, i: 7, maxN[i].weit: 2, maxN[i].idx: 7, blockDimSize[i]: 2
thread: 3, i: 8, maxN[i].weit: 2, maxN[i].idx: 8, blockDimSize[i]: 2
thread: 3, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 3, i: 5, divisor[i]: 2, blockDimSize[i]: 2
thread: 3, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 7, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 8, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, largestBlockVec.elm: 0 0 0 0 0 0 2 2 0 0 0 1 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 0 2 0 1 1 0 2 3 2 2 2 2 0 
thread: 3, divisorComp: 0 0 0 0 1 0 3 3 0 1 1 2 1 1 1 0 
thread: 3, largestBlockVec: 0 0 0 0 0 0 2 2 0 0 0 1 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 2 2 0 0 1 0 0 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 1 0 0 0 1 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 0 0 0 0 1 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 0 0 0 1 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 2 0 0 0 1 0 0 0 0 , mySum: 4
0 0 0 0 0 0 2 1 0 0 0 1 0 0 0 0 , mySum: 4
0 0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 2 2 0 0 0 1 0 0 0 0 , mySum: 5
thread: 2, maxBlockLvlSize: 5
thread: 2, maxInBlockLvlSize: 50
thread: 2, AllTableSize: 3456, maxSubsetsSize: 64
thread: 3, maxBlockLvlSize: 5
thread: 3, maxInBlockLvlSize: 50
thread: 3, AllTableSize: 3456, maxSubsetsSize: 64
thread: 1, NSTable size: 28
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 1, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 1, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 1, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 1, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 1, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 1, i: 6, maxN[i].weit: 4, maxN[i].idx: 6, blockDimSize[i]: 4
thread: 1, i: 7, maxN[i].weit: 2, maxN[i].idx: 7, blockDimSize[i]: 2
thread: 1, i: 8, maxN[i].weit: 2, maxN[i].idx: 8, blockDimSize[i]: 2
thread: 1, i: 9, maxN[i].weit: 2, maxN[i].idx: 9, blockDimSize[i]: 2
thread: 1, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 3, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 5, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 6, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, i: 7, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 8, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 9, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, largestBlockVec.elm: 0 0 0 0 0 0 2 2 0 0 0 1 0 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 2 2 0 1 1 0 2 3 2 2 2 2 0 
thread: 1, divisorComp: 0 0 0 1 1 0 3 3 0 1 1 2 1 1 1 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 2 2 0 0 0 1 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 2 2 0 0 1 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 1 0 0 0 1 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 0 0 0 0 1 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 0 0 0 1 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 2 0 0 0 1 0 0 0 0 , mySum: 4
0 0 0 0 0 0 2 1 0 0 0 1 0 0 0 0 , mySum: 4
0 0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 2 2 0 0 0 1 0 0 0 0 , mySum: 5
thread: 1, maxBlockLvlSize: 5
thread: 1, maxInBlockLvlSize: 91
thread: 1, AllTableSize: 6912, maxSubsetsSize: 64
thread: 0, NSTable size: 32
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 0, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 0, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 0, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 0, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 0, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 0, i: 6, maxN[i].weit: 4, maxN[i].idx: 6, blockDimSize[i]: 4
thread: 0, i: 7, maxN[i].weit: 2, maxN[i].idx: 7, blockDimSize[i]: 2
thread: 0, i: 8, maxN[i].weit: 2, maxN[i].idx: 8, blockDimSize[i]: 2
thread: 0, i: 9, maxN[i].weit: 2, maxN[i].idx: 9, blockDimSize[i]: 2
thread: 0, i: 0, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 5, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 6, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 7, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 8, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 9, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, largestBlockVec.elm: 0 0 0 2 0 0 2 0 0 0 0 1 0 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 1 2 0 1 3 0 2 3 2 2 2 2 0 
thread: 0, divisorComp: 0 0 0 3 1 0 3 1 0 1 1 2 1 1 1 0 
thread: 0, largestBlockVec: 0 0 0 2 0 0 2 0 0 0 0 1 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 2 0 2 0 0 0 1 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 2
0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 , mySum: 3
0 0 0 2 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 2 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 3
0 0 0 1 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 0 0 0 0 1 0 0 0 0 , mySum: 3
0 0 0 1 0 0 2 0 0 0 0 1 0 0 0 0 , mySum: 4
0 0 0 2 0 0 1 0 0 0 0 1 0 0 0 0 , mySum: 4
0 0 0 2 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 2 0 0 2 0 0 0 0 1 0 0 0 0 , mySum: 5
thread: 0, maxBlockLvlSize: 5
thread: 0, maxInBlockLvlSize: 132
thread: 0, AllTableSize: 10368, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 0 1 0 0 0 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 1 0 0 0 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 1 0 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 1 0 0 0 1 0 0 0 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 0 2 0 0 0 0 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 1 0 0 0 0 0 1 0 0 0 
thread: 0, allBlocks[7]: 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 1 0 1 0 0 0 0 0 0 0 
Thread: 3, gpu_BlockDP is done.
thread: 0, allBlocks[8]: 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[8]: 2 0 0 0 0 0 0 0 0 0 
Thread: 2, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 10
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.401309
thread: 2, sOPT: 10
copy the latest feasible solution to instance takes time: 0.529182
thread: 3, sOPT: 10
thread: 0, allBlocks[9]: 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 mySum: 3
thread: 0, blockNoZero[9]: 1 0 1 0 0 0 1 0 0 0 
thread: 0, allBlocks[10]: 0 0 0 2 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 2 0 1 0 0 0 0 0 0 0 
thread: 0, allBlocks[11]: 0 0 0 2 0 0 0 0 0 0 0 1 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 2 0 0 0 0 0 1 0 0 0 
thread: 0, allBlocks[12]: 0 0 0 1 0 0 2 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[12]: 1 0 2 0 0 0 0 0 0 0 
thread: 0, allBlocks[13]: 0 0 0 0 0 0 2 0 0 0 0 1 0 0 0 0 mySum: 3
thread: 0, blockNoZero[13]: 0 0 2 0 0 0 1 0 0 0 
thread: 0, allBlocks[14]: 0 0 0 1 0 0 2 0 0 0 0 1 0 0 0 0 mySum: 4
thread: 0, blockNoZero[14]: 1 0 2 0 0 0 1 0 0 0 
thread: 0, allBlocks[15]: 0 0 0 2 0 0 1 0 0 0 0 1 0 0 0 0 mySum: 4
thread: 0, blockNoZero[15]: 2 0 1 0 0 0 1 0 0 0 
thread: 0, allBlocks[16]: 0 0 0 2 0 0 2 0 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[16]: 2 0 2 0 0 0 0 0 0 0 
thread: 0, allBlocks[17]: 0 0 0 2 0 0 2 0 0 0 0 1 0 0 0 0 mySum: 5
thread: 0, blockNoZero[17]: 2 0 2 0 0 0 1 0 0 0 
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 11
copy the latest feasible solution to instance takes time: 4e-06
thread: 1, sOPT: 11
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 1e-06
thread: 0, sOPT: 11
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 1, MlBk function is done, and BkID for all processes are collected.
2, MlBk function is done, and BkID for all processes are collected.
Thread: 3, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: 1 1 -1 -1
Pick seg 2 for next iteration where LB: 106, UB: 109
BKID: 0, LB: 106, UB: 109, OPT: 10
Dynamic Programming Runtime: 4.75616
Execution time between LB and UB is: 3
By far, all LB UB calculation runtime: 3
Iteration: 3, UB: 109, LB: 106start at time: 1505254870
thread: 0, MlBk is called with LB: 106, UB: 107
 thread: 0, LongJobs.size() 15
thread: thread: 2, MlBk is called with LB: 1108, UB: , MlBk is called with LB: 109107, UB: 108

 thread: 2, LongJobs.size() 14
 thread: 1, LongJobs.size() 15
thread: 2, NSTable size: 21
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 2, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 2, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 2, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 2, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 2, i: 5, maxN[i].weit: 4, maxN[i].idx: 5, blockDimSize[i]: 4
thread: 2, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 2, i: 7, maxN[i].weit: 2, maxN[i].idx: 7, blockDimSize[i]: 2
thread: 2, i: 8, maxN[i].weit: 2, maxN[i].idx: 8, blockDimSize[i]: 2
thread: 2, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 5, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 7, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 8, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, largestBlockVec.elm: 0 0 0 0 0 0 2 2 0 0 0 1 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 0 2 0 1 1 0 2 3 2 2 2 2 0 
thread: 2, divisorComp: 0 0 0 0 1 0 3 3 0 1 1 2 1 1 1 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 2 2 0 0 0 1 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 2 2 0 0 1 0 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 1 0 0 0 1 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 0 0 0 0 1 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 0 0 0 1 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 2 0 0 0 1 0 0 0 0 , mySum: 4
0 0 0 0 0 0 2 1 0 0 0 1 0 0 0 0 , mySum: 4
0 0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 2 2 0 0 0 1 0 0 0 0 , mySum: 5
thread: 2, maxBlockLvlSize: 5
thread: 2, maxInBlockLvlSize: 50
thread: 2, AllTableSize: 3456, maxSubsetsSize: 64
thread: 1, NSTable size: 28
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 1, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 1, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 1, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 1, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 1, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 1, i: 6, maxN[i].weit: 4, maxN[i].idx: 6, blockDimSize[i]: 4
thread: 1, i: 7, maxN[i].weit: 2, maxN[i].idx: 7, blockDimSize[i]: 2
thread: 1, i: 8, maxN[i].weit: 2, maxN[i].idx: 8, blockDimSize[i]: 2
thread: 1, i: 9, maxN[i].weit: 2, maxN[i].idx: 9, blockDimSize[i]: 2
thread: 1, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 3, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 5, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 6, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, i: 7, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 8, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 9, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, largestBlockVec.elm: 0 0 0 0 0 0 2 2 0 0 0 1 0 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 2 2 0 1 1 0 2 3 2 2 2 2 0 
thread: 1, divisorComp: 0 0 0 1 1 0 3 3 0 1 1 2 1 1 1 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 2 2 0 0 0 1 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 2 2 0 0 1 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 1 0 0 0 1 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 0 0 0 0 1 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 0 0 0 1 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 2 0 0 0 1 0 0 0 0 , mySum: 4
0 0 0 0 0 0 2 1 0 0 0 1 0 0 0 0 , mySum: 4
0 0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 2 2 0 0 0 1 0 0 0 0 , mySum: 5
thread: 0, NSTable size: 28
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 0, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 0, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 0, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 0, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 0, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 0, i: 6, maxN[i].weit: 4, maxN[i].idx: 6, blockDimSize[i]: 4
thread: 0, i: 7, maxN[i].weit: 2, maxN[i].idx: 7, blockDimSize[i]: 2
thread: 0, i: 8, maxN[i].weit: 2, maxN[i].idx: 8, blockDimSize[i]: 2
thread: 0, i: 9, maxN[i].weit: 2, maxN[i].idx: 9, blockDimSize[i]: 2
thread: 0, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 1, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 3, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 5, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 6, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 7, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 8, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 9, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, largestBlockVec.elm: 0 0 0 0 0 0 2 2 0 0 0 1 0 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 2 2 0 1 1 0 2 3 2 2 2 2 0 
thread: 0, divisorComp: 0 0 0 1 1 0 3 3 0 1 1 2 1 1 1 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 2 2 0 0 0 1 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 2 2 0 0 1 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 1 0 0 0 1 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 2 0 0 0 0 1 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 0 0 0 1 0 0 0 0 , mySum: 3
0 0 0 0 0 0 1 2 0 0 0 1 0 0 0 0 , mySum: 4
0 0 0 0 0 0 2 1 0 0 0 1 0 0 0 0 , mySum: 4
0 0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 0 2 2 0 0 0 1 0 0 0 0 , mySum: 5
thread: 1, maxBlockLvlSize: 5
thread: 1, maxInBlockLvlSize: 91
thread: 1, AllTableSize: 6912, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 5
thread: 0, maxInBlockLvlSize: 91
thread: 0, AllTableSize: 6912, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 0 1 0 0 0 
thread: 0, allBlocks[2]: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 0 0 1 0 0 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 1 0 0 0 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 0 1 0 0 1 0 0 0 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 0 0 2 0 0 0 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 0 1 0 0 0 1 0 0 0 
thread: 0, allBlocks[7]: 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 0 0 1 1 0 0 0 0 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[8]: 0 0 2 0 0 0 0 0 0 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 0 1 1 0 0 0 1 0 0 0 0 mySum: 3
thread: 0, blockNoZero[9]: 0 0 1 1 0 0 1 0 0 0 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 0 0 2 1 0 0 0 0 0 0 
thread: 0, allBlocks[11]: 0 0 0 0 0 0 2 0 0 0 0 1 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 0 0 2 0 0 0 1 0 0 0 
Thread: 2, gpu_BlockDP is done.
thread: 0, allBlocks[12]: 0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[12]: 0 0 1 2 0 0 0 0 0 0 
thread: 0, allBlocks[13]: 0 0 0 0 0 0 0 2 0 0 0 1 0 0 0 0 mySum: 3
thread: 0, blockNoZero[13]: 0 0 0 2 0 0 1 0 0 0 
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.303826
thread: 2, sOPT: 10
thread: 0, allBlocks[14]: 0 0 0 0 0 0 1 2 0 0 0 1 0 0 0 0 mySum: 4
thread: 0, blockNoZero[14]: 0 0 1 2 0 0 1 0 0 0 
thread: 0, allBlocks[15]: 0 0 0 0 0 0 2 1 0 0 0 1 0 0 0 0 mySum: 4
thread: 0, blockNoZero[15]: 0 0 2 1 0 0 1 0 0 0 
thread: 0, allBlocks[16]: 0 0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[16]: 0 0 2 2 0 0 0 0 0 0 
thread: 0, allBlocks[17]: 0 0 0 0 0 0 2 2 0 0 0 1 0 0 0 0 mySum: 5
thread: 0, blockNoZero[17]: 0 0 2 2 0 0 1 0 0 0 
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 3e-06
thread: 0, sOPT: 11
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 11
copy the latest feasible solution to instance takes time: 1e-06
thread: 1, sOPT: 11
BKID: 0, LB: 108, UB: 108, OPT: 10
Dynamic Programming Runtime: 2.86907
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 4
********************************************************
Total execution on UB and LB is: 4
OUT of Bk while loop  
UB    108
LB    108
T1    108
T2    108
OPT   10
nMachines   10
BkID	0
AllProbData.size()    3
ck :   2
AllProbData[ck].Ttable    108
ck :   1
AllProbData[ck].Ttable    108
ck :   0
AllProbData[ck].Ttable    112
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan116
Main Scheduling is Done
File 3-19 is Done.
******************************
Reading File...
File 3-20 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 190, LB: 97start at time: 1505254871
thread: 0, MlBk is called with LB: 97, UB: 120
thread: 3, MlBk is called with LB: 166, UB: 190
 thread: 0, LongJobs.size() 13
thread: thread: 2, MlBk is called with LB: 143, UB: 1661
, MlBk is called with LB: 120, UB: 143
 thread: 3, LongJobs.size() 9
 thread: 2, LongJobs.size() 12
 thread: 1, LongJobs.size() 12
thread: 3, NSTable size: 16
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 4
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 3, i: 1, maxN[i].weit: 2, maxN[i].idx: 1, blockDimSize[i]: 2
thread: 3, i: 2, maxN[i].weit: 5, maxN[i].idx: 2, blockDimSize[i]: 5
thread: 3, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 3, i: 0, divisor[i]: 2, blockDimSize[i]: 2
thread: 3, i: 1, divisor[i]: 2, blockDimSize[i]: 1
thread: 3, i: 2, divisor[i]: 5, blockDimSize[i]: 1
thread: 3, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, largestBlockVec.elm: 0 0 0 1 0 1 4 0 0 0 0 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 2 0 1 1 2 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 2 0 2 5 1 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 1 0 1 4 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 1 1 4 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 0 0 2 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 1 0 0 3 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 1 0 1 2 0 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 0 0 1 4 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 1 0 0 4 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 1 0 1 3 0 0 0 0 0 0 0 0 0 , mySum: 5
0 0 0 1 0 1 4 0 0 0 0 0 0 0 0 0 , mySum: 6
thread: 3, maxBlockLvlSize: 4
thread: 3, maxInBlockLvlSize: 2
thread: 3, AllTableSize: 80, maxSubsetsSize: 64
thread: 1, NSTable size: 17
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 1, i: 1, maxN[i].weit: 4, maxN[i].idx: 1, blockDimSize[i]: 4
thread: 1, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 1, i: 3, maxN[i].weit: 3, maxN[i].idx: 3, blockDimSize[i]: 3
thread: 1, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 1, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 1, i: 0, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, i: 1, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 3, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, largestBlockVec.elm: 0 0 0 0 1 1 0 0 2 0 0 0 0 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 0 2 2 0 2 1 3 0 2 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 2 2 0 1 3 1 0 1 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 1 1 0 0 2 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 1 1 0 2 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 0 0 0 2 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 1 1 0 0 2 0 0 0 0 0 0 0 , mySum: 4
thread: 2, NSTable size: 43
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 0, maxN[i].weit: 4, maxN[i].idx: 0, blockDimSize[i]: 4
thread: 2, i: 1, maxN[i].weit: 3, maxN[i].idx: 1, blockDimSize[i]: 3
thread: 2, i: 2, maxN[i].weit: 2, maxN[i].idx: 2, blockDimSize[i]: 2
thread: 2, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 2, i: 4, maxN[i].weit: 3, maxN[i].idx: 4, blockDimSize[i]: 3
thread: 2, i: 5, maxN[i].weit: 3, maxN[i].idx: 5, blockDimSize[i]: 3
thread: 2, i: 6, maxN[i].weit: 2, maxN[i].idx: 6, blockDimSize[i]: 2
thread: 2, i: 0, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, i: 1, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 2, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 4, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 5, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 6, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, largestBlockVec.elm: 0 0 0 1 2 0 0 2 0 0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 2 1 2 2 1 3 2 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 2 3 1 1 3 1 1 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 1 2 0 0 2 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 1 2 0 0 2 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 2 0 0 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 1 1 0 0 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 1 2 0 0 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 1 2 0 0 2 0 0 0 0 0 0 0 0 , mySum: 5
thread: 1, maxBlockLvlSize: 4
thread: 1, maxInBlockLvlSize: 14
thread: 1, AllTableSize: 576, maxSubsetsSize: 64
thread: 2, maxBlockLvlSize: 5
thread: 2, maxInBlockLvlSize: 14
thread: 2, AllTableSize: 864, maxSubsetsSize: 64
thread: 0, NSTable size: 26
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 0, maxN[i].weit: 2, maxN[i].idx: 0, blockDimSize[i]: 2
thread: 0, i: 1, maxN[i].weit: 4, maxN[i].idx: 1, blockDimSize[i]: 4
thread: 0, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 0, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 0, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 0, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 0, i: 6, maxN[i].weit: 3, maxN[i].idx: 6, blockDimSize[i]: 3
thread: 0, i: 7, maxN[i].weit: 2, maxN[i].idx: 7, blockDimSize[i]: 2
thread: 0, i: 8, maxN[i].weit: 2, maxN[i].idx: 8, blockDimSize[i]: 2
thread: 0, i: 0, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 1, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 6, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 7, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 8, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, largestBlockVec.elm: 0 0 0 0 0 1 0 2 0 0 0 0 2 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 2 0 2 0 1 2 0 2 2 1 2 0 2 
thread: 0, divisorComp: 0 0 0 1 0 2 0 3 1 0 1 1 3 1 0 1 
thread: 0, largestBlockVec: 0 0 0 0 0 1 0 2 0 0 0 0 2 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 1 2 0 0 0 2 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 , mySum: 2
0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 0 0 0 0 2 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 0 0 0 0 1 0 0 0 , mySum: 3
0 0 0 0 0 1 0 0 0 0 0 0 2 0 0 0 , mySum: 3
0 0 0 0 0 1 0 1 0 0 0 0 1 0 0 0 , mySum: 3
0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 0 0 0 0 2 0 0 0 0 2 0 0 0 , mySum: 4
0 0 0 0 0 1 0 1 0 0 0 0 2 0 0 0 , mySum: 4
0 0 0 0 0 1 0 2 0 0 0 0 1 0 0 0 , mySum: 4
0 0 0 0 0 1 0 2 0 0 0 0 2 0 0 0 , mySum: 5
thread: 0, maxBlockLvlSize: 5
thread: 0, maxInBlockLvlSize: 35
thread: 0, AllTableSize: 2304, maxSubsetsSize: 64
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 4
copy the latest feasible solution to instance takes time: 0.00293
thread: 3, sOPT: 4
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 0 0 0 0 1 0 0 
thread: 0, allBlocks[2]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 1 0 0 0 0 0 0 0 
Thread: 1, gpu_BlockDP is done.
thread: 0, allBlocks[3]: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 0 0 1 0 0 0 0 0 0 
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 7
copy the latest feasible solution to instance takes time: 0.035895
thread: 1, sOPT: 7
thread: 0, allBlocks[4]: 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 0 0 1 0 0 0 1 0 0 
thread: 0, allBlocks[5]: 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 0 0 2 0 0 0 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 0 0 0 0 0 0 2 0 0 
thread: 0, allBlocks[7]: 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 0 1 0 0 0 0 1 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[8]: 0 1 1 0 0 0 0 0 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 0 0 1 0 0 0 0 2 0 0 0 mySum: 3
thread: 0, blockNoZero[9]: 0 0 1 0 0 0 2 0 0 
thread: 0, allBlocks[10]: 0 0 0 0 0 0 0 2 0 0 0 0 1 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 0 0 2 0 0 0 1 0 0 
Thread: 2, gpu_BlockDP is done.
thread: 0, allBlocks[11]: 0 0 0 0 0 1 0 0 0 0 0 0 2 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 0 1 0 0 0 0 2 0 0 
thread: 0, allBlocks[12]: 0 0 0 0 0 1 0 1 0 0 0 0 1 0 0 0 mySum: 3
thread: 0, blockNoZero[12]: 0 1 1 0 0 0 1 0 0 
thread: 0, allBlocks[13]: 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[13]: 0 1 2 0 0 0 0 0 0 
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 5
copy the latest feasible solution to instance takes time: 0.035663
thread: 2, sOPT: 5
thread: 0, allBlocks[14]: 0 0 0 0 0 0 0 2 0 0 0 0 2 0 0 0 mySum: 4
thread: 0, blockNoZero[14]: 0 0 2 0 0 0 2 0 0 
thread: 0, allBlocks[15]: 0 0 0 0 0 1 0 1 0 0 0 0 2 0 0 0 mySum: 4
thread: 0, blockNoZero[15]: 0 1 1 0 0 0 2 0 0 
thread: 0, allBlocks[16]: 0 0 0 0 0 1 0 2 0 0 0 0 1 0 0 0 mySum: 4
thread: 0, blockNoZero[16]: 0 1 2 0 0 0 1 0 0 
thread: 0, allBlocks[17]: 0 0 0 0 0 1 0 2 0 0 0 0 2 0 0 0 mySum: 5
thread: 0, blockNoZero[17]: 0 1 2 0 0 0 2 0 0 
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 8
copy the latest feasible solution to instance takes time: 0.040342
thread: 0, sOPT: 8
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: Thread: 12, MlBk function is done, and BkID for all processes are collected., MlBk function is done, and BkID for all processes are collected.3

, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 97, UB: 109
BKID: 0, LB: 97, UB: 109, OPT: 8
Dynamic Programming Runtime: 0.57033
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 1
Iteration: 2, UB: 109, LB: 97start at time: 1505254872
thread: 0, MlBk is called with LB: 97, UB: 100
 thread: 0, LongJobs.size() 14
thread: thread: 3, MlBk is called with LB: 106, UB: 109
2, MlBk is called with LB: 103, UB: 106
thread: 1, MlBk is called with LB: 100, UB: 103 thread: 2, LongJobs.size() 14
 thread: 3, LongJobs.size() 14

 thread: 1, LongJobs.size() 14
thread: 2, NSTable size: 26
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 2, i: 1, maxN[i].weit: 4, maxN[i].idx: 1, blockDimSize[i]: 4
thread: 2, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 2, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 2, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 2, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 2, i: 6, maxN[i].weit: 3, maxN[i].idx: 6, blockDimSize[i]: 3
thread: 2, i: 7, maxN[i].weit: 2, maxN[i].idx: 7, blockDimSize[i]: 2
thread: 2, i: 8, maxN[i].weit: 2, maxN[i].idx: 8, blockDimSize[i]: 2
thread: 2, i: 0, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 1, divisor[i]: 2, blockDimSize[i]: 2
thread: 2, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 2, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 6, divisor[i]: 1, blockDimSize[i]: 3
thread: 2, i: 7, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, i: 8, divisor[i]: 1, blockDimSize[i]: 2
thread: 2, largestBlockVec.elm: 0 0 0 2 0 1 0 2 0 0 0 0 0 0 0 0 
thread: 2, blockDimSizeComp: 0 0 0 1 0 2 0 1 2 0 2 2 3 2 0 2 
thread: 2, divisorComp: 0 0 0 3 0 2 0 3 1 0 1 1 1 1 0 1 
thread: 2, largestBlockVec: 0 0 0 2 0 1 0 2 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 2 1 2 0 0 0 0 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 2 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 0 1 0 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 2 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 2 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 2 0 1 0 2 0 0 0 0 0 0 0 0 , mySum: 5
thread: 1, NSTable size: 22
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 1, i: 1, maxN[i].weit: 4, maxN[i].idx: 1, blockDimSize[i]: 4
thread: 1, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 1, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 1, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 1, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 1, i: 6, maxN[i].weit: 3, maxN[i].idx: 6, blockDimSize[i]: 3
thread: 1, i: 7, maxN[i].weit: 2, maxN[i].idx: 7, blockDimSize[i]: 2
thread: 1, i: 8, maxN[i].weit: 2, maxN[i].idx: 8, blockDimSize[i]: 2
thread: 1, i: 0, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 1, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 6, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 7, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 8, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, largestBlockVec.elm: 0 0 0 2 0 1 0 2 0 0 0 0 0 0 0 0 
thread: 1, blockDimSizeComp: 0 0 0 1 0 2 0 1 2 0 2 2 3 2 0 2 
thread: 1, divisorComp: 0 0 0 3 0 2 0 3 1 0 1 1 1 1 0 1 
thread: 1, largestBlockVec: 0 0 0 2 0 1 0 2 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 2 1 2 0 0 0 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 2 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 0 1 0 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 2 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 2 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 2 0 1 0 2 0 0 0 0 0 0 0 0 , mySum: 5
thread: 3, NSTable size: 26
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 3, i: 1, maxN[i].weit: 4, maxN[i].idx: 1, blockDimSize[i]: 4
thread: 3, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 3, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 3, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 3, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 3, i: 6, maxN[i].weit: 3, maxN[i].idx: 6, blockDimSize[i]: 3
thread: 3, i: 7, maxN[i].weit: 2, maxN[i].idx: 7, blockDimSize[i]: 2
thread: 3, i: 8, maxN[i].weit: 2, maxN[i].idx: 8, blockDimSize[i]: 2
thread: 3, i: 0, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, i: 1, divisor[i]: 2, blockDimSize[i]: 2
thread: 3, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 3, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 6, divisor[i]: 1, blockDimSize[i]: 3
thread: 3, i: 7, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, i: 8, divisor[i]: 1, blockDimSize[i]: 2
thread: 3, largestBlockVec.elm: 0 0 0 2 0 1 0 2 0 0 0 0 0 0 0 0 
thread: 3, blockDimSizeComp: 0 0 0 1 0 2 0 1 2 0 2 2 3 2 0 2 
thread: 3, divisorComp: 0 0 0 3 0 2 0 3 1 0 1 1 1 1 0 1 
thread: 3, largestBlockVec: 0 0 0 2 0 1 0 2 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 2 1 2 0 0 0 0 0 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 2 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 0 1 0 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 2 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 2 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 2 0 1 0 2 0 0 0 0 0 0 0 0 , mySum: 5
thread: 0, NSTable size: 22
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: 3
thread: 0, i: 1, maxN[i].weit: 4, maxN[i].idx: 1, blockDimSize[i]: 4
thread: 0, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 0, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 0, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 0, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 0, i: 6, maxN[i].weit: 3, maxN[i].idx: 6, blockDimSize[i]: 3
thread: 0, i: 7, maxN[i].weit: 2, maxN[i].idx: 7, blockDimSize[i]: 2
thread: 0, i: 8, maxN[i].weit: 2, maxN[i].idx: 8, blockDimSize[i]: 2
thread: 0, i: 0, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 1, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 6, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 7, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 8, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, largestBlockVec.elm: 0 0 0 2 0 1 0 2 0 0 0 0 0 0 0 0 
thread: 0, blockDimSizeComp: 0 0 0 1 0 2 0 1 2 0 2 2 3 2 0 2 
thread: 0, divisorComp: 0 0 0 3 0 2 0 3 1 0 1 1 1 1 0 1 
thread: 0, largestBlockVec: 0 0 0 2 0 1 0 2 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 2 1 2 0 0 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 2 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 0 1 0 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 2 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 2 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 2 0 1 0 2 0 0 0 0 0 0 0 0 , mySum: 5
thread: 2, maxBlockLvlSize: 5
thread: 2, maxInBlockLvlSize: 50
thread: 2, AllTableSize: 3456, maxSubsetsSize: 64
thread: 3, maxBlockLvlSize: 5
thread: 3, maxInBlockLvlSize: 50
thread: 3, AllTableSize: 3456, maxSubsetsSize: 64
thread: 1, maxBlockLvlSize: 5
thread: 1, maxInBlockLvlSize: 50
thread: 1, AllTableSize: 3456, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 5
thread: 0, maxInBlockLvlSize: 50
thread: 0, AllTableSize: 3456, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 1 0 0 0 0 0 0 
thread: 0, allBlocks[2]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 1 0 0 0 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 1 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 1 1 0 0 0 0 0 0 0 
thread: 0, allBlocks[5]: 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 2 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 1 0 1 0 0 0 0 0 0 
thread: 0, allBlocks[7]: 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 0 1 1 0 0 0 0 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[8]: 0 0 2 0 0 0 0 0 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[9]: 0 1 2 0 0 0 0 0 0 
thread: 0, allBlocks[10]: 0 0 0 1 0 0 0 2 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 1 0 2 0 0 0 0 0 0 
thread: 0, allBlocks[11]: 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 1 1 1 0 0 0 0 0 0 
thread: 0, allBlocks[12]: 0 0 0 2 0 0 0 1 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[12]: 2 0 1 0 0 0 0 0 0 
thread: 0, allBlocks[13]: 0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[13]: 2 1 0 0 0 0 0 0 0 
thread: 0, allBlocks[14]: 0 0 0 1 0 1 0 2 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[14]: 1 1 2 0 0 0 0 0 0 
thread: 0, allBlocks[15]: 0 0 0 2 0 0 0 2 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[15]: 2 0 2 0 0 0 0 0 0 
thread: 0, allBlocks[16]: 0 0 0 2 0 1 0 1 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[16]: 2 1 1 0 0 0 0 0 0 
thread: 0, allBlocks[17]: 0 0 0 2 0 1 0 2 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[17]: 2 1 2 0 0 0 0 0 0 
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 9
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 9
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 9
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.525099
thread: 1, sOPT: 9
copy the latest feasible solution to instance takes time: 0.655265
thread: 0, sOPT: 9
copy the latest feasible solution to instance takes time: 0.501124
thread: 2, sOPT: 9
copy the latest feasible solution to instance takes time: 0.447769
thread: 3, sOPT: 9
Thread: 3, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: Thread: 12, MlBk function is done, and BkID for all processes are collected., MlBk function is done, and BkID for all processes are collected.0
, MlBk function is done, and BkID for all processes are collected.

sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 97, UB: 99
BKID: 0, LB: 97, UB: 99, OPT: 9
Dynamic Programming Runtime: 3.45955
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 2
Iteration: 3, UB: 99, LB: 97start at time: 1505254873
thread: 0, MlBk is called with LB: 97, UB: 98
 thread: 0, LongJobs.size() 14
thread: 1, MlBk is called with LB: 98, UB: 99
 thread: 1, LongJobs.size() 14
thread: 1, NSTable size: 22
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 1
0thread: 1, i: 0, maxN[i].weit: 3, maxN[i].idx: 0, blockDimSize[i]: , NSTable size: 322
thread: 1, i: 
1thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: , maxN[i].weit: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 0, maxN[i].weit: 34, maxN[i].idx: 1, blockDimSize[i]: 4
thread: 1, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, blockDimSize[i]: 3
thread: 1, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 1, i: 4, maxN[i].weit: 2, maxN[i].idx: , maxN[i].idx: 4, blockDimSize[i]: 2
thread: 1, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 1, i: 6, maxN[i].weit: 3, maxN[i].idx: 6, blockDimSize[i]: 3
thread: 1, i: 7, maxN[i].weit: 2, maxN[i].idx: 7, blockDimSize[i]: 2
thread: 10, blockDimSize[i]: 3
thread: 0, i: 1, maxN[i].weit: 4, maxN[i].idx: 1, blockDimSize[i]: 4
thread: 0, i: 2, maxN[i].weit: 3, maxN[i].idx: 2, i: 8, maxN[i].weit: 2, maxN[i].idx: 8, blockDimSize[i]: 2, blockDimSize[i]: 
3
thread: 0, i: 3, maxN[i].weit: 2, maxN[i].idx: 3, blockDimSize[i]: 2
thread: 0, i: 4, maxN[i].weit: 2, maxN[i].idx: 4, blockDimSize[i]: 2
thread: 0, i: 5, maxN[i].weit: 2, maxN[i].idx: 5, blockDimSize[i]: 2
thread: 0, i: 6, maxN[i].weit: 3, maxN[i].idx: 6, blockDimSize[i]: 3
thread: 0, i: 7, maxN[i].weit: 2, maxN[i].idx: 7, blockDimSize[i]: 2
thread: 0, i: 8, maxN[i].weit: 2, maxN[i].idx: 8, blockDimSize[i]: 2
thread: 0, i: 0, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 1, divisor[i]: 2, blockDimSize[i]: 2
thread: 0, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 0, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 6, divisor[i]: 1, blockDimSize[i]: 3
thread: 0, i: 7, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, i: 8, divisor[i]: 1, blockDimSize[i]: 2
thread: 0, largestBlockVec.elm: thread: 0 0 1, i: 0 0, divisor[i]: 2 3, blockDimSize[i]: 10 
1 thread: 1, i: 1, divisor[i]: 2, blockDimSize[i]: 2
thread: 1, i: 2, divisor[i]: 3, blockDimSize[i]: 1
thread: 1, i: 3, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 4, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 5, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 6, divisor[i]: 1, blockDimSize[i]: 3
thread: 1, i: 7, divisor[i]: 1, blockDimSize[i]: 2
thread: 1, i: 8, divisor[i]: 1, blockDimSize[i]: 2
0thread: 1 , largestBlockVec.elm: 2 0 0 0 0 0 00  20  0 0 00  
thread: 0, blockDimSizeComp: 0 0 0 1 0 2 0 1 2 10  20  2 3 2 02  2 
thread: 0, divisorComp: 0 0 0 3 0 2 0 3 1 0 1 1 1 10  00 1  
thread: 0, largestBlockVec: 0 0 0 2 0 1 0 02  00  0 00  0 0 00  
thread: 1, blockDimSizeComp: 0 0 0 1 0 2 0 1 2 00 2  2 03  02  0 02  

thread: 1, divisorComp: 0 0 0 3 0 2 0 3 1 thread: 0, largestNoZeroBlockVec: 2 1 2 0 0 0 0 0 0 
0 1 1 1 1 0 1 
thread: 1, largestBlockVec: 0 0 0 2 0 1 0 2 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 2 1 2 0 0 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 thread: 01 , allBlocks: 0 00  00  10  00 0  00  00  00  0 00  0 00 0  , mySum: 1
00 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1 
0 0 0 0 1 0 1 0 0 0 0 00  0 00  0 00  , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 00 0  0, mySum:  1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0, mySum:  0 20
0 0 0 2 0 0 0 0 0 0 0 0 0 0 0  , mySum: 0 , mySum: 12
0 0 0 1 0 0 0 1 0 0 0 0 0
 00 0 0 1 0 0 0 0 0 0 0 0 0  00  0 00  , mySum: , mySum: 12

0 0 0 0 0 1 0 1 0 0 0 0 0 0 00 0 0 1 0 1 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 2 0 0 0 0 0  0 0 0 0 0 , mySum: 2
0 0 0 2 0 0 0 0 0 0 0 0 00 0 0 , mySum: 2 
0 00 0 0 0 0 1 0 2 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 0 0 1 0 0 0 0 0  0 00 0 0  0 , mySum: 3, mySum: 
0 0 0 1 0 0 0 2 0 0 0 0 0 0 20 0 , mySum: 
30 0 0 0 0 1 0 1 0 0 0 0 0
 0 0 0 0 1 0 1 0 1 0 0 0 0 00  00  , mySum: 0 0 2, mySum: 3

0 0 0 0 0 0 0 2 0 0 0 0 0 0 00 0 0 2 0 0 0 1 0 0 0 0 0  0 00 , mySum:  20
 0 0 0 0 0 1 0 2 0 0 0 0 0 , mySum: 3
0 0 0 2 0 1 0 0 0 0 0 0 0 00 0 0  , mySum: 3
0 0 0 1 0 1 0 2 0 0 0 0 00 0 0  00 , mySum:  3
, mySum: 0 0 0 1 0 0 0 2 0 0 0 0 0 04 0 0 
, mySum: 30 0 0 2 0 0 0 2 0 0 0 0 0 
00 0 0 1 0 1 0 1 0 0 0 0 0  0 00  0 , mySum: 04
0 0 0 2 0 1 0 1 0 0 0 0 0 0 0  0 , mySum: , mySum: 4
30 0 0 2 0 1 0 2 0 0 0 0 0 0
 0 0 0 2 0 0 0 1 0 0 0 0 0 , mySum: 5
0 0 0 0 0 , mySum: 3
0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
0 0 0 1 0 1 0 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 2 0 0 0 2 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 2 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 4
0 0 0 2 0 1 0 2 0 0 0 0 0 0 0 0 , mySum: 5
thread: 1, maxBlockLvlSize: 5
thread: 1, maxInBlockLvlSize: 50
thread: 1, AllTableSize: 3456, maxSubsetsSize: 64
thread: 0, maxBlockLvlSize: 5
thread: 0, maxInBlockLvlSize: 50
thread: 0, AllTableSize: 3456, maxSubsetsSize: 64
thread: 0, allBlocks[0]: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 0
thread: 0, blockNoZero[0]: 0 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[1]: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[1]: 0 0 1 0 0 0 0 0 0 
thread: 0, allBlocks[2]: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[2]: 0 1 0 0 0 0 0 0 0 
thread: 0, allBlocks[3]: 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 1
thread: 0, blockNoZero[3]: 1 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[4]: 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[4]: 1 1 0 0 0 0 0 0 0 
thread: 0, allBlocks[5]: 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[5]: 2 0 0 0 0 0 0 0 0 
thread: 0, allBlocks[6]: 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[6]: 1 0 1 0 0 0 0 0 0 
thread: 0, allBlocks[7]: 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[7]: 0 1 1 0 0 0 0 0 0 
thread: 0, allBlocks[8]: 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 mySum: 2
thread: 0, blockNoZero[8]: 0 0 2 0 0 0 0 0 0 
thread: 0, allBlocks[9]: 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[9]: 0 1 2 0 0 0 0 0 0 
thread: 0, allBlocks[10]: 0 0 0 1 0 0 0 2 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[10]: 1 0 2 0 0 0 0 0 0 
thread: 0, allBlocks[11]: 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[11]: 1 1 1 0 0 0 0 0 0 
thread: 0, allBlocks[12]: 0 0 0 2 0 0 0 1 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[12]: 2 0 1 0 0 0 0 0 0 
thread: 0, allBlocks[13]: 0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 0 mySum: 3
thread: 0, blockNoZero[13]: 2 1 0 0 0 0 0 0 0 
thread: 0, allBlocks[14]: 0 0 0 1 0 1 0 2 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[14]: 1 1 2 0 0 0 0 0 0 
thread: 0, allBlocks[15]: 0 0 0 2 0 0 0 2 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[15]: 2 0 2 0 0 0 0 0 0 
thread: 0, allBlocks[16]: 0 0 0 2 0 1 0 1 0 0 0 0 0 0 0 0 mySum: 4
thread: 0, blockNoZero[16]: 2 1 1 0 0 0 0 0 0 
thread: 0, allBlocks[17]: 0 0 0 2 0 1 0 2 0 0 0 0 0 0 0 0 mySum: 5
thread: 0, blockNoZero[17]: 2 1 2 0 0 0 0 0 0 
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 9
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.15086
thread: 1, sOPT: 9
copy the latest feasible solution to instance takes time: 0.128013
thread: 0, sOPT: 9
BKID: 0, LB: 97, UB: 97, OPT: 9
Dynamic Programming Runtime: 1.11627
Execution time between LB and UB is: 0
By far, all LB UB calculation runtime: 2
********************************************************
Total execution on UB and LB is: 2
OUT of Bk while loop  
UB    97
LB    97
T1    97
T2    97
OPT   9
nMachines   10
BkID	0
AllProbData.size()    3
ck :   2
AllProbData[ck].Ttable    97
ck :   1
AllProbData[ck].Ttable    98
ck :   0
AllProbData[ck].Ttable    108
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan108
Main Scheduling is Done
File 3-20 is Done.
******************************
Total running time is: 168
