Reading File...
File 3-1 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 203, LB: 111start at time: 1504655311
thread: 0, MlBk is called with LB: 111, UB: 134thread: thread: thread: 23, MlBk is called with LB: , MlBk is called with LB: 157180, UB: , UB: 180203


1, MlBk is called with LB: 134, UB: 157
 thread: 0, LongJobs.size()  thread: 2 thread: , LongJobs.size() 3, LongJobs.size() 1413

 thread: 1, LongJobs.size() 12
13
thread: 3, NSTable size: 14
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 6
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 0 2 7 3 2 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 0 1 1 1 2 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 0 0 1 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
thread: 1, NSTable size: 13
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 5
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 0 2 0 3 2 3 3 0 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 1 0 2 2 1 1 0 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 1 1 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
thread: 2, NSTable size: 18
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 2 0 2 5 2 3 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 1 0 2 1 2 1 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 1 0 1 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 , mySum: 2
thread: 0, NSTable size: 16
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 2 0 2 0 0 2 5 2 2 2 0 0 0 
thread: 0, divisorComp: 0 0 0 1 0 1 0 0 2 1 1 2 1 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 1 0 0 1 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 , mySum: 2
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 6
copy the latest feasible solution to instance takes time: 0.040503
thread: 3, sOPT: 6
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 7
copy the latest feasible solution to instance takes time: 0.073453
thread: 1, sOPT: 7
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 6
copy the latest feasible solution to instance takes time: 0.05777
thread: 2, sOPT: 6
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 12
copy the latest feasible solution to instance takes time: 1e-06
thread: 0, sOPT: 12
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: 3Thread: , MlBk function is done, and BkID for all processes are collected.Thread: 2
, MlBk function is done, and BkID for all processes are collected.1
, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: 1 -1 -1 -1
Pick seg 1 for next iteration where LB: 123, UB: 146
BKID: 0, LB: 123, UB: 146, OPT: 7
Dynamic Programming Runtime: 2.52343
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 1
Iteration: 2, UB: 146, LB: 123start at time: 1504655312
thread: 0, MlBk is called with LB: 123, UB: 129
 thread: 0, LongJobs.size() 13
thread: thread: 3, MlBk is called with LB: 141, UB: 147
1, MlBk is called with LB: 129, UB: 135
thread: 2, MlBk is called with LB: 135, UB: 141
 thread: 3, LongJobs.size() 13
 thread: 2, LongJobs.size() 13
 thread: 1, LongJobs.size() 13
thread: 3, NSTable size: 13
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 5
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 0 2 0 3 2 3 3 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 0 1 0 2 2 1 1 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 1 1 0 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
thread: 0, NSTable size: 11
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 0 0 2 0 0 2 5 2 2 2 0 0 0 
thread: 0, divisorComp: 0 0 0 0 0 1 0 0 2 1 1 2 1 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 1 0 0 1 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 , mySum: 2
thread: 2, NSTable size: 16
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 01
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 1
, NSTable size: thread: 2, i: 514, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 4

thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 10thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 4, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 
2, i: 12, alltableelemets[maxindex].elm[i]: thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 100, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 0 2 0 2 5 3 3 2 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 1 0 1 1 1 1 2 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0
 thread: 2, blockDimSizeComp: 0 0 0 0 2 0 20  51  3 03 2  00  00  0 00 0  0 

thread: 1, largestNoZeroBlockVec: 0 0 0 0 0 1 
thread: 2, divisorComp: 0 0 0 0 1 0 1 1 1 1 2 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 0 0 0thread:  10, allBlocks:  0 10  00  00  0 00  00  0 0
 thread: 2, largestNoZeroBlockVec: 0 0 0 0 0 1 
0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 thread: 2, allBlocks: 0 00 0  0 00  00 0  0, mySum:  10
 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 7
copy the latest feasible solution to instance takes time: 0.069008
thread: 3, sOPT: 7
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 8
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 4e-06
thread: 0, sOPT: 11
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.09362
thread: 2, sOPT: 8
copy the latest feasible solution to instance takes time: 0.06717
thread: 1, sOPT: 9
Thread: 1, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: Thread: 2, MlBk function is done, and BkID for all processes are collected.0, MlBk function is done, and BkID for all processes are collected.3
, MlBk function is done, and BkID for all processes are collected.

sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: 1 -1 -1 -1
Pick seg 1 for next iteration where LB: 127, UB: 133
BKID: 0, LB: 127, UB: 133, OPT: 9
Dynamic Programming Runtime: 2.34912
Execution time between LB and UB is: 0
By far, all LB UB calculation runtime: 1
Iteration: 3, UB: 133, LB: 127start at time: 1504655312
thread: 0, MlBk is called with LB: 127, UB: 128
thread: thread: thread: 31, MlBk is called with LB: 2130, MlBk is called with LB: , MlBk is called with LB: 128129, UB: , UB: 129133, UB: 

130 thread: 1, LongJobs.size() 13

 thread: 0, LongJobs.size() 13
 thread: 2, LongJobs.size() 13
 thread: 3, LongJobs.size() 13
thread: 0, NSTable size: 11
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 0 0 2 0 0 2 5 2 2 2 0 0 0 
thread: 0, divisorComp: 0 0 0 0 0 1 0 0 2 1 1 2 1 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 1 0 0 1 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 , mySum: 2
thread: 1, NSTable size: 14
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 0 2 0 2 5 3 3 2 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 1 0 1 1 1 1 2 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0thread:  0 0 20, NSTable size:  141 0 
0 0thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
 thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 00
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
 0 
thread: 1, largestNoZeroBlockVec: 0 0 0 0 0 1 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 
0thread: 2, blockDimSizeComp: 0 0 0 0 2 0 2 5 3 3  2 0 0 00  00  0, mySum:  1

thread: 2, divisorComp: 0 0 0 0 1 0 1 1 1 1 2 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 0 0 0 1 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
thread: 3, NSTable size: 14
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 4
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 0 2 0 2 5 3 3 2 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 0 1 0 1 1 1 1 2 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 0 0 0 0 1 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 5e-06
thread: 0, sOPT: 11
Thread: 2, gpu_BlockDP is done.
Thread: 1, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 9
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 9
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.08203
thread: 2, sOPT: 9
copy the latest feasible solution to instance takes time: 0.10327
thread: 1, sOPT: 9
copy the latest feasible solution to instance takes time: 0.117652
thread: 3, sOPT: 9
Thread: 3, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: Thread: 12, MlBk function is done, and BkID for all processes are collected.0
, MlBk function is done, and BkID for all processes are collected.
, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: 1 -1 -1 -1
Pick seg 1 for next iteration where LB: 128, UB: 129
BKID: 0, LB: 128, UB: 128, OPT: 9
Dynamic Programming Runtime: 2.54246
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 2
********************************************************
Total execution on UB and LB is: 2
OUT of Bk while loop  
UB    128
LB    128
T1    127
T2    128
OPT   9
nMachines   10
BkID	0
AllProbData.size()    3
ck :   2
AllProbData[ck].Ttable    128
ck :   1
AllProbData[ck].Ttable    132
ck :   0
AllProbData[ck].Ttable    145
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan138
Main Scheduling is Done
File 3-1 is Done.
******************************
Reading File...
File 3-2 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 215, LB: 115start at time: 1504655313
thread: 0, MlBk is called with LB: 115, UB: 140
thread: 1, MlBk is called with LB: 140, UB: 165
thread: 2, MlBk is called with LB: 165thread: , UB: 1903
 thread: 1, LongJobs.size() 12
 thread: 2, LongJobs.size() 11
, MlBk is called with LB: 190, UB: 215
 thread: 0, LongJobs.size() 14
 thread: 3, LongJobs.size() 10
thread: 3, NSTable size: 14
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 5
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 2 0 3 3 3 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 1 0 1 2 1 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 0 1 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
thread: 2, NSTable size: 17
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 2 2 0 2 5 3 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 1 1 0 2 1 1 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 1 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
thread: 1, NSTable size: 18
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 5
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 2 2 2 0 0 3 3 3 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 1 1 1 0 0 2 1 1 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 0 1 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
thread: 0, NSTable size: 19
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 0 2 2 0 2 0 0 3 5 2 3 0 0 
thread: 0, divisorComp: 0 0 0 0 2 1 0 1 0 0 1 1 1 1 0 0 
thread: 0, largestBlockVec: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 1 0 0 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 5
copy the latest feasible solution to instance takes time: 0.022423
thread: 3, sOPT: 5
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 5
copy the latest feasible solution to instance takes time: 0.038952
thread: 2, sOPT: 5
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.0449
thread: 1, sOPT: 9
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.078999
thread: 0, sOPT: 10
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: 2, MlBk function is done, and BkID for all processes are collected.
Thread: 3, MlBk function is done, and BkID for all processes are collected.
Thread: 1, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 115, UB: 128
BKID: 0, LB: 115, UB: 128, OPT: 10
Dynamic Programming Runtime: 3.55426
Execution time between LB and UB is: 2
By far, all LB UB calculation runtime: 2
Iteration: 2, UB: 128, LB: 115start at time: 1504655315
thread: 0, MlBk is called with LB: 115, UB: 118
 thread: 0, LongJobs.size() 15
thread: thread: thread: 2, MlBk is called with LB: 1211, UB: , MlBk is called with LB: 1243118
, MlBk is called with LB: , UB: 121
 thread: 2, LongJobs.size() 14
124, UB: 128
 thread: 3, LongJobs.size() 14
 thread: 1, LongJobs.size() 15
thread: 3, NSTable size: 19
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 4
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 0 2 2 0 2 0 0 3 5 2 3 0 0 
thread: 3, divisorComp: 0 0 0 0 2 1 0 1 0 0 1 1 1 1 0 0 
thread: 3, largestBlockVec: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 1 0 0 0 0 0 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
thread: 2, NSTable size: 16
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 0 2 2 0 2 0 0 3 5 2 3 0 0 
thread: 2, divisorComp: 0 0 0 0 2 1 0 1 0 0 1 1 1 1 0 0 
thread: 2, largestBlockVec: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 1 0 0 0 0 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
thread: 0, NSTable size: 22
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 2 2 2 0 2 0 0 3 5 2 3 0 0 
thread: 0, divisorComp: 0 0 0 1 2 1 0 1 0 0 1 1 1 1 0 0 
thread: 0, largestBlockVec: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 1 0 0 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
thread: 1, NSTable size: 26
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 2 2 2 0 2 0 0 3 5 2 3 0 0 
thread: 1, divisorComp: 0 0 0 1 2 1 0 1 0 0 1 1 1 1 0 0 
thread: 1, largestBlockVec: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 1 0 0 0 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
Thread: 2, gpu_BlockDP is done.
Thread: 3, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.322902
thread: 2, sOPT: 10
copy the latest feasible solution to instance takes time: 0.441433
thread: 3, sOPT: 10
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 2e-06
thread: 0, sOPT: 11
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.157825
thread: 1, sOPT: 10
Thread: 1, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 3, MlBk function is done, and BkID for all processes are collected.
2, MlBk function is done, and BkID for all processes are collected.
Thread: 0, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: 1 -1 -1 -1
Pick seg 1 for next iteration where LB: 117, UB: 120
BKID: 0, LB: 117, UB: 120, OPT: 10
Dynamic Programming Runtime: 11.4506
Execution time between LB and UB is: 4
By far, all LB UB calculation runtime: 6
Iteration: 3, UB: 120, LB: 117start at time: 1504655319
thread: 0, MlBk is called with LB: 117, UB: 118
 thread: 0, LongJobs.size() 15
thread: thread: 1, MlBk is called with LB: 2118, UB: 119, MlBk is called with LB: 119, UB: 120

 thread: 2, LongJobs.size() 15 thread: 
1, LongJobs.size() 15
thread: 2, NSTable size: 26
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 2 2 2 0 2 0 0 3 5 2 3 0 0 
thread: 2, divisorComp: 0 0 0 1 2 1 0 1 0 0 1 1 1 1 0 0 
thread: 2, largestBlockVec: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 1 0 0 0 0 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
thread: 1, NSTable size: 22
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 2 2 2 0 2 0 0 3 5 2 3 0 0 
thread: 1, divisorComp: 0 0 0 1 2 1 0 1 0 0 1 1 1 1 0 0 
thread: 1, largestBlockVec: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 1 0 0 0 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
thread: 0, NSTable size: 22
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 2 2 2 0 2 0 0 3 5 2 3 0 0 
thread: 0, divisorComp: 0 0 0 1 2 1 0 1 0 0 1 1 1 1 0 0 
thread: 0, largestBlockVec: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 1 0 0 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 11
copy the latest feasible solution to instance takes time: 5e-06
thread: 1, sOPT: 11
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 2e-06
thread: 0, sOPT: 11
copy the latest feasible solution to instance takes time: 0.252327
thread: 2, sOPT: 10
BKID: 0, LB: 119, UB: 119, OPT: 10
Dynamic Programming Runtime: 10.9511
Execution time between LB and UB is: 3
By far, all LB UB calculation runtime: 9
********************************************************
Total execution on UB and LB is: 10
OUT of Bk while loop  
UB    119
LB    119
T1    119
T2    119
OPT   10
nMachines   10
BkID	0
AllProbData.size()    3
ck :   2
AllProbData[ck].Ttable    119
ck :   1
AllProbData[ck].Ttable    119
ck :   0
AllProbData[ck].Ttable    127
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan130
Main Scheduling is Done
File 3-2 is Done.
******************************
Reading File...
File 3-3 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 213, LB: 114start at time: 1504655323
thread: 0, MlBk is called with LB: 114, UB: 139
thread: 3, MlBk is called with LB: 189, UB: 214
 thread: 0, LongJobs.size() 15
thread: 1, MlBk is called with LB: 139, UB: 164
 thread: 3, LongJobs.size() 11
thread: 2, MlBk is called with LB: 164, UB: 189
 thread: 1, LongJobs.size() 15
 thread: 2, LongJobs.size() 14
thread: 3, NSTable size: 15
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 5
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 4
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 2 3 0 5 2 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 1 2 0 1 1 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 1 0 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
thread: 2, NSTable size: 34
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 2 3 5 2 2 2 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 2 1 1 1 2 1 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 1 0 0 0 1 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 2
thread: 0, NSTable size: 17
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 0 0 5 0 3 2 2 0 3 3 2 0 0 
thread: 0, divisorComp: 0 0 0 0 0 1 0 1 2 1 0 1 1 1 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 1 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
thread: 1, NSTable size: 31
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 2 2 3 5 0 3 3 2 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 1 2 1 1 0 1 1 1 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 1 0 0 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 5
copy the latest feasible solution to instance takes time: 0.026001
thread: 3, sOPT: 5
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 2
copy the latest feasible solution to instance takes time: 0.167768
thread: 2, sOPT: 2
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 7
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.233221
thread: 1, sOPT: 7
copy the latest feasible solution to instance takes time: 0.181617
thread: 0, sOPT: 9
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: Thread: 13, MlBk function is done, and BkID for all processes are collected.2, MlBk function is done, and BkID for all processes are collected.
, MlBk function is done, and BkID for all processes are collected.

sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 114, UB: 127
BKID: 0, LB: 114, UB: 127, OPT: 9
Dynamic Programming Runtime: 6.27132
Execution time between LB and UB is: 2
By far, all LB UB calculation runtime: 2
Iteration: 2, UB: 127, LB: 114start at time: 1504655325
thread: 0, MlBk is called with LB: 114, UB: 117
 thread: 0, LongJobs.size() 16
thread: thread: thread: 13, MlBk is called with LB: 117, MlBk is called with LB: 2123, MlBk is called with LB: , UB: 120
120, UB: 123
 thread: 1, LongJobs.size() 16
, UB: 127
 thread: 2, LongJobs.size() 15
 thread: 3, LongJobs.size() 15
thread: 2, NSTable size: 13
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 0 0 5 0 3 2 2 0 3 3 2 0 0 
thread: 2, divisorComp: 0 0 0 0 0 1 0 1 2 1 0 1 1 1 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 1 0 0 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
thread: 3, NSTable size: 13
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 4
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 0 0 5 0 3 2 2 0 3 3 2 0 0 
thread: 3, divisorComp: 0 0 0 0 0 1 0 1 2 1 0 1 1 1 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 0 1 0 0 0 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
thread: 1, NSTable size: 19
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 2 0 5 0 3 2 2 0 3 3 2 0 0 
thread: 1, divisorComp: 0 0 0 1 0 1 0 1 2 1 0 1 1 1 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 0 1 0 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
thread: 0, NSTable size: 19
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 2 0 5 0 3 2 2 0 3 3 2 0 0 
thread: 0, divisorComp: 0 0 0 1 0 1 0 1 2 1 0 1 1 1 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 0 1 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
Thread: 2, gpu_BlockDP is done.
Thread: 3, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.835931
thread: 3, sOPT: 10
copy the latest feasible solution to instance takes time: 1.16585
thread: 2, sOPT: 10
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.594
thread: 0, sOPT: 10
copy the latest feasible solution to instance takes time: 0.680027
thread: 1, sOPT: 10
Thread: 1, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 0, MlBk function is done, and BkID for all processes are collected.
2, MlBk function is done, and BkID for all processes are collected.
Thread: 3, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 114, UB: 116
BKID: 0, LB: 114, UB: 116, OPT: 10
Dynamic Programming Runtime: 20.1547
Execution time between LB and UB is: 7
By far, all LB UB calculation runtime: 9
Iteration: 3, UB: 116, LB: 114start at time: 1504655332
thread: 0, MlBk is called with LB: 114, UB: 115
 thread: 0, LongJobs.size() 16
thread: 1, MlBk is called with LB: 115, UB: 116
 thread: 1, LongJobs.size() 16
thread: 1, NSTable size: 19
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 2 0 5 0 3 2 2 0 3 3 2 0 0 
thread: 1, divisorComp: 0 0 0 1 0 1 0 1 2 1 0 1 1 1 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 0 1 0 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
thread: 0, NSTable size: 19
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 2 0 5 0 3 2 2 0 3 3 2 0 0 
thread: 0, divisorComp: 0 0 0 1 0 1 0 1 2 1 0 1 1 1 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 0 1 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.626064
thread: 1, sOPT: 10
copy the latest feasible solution to instance takes time: 0.742057
thread: 0, sOPT: 10
BKID: 0, LB: 114, UB: 114, OPT: 10
Dynamic Programming Runtime: 11.0627
Execution time between LB and UB is: 6
By far, all LB UB calculation runtime: 15
********************************************************
Total execution on UB and LB is: 15
OUT of Bk while loop  
UB    114
LB    114
T1    114
T2    114
OPT   10
nMachines   10
BkID	0
AllProbData.size()    3
ck :   2
AllProbData[ck].Ttable    114
ck :   1
AllProbData[ck].Ttable    115
ck :   0
AllProbData[ck].Ttable    126
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan120
Main Scheduling is Done
File 3-3 is Done.
******************************
Reading File...
File 3-4 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 189, LB: 98start at time: 1504655338
thread: 0, MlBk is called with LB: 98, UB: 121
thread: thread: 2, MlBk is called with LB: 144, UB: 3167, MlBk is called with LB: 167, UB: 190

 thread: 0, LongJobs.size() 13
thread: 1, MlBk is called with LB: 121, UB: 144
 thread: 1, LongJobs.size() 12
 thread: 3, LongJobs.size() 9
 thread: 2, LongJobs.size() 11
thread: 3, NSTable size: 24
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 2 3 3 3 3 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 1 1 1 1 1 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 0 0 0 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
thread: 2, NSTable size: 40
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 3 2 3 3 2 2 3 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 1 1 1 1 1 1 1 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 0 0 0 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
thread: 1, NSTable size: 36
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 2 3 2 3 3 2 2 2 2 0 0 0 0 
thread: 1, divisorComp: 0 0 0 1 1 1 1 1 1 1 1 1 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
thread: 0, NSTable size: 28
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 1

thread: 0, blockDimSizeComp: 0 0 0 0 2 3 2 2 3 0 3 0 2 2 2 2 
thread: 0, divisorComp: 0 0 0 0 1 1 1 1 1 0 1 0 1 1 1 1 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 4
copy the latest feasible solution to instance takes time: 0.048066
thread: 3, sOPT: 4
Thread: 2, gpu_BlockDP is done.
Thread: 1, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 5
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 6
copy the latest feasible solution to instance takes time: 0.212935
thread: 2, sOPT: 5
copy the latest feasible solution to instance takes time: 0.429569
thread: 1, sOPT: 6
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 8
copy the latest feasible solution to instance takes time: 0.266995
thread: 0, sOPT: 8
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 2, MlBk function is done, and BkID for all processes are collected.
1, MlBk function is done, and BkID for all processes are collected.
Thread: 3, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 98, UB: 110
BKID: 0, LB: 98, UB: 110, OPT: 8
Dynamic Programming Runtime: 10.1739
Execution time between LB and UB is: 5
By far, all LB UB calculation runtime: 5
Iteration: 2, UB: 110, LB: 98start at time: 1504655343
thread: 0, MlBk is called with LB: 98, UB: 101
 thread: 0, LongJobs.size() 14
thread: thread: thread: 1, MlBk is called with LB: 2101, MlBk is called with LB: , UB: 3104, MlBk is called with LB: 104107, UB: , UB: 
110107

 thread: 3, LongJobs.size() 13
 thread: 1, LongJobs.size() 13
 thread: 2, LongJobs.size() 13
thread: 1, NSTable size: 24
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 1

thread: 1, blockDimSizeComp: 0 0 0 0 2 3 2 2 3 0 3 0 2 2 2 2 
thread: 1, divisorComp: 0 0 0 0 1 1 1 1 1 0 1 0 1 1 1 1 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
thread: 2, NSTable size: 24
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 1

thread: 2, blockDimSizeComp: 0 0 0 0 2 3 2 2 3 0 3 0 2 2 2 2 
thread: 2, divisorComp: 0 0 0 0 1 1 1 1 1 0 1 0 1 1 1 1 
thread: 2, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
thread: 3, NSTable size: 28
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 1

thread: 3, blockDimSizeComp: 0 0 0 0 2 3 2 2 3 0 3 0 2 2 2 2 
thread: 3, divisorComp: 0 0 0 0 1 1 1 1 1 0 1 0 1 1 1 1 
thread: 3, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 0 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
thread: 0, NSTable size: 31
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 1

thread: 0, blockDimSizeComp: 0 0 0 2 2 3 2 2 3 0 3 0 2 2 2 2 
thread: 0, divisorComp: 0 0 0 1 1 1 1 1 1 0 1 0 1 1 1 1 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
Thread: 3, gpu_BlockDP is done.
Thread: 1, gpu_BlockDP is done.
Thread: 2, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 8
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 9
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 9
copy the latest feasible solution to instance takes time: 1.16201
thread: 1, sOPT: 9
copy the latest feasible solution to instance takes time: 1.55945
thread: 3, sOPT: 8
copy the latest feasible solution to instance takes time: 1.86323
thread: 2, sOPT: 9
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.426553
thread: 0, sOPT: 9
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: Thread: 132, MlBk function is done, and BkID for all processes are collected., MlBk function is done, and BkID for all processes are collected., MlBk function is done, and BkID for all processes are collected.


sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 98, UB: 100
BKID: 0, LB: 98, UB: 100, OPT: 9
Dynamic Programming Runtime: 44.7067
Execution time between LB and UB is: 14
By far, all LB UB calculation runtime: 19
Iteration: 3, UB: 100, LB: 98start at time: 1504655357
thread: 0, MlBk is called with LB: 98, UB: 99
 thread: 0, LongJobs.size() 14
thread: 1, MlBk is called with LB: 99, UB: 100
 thread: 1, LongJobs.size() 14
thread: 1, NSTable size: 31
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 1

thread: 1, blockDimSizeComp: 0 0 0 2 2 3 2 2 3 0 3 0 2 2 2 2 
thread: 1, divisorComp: 0 0 0 1 1 1 1 1 1 0 1 0 1 1 1 1 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
thread: 0, NSTable size: 31
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 1

thread: 0, blockDimSizeComp: 0 0 0 2 2 3 2 2 3 0 3 0 2 2 2 2 
thread: 0, divisorComp: 0 0 0 1 1 1 1 1 1 0 1 0 1 1 1 1 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 9
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 9
copy the latest feasible solution to instance takes time: 1.08595
thread: 1, sOPT: 9
copy the latest feasible solution to instance takes time: 1.19378
thread: 0, sOPT: 9
BKID: 0, LB: 98, UB: 98, OPT: 9
Dynamic Programming Runtime: 27.4706
Execution time between LB and UB is: 14
By far, all LB UB calculation runtime: 33
********************************************************
Total execution on UB and LB is: 33
OUT of Bk while loop  
UB    98
LB    98
T1    98
T2    98
OPT   9
nMachines   10
BkID	0
AllProbData.size()    3
ck :   2
AllProbData[ck].Ttable    98
ck :   1
AllProbData[ck].Ttable    99
ck :   0
AllProbData[ck].Ttable    109
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan101
Main Scheduling is Done
File 3-4 is Done.
******************************
Reading File...
File 3-5 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 202, LB: 107start at time: 1504655371
thread: 0, MlBk is called with LB: 107, UB: 131
thread: 1, MlBk is called with LB: 131, UB: 155
thread:  thread: 1, LongJobs.size() 14
thread:  thread: 0, LongJobs.size() 15
3, MlBk is called with LB: 179, UB: 203
2, MlBk is called with LB: 155, UB: 179
 thread: 3, LongJobs.size() 11
 thread: 2, LongJobs.size() 14
thread: 3, NSTable size: 28
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 4
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 2 3 5 3 3 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 1 1 1 1 1 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 0 0 0 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
thread: 2, NSTable size: 29
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 2 2 2 4 0 3 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 2 2 2 1 0 1 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 1 1 1 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 3
thread: 1, NSTable size: 25
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 0 2 3 2 2 2 0 3 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 2 1 1 2 2 0 1 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 1 0 0 1 1 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 , mySum: 3
thread: 0, NSTable size: 28
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 2 0 2 3 2 2 2 3 0 3 0 0 0 
thread: 0, divisorComp: 0 0 0 1 0 2 1 1 2 1 1 0 1 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 1 0 0 1 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 2
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 5
copy the latest feasible solution to instance takes time: 0.093604
thread: 3, sOPT: 5
Thread: 2, gpu_BlockDP is done.
Thread: 1, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 6
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 7
copy the latest feasible solution to instance takes time: 0.255461
thread: 2, sOPT: 6
copy the latest feasible solution to instance takes time: 0.363127
thread: 1, sOPT: 7
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 8
copy the latest feasible solution to instance takes time: 0.200403
thread: 0, sOPT: 8
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 1, MlBk function is done, and BkID for all processes are collected.
2, MlBk function is done, and BkID for all processes are collected.
Thread: 3, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 107, UB: 120
BKID: 0, LB: 107, UB: 120, OPT: 8
Dynamic Programming Runtime: 7.4644
Execution time between LB and UB is: 4
By far, all LB UB calculation runtime: 4
Iteration: 2, UB: 120, LB: 107start at time: 1504655375
thread: 0, MlBk is called with LB: 107, UB: 110
 thread: 0, LongJobs.size() 16
thread: 1, MlBk is called with LB: 110, UB: 113thread: 
3, MlBk is called with LB: 116, UB: 120
 thread: 1, LongJobs.size() 16
thread: 2, MlBk is called with LB: 113, UB: 116
 thread: 3, LongJobs.size() 15
 thread: 2, LongJobs.size() 16
thread: 3, NSTable size: 23
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 2 0 2 3 2 2 2 3 0 3 0 0 0 
thread: 3, divisorComp: 0 0 0 1 0 2 1 1 2 1 1 0 1 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 1 0 0 1 0 0 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 2
thread: 1, NSTable size: 29
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 2 2 0 2 2 3 0 2 2 0 0 3 0 
thread: 1, divisorComp: 0 0 0 1 1 0 2 1 1 0 2 2 0 0 1 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 1 0 0 0 1 1 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 1 0 0 1 1 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 1 1 0 0 0 0 , mySum: 3
thread: 0, NSTable size: 29
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 2 2 0 2 2 3 0 2 2 0 0 3 0 
thread: 0, divisorComp: 0 0 0 1 1 0 2 1 1 0 2 2 0 0 1 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 1 0 0 0 1 1 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 1 0 0 1 1 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 1 1 0 0 0 0 , mySum: 3
thread: 2, NSTable size: 27
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 3 0 2 3 2 2 2 3 0 3 0 0 0 
thread: 2, divisorComp: 0 0 0 1 0 2 1 1 2 1 1 0 1 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 1 0 0 1 0 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 , mySum: 2
Thread: 1, gpu_BlockDP is done.
Thread: 3, gpu_BlockDP is done.
Thread: 0, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 9
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 1.24833
thread: 3, sOPT: 9
copy the latest feasible solution to instance takes time: 1.703
thread: 1, sOPT: 10
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 9
copy the latest feasible solution to instance takes time: 2.12405
thread: 0, sOPT: 10
copy the latest feasible solution to instance takes time: 0.492011
thread: 2, sOPT: 9
Thread: 2, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 1, MlBk function is done, and BkID for all processes are collected.
0, MlBk function is done, and BkID for all processes are collected.
Thread: 3, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 107, UB: 109
BKID: 0, LB: 107, UB: 109, OPT: 10
Dynamic Programming Runtime: 24.1478
Execution time between LB and UB is: 7
By far, all LB UB calculation runtime: 11
Iteration: 3, UB: 109, LB: 107start at time: 1504655382
thread: 0, MlBk is called with LB: 107, UB: 108
 thread: 0, LongJobs.size() 16
thread: 1, MlBk is called with LB: 108, UB: 109
 thread: 1, LongJobs.size() 16
thread: 0, NSTable size: 25
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 2 2 0 2 2 3 0 2 2 0 0 3 0 
thread: 0, divisorComp: 0 0 0 1 1 0 2 1 1 0 2 2 0 0 1 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 1 0 0 0 1 1 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 1 0 0 1 1 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 1 1 0 0 0 0 , mySum: 3
thread: 1, NSTable size: 29
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 2 2 0 2 2 3 0 2 2 0 0 3 0 
thread: 1, divisorComp: 0 0 0 1 1 0 2 1 1 0 2 2 0 0 1 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 1 0 0 0 1 1 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 1 0 0 1 1 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 1 0 0 0 1 1 0 0 0 0 , mySum: 3
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 3e-06
thread: 0, sOPT: 11
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.360143
thread: 1, sOPT: 10
BKID: 0, LB: 108, UB: 108, OPT: 10
Dynamic Programming Runtime: 7.80695
Execution time between LB and UB is: 5
By far, all LB UB calculation runtime: 16
********************************************************
Total execution on UB and LB is: 16
OUT of Bk while loop  
UB    108
LB    108
T1    108
T2    108
OPT   10
nMachines   10
BkID	0
AllProbData.size()    3
ck :   2
AllProbData[ck].Ttable    108
ck :   1
AllProbData[ck].Ttable    108
ck :   0
AllProbData[ck].Ttable    119
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan115
Main Scheduling is Done
File 3-5 is Done.
******************************
Reading File...
File 3-6 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 166, LB: 86start at time: 1504655387
thread: 0, MlBk is called with LB: 86, UB: 106
thread: 2, MlBk is called with LB: thread: 126, UB: 1463
, MlBk is called with LB: 146 thread: 0, LongJobs.size() 14
thread: 1, MlBk is called with LB: 106, UB: 126
, UB: 166
 thread: 2, LongJobs.size() 13
 thread: 1, LongJobs.size() 13
 thread: 3, LongJobs.size() 12
thread: 3, NSTable size: 24
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 6
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 2 2 7 3 3 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 1 1 1 1 1 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 0 0 0 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
thread: 1, NSTable size: 21
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 0 2 2 2 5 2 2 3 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 1 1 2 1 1 1 1 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 1 0 0 0 0 
thread: 2, NSTable size: 35
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 2 2 2 5 3 2 2 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 1 1 2 1 1 1 1 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 1 0 0 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 thread: 0 , mySum: 10, allBlocks: 
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
thread: 0, NSTable size: 22
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 6
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 2 0 2 2 2 7 2 2 2 2 0 0 0 
thread: 0, divisorComp: 0 0 0 1 0 1 1 1 1 1 1 1 1 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 5
copy the latest feasible solution to instance takes time: 0.079694
thread: 3, sOPT: 5
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 4e-06
thread: 0, sOPT: 11
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 7
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 6
copy the latest feasible solution to instance takes time: 0.169809
thread: 1, sOPT: 7
copy the latest feasible solution to instance takes time: 0.201101
thread: 2, sOPT: 6
Thread: 2, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: Thread: 03, MlBk function is done, and BkID for all processes are collected.1, MlBk function is done, and BkID for all processes are collected., MlBk function is done, and BkID for all processes are collected.


sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: 1 -1 -1 -1
Pick seg 1 for next iteration where LB: 97, UB: 117
BKID: 0, LB: 97, UB: 117, OPT: 7
Dynamic Programming Runtime: 5.92012
Execution time between LB and UB is: 2
By far, all LB UB calculation runtime: 2
Iteration: 2, UB: 117, LB: 97start at time: 1504655389
thread: 0, MlBk is called with LB: 97, UB: 102
 thread: 0, LongJobs.size() 14
thread: thread: thread: 21, MlBk is called with LB: , MlBk is called with LB: 3107, UB: , MlBk is called with LB: 112102112
, UB: , UB: 117
 thread: 2, LongJobs.size() 13
107
 thread: 3, LongJobs.size() 13
 thread: 1, LongJobs.size() 13
thread: 1, NSTable size: 17
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 6
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: thread: 1, i: 112, alltableelemets[maxindex].elm[i]: , NSTable size: 211

thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 6
, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
8, alltableelemets[maxindex].elm[i]: 6
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 0 0 2 2 2 7 2 2 2 2 0 0 0 
thread: 1, divisorComp: 0 0 0 0 0 1 1 1 1 1 1 1 1 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 
thread: 1, allBlocks: 0 
0 thread: 2, blockDimSizeComp: 0 0 0 0 0 2 2 20  70 2  0 20  02  2 0 00 0 0  0 
0 thread: 2, divisorComp: 0 0 0 0 0 1 1 1 1 1 1 1 1 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
thread: 3, NSTable size: 21
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 4
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 0 2 2 2 5 2 2 3 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 0 1 1 2 1 1 1 1 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 0 1 0 0 0 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
thread: 0, NSTable size: 22
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 6
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 2 0 2 2 2 7 2 2 2 2 0 0 0 
thread: 0, divisorComp: 0 0 0 1 0 1 1 1 1 1 1 1 1 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
Thread: 3, gpu_BlockDP is done.
Thread: 2, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 7
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 7
copy the latest feasible solution to instance takes time: 0.312352
thread: 1, sOPT: 10
copy the latest feasible solution to instance takes time: 0.389596
thread: 2, sOPT: 7
copy the latest feasible solution to instance takes time: 0.494335
thread: 3, sOPT: 7
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 2e-06
thread: 0, sOPT: 11
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: 3, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 1, MlBk function is done, and BkID for all processes are collected.2, MlBk function is done, and BkID for all processes are collected.

sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: 1 -1 -1 -1
Pick seg 1 for next iteration where LB: 100, UB: 105
BKID: 0, LB: 100, UB: 105, OPT: 10
Dynamic Programming Runtime: 6.15459
Execution time between LB and UB is: 2
By far, all LB UB calculation runtime: 4
Iteration: 3, UB: 105, LB: 100start at time: 1504655391
thread: 0, MlBk is called with LB: 100, UB: 101
thread: thread:  thread: 01, LongJobs.size() , MlBk is called with LB: 3101, UB: , MlBk is called with LB: 13
102103
, UB: 105
 thread: 3, LongJobs.size() 13
 thread: 1, LongJobs.size() 13
thread: 2, MlBk is called with LB: 102, UB: 103
 thread: 2, LongJobs.size() 13
thread: 3, NSTable size: 17
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 6
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 0 0 2 2 2 7 2 2 2 2 0 0 0 
thread: 3, divisorComp: 0 0 0 0 0 1 1 1 1 1 1 1 1 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
thread: 1, NSTable size: 14
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 6
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 0 0 2 2 2 7 2 2 2 2 0 0 0 
thread: 1, divisorComp: 0 0 0 0 0 1 1 1 1 1 1 1 1 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
thread: 0, NSTable size: 14
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 6
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 0 0 2 2 2 7 2 2 2 2 0 0 0 
thread: 0, divisorComp: 0 0 0 0 0 1 1 1 1 1 1 1 1 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
thread: 2, NSTable size: 17
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 6
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 0 0 2 2 2 7 2 2 2 2 0 0 0 
thread: 2, divisorComp: 0 0 0 0 0 1 1 1 1 1 1 1 1 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 10
Thread: 1, gpu_BlockDP is done.
Thread: 0, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 11
copy the latest feasible solution to instance takes time: 7e-06
thread: 1, sOPT: 11
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 7e-06
thread: 0, sOPT: 11
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.288707
thread: 3, sOPT: 10
copy the latest feasible solution to instance takes time: 0.145595
thread: 2, sOPT: 10
Thread: 2, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 1, MlBk function is done, and BkID for all processes are collected.
Thread: 0, MlBk function is done, and BkID for all processes are collected.
3, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: 1 1 -1 -1
Pick seg 2 for next iteration where LB: 102, UB: 103
BKID: 0, LB: 102, UB: 102, OPT: 10
Dynamic Programming Runtime: 3.69618
Execution time between LB and UB is: 2
By far, all LB UB calculation runtime: 6
********************************************************
Total execution on UB and LB is: 6
OUT of Bk while loop  
UB    102
LB    102
T1    101
T2    102
OPT   10
nMachines   10
BkID	0
AllProbData.size()    3
ck :   2
AllProbData[ck].Ttable    102
ck :   1
AllProbData[ck].Ttable    104
ck :   0
AllProbData[ck].Ttable    116
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan108
Main Scheduling is Done
File 3-6 is Done.
******************************
Reading File...
File 3-7 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 224, LB: 124start at time: 1504655393
thread: 0, MlBk is called with LB: 124, UB: 149
thread:  thread: 0, LongJobs.size() 14thread: thread: 
2, MlBk is called with LB: 174, UB: 199
3, MlBk is called with LB: 199, UB: 224
 thread: 2, LongJobs.size() 13
1, MlBk is called with LB: 149, UB: 174
 thread: 3, LongJobs.size() 12
 thread: 1, LongJobs.size() 14
thread: 3, NSTable size: 22
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 5
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 3 3 3 2 0 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 1 1 2 2 0 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 0 1 1 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
thread: 2, NSTable size: 29
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 2 3 3 2 5 2 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 1 1 1 2 1 1 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 0 1 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
thread: 1, NSTable size: 33
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 3 2 2 2 3 5 2 0 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 1 1 1 2 1 1 1 0 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 0 1 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
thread: 0, NSTable size: 20
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 0 3 0 3 2 3 3 2 3 0 0 0 0 
thread: 0, divisorComp: 0 0 0 0 1 0 1 1 1 1 2 1 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 0 0 0 1 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 5
copy the latest feasible solution to instance takes time: 0.053296
thread: 3, sOPT: 5
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 6
copy the latest feasible solution to instance takes time: 0.236793
thread: 2, sOPT: 6
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 7
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.306486
thread: 1, sOPT: 7
copy the latest feasible solution to instance takes time: 0.300789
thread: 0, sOPT: 9
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 1, MlBk function is done, and BkID for all processes are collected.3
, MlBk function is done, and BkID for all processes are collected.Thread: 2, MlBk function is done, and BkID for all processes are collected.

sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 124, UB: 137
BKID: 0, LB: 124, UB: 137, OPT: 9
Dynamic Programming Runtime: 6.04437
Execution time between LB and UB is: 2
By far, all LB UB calculation runtime: 2
Iteration: 2, UB: 137, LB: 124start at time: 1504655395
thread: 0, MlBk is called with LB: 124, UB: 127
 thread: 0, LongJobs.size() 16
thread: thread: 13, MlBk is called with LB: , MlBk is called with LB: 127, UB: thread: 130
2, MlBk is called with LB: 130, UB: 133
 thread: 1, LongJobs.size() 15
133, UB: 137
 thread: 2, LongJobs.size() 15
 thread: 3, LongJobs.size() 15
thread: 2, NSTable size: 26
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 2 3 0 3 2 3 3 2 3 0 0 0 0 
thread: 2, divisorComp: 0 0 0 1 1 0 1 1 1 1 2 1 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 0 0 0 0 1 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
thread: 1, NSTable size: 26
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 2 3 0 3 2 3 3 2 3 0 0 0 0 
thread: 1, divisorComp: 0 0 0 1 1 0 1 1 1 1 2 1 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 0 0 0 0 1 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
thread: 3, NSTable size: 26
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 2 3 0 3 2 3 3 2 3 0 0 0 0 
thread: 3, divisorComp: 0 0 0 1 1 0 1 1 1 1 2 1 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 0 0 0 0 0 1 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
thread: 0, NSTable size: 27
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 3 0 3 0 2 2 3 2 3 3 2 0 0 
thread: 0, divisorComp: 0 0 0 1 0 1 0 1 1 1 2 1 1 1 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 0 0 0 1 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 10
copy the latest feasible solution to instance takes time: 1.78584
thread: 3, sOPT: 10
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
copy the latest feasible solution to instance takes time: 1.18959
thread: 1, sOPT: 10
copy the latest feasible solution to instance takes time: 1.3035
Thread: 0, gpu_BlockDP is done.
thread: 2, sOPT: 10
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 1e-06
thread: 0, sOPT: 11
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 3, MlBk function is done, and BkID for all processes are collected.Thread: 
1, MlBk function is done, and BkID for all processes are collected.
2, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: 1 -1 -1 -1
Pick seg 1 for next iteration where LB: 126, UB: 129
BKID: 0, LB: 126, UB: 129, OPT: 10
Dynamic Programming Runtime: 38.0357
Execution time between LB and UB is: 12
By far, all LB UB calculation runtime: 14
Iteration: 3, UB: 129, LB: 126start at time: 1504655407
thread: 0, MlBk is called with LB: 126, UB: 127
 thread: 0, LongJobs.size() thread: 16thread: 
2, MlBk is called with LB: 128, UB: 129
1, MlBk is called with LB: 127, UB: 128
 thread: 2, LongJobs.size() 15
 thread: 1, LongJobs.size() 16
thread: 2, NSTable size: 26
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 2 3 0 3 2 3 3 2 3 0 0 0 0 
thread: 2, divisorComp: 0 0 0 1 1 0 1 1 1 1 2 1 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 0 0 0 0 1 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
thread: 1, NSTable size: 32
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 3 0 3 0 2 2 3 2 3 3 2 0 0 
thread: 1, divisorComp: 0 0 0 1 0 1 0 1 1 1 2 1 1 1 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 0 0 0 1 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
thread: 0, NSTable size: 32
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 3 0 3 0 2 2 3 2 3 3 2 0 0 
thread: 0, divisorComp: 0 0 0 1 0 1 0 1 1 1 2 1 1 1 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 0 0 0 1 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
copy the latest feasible solution to instance takes time: 1.22311
thread: 2, sOPT: 10
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 3e-06
thread: 0, sOPT: 11
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 11
copy the latest feasible solution to instance takes time: 1e-06
thread: 1, sOPT: 11
BKID: 0, LB: 128, UB: 128, OPT: 10
Dynamic Programming Runtime: 39.1659
Execution time between LB and UB is: 14
By far, all LB UB calculation runtime: 28
********************************************************
Total execution on UB and LB is: 28
OUT of Bk while loop  
UB    128
LB    128
T1    128
T2    128
OPT   10
nMachines   10
BkID	0
AllProbData.size()    3
ck :   2
AllProbData[ck].Ttable    128
ck :   1
AllProbData[ck].Ttable    128
ck :   0
AllProbData[ck].Ttable    136
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan138
Main Scheduling is Done
File 3-7 is Done.
******************************
Reading File...
File 3-8 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 204, LB: 104start at time: 1504655421
thread: 0, MlBk is called with LB: 104, UB: 129
thread: 3, MlBk is called with LB: 179, UB: 204
 thread: 0, LongJobs.size() 12
thread: thread: 2, MlBk is called with LB: 1541, UB: 179, MlBk is called with LB: 
129 thread: 3, LongJobs.size() 11
, UB: 154
 thread: 2, LongJobs.size() 11
 thread: 1, LongJobs.size() 12
thread: 2, NSTable size: 21
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 0 3 2 2 3 3 2 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 1 1 2 1 1 1 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 1 0 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
thread: 3, NSTable size: 36
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 3 2 3 3 3 3 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 0 0 0 0 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
thread: 0, NSTable size: 13
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 0 2 0 3 2 0 3 3 2 0 2 0 0 
thread: 0, divisorComp: 0 0 0 0 1 0 1 1 0 1 1 1 0 2 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 0 0 0 0 1 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 , mySum: 1
thread: 1, NSTable size: 27
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 2 0 3 2 2 3 2 2 2 0 0 0 0 
thread: 1, divisorComp: 0 0 0 1 0 1 1 1 1 1 1 2 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 0 0 0 0 0 1 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 6
copy the latest feasible solution to instance takes time: 0.152224
thread: 2, sOPT: 6
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 5
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.148419
thread: 3, sOPT: 5
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 7
copy the latest feasible solution to instance takes time: 0.186132
thread: 0, sOPT: 10
copy the latest feasible solution to instance takes time: 0.126466
thread: 1, sOPT: 7
Thread: 1, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: Thread: 23, MlBk function is done, and BkID for all processes are collected.0, MlBk function is done, and BkID for all processes are collected., MlBk function is done, and BkID for all processes are collected.


sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 104, UB: 117
BKID: 0, LB: 104, UB: 117, OPT: 10
Dynamic Programming Runtime: 3.50758
Execution time between LB and UB is: 2
By far, all LB UB calculation runtime: 2
Iteration: 2, UB: 117, LB: 104start at time: 1504655423
thread: 0, MlBk is called with LB: 104, UB: 107
thread: thread: 21, MlBk is called with LB: 107thread: , MlBk is called with LB:  thread: , UB: 30110, MlBk is called with LB: 113, UB: 117

 thread: 1, LongJobs.size() 12
, LongJobs.size() 14
 thread: 3, LongJobs.size() 12
110, UB: 113
 thread: 2, LongJobs.size() 12
thread: 3, NSTable size: 13
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 0 2 0 3 2 0 3 3 2 0 2 0 0 
thread: 3, divisorComp: 0 0 0 0 1 0 1 1 0 1 1 1 0 2 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
thread: 3, largestNoZeroBlockVec: 0 0 0 0 0 0 1 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 , mySum: 1
thread: 1, NSTable size: 13
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 3

thread: 1, blockDimSizeComp: 0 0 0 0 0 2 0 0 3 2 2 3 2 2 0 2 
thread: 1, divisorComp: 0 0 0 0 0 1 0 0 1 1 1 1 1 1 0 2 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
thread: 1, largestNoZeroBlockVec: 0 0 0 0 0 0 0 1 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
thread: 2, NSTable size: 13
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 3

thread: 2, blockDimSizeComp: 0 0 0 0 0 2 0 0 3 2 2 3 2 2 0 2 
thread: 2, divisorComp: 0 0 0 0 0 1 0 0 1 1 1 1 1 1 0 2 
thread: 2, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
thread: 2, largestNoZeroBlockVec: 0 0 0 0 0 0 0 1 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
thread: 0, NSTable size: 21
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 3

thread: 0, blockDimSizeComp: 0 0 0 3 0 2 0 0 3 2 2 3 2 2 0 2 
thread: 0, divisorComp: 0 0 0 1 0 1 0 0 1 1 1 1 1 1 0 2 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
thread: 0, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 1 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
Thread: 3, gpu_BlockDP is done.
Thread: 1, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 10
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.321304
thread: 3, sOPT: 10
copy the latest feasible solution to instance takes time: 0.481838
thread: 1, sOPT: 10
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.238471
thread: 2, sOPT: 10
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 2e-06
thread: 0, sOPT: 11
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: Thread: 13, MlBk function is done, and BkID for all processes are collected., MlBk function is done, and BkID for all processes are collected.2
, MlBk function is done, and BkID for all processes are collected.

sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: 1 -1 -1 -1
Pick seg 1 for next iteration where LB: 106, UB: 109
BKID: 0, LB: 106, UB: 109, OPT: 10
Dynamic Programming Runtime: 9.53982
Execution time between LB and UB is: 4
By far, all LB UB calculation runtime: 6
Iteration: 3, UB: 109, LB: 106start at time: 1504655427
thread: 0, MlBk is called with LB: 106, UB: 107
 thread: 0, LongJobs.size() 14
thread: 2, MlBk is called with LB: 108, UB: 109
thread: 1, MlBk is called with LB: 107, UB: 108
 thread: 2, LongJobs.size() 12
 thread: 1, LongJobs.size() 14
thread: 2, NSTable size: 13
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 3

thread: 2, blockDimSizeComp: 0 0 0 0 0 2 0 0 3 2 2 3 2 2 0 2 
thread: 2, divisorComp: 0 0 0 0 0 1 0 0 1 1 1 1 1 1 0 2 
thread: 2, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
thread: 2, largestNoZeroBlockVec: 0 0 0 0 0 0 0 1 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
thread: 0, NSTable size: 21
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 3

thread: 0, blockDimSizeComp: 0 0 0 3 0 2 0 0 3 2 2 3 2 2 0 2 
thread: 0, divisorComp: 0 0 0 1 0 1 0 0 1 1 1 1 1 1 0 2 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
thread: 0, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 1 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
thread: 1, NSTable size: 21
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 3

thread: 1, blockDimSizeComp: 0 0 0 3 0 2 0 0 3 2 2 3 2 2 0 2 
thread: 1, divisorComp: 0 0 0 1 0 1 0 0 1 1 1 1 1 1 0 2 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
thread: 1, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 1 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 , mySum: 1
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.369223
thread: 2, sOPT: 10
Thread: 1, gpu_BlockDP is done.
Thread: 0, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 11
copy the latest feasible solution to instance takes time: 3e-06
thread: 1, sOPT: 11
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 1e-06
thread: 0, sOPT: 11
BKID: 0, LB: 108, UB: 108, OPT: 10
Dynamic Programming Runtime: 11.1502
Execution time between LB and UB is: 4
By far, all LB UB calculation runtime: 10
********************************************************
Total execution on UB and LB is: 10
OUT of Bk while loop  
UB    108
LB    108
T1    108
T2    108
OPT   10
nMachines   10
BkID	0
AllProbData.size()    3
ck :   2
AllProbData[ck].Ttable    108
ck :   1
AllProbData[ck].Ttable    108
ck :   0
AllProbData[ck].Ttable    116
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan108
Main Scheduling is Done
File 3-8 is Done.
******************************
Reading File...
File 3-9 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 196, LB: 104start at time: 1504655431
thread: 0, MlBk is called with LB: 104, UB: 127
thread: 3thread: , MlBk is called with LB: 173, UB: 1961
, MlBk is called with LB: 127, UB: 150
thread: 2, MlBk is called with LB: 150, UB: 173
 thread: 3, LongJobs.size() 11
 thread: 0, LongJobs.size() 16
 thread: 1, LongJobs.size() 16
 thread: 2, LongJobs.size() 15
thread: 3, NSTable size: 19
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 5
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 3 3 0 2 2 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 1 2 0 2 1 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 1 1 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
thread: 2, NSTable size: 36
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 5 2 5 2 3 2 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 1 2 1 1 1 1 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 1 0 0 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
thread: 1, NSTable size: 43
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 2 5 2 2 2 2 3 2 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 1 1 2 2 1 1 1 1 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 1 1 0 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
thread: 0, NSTable size: 21
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 0 2 5 2 3 3 0 3 2 2 0 0 0 
thread: 0, divisorComp: 0 0 0 0 1 1 2 1 1 0 1 1 1 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 1 0 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 4
copy the latest feasible solution to instance takes time: 0.036542
thread: 3, sOPT: 4
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 6
copy the latest feasible solution to instance takes time: 0.391011
thread: 2, sOPT: 6
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 3
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.667237
thread: 1, sOPT: 3
copy the latest feasible solution to instance takes time: 0.692877
thread: 0, sOPT: 10
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 3, MlBk function is done, and BkID for all processes are collected.
1, MlBk function is done, and BkID for all processes are collected.
Thread: 2, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 104, UB: 116
BKID: 0, LB: 104, UB: 116, OPT: 10
Dynamic Programming Runtime: 14.1511
Execution time between LB and UB is: 6
By far, all LB UB calculation runtime: 6
Iteration: 2, UB: 116, LB: 104start at time: 1504655438
thread: 0, MlBk is called with LB: 104, UB: 107
 thread: 0, LongJobs.size() thread: 16thread: 
3, MlBk is called with LB: 1131, UB: , MlBk is called with LB: 116107, UB: thread: 110

 thread: 3, LongJobs.size() 162, MlBk is called with LB: 110, UB: 113

 thread: 1, LongJobs.size() 16
 thread: 2, LongJobs.size() 16
thread: 2, NSTable size: 19
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 0 0 2 5 3 2 5 0 0 3 2 2 0 
thread: 2, divisorComp: 0 0 0 0 0 1 1 1 1 1 0 0 1 1 1 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
thread: 0, NSTable size: 18
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, NSTable size: 19

thread: 0, blockDimSizeComp: 0 0 0 0 0 2 5 3 2 5 0 0 3 2 2 0 
thread: 0, divisorComp: 0 0 0 0 0 1 1thread:  1 11, i:  01, alltableelemets[maxindex].elm[i]:  00
 thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
0thread:  11 , i: 1 12 , alltableelemets[maxindex].elm[i]: 00 
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 1
, i: 6thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 
, alltableelemets[maxindex].elm[i]: 4thread: 
0thread: 1, allBlocks: , i: 7, alltableelemets[maxindex].elm[i]: 2
0thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0 
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0

thread: 1, blockDimSizeComp: 0 0 0 0 0 2 5 3 2 5 0 0 3 2 2 0 
thread: 1, divisorComp: 0 0 0 0 0 1 1 1 1 1 0 0 1 1 1 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
thread: 3, NSTable size: 21
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 4
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 0 2 5 2 3 3 0 3 2 2 0 0 0 
thread: 3, divisorComp: 0 0 0 0 1 1 2 1 1 0 1 1 1 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 0 1 0 0 0 0 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
Thread: 1, gpu_BlockDP is done.
Thread: 2, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 1.17058
thread: 1, sOPT: 10
copy the latest feasible solution to instance takes time: 1.56798
thread: 2, sOPT: 10
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 10
copy the latest feasible solution to instance takes time: 1.70759
thread: 0, sOPT: 10
copy the latest feasible solution to instance takes time: 0.361451
thread: 3, sOPT: 10
Thread: 3, MlBk function is done, and BkID for all processes are collected.
Thread: 0Thread: Thread: , MlBk function is done, and BkID for all processes are collected.1
, MlBk function is done, and BkID for all processes are collected.2, MlBk function is done, and BkID for all processes are collected.

sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 104, UB: 106
BKID: 0, LB: 104, UB: 106, OPT: 10
Dynamic Programming Runtime: 32.1842
Execution time between LB and UB is: 9
By far, all LB UB calculation runtime: 16
Iteration: 3, UB: 106, LB: 104start at time: 1504655447
thread: 0, MlBk is called with LB: 104, UB: 105
 thread: 0, LongJobs.size() 16
thread: 1, MlBk is called with LB: 105, UB: 106
 thread: 1, LongJobs.size() 16
thread: 0, NSTable size: 18
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 0 0 2 5 3 2 5 0 0 3 2 2 0 
thread: 0, divisorComp: 0 0 0 0 0 1 1 1 1 1 0 0 1 1 1 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
thread: 1, NSTable size: 18
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 0 0 2 5 3 2 5 0 0 3 2 2 0 
thread: 1, divisorComp: 0 0 0 0 0 1 1 1 1 1 0 0 1 1 1 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.685937
thread: 1, sOPT: 10
copy the latest feasible solution to instance takes time: 0.681405
thread: 0, sOPT: 10
BKID: 0, LB: 104, UB: 104, OPT: 10
Dynamic Programming Runtime: 11.5021
Execution time between LB and UB is: 6
By far, all LB UB calculation runtime: 22
********************************************************
Total execution on UB and LB is: 22
OUT of Bk while loop  
UB    104
LB    104
T1    104
T2    104
OPT   10
nMachines   10
BkID	0
AllProbData.size()    3
ck :   2
AllProbData[ck].Ttable    104
ck :   1
AllProbData[ck].Ttable    105
ck :   0
AllProbData[ck].Ttable    115
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan108
Main Scheduling is Done
File 3-9 is Done.
******************************
Reading File...
File 3-10 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 173, LB: 96start at time: 1504655454
thread: 0, MlBk is called with LB: 96, UB: 115
thread: 3, MlBk is called with LB: 153, UB: 173thread: 
 thread: 0, LongJobs.size() 15
thread: 1, MlBk is called with LB: 115, UB: 134
2, MlBk is called with LB: 134, UB: 153
 thread: 3, LongJobs.size() 14
 thread: 1, LongJobs.size() 15
 thread: 2, LongJobs.size() 15
thread: 3, NSTable size: 23
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 6
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 3 2 7 2 0 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 1 2 1 2 0 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 1 0 1 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
thread: 2, NSTable size: 23
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 5
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 0 2 3 3 3 2 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 2 1 2 1 2 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 1 0 1 0 1 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 , mySum: 3
thread: 0, NSTable size: 18
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 5
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 0 0 2 3 3 2 3 2 2 0 0 0 0 
thread: 0, divisorComp: 0 0 0 0 0 1 1 1 1 2 1 2 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 0 0 1 0 1 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 , mySum: 2
thread: 1, NSTable size: 26
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 5
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 0 2 3 3 3 3 2 3 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 1 1 1 2 1 1 1 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 0 1 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 6
copy the latest feasible solution to instance takes time: 0.133523
thread: 3, sOPT: 6
Thread: 2, gpu_BlockDP is done.
Thread: 1, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 7
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 8
copy the latest feasible solution to instance takes time: 0.265817
thread: 2, sOPT: 7
copy the latest feasible solution to instance takes time: 0.46024
thread: 1, sOPT: 8
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 2e-06
thread: 0, sOPT: 11
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 2, MlBk function is done, and BkID for all processes are collected.3, MlBk function is done, and BkID for all processes are collected.
Thread: 
1, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: 1 -1 -1 -1
Pick seg 1 for next iteration where LB: 106, UB: 125
BKID: 0, LB: 106, UB: 125, OPT: 8
Dynamic Programming Runtime: 6.76526
Execution time between LB and UB is: 3
By far, all LB UB calculation runtime: 3
Iteration: 2, UB: 125, LB: 106start at time: 1504655457
thread: 0, MlBk is called with LB: 106, UB: 111
 thread: 0, LongJobs.size() 15
thread: 2, MlBk is called with LB: 116, UB: 121thread: 
thread: 1, MlBk is called with LB: 111, UB: 116
3, MlBk is called with LB: 121, UB: 126
 thread: 2, LongJobs.size() 15
 thread: 1, LongJobs.size() 15
 thread: 3, LongJobs.size() 15
thread: 0, NSTable size: 21
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 5
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 0 0 2 3 3 2 3 2 2 0 0 0 0 
thread: 0, divisorComp: 0 0 0 0 0 1 1 1 1 2 1 2 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 0 0 1 0 1 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 , mySum: 2
thread: 2, NSTable size: 22
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 5
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, NSTable size: 22

thread: 2, blockDimSizeComp: 0 0 0 0 2 3 3 3 3 2 3 0 0 0 thread: 01 , i: 0 0
, alltableelemets[maxindex].elm[i]: thread: 2, divisorComp: 0 0 0 0 1 1 1 2 1 1 1 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 0 1 0 0 0 
0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 2, allBlocks: thread: 01, i:  5, alltableelemets[maxindex].elm[i]: 02 0
 thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 20 0 0 0 0 0 0 0 0
 thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 0 0 0 50
 thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
, mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1

thread: 1, blockDimSizeComp: 0 0 0 0 2 3 3 3 3 2 3 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 1 1 1 2 1 1 1 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 0 1 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
thread: 3, NSTable size: 26
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 5
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 0 2 3 3 3 3 2 3 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 0 1 1 1 2 1 1 1 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 0 0 1 0 0 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.733063
thread: 0, sOPT: 10
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 8
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 8
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 8
copy the latest feasible solution to instance takes time: 0.48115
thread: 2, sOPT: 8
copy the latest feasible solution to instance takes time: 0.543411
thread: 3, sOPT: 8
copy the latest feasible solution to instance takes time: 0.592187
thread: 1, sOPT: 8
Thread: 1, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: Thread: 03, MlBk function is done, and BkID for all processes are collected.2, MlBk function is done, and BkID for all processes are collected., MlBk function is done, and BkID for all processes are collected.


sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 106, UB: 109
BKID: 0, LB: 106, UB: 109, OPT: 10
Dynamic Programming Runtime: 9.86248
Execution time between LB and UB is: 2
By far, all LB UB calculation runtime: 5
Iteration: 3, UB: 109, LB: 106start at time: 1504655460
thread: 0, MlBk is called with LB: 106, UB: 107
thread: 2, MlBk is called with LB: 108thread:  thread: 0, LongJobs.size() , UB: 15
109
1, MlBk is called with LB: 107, UB: 108
 thread: 2, LongJobs.size() 15
 thread: 1, LongJobs.size() 15
thread: 1, NSTable size: 18
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 1thread: 
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 5
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 0, NSTable size: 18
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2

thread: 1, blockDimSizeComp: 0 0 0 0 0 2 3 3 2 3 2 2 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 0 1 1 thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 11
2thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 5
 1 2 1 2 0 0 0 0 thread: 
0thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 0 0 1 0 1 
, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
, NSTable size: 21thread: 
1thread: , allBlocks: 0 20 0, i:  00, alltableelemets[maxindex].elm[i]:  00 0
 0 
thread: 0, blockDimSizeComp: 0 0 0 0 0 2thread:  3 3 2 3 2 2 0 0 20 , i: 010  0, alltableelemets[maxindex].elm[i]: 
thread: 0, divisorComp: 0 0 0 0 0 1 1 1 1 0 0  20 0
 1 2 0 0 0 0 
thread: thread: 0, largestBlockVec: 0 0 0 0 0 0 02 0 0 1 0 1 0 0 , i: 02, alltableelemets[maxindex].elm[i]:  000
  
thread: 2thread: , i: 0, largestNoZeroBlockVec: 30, alltableelemets[maxindex].elm[i]:  0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 5
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 00 0 0 1  0 11  0
 0
 thread: 2, blockDimSizeComp: 0 0 0 0 0 2 3 03 2  3 02 , mySum:  1
2 0 0 0 0 0 0 0 0 00 0 0 0  1 
0thread: 2, divisorComp: 0 0 0 0 0 1 1 1 1 0 0 0  20 1 thread: 0, allBlocks: 0 0 0 0 00  0, mySum: 1 0
 2 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 0 0 00 0 0 0 0 0 0 0  00  01  00   10 10 0  0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 11 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0  0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 1 0 00 0  00 0 
thread: 2, largestNoZeroBlockVec: 0 0 0 0 1 0 1 
 0 0 0 , mySum: 2
 0 , mySum: 2
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 , mySum: 2
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 11
copy the latest feasible solution to instance takes time: 6e-06
thread: 1, sOPT: 11
Thread: 2, gpu_BlockDP is done.
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 3e-06
thread: 0, sOPT: 11
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.171601
thread: 2, sOPT: 10
BKID: 0, LB: 108, UB: 108, OPT: 10
Dynamic Programming Runtime: 4.91181
Execution time between LB and UB is: 1
By far, all LB UB calculation runtime: 7
********************************************************
Total execution on UB and LB is: 8
OUT of Bk while loop  
UB    108
LB    108
T1    108
T2    108
OPT   10
nMachines   10
BkID	0
AllProbData.size()    3
ck :   2
AllProbData[ck].Ttable    108
ck :   1
AllProbData[ck].Ttable    108
ck :   0
AllProbData[ck].Ttable    124
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan112
Main Scheduling is Done
File 3-10 is Done.
******************************
Reading File...
File 3-11 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 243, LB: 143start at time: 1504655462
thread: 0, MlBk is called with LB: 143, UB: 168
thread: 3, MlBk is called with LB: 218, UB: 243
thread:  thread: 0, LongJobs.size() 1, MlBk is called with LB: 18thread: 168
, UB: 1932, MlBk is called with LB: 193, UB: 218
 thread: 3, LongJobs.size() 16

 thread: 2, LongJobs.size() 16
 thread: 1, LongJobs.size() 17
thread: 2, NSTable size: 18
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 7
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 0 4 3 5 2 0 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 2 1 1 2 0 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 1 0 0 1 
thread: 3, NSTable size: 24
thread: 2, allBlocks: 0 0 0 0 0 0 0 thread: 03, i:  00 , alltableelemets[maxindex].elm[i]: 0 00
 0 thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 7
0 0 0 0 , mySum: thread: 03, i: 
40 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1, alltableelemets[maxindex].elm[i]: 
20 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1

0 0 0 thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 4
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 30 1 0
 thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
0 1 0 0 0 0 0 0 0 0 , mySum: 2

thread: 3, blockDimSizeComp: 0 0 0 4 3 5 2 0 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 2 1 1 2 0 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 1 0 0 1 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
thread: 1, NSTable size: 30
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 5
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 2 3 2 2 3 4 0 0 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 1 2 2 2 1 1 0 0 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 1 1 1 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 , mySum: 3
thread: 0, NSTable size: 25
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 7
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 2 2 0 4 2 5 2 2 0 0 0 0 0 
thread: 0, divisorComp: 0 0 0 1 1 0 2 1 1 1 2 0 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 1 0 0 0 1 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 , mySum: 2
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 6
copy the latest feasible solution to instance takes time: 0.137627
thread: 3, sOPT: 6
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 6
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.155951
thread: 2, sOPT: 6
copy the latest feasible solution to instance takes time: 0.54701
thread: 0, sOPT: 10
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 7
copy the latest feasible solution to instance takes time: 0.204639
thread: 1, sOPT: 7
Thread: 1, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: Thread: 3, MlBk function is done, and BkID for all processes are collected.2, MlBk function is done, and BkID for all processes are collected.0
, MlBk function is done, and BkID for all processes are collected.

sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 143, UB: 156
BKID: 0, LB: 143, UB: 156, OPT: 10
Dynamic Programming Runtime: 9.24461
Execution time between LB and UB is: 4
By far, all LB UB calculation runtime: 4
Iteration: 2, UB: 156, LB: 143start at time: 1504655466
thread: 0, MlBk is called with LB: 143, UB: 146
 thread: 0, LongJobs.size() thread: 18thread: thread: 1, MlBk is called with LB: 146, UB: 1492
, MlBk is called with LB: 149, UB: 152
3 thread: 1, LongJobs.size() 18
, MlBk is called with LB: 152, UB: 156

 thread: 3, LongJobs.size() 18
 thread: 2, LongJobs.size() 18
thread: 1, NSTable size: 22
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 7
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 2 2 0 4 2 5 2 2 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 1 1 0 2 1 1 1 2 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 1 0 0 0 1 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 , mySum: 2
thread: 0, NSTable size: 22
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 7
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 2 2 0 4 2 5 2 2 0 0 0 0 0 
thread: 0, divisorComp: 0 0 0 1 1 0 2 1 1 1 2 0 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 1 0 0 0 1 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 , mySum: 2
thread: 3, NSTable size: 25
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 7
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 2 2 0 4 2 5 2 2 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 1 1 0 2 1 1 1 2 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 0 1 0 0 0 1 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 , mySum: 2
thread: 2, NSTable size: 22
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 7
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 2 2 0 4 2 5 2 2 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 1 1 0 2 1 1 1 2 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 1 0 0 0 1 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 , mySum: 2
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.916413
thread: 0, sOPT: 10
copy the latest feasible solution to instance takes time: 0.93531
thread: 1, sOPT: 10
copy the latest feasible solution to instance takes time: 0.944656
thread: 2, sOPT: 10
copy the latest feasible solution to instance takes time: 0.928496
thread: 3, sOPT: 10
Thread: 3, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: Thread: 12, MlBk function is done, and BkID for all processes are collected.0, MlBk function is done, and BkID for all processes are collected.
, MlBk function is done, and BkID for all processes are collected.

sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 143, UB: 145
BKID: 0, LB: 143, UB: 145, OPT: 10
Dynamic Programming Runtime: 12.5228
Execution time between LB and UB is: 4
By far, all LB UB calculation runtime: 8
Iteration: 3, UB: 145, LB: 143start at time: 1504655470
thread: 0, MlBk is called with LB: 143, UB: 144
thread: 1, MlBk is called with LB: 144, UB: 145
 thread: 0, LongJobs.size() 19
 thread: 1, LongJobs.size() 18
thread: 1, NSTable size: 22
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 7
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 2 2 0 4 2 5 2 2 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 1 1 0 2 1 1 1 2 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 1 0 0 0 1 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 , mySum: 2
thread: 0, NSTable size: 32
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 5
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 2 3 0 3 3 2 2 3 2 0 0 0 0 
thread: 0, divisorComp: 0 0 0 1 1 0 1 2 1 2 1 2 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 1 0 1 0 1 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 0 1 0 1 0 1 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 , mySum: 2
0 0 0 0 0 0 0 1 0 1 0 1 0 0 0 0 , mySum: 3
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.459751
thread: 1, sOPT: 10
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 1e-06
thread: 0, sOPT: 11
BKID: 0, LB: 144, UB: 144, OPT: 10
Dynamic Programming Runtime: 14.4126
Execution time between LB and UB is: 9
By far, all LB UB calculation runtime: 17
********************************************************
Total execution on UB and LB is: 17
OUT of Bk while loop  
UB    144
LB    144
T1    144
T2    144
OPT   10
nMachines   10
BkID	0
AllProbData.size()    3
ck :   2
AllProbData[ck].Ttable    144
ck :   1
AllProbData[ck].Ttable    144
ck :   0
AllProbData[ck].Ttable    155
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan155
Main Scheduling is Done
File 3-11 is Done.
******************************
Reading File...
File 3-12 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 191, LB: 99start at time: 1504655479
thread: 0, MlBk is called with LB: 99, UB: 122
thread: thread: 3, MlBk is called with LB: 168, UB: 1912
, MlBk is called with LB: 145, UB: 168 thread: 0, LongJobs.size() 16

 thread: 3, LongJobs.size() 10
thread: 1, MlBk is called with LB: 122, UB: 145
 thread: 2, LongJobs.size() 11
 thread: 1, LongJobs.size() 13
thread: 3, NSTable size: 19
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 2 0 2 3 3 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 2 0 2 1 1 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 1 1 0 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
thread: 2, NSTable size: 26
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 2 2 0 2 3 3 3 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 1 2 0 1 1 1 1 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 1 0 0 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
thread: 1, NSTable size: 28
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 3 2 2 0 2 3 3 3 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 1 1 2 0 1 1 1 1 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 1 0 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
thread: 0, NSTable size: 26
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 0 5 2 2 2 0 0 2 3 0 3 3 0 
thread: 0, divisorComp: 0 0 0 0 1 1 1 2 0 0 1 1 0 1 1 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 0 1 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 4
copy the latest feasible solution to instance takes time: 0.02869
thread: 3, sOPT: 4
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 5
copy the latest feasible solution to instance takes time: 0.077629
thread: 2, sOPT: 5
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 7
copy the latest feasible solution to instance takes time: 0.282707
thread: 1, sOPT: 7
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.368618
thread: 0, sOPT: 10
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: 3Thread: , MlBk function is done, and BkID for all processes are collected.Thread: 1
, MlBk function is done, and BkID for all processes are collected.2, MlBk function is done, and BkID for all processes are collected.

sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 99, UB: 111
BKID: 0, LB: 99, UB: 111, OPT: 10
Dynamic Programming Runtime: 12.7768
Execution time between LB and UB is: 7
By far, all LB UB calculation runtime: 7
Iteration: 2, UB: 111, LB: 99start at time: 1504655486
thread: 0, MlBk is called with LB: 99, UB: 102
thread: 3, MlBk is called with LB: 108, UB: 111
thread: 1, MlBk is called with LB: thread: 102, UB:  thread: 1050, LongJobs.size() 2
, MlBk is called with LB:  thread: 3, LongJobs.size() 16
105, UB: 108
 thread: 1, LongJobs.size() 16
16
 thread: 2, LongJobs.size() 16
thread: 1, NSTable size: 22
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 0 5 2 2 2 0 0 2 3 0 3 3 0 
thread: 1, divisorComp: 0 0 0 0 1 1 1 2 0 0 1 1 0 1 1 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 0 1 0 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
thread: 0, NSTable size: 19
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 0 5 2 2 2 0 0 2 3 0 3 3 0 
thread: 0, divisorComp: 0 0 0 0 1 1 1 2 0 0 1 1 0 1 1 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 0 1 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
thread: 2, NSTable size: 22
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10thread: , alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 23
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
, NSTable size: 26
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 4
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 1

thread: 2, blockDimSizeComp: 0 0 0 0 thread: 53 2, i:  72, alltableelemets[maxindex].elm[i]:  3
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 22
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0
 0 0 2 3 0 3 3 0 
thread: 2, divisorComp: 0 0 0 0 1 1 1 2 0 0 1 1 0 1 1 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 0 1 0 0 0 0 

thread: 3, blockDimSizeComp: 0 0 0 0 5 2 2 2 0 0 2thread:  23, allBlocks:  0 00  3 30  00  0 
0thread: 3, divisorComp: 0 0 0 0 1 1 1 2 0 0 1 1 0 1 1 0 
thread: 3, largestBlockVec: 0 0 0 0 0 0 0  0 0 0 0 0 0 0 0 0 01  , mySum: 00 0 0 
00 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 0 0 1 0 0 0 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 9e-06
thread: 0, sOPT: 11
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 10
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
copy the latest feasible solution to instance takes time: 1.35399
thread: 3, sOPT: 10
copy the latest feasible solution to instance takes time: 1.28815
thread: 1, sOPT: 10
copy the latest feasible solution to instance takes time: 0.689253
thread: 2, sOPT: 10
Thread: 2, MlBk function is done, and BkID for all processes are collected.
Thread: 3, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 01, MlBk function is done, and BkID for all processes are collected., MlBk function is done, and BkID for all processes are collected.

sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: 1 -1 -1 -1
Pick seg 1 for next iteration where LB: 101, UB: 104
BKID: 0, LB: 101, UB: 104, OPT: 10
Dynamic Programming Runtime: 30.6386
Execution time between LB and UB is: 8
By far, all LB UB calculation runtime: 15
Iteration: 3, UB: 104, LB: 101start at time: 1504655495
thread: 0, MlBk is called with LB: 101, UB: 102
thread: thread:  thread: 01, LongJobs.size() , MlBk is called with LB: 2102, UB: , MlBk is called with LB: 103
103, UB: 104
16
 thread: 1, LongJobs.size() 16
 thread: 2, LongJobs.size() 16
thread: 0, NSTable size: 19
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 0 5 2 2 2 0 0 2 3 0 3 3 0 
thread: 0, divisorComp: 0 0 0 0 1 1 1 2 0 0 1 1 0 1 1 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 0 1 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
thread: 1, NSTable size: 22
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: thread: 1, i: 21, alltableelemets[maxindex].elm[i]: , NSTable size: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 322, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 2

thread: 2, i: 0, alltableelemets[maxindex].elm[i]: thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 2

thread: 1, blockDimSizeComp: 0 0 0 0 5 2 2 2 0 0 thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
2
thread: 2, blockDimSizeComp: 0 0 0 0 5  2 2 2 0 30 0 2  33  3 00  3 3 0
 thread: 1, divisorComp: 0 0 0 0 1 1 1 2 
0thread: 2, divisorComp: 0 0 0 0 1 1 1  2 00  0 11  11  00  11 1  10  
0 thread: 2, largestBlockVec: 0 0 0 0 0 0
 thread: 1, largestBlockVec: 0 0 0 0 0 0 0 1 00 0  01  0 00 0  0 00  00  00  00  

thread: 2, largestNoZeroBlockVec: 0 0 0 1 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 0 1 0 0 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 5e-06
thread: 0, sOPT: 11
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.694297
thread: 2, sOPT: 10
copy the latest feasible solution to instance takes time: 0.832166
thread: 1, sOPT: 10
BKID: 0, LB: 102, UB: 102, OPT: 10
Dynamic Programming Runtime: 19.859
Execution time between LB and UB is: 7
By far, all LB UB calculation runtime: 23
********************************************************
Total execution on UB and LB is: 23
OUT of Bk while loop  
UB    102
LB    102
T1    102
T2    102
OPT   10
nMachines   10
BkID	0
AllProbData.size()    3
ck :   2
AllProbData[ck].Ttable    102
ck :   1
AllProbData[ck].Ttable    103
ck :   0
AllProbData[ck].Ttable    110
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan107
Main Scheduling is Done
File 3-12 is Done.
******************************
Reading File...
File 3-13 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 190, LB: 97start at time: 1504655502
thread: 0, MlBk is called with LB: 97, UB: 120
thread: 3, MlBk is called with LB: 166, UB: 190
 thread: 0, LongJobs.size() 13
thread: 1, MlBk is called with LB: 120, UB: 143
 thread: 3, LongJobs.size() 12
thread: 2, MlBk is called with LB: 143, UB: 166
 thread: 1, LongJobs.size() 13
 thread: 2, LongJobs.size() 12
thread: 3, NSTable size: 20
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 5
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 3 3 0 2 3 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 1 2 0 2 1 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 1 1 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
thread: 2, NSTable size: 24
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 0 3 5 2 2 2 2 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 1 1 1 1 2 1 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 0 0 1 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
thread: 1, NSTable size: 22
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 2 0 3 5 2 2 3 3 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 1 0 1 1 1 1 1 1 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 0 0 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
thread: 0, NSTable size: 17
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 0 2 0 0 3 5 2 0 2 3 2 2 0 
thread: 0, divisorComp: 0 0 0 0 1 0 0 1 1 1 0 1 1 1 1 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 5
copy the latest feasible solution to instance takes time: 0.083427
thread: 3, sOPT: 5
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 6
copy the latest feasible solution to instance takes time: 0.136309
thread: 2, sOPT: 6
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 7
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.225487
thread: 1, sOPT: 7
copy the latest feasible solution to instance takes time: 0.21366
thread: 0, sOPT: 9
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: 1, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 3, MlBk function is done, and BkID for all processes are collected.2, MlBk function is done, and BkID for all processes are collected.

sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 97, UB: 109
BKID: 0, LB: 97, UB: 109, OPT: 9
Dynamic Programming Runtime: 4.57421
Execution time between LB and UB is: 2
By far, all LB UB calculation runtime: 2
Iteration: 2, UB: 109, LB: 97start at time: 1504655504
thread: 0, MlBk is called with LB: 97, UB: 100
 thread: 0, LongJobs.size() 13
thread: thread: 3, MlBk is called with LB: 106, UB: 109
thread: 2, MlBk is called with LB: 103, UB: 106
1, MlBk is called with LB: 100, UB: 103
 thread: 3, LongJobs.size() 13
 thread: 1, LongJobs.size() 13
 thread: 2, LongJobs.size() 13
thread: 0, NSTable size: 12
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 0 2 0 0 3 5 2 0 2 3 2 2 0 
thread: 0, divisorComp: 0 0 0 0 1 0 0 1 1 1 0 1 1 1 1 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
thread: 1, NSTable size: 12
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 0 2 0 0 3 5 2 0 2 3 2 2 0 
thread: 1, divisorComp: 0 0 0 0 1 0 0 1 1 1 0 1 1 1 1 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
thread: 2, NSTable size: 14
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 0 2 0 0 3 5 2 0 2 3 2 2 0 
thread: 2, divisorComp: 0 0 0 0 1 0 0 1 1 1 0 1 1 1 1 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
thread: 3, NSTable size: 14
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 0 2 0 0 3 5 2 0 2 3 2 2 0 
thread: 3, divisorComp: 0 0 0 0 1 0 0 1 1 1 0 1 1 1 1 0 
thread: 3, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 11
copy the latest feasible solution to instance takes time: 3e-06
thread: 1, sOPT: 11
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 6e-06
thread: 0, sOPT: 11
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.338937
thread: 2, sOPT: 10
copy the latest feasible solution to instance takes time: 0.215144
thread: 3, sOPT: 10
Thread: 3, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 2, MlBk function is done, and BkID for all processes are collected.
0, MlBk function is done, and BkID for all processes are collected.
Thread: 1, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: 1 1 -1 -1
Pick seg 2 for next iteration where LB: 102, UB: 105
BKID: 0, LB: 102, UB: 105, OPT: 10
Dynamic Programming Runtime: 7.33519
Execution time between LB and UB is: 2
By far, all LB UB calculation runtime: 4
Iteration: 3, UB: 105, LB: 102start at time: 1504655506
thread: 0, MlBk is called with LB: 102, UB: 103
 thread: 0, LongJobs.size() thread: 13thread: 1, MlBk is called with LB: 
2, MlBk is called with LB: 104, UB: 105
103, UB: 104
 thread: 2, LongJobs.size() 13
 thread: 1, LongJobs.size() 13
thread: 2, NSTable size: 14
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0
thread: 1, NSTable size: 14
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 0, NSTable size: 14
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 1

thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8thread: 2, blockDimSizeComp: 0 0 0 0 2 0 0 , alltableelemets[maxindex].elm[i]: 4
thread: 1thread: , i: 35, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
 thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 51 
2thread:  10, i:  12, alltableelemets[maxindex].elm[i]: 22 3 
2 thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
2thread: 1 , i: 14, alltableelemets[maxindex].elm[i]: 01 
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0
0, i: 
9, alltableelemets[maxindex].elm[i]: 1thread: 2, divisorComp: 0 0 0 0 1 0 0 1 1 1 0 1 1 1 1 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 

thread: 1, blockDimSizeComp: 0 0 0 0 2 0 0 3 5 2 0 thread: 22 3, largestNoZeroBlockVec:  0 20  20  0 0
thread: 1, divisorComp: 0 0 0 0 1 0 0 1 1 
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0
 1 0 1 1 1 1 0 
0 0 0 0 thread: 
1, largestBlockVec: 0 0 0 0 0 0 0 0 thread: 02, allBlocks:  0 00 0  0 00 0  0 0 0 
0thread: 1, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0

thread:  0, blockDimSizeComp: 0 00 0  0 02  0 00  03  5 20  00  02  03  20  2 00  0 , mySum: 0

thread: 0, divisorComp: 0 0 0 0 1 0 0 1 1 1 0 1 1 1 1 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.339747
thread: 2, sOPT: 10
copy the latest feasible solution to instance takes time: 0.413084
thread: 0, sOPT: 10
copy the latest feasible solution to instance takes time: 0.459287
thread: 1, sOPT: 10
BKID: 0, LB: 102, UB: 102, OPT: 10
Dynamic Programming Runtime: 5.38919
Execution time between LB and UB is: 2
By far, all LB UB calculation runtime: 6
********************************************************
Total execution on UB and LB is: 6
OUT of Bk while loop  
UB    102
LB    102
T1    102
T2    102
OPT   10
nMachines   10
BkID	0
AllProbData.size()    3
ck :   2
AllProbData[ck].Ttable    102
ck :   1
AllProbData[ck].Ttable    104
ck :   0
AllProbData[ck].Ttable    108
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan109
Main Scheduling is Done
File 3-13 is Done.
******************************
Reading File...
File 3-14 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 200, LB: 101start at time: 1504655508
thread: 0, MlBk is called with LB: 101, UB: 126
thread: 3, MlBk is called with LB: 176, UB: 201
 thread: 0, LongJobs.size() 13
thread: 1, MlBk is called with LB: thread: 126, UB: 151
2, MlBk is called with LB: 151, UB: 176
 thread: 3, LongJobs.size() 11
 thread: 1, LongJobs.size() 13
 thread: 2, LongJobs.size() 11
thread: 2, NSTable size: 24
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 2 2 2 2 2 3 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 1 1 1 2 2 1 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 0 1 1 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 , mySum: 2
thread: 3, NSTable size: 36
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 3 2 2 3 3 2 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 1 1 2 1 1 1 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 0 1 0 0 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
thread: 1, NSTable size: 26
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 3 0 3 2 0 2 3 3 2 0 0 0 0 
thread: 1, divisorComp: 0 0 0 1 0 1 1 0 2 1 1 1 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 0 1 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
thread: 0, NSTable size: 19
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 0 3 2 2 2 0 2 3 3 0 2 0 0 
thread: 0, divisorComp: 0 0 0 0 1 1 1 1 0 2 1 1 0 1 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 0 0 1 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 5
copy the latest feasible solution to instance takes time: 0.128138
thread: 2, sOPT: 5
Thread: 3, gpu_BlockDP is done.
Thread: 0, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 2
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.144449
thread: 3, sOPT: 2
copy the latest feasible solution to instance takes time: 0.409082
thread: 0, sOPT: 9
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 8
copy the latest feasible solution to instance takes time: 0.121752
thread: 1, sOPT: 8
Thread: 1, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 3, MlBk function is done, and BkID for all processes are collected.
2, MlBk function is done, and BkID for all processes are collected.
Thread: 0, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 101, UB: 114
BKID: 0, LB: 101, UB: 114, OPT: 9
Dynamic Programming Runtime: 5.62913
Execution time between LB and UB is: 3
By far, all LB UB calculation runtime: 3
Iteration: 2, UB: 114, LB: 101start at time: 1504655511
thread: 0, MlBk is called with LB: 101, UB: 104
 thread: thread: 0thread: thread: , LongJobs.size() 31132, MlBk is called with LB: , MlBk is called with LB: , MlBk is called with LB: 104107, UB: , UB: 107110

 thread: 1, LongJobs.size() 13
110 thread: , UB: 2, LongJobs.size() 11413


 thread: 3, LongJobs.size() 13
thread: 1, NSTable size: 12
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 1

thread: 1, blockDimSizeComp: 0 0 0 0 0 3 0 3 0 2 0 2 3 2 2 2 
thread: 1, divisorComp: 0 0 0 0 0 1 0 1 0 1 0 2 1 1 1 1 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 0 1 0 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
thread: 0, NSTable size: 12
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 1

thread: 0, blockDimSizeComp: 0 0 0 0 0 3 0 3 0 2 0 2 3 2 2 2 
thread: 0, divisorComp: 0 0 0 0 0 1 0 1 0 1 0 2 1 1 1 1 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 0 1 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
thread: 3, NSTable size: 19
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 0 3 2 2 2 0 2 3 3 0 2 0 0 
thread: 3, divisorComp: 0 0 0 0 1 1 1 1 0 2 1 1 0 1 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 0 0 0 1 0 0 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
thread: 2, NSTable size: 14
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 1

thread: 2, blockDimSizeComp: 0 0 0 0 0 3 0 3 0 2 0 2 3 2 2 2 
thread: 2, divisorComp: 0 0 0 0 0 1 0 1 0 1 0 2 1 1 1 1 
thread: 2, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 0 1 0 0 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
Thread: 1, gpu_BlockDP is done.
Thread: 3, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 11
copy the latest feasible solution to instance takes time: 8e-06
thread: 1, sOPT: 11
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 9
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 5e-06
thread: 0, sOPT: 11
copy the latest feasible solution to instance takes time: 0.402467
thread: 3, sOPT: 9
copy the latest feasible solution to instance takes time: 0.394626
thread: 2, sOPT: 10
Thread: 2, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: Thread: 0, MlBk function is done, and BkID for all processes are collected.13, MlBk function is done, and BkID for all processes are collected., MlBk function is done, and BkID for all processes are collected.


sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: 1 1 -1 -1
Pick seg 2 for next iteration where LB: 106, UB: 109
BKID: 0, LB: 106, UB: 109, OPT: 10
Dynamic Programming Runtime: 7.41963
Execution time between LB and UB is: 2
By far, all LB UB calculation runtime: 5
Iteration: 3, UB: 109, LB: 106start at time: 1504655513
thread: 0, MlBk is called with LB: 106, UB: 107
thread: 2, MlBk is called with LB: 108, UB: 109
 thread: 0, LongJobs.size() 13
thread: 1, MlBk is called with LB: 107, UB: 108
 thread: 2, LongJobs.size() 13
 thread: 1, LongJobs.size() 13
thread: 2thread: , NSTable size: 0, NSTable size: 1412

thread: 0thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: , i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 2
2thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0, i: 
8thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 2
, alltableelemets[maxindex].elm[i]: thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 00

thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 102, i: 10, alltableelemets[maxindex].elm[i]: , alltableelemets[maxindex].elm[i]: 00

thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 1

thread: 2, blockDimSizeComp: 0 0 0 0 0 3 0 3 0 2 0 2 3 2 2 2 
thread: 2, divisorComp: 0 0 0 0 0 1 0 1 0 1 0 2 1 1 1 1 
thread: 2, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 
0thread: 0, blockDimSizeComp: 0 0 0 0 0 3 0 3 0 2  00 2  13  0 20  0 20  2
 
thread: 0, divisorComp: 0 0 0 0 0 1 0 1 thread: 02 1, allBlocks:  0 00 2  01  1 01  1 0
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0  0 00  1 00  0 0 00  
0thread: 0, largestNoZeroBlockVec: 0 0 0 1 0 0 0 0  0 0 0 0 0 0 
0 , mySum: 0
0 0 0 0 0 0 0 0thread:  00, allBlocks:  0 0 00  01  00  00 0  00 0  , mySum: 10
 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
thread: 1, NSTable size: 12
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 1

thread: 1, blockDimSizeComp: 0 0 0 0 0 3 0 3 0 2 0 2 3 2 2 2 
thread: 1, divisorComp: 0 0 0 0 0 1 0 1 0 1 0 2 1 1 1 1 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 0 1 0 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
Thread: 2, gpu_BlockDP is done.
Thread: 1, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 11
copy the latest feasible solution to instance takes time: 5e-06
thread: 1, sOPT: 11
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 3e-06
thread: 0, sOPT: 11
copy the latest feasible solution to instance takes time: 0.188466
thread: 2, sOPT: 10
BKID: 0, LB: 108, UB: 108, OPT: 10
Dynamic Programming Runtime: 5.59917
Execution time between LB and UB is: 2
By far, all LB UB calculation runtime: 7
********************************************************
Total execution on UB and LB is: 7
OUT of Bk while loop  
UB    108
LB    108
T1    108
T2    108
OPT   10
nMachines   10
BkID	0
AllProbData.size()    3
ck :   2
AllProbData[ck].Ttable    108
ck :   1
AllProbData[ck].Ttable    108
ck :   0
AllProbData[ck].Ttable    113
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan110
Main Scheduling is Done
File 3-14 is Done.
******************************
Reading File...
File 3-15 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 192, LB: 98start at time: 1504655515
thread: 0, MlBk is called with LB: 98, UB: 121
thread: 3, MlBk is called with LB: 167, UB: 192
 thread: 0, LongJobs.size() 14
thread: 1, MlBk is called with LB: 121, UB: 144
 thread: 3, LongJobs.size() 10
thread: 2, MlBk is called with LB: 144, UB: 167
 thread: 1, LongJobs.size() 11
 thread: 2, LongJobs.size() 10
thread: 3, NSTable size: 24
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 2 3 3 2 3 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 1 1 1 2 1 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 0 0 1 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
thread: 2, NSTable size: 22
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 0 2 3 3 2 3 3 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 0 0 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
thread: 1, NSTable size: 25
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 2 2 2 2 3 0 2 3 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 1 1 1 1 1 0 2 1 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 0 0 0 1 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
thread: 0, NSTable size: 24
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 0 2 2 2 0 3 0 3 0 3 2 3 0 
thread: 0, divisorComp: 0 0 0 0 2 1 1 0 1 0 1 0 1 1 1 0 
thread: 0, largestBlockVec: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 1 0 0 0 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 5
copy the latest feasible solution to instance takes time: 0.068798
thread: 3, sOPT: 5
Thread: 2, gpu_BlockDP is done.
Thread: 1, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 5
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 7
copy the latest feasible solution to instance takes time: 0.100517
thread: 2, sOPT: 5
copy the latest feasible solution to instance takes time: 0.161391
thread: 1, sOPT: 7
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.206657
thread: 0, sOPT: 9
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 1, MlBk function is done, and BkID for all processes are collected.Thread: 2
3, MlBk function is done, and BkID for all processes are collected.
, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 98, UB: 110
BKID: 0, LB: 98, UB: 110, OPT: 9
Dynamic Programming Runtime: 6.72976
Execution time between LB and UB is: 4
By far, all LB UB calculation runtime: 4
Iteration: 2, UB: 110, LB: 98start at time: 1504655519
thread: 0, MlBk is called with LB: 98, UB: 101
thread: 3, MlBk is called with LB: 107, UB: 110
 thread: 0, LongJobs.size() 14
 thread: 3, LongJobs.size() 14
thread: 2, MlBk is called with LB: 104, UB: 107
 thread: 2, LongJobs.size() 14
thread: 1, MlBk is called with LB: 101, UB: 104
 thread: 1, LongJobs.size() 14
thread: 0, NSTable size: 18
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 0 2 2 2 0 3 0 3 0 3 2 3 0 
thread: 0, divisorComp: 0 0 0 0 2 1 1 0 1 0 1 0 1 1 1 0 
thread: 0, largestBlockVec: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 1 0 0 0 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
thread: 1, NSTable size: 20
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 0 2 2 2 0 3 0 3 0 3 2 3 0 
thread: 1, divisorComp: 0 0 0 0 2 1 1 0 1 0 1 0 1 1 1 0 
thread: 1, largestBlockVec: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 1 0 0 0 0 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
thread: 2, NSTable size: 20
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 0 2 2 2 0 3 0 3 0 3 2 3 0 
thread: 2, divisorComp: 0 0 0 0 2 1 1 0 1 0 1 0 1 1 1 0 
thread: 2, largestBlockVec: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 1 0 0 0 0 0 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
thread: 3, NSTable size: 24
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 0 2 2 2 0 3 0 3 0 3 2 3 0 
thread: 3, divisorComp: 0 0 0 0 2 1 1 0 1 0 1 0 1 1 1 0 
thread: 3, largestBlockVec: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 1 0 0 0 0 0 0 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
copy the latest feasible solution to instance takes time: 1.12977
thread: 0, sOPT: 10
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 9
copy the latest feasible solution to instance takes time: 1.12205
thread: 1, sOPT: 10
copy the latest feasible solution to instance takes time: 0.888084
thread: 2, sOPT: 10
copy the latest feasible solution to instance takes time: 0.545935
thread: 3, sOPT: 9
Thread: 3, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: Thread: 1, MlBk function is done, and BkID for all processes are collected.
2, MlBk function is done, and BkID for all processes are collected.
0, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 98, UB: 100
BKID: 0, LB: 98, UB: 100, OPT: 10
Dynamic Programming Runtime: 15.3108
Execution time between LB and UB is: 4
By far, all LB UB calculation runtime: 8
Iteration: 3, UB: 100, LB: 98start at time: 1504655523
thread: 0, MlBk is called with LB: 98, UB: 99
 thread: thread: 0, LongJobs.size() 141
, MlBk is called with LB: 99, UB: 100
 thread: 1, LongJobs.size() 14
thread: 0, NSTable size: 18
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 0 2 2 2 0 3 0 3 0 3 2 3 0 
thread: 0, divisorComp: 0 0 0 0 2 1 1 0 1 0 1 0 1 1 1 0 
thread: 0, largestBlockVec: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 1 0 0 0 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
thread: 1, NSTable size: 18
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 0 2 2 2 0 3 0 3 0 3 2 3 0 
thread: 1, divisorComp: 0 0 0 0 2 1 1 0 1 0 1 0 1 1 1 0 
thread: 1, largestBlockVec: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 1 0 0 0 0 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.380478
thread: 0, sOPT: 10
copy the latest feasible solution to instance takes time: 0.459024
thread: 1, sOPT: 10
BKID: 0, LB: 98, UB: 98, OPT: 10
Dynamic Programming Runtime: 6.21212
Execution time between LB and UB is: 3
By far, all LB UB calculation runtime: 11
********************************************************
Total execution on UB and LB is: 11
OUT of Bk while loop  
UB    98
LB    98
T1    98
T2    98
OPT   10
nMachines   10
BkID	0
AllProbData.size()    3
ck :   2
AllProbData[ck].Ttable    98
ck :   1
AllProbData[ck].Ttable    99
ck :   0
AllProbData[ck].Ttable    109
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan106
Main Scheduling is Done
File 3-15 is Done.
******************************
Reading File...
File 3-16 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 195, LB: 99start at time: 1504655527
thread: 0, MlBk is called with LB: 99, UB: 123
thread: 3thread: , MlBk is called with LB: 171, UB: 1952, MlBk is called with LB: 
147, UB: 171
thread: 1, MlBk is called with LB: 123, UB: 147
 thread: 0, LongJobs.size()  thread: 153, LongJobs.size() 
9
 thread: 2, LongJobs.size() 10
 thread: 1, LongJobs.size() 13
thread: 3, NSTable size: 21
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 4
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 2 3 2 2 5 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 1 1 1 1 1 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 0 0 0 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
thread: 2, NSTable size: 30
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 2 2 2 2 2 2 3 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 1 1 1 1 1 2 1 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 0 0 0 1 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
thread: 1, NSTable size: 30
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 2 3 0 2 2 2 2 2 2 0 0 0 0 
thread: 1, divisorComp: 0 0 0 2 1 0 1 1 1 1 2 1 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 1 0 0 0 0 0 1 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 , mySum: 2
thread: 0, NSTable size: 39
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 1

thread: 0, blockDimSizeComp: 0 0 0 2 3 3 3 0 0 3 0 2 2 3 2 2 
thread: 0, divisorComp: 0 0 0 1 1 1 1 0 0 1 0 1 1 1 1 1 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 4
copy the latest feasible solution to instance takes time: 0.042357
thread: 3, sOPT: 4
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 5
copy the latest feasible solution to instance takes time: 0.126044
thread: 2, sOPT: 5
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 7
copy the latest feasible solution to instance takes time: 0.322658
thread: 1, sOPT: 7
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 3
copy the latest feasible solution to instance takes time: 0.615438
thread: 0, sOPT: 3
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: 3, MlBk function is done, and BkID for all processes are collected.Thread: 
Thread: 1, MlBk function is done, and BkID for all processes are collected.
2, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 99, UB: 112
BKID: 0, LB: 99, UB: 112, OPT: 3
Dynamic Programming Runtime: 25.343
Execution time between LB and UB is: 12
By far, all LB UB calculation runtime: 12
Iteration: 2, UB: 112, LB: 99start at time: 1504655539
thread: 0, MlBk is called with LB: 99, UB: 102
thread: 3, MlBk is called with LB: 108, UB: 112
thread:  thread: 0, LongJobs.size() 16
 thread: 3, LongJobs.size() 15
2, MlBk is called with LB: 105, UB: 108
thread: 1, MlBk is called with LB: 102, UB: 105
 thread: 1, LongJobs.size() 16
 thread: 2, LongJobs.size() 16
thread: 3, NSTable size: 39
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 1

thread: 3, blockDimSizeComp: 0 0 0 2 3 3 3 0 0 3 0 2 2 3 2 2 
thread: 3, divisorComp: 0 0 0 1 1 1 1 0 0 1 0 1 1 1 1 1 
thread: 3, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 0 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
thread: 1, NSTable size: 38
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 1

thread: 1, blockDimSizeComp: 0 0 0 3 3 3 3 0 0 3 0 2 2 3 2 2 
thread: 1, divisorComp: 0 0 0 1 1 1 1 0 0 1 0 1 1 1 1 1 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
thread: 0, NSTable size: 32
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 1

thread: 0, blockDimSizeComp: 0 0 0 3 3 3 3 0 0 3 0 2 2 3 2 2 
thread: 0, divisorComp: 0 0 0 1 1 1 1 0 0 1 0 1 1 1 1 1 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
thread: 2, NSTable size: 38
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 1

thread: 2, blockDimSizeComp: 0 0 0 3 3 3 3 0 0 3 0 2 2 3 2 2 
thread: 2, divisorComp: 0 0 0 1 1 1 1 0 0 1 0 1 1 1 1 1 
thread: 2, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 4
copy the latest feasible solution to instance takes time: 3.21958
thread: 3, sOPT: 4
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 2
copy the latest feasible solution to instance takes time: 2.59839
thread: 0, sOPT: 10
copy the latest feasible solution to instance takes time: 2.91488
thread: 2, sOPT: 10
copy the latest feasible solution to instance takes time: 3.09951
thread: 1, sOPT: 2
Thread: 1, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: Thread: 03, MlBk function is done, and BkID for all processes are collected.2, MlBk function is done, and BkID for all processes are collected., MlBk function is done, and BkID for all processes are collected.


sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 99, UB: 101
BKID: 0, LB: 99, UB: 101, OPT: 10
Dynamic Programming Runtime: 217.41
Execution time between LB and UB is: 66
By far, all LB UB calculation runtime: 78
Iteration: 3, UB: 101, LB: 99start at time: 1504655605
thread: 0, MlBk is called with LB: 99, UB: 100
 thread: 0, LongJobs.size() 16
thread: 1, MlBk is called with LB: 100, UB: 101
 thread: 1, LongJobs.size() 16
thread: 1, NSTable size: 32
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 1

thread: 1, blockDimSizeComp: 0 0 0 3 3 3 3 0 0 3 0 2 2 3 2 2 
thread: 1, divisorComp: 0 0 0 1 1 1 1 0 0 1 0 1 1 1 1 1 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
thread: 0, NSTable size: 32
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 1

thread: 0, blockDimSizeComp: 0 0 0 3 3 3 3 0 0 3 0 2 2 3 2 2 
thread: 0, divisorComp: 0 0 0 1 1 1 1 0 0 1 0 1 1 1 1 1 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
copy the latest feasible solution to instance takes time: 2.03243
thread: 1, sOPT: 10
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 0.704203
thread: 0, sOPT: 10
BKID: 0, LB: 99, UB: 99, OPT: 10
Dynamic Programming Runtime: 68.3556
Execution time between LB and UB is: 35
By far, all LB UB calculation runtime: 113
********************************************************
Total execution on UB and LB is: 113
OUT of Bk while loop  
UB    99
LB    99
T1    99
T2    99
OPT   10
nMachines   10
BkID	0
AllProbData.size()    3
ck :   2
AllProbData[ck].Ttable    99
ck :   1
AllProbData[ck].Ttable    100
ck :   0
AllProbData[ck].Ttable    111
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan103
Main Scheduling is Done
File 3-16 is Done.
******************************
Reading File...
File 3-17 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 209, LB: 109start at time: 1504655641
thread: 0, MlBk is called with LB: 109, UB: 134
thread: thread: 2, MlBk is called with LB: 159, UB: 1843, MlBk is called with LB: 
184, UB: 209 thread: 0, LongJobs.size() 15
thread: 1, MlBk is called with LB: 
134, UB: 159 thread: 2, LongJobs.size() 12

 thread: 3, LongJobs.size() 11
 thread: 1, LongJobs.size() 13
thread: 3, NSTable size: 20
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 4
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 2 2 0 5 2 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 2 2 0 1 1 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 1 1 0 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 2
thread: 2, NSTable size: 31
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 2 2 3 2 0 5 2 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 1 2 1 1 0 1 1 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 1 0 0 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
thread: 1, NSTable size: 29
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 3 3 3 3 0 0 5 2 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 0 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
thread: 0, NSTable size: 41
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 2 2 3 3 3 2 2 0 2 2 2 0 0 
thread: 0, divisorComp: 0 0 0 1 1 1 1 1 1 1 0 1 2 1 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 1 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 , mySum: 1
Thread: 1, gpu_BlockDP is done.
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 4
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 7
copy the latest feasible solution to instance takes time: 0.065972
thread: 3, sOPT: 4
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 6
copy the latest feasible solution to instance takes time: 0.221653
thread: 1, sOPT: 7
copy the latest feasible solution to instance takes time: 0.106499
thread: 2, sOPT: 6
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 4
copy the latest feasible solution to instance takes time: 0.439694
thread: 0, sOPT: 4
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: 2, MlBk function is done, and BkID for all processes are collected.
Thread: 1, MlBk function is done, and BkID for all processes are collected.Thread: 
3, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 109, UB: 122
BKID: 0, LB: 109, UB: 122, OPT: 4
Dynamic Programming Runtime: 9.94599
Execution time between LB and UB is: 9
By far, all LB UB calculation runtime: 9
Iteration: 2, UB: 122, LB: 109start at time: 1504655650
thread: 0, MlBk is called with LB: 109, UB: 112
 thread: 0, LongJobs.size() 16
thread: thread: thread: 23, MlBk is called with LB: , MlBk is called with LB: 1115118, MlBk is called with LB: , UB: , UB: 112122, UB: 118115


 thread: 3, LongJobs.size() 15
 thread: 1, LongJobs.size() 16
 thread: 2, LongJobs.size() 16
thread: 0, NSTable size: 33
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 1

thread: 0, blockDimSizeComp: 0 0 0 0 3 2 3 3 2 2 3 0 0 0 5 2 
thread: 0, divisorComp: 0 0 0 0 1 1 1 1 1 1 1 0 0 0 1 1 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
thread: 3, NSTable size: 41
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 2 2 3 3 3 2 2 0 2 2 2 0 0 
thread: 3, divisorComp: 0 0 0 1 1 1 1 1 1 1 0 1 2 1 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 1 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 , mySum: 1
thread: 1, NSTable size: 39
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 3 2 3 3 3 2 2 0 2 2 2 0 0 
thread: 1, divisorComp: 0 0 0 1 1 1 1 1 1 1 0 1 2 1 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 1 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 , mySum: 1
thread: 2, NSTable size: 39
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 3 2 3 3 3 2 2 0 2 2 2 0 0 
thread: 2, divisorComp: 0 0 0 1 1 1 1 1 1 1 0 1 2 1 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 1 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 , mySum: 1
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
copy the latest feasible solution to instance takes time: 2.83251
thread: 0, sOPT: 10
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 4
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 4
copy the latest feasible solution to instance takes time: 2.22661
thread: 3, sOPT: 4
copy the latest feasible solution to instance takes time: 2.82092
thread: 1, sOPT: 4
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 4
copy the latest feasible solution to instance takes time: 0.741985
thread: 2, sOPT: 4
Thread: 2, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 1, MlBk function is done, and BkID for all processes are collected.
3, MlBk function is done, and BkID for all processes are collected.
Thread: 0, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 109, UB: 111
BKID: 0, LB: 109, UB: 111, OPT: 10
Dynamic Programming Runtime: 93.0693
Execution time between LB and UB is: 29
By far, all LB UB calculation runtime: 38
Iteration: 3, UB: 111, LB: 109start at time: 1504655680
thread: 0, MlBk is called with LB: 109, UB: 110
 thread: 0, LongJobs.size() 16
thread: 1, MlBk is called with LB: 110, UB: 111
 thread: 1, LongJobs.size() 16
thread: 0, NSTable size: 33
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 1

thread: 0, blockDimSizeComp: 0 0 0 0 3 2 3 3 2 2 3 0 0 0 5 2 
thread: 0, divisorComp: 0 0 0 0 1 1 1 1 1 1 1 0 0 0 1 1 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
thread: 1, NSTable size: 33
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 1

thread: 1, blockDimSizeComp: 0 0 0 0 3 2 3 3 2 2 3 0 0 0 5 2 
thread: 1, divisorComp: 0 0 0 0 1 1 1 1 1 1 1 0 0 0 1 1 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 10
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 10
copy the latest feasible solution to instance takes time: 1.07852
thread: 0, sOPT: 10
copy the latest feasible solution to instance takes time: 1.08947
thread: 1, sOPT: 10
BKID: 0, LB: 109, UB: 109, OPT: 10
Dynamic Programming Runtime: 27.3153
Execution time between LB and UB is: 14
By far, all LB UB calculation runtime: 53
********************************************************
Total execution on UB and LB is: 53
OUT of Bk while loop  
UB    109
LB    109
T1    109
T2    109
OPT   10
nMachines   10
BkID	0
AllProbData.size()    3
ck :   2
AllProbData[ck].Ttable    109
ck :   1
AllProbData[ck].Ttable    110
ck :   0
AllProbData[ck].Ttable    121
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan113
Main Scheduling is Done
File 3-17 is Done.
******************************
Reading File...
File 3-18 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 224, LB: 125start at time: 1504655694
thread: 0, MlBk is called with LB: 125, UB: 150
thread: thread: 2, MlBk is called with LB: 175, UB: 2003
, MlBk is called with LB: 200 thread: 0, LongJobs.size() thread: 16
1, MlBk is called with LB: 150, UB: 175
, UB: 225
 thread: 2, LongJobs.size() 14
 thread: 1, LongJobs.size() 14
 thread: 3, LongJobs.size() 12
thread: 3, NSTable size: 17
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 5
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 5
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 2 3 2 3 0 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 1 2 1 2 0 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 1 0 1 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
thread: 1, NSTable size: 19
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 5
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 0 2 3 2 2 3 0 0 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 2 1 2 1 2 0 0 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 1 0 1 0 1 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 , mySum: 2
0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 , mySum: 3
thread: 2, NSTable size: 35
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 5
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 3 2 3 2 5 2 0 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 1 1 2 1 1 1 0 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 1 0 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
thread: 0, NSTable size: 41
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 2 2 3 2 5 2 2 5 2 0 0 0 0 
thread: 0, divisorComp: 0 0 0 1 1 1 1 1 1 1 1 1 0 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 5
copy the latest feasible solution to instance takes time: 0.030593
thread: 3, sOPT: 5
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 7
Thread: 2, gpu_BlockDP is done.
copy the latest feasible solution to instance takes time: 0.187854
thread: 1, sOPT: 7
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 2
copy the latest feasible solution to instance takes time: 0.153653
thread: 2, sOPT: 2
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 5
copy the latest feasible solution to instance takes time: 0.310143
thread: 0, sOPT: 5
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: Thread: 21, MlBk function is done, and BkID for all processes are collected., MlBk function is done, and BkID for all processes are collected.3, MlBk function is done, and BkID for all processes are collected.


sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 125, UB: 138
BKID: 0, LB: 125, UB: 138, OPT: 5
Dynamic Programming Runtime: 13.9816
Execution time between LB and UB is: 7
By far, all LB UB calculation runtime: 7
Iteration: 2, UB: 138, LB: 125start at time: 1504655701
thread: 0, MlBk is called with LB: 125, UB: 128
thread: thread: 2, MlBk is called with LB: 131, UB: 134
 thread: 0, LongJobs.size() 18
1 thread: , MlBk is called with LB: 2, LongJobs.size() 128, UB: 16131

thread: 3, MlBk is called with LB: 134, UB: 138
 thread: 3, LongJobs.size() 16
 thread: 1, LongJobs.size() 17
thread: 2, NSTable size: 34
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 2 2 3 2 5 2 2 5 2 0 0 0 0 
thread: 2, divisorComp: 0 0 0 1 1 1 1 1 1 1 1 1 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
thread: 3, NSTable size: 41
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 4
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 4
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 2 2 3 2 5 2 2 5 2 0 0 0 0 
thread: 3, divisorComp: 0 0 0 1 1 1 1 1 1 1 1 1 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
thread: 1, NSTable size: 39
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 3 2 3 2 5 2 2 5 2 0 0 0 0 
thread: 1, divisorComp: 0 0 0 1 1 1 1 1 1 1 1 1 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 0 0 0 0 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
thread: 0, NSTable size: 46
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 3 3 0 3 2 3 2 2 0 5 2 0 0 
thread: 0, divisorComp: 0 0 0 1 1 0 1 1 1 2 1 0 1 1 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 0 0 0 1 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 4
Thread: 1, gpu_BlockDP is done.
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 2
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 3
copy the latest feasible solution to instance takes time: 1.9318
thread: 3, sOPT: 4
copy the latest feasible solution to instance takes time: 2.15049
thread: 2, sOPT: 2
copy the latest feasible solution to instance takes time: 2.75358
thread: 1, sOPT: 3
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 2
copy the latest feasible solution to instance takes time: 0.819764
thread: 0, sOPT: 2
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: 1, MlBk function is done, and BkID for all processes are collected.Thread: 
Thread: 2, MlBk function is done, and BkID for all processes are collected.
3, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 125, UB: 127
BKID: 0, LB: 125, UB: 127, OPT: 2
Dynamic Programming Runtime: 93.9149
Execution time between LB and UB is: 31
By far, all LB UB calculation runtime: 38
Iteration: 3, UB: 127, LB: 125start at time: 1504655732
thread: 0, MlBk is called with LB: 125, UB: 126
thread: 1, MlBk is called with LB: 126, UB: 127
 thread: 0, LongJobs.size() 18
 thread: 1, LongJobs.size() 18
thread: 1, NSTable size: 46
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 4
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 3 3 0 3 2 3 2 2 0 5 2 0 0 
thread: 1, divisorComp: 0 0 0 1 1 0 1 1 1 2 1 0 1 1 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 0 0 0 1 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
thread: 0, NSTable size: 36
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 4
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 3 3 0 3 2 3 2 2 0 5 2 0 0 
thread: 0, divisorComp: 0 0 0 1 1 0 1 1 1 2 1 0 1 1 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 0 0 0 1 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 3
copy the latest feasible solution to instance takes time: 2.04968
thread: 1, sOPT: 3
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 4
copy the latest feasible solution to instance takes time: 0.800351
thread: 0, sOPT: 4
BKID: 0, LB: 125, UB: 125, OPT: 4
Dynamic Programming Runtime: 56.6615
Execution time between LB and UB is: 29
By far, all LB UB calculation runtime: 67
********************************************************
Total execution on UB and LB is: 67
OUT of Bk while loop  
UB    125
LB    125
T1    125
T2    125
OPT   4
nMachines   10
BkID	0
AllProbData.size()    3
ck :   2
AllProbData[ck].Ttable    125
ck :   1
AllProbData[ck].Ttable    126
ck :   0
AllProbData[ck].Ttable    137
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan103
Main Scheduling is Done
File 3-18 is Done.
******************************
Reading File...
File 3-19 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 194, LB: 101start at time: 1504655762
thread: 0, MlBk is called with LB: 101, UB: 124
thread: thread: 2, MlBk is called with LB: 147, UB: 1703
, MlBk is called with LB:  thread: 0, LongJobs.size() 14
thread: 1, MlBk is called with LB: 124, UB: 147
170, UB: 194
 thread: 2, LongJobs.size() 13
 thread: 1, LongJobs.size() 13
 thread: 3, LongJobs.size() 12
thread: 3, NSTable size: 26
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 5
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 2 2 3 2 3 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 2 1 2 1 1 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 1 0 1 0 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
thread: 2, NSTable size: 25
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 4
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 0 5 2 3 2 3 2 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 0 1 1 1 2 1 1 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 0 1 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 , mySum: 1
thread: 1, NSTable size: 23
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 0 3 3 2 3 2 2 3 0 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 1 1 1 1 2 1 1 0 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 0 0 1 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 , mySum: 1
thread: 0, NSTable size: 25
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 2 0 3 3 2 3 2 2 2 2 0 0 0 
thread: 0, divisorComp: 0 0 0 1 0 1 1 1 1 2 1 1 1 0 0 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 0 0 0 1 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 , mySum: 1
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 5
copy the latest feasible solution to instance takes time: 0.120421
thread: 3, sOPT: 5
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 6
copy the latest feasible solution to instance takes time: 0.2312
thread: 2, sOPT: 6
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 7
copy the latest feasible solution to instance takes time: 0.253892
thread: 1, sOPT: 7
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.288954
thread: 0, sOPT: 9
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 2, MlBk function is done, and BkID for all processes are collected.
1, MlBk function is done, and BkID for all processes are collected.
Thread: 3, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 101, UB: 113
BKID: 0, LB: 101, UB: 113, OPT: 9
Dynamic Programming Runtime: 9.14526
Execution time between LB and UB is: 4
By far, all LB UB calculation runtime: 4
Iteration: 2, UB: 113, LB: 101start at time: 1504655766
thread: 0, MlBk is called with LB: 101, UB: 104
thread: 3, MlBk is called with LB: 110, UB: 113
thread: 1, MlBk is called with LB: 104, UB: 107
 thread: 0, LongJobs.size() 16
 thread: 3, LongJobs.size() 14
 thread: 1, LongJobs.size() 15
thread: 2, MlBk is called with LB: 107, UB: 110
 thread: 2, LongJobs.size() 14
thread: 3, NSTable size: 21
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 0 2 0 3 3 0 2 3 2 2 2 2 0 
thread: 3, divisorComp: 0 0 0 0 1 0 1 1 0 1 1 2 1 1 1 0 
thread: 3, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 0 0 0 0 1 0 0 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
thread: 2, NSTable size: 21
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 0 2 0 3 3 0 2 3 2 2 2 2 0 
thread: 2, divisorComp: 0 0 0 0 1 0 1 1 0 1 1 2 1 1 1 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 0 0 0 1 0 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
thread: 1, NSTable size: 28
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 2 2 0 3 3 0 2 3 2 2 2 2 0 
thread: 1, divisorComp: 0 0 0 1 1 0 1 1 0 1 1 2 1 1 1 0 
thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 0 0 0 0 1 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
thread: 0, NSTable size: 32
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 0, blockDimSizeComp: 0 0 0 3 2 0 3 3 0 2 3 2 2 2 2 0 
thread: 0, divisorComp: 0 0 0 1 1 0 1 1 0 1 1 2 1 1 1 0 
thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 0 0 0 0 1 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 10
copy the latest feasible solution to instance takes time: 1.62477
thread: 2, sOPT: 10
copy the latest feasible solution to instance takes time: 1.23952
thread: 3, sOPT: 10
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 11
copy the latest feasible solution to instance takes time: 3e-06
thread: 1, sOPT: 11
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 1e-06
thread: 0, sOPT: 11
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 3, MlBk function is done, and BkID for all processes are collected.Thread: 2
, MlBk function is done, and BkID for all processes are collected.
1, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: 1 1 -1 -1
Pick seg 2 for next iteration where LB: 106, UB: 109
BKID: 0, LB: 106, UB: 109, OPT: 10
Dynamic Programming Runtime: 56.0831
Execution time between LB and UB is: 17
By far, all LB UB calculation runtime: 21
Iteration: 3, UB: 109, LB: 106start at time: 1504655783
thread: 0, MlBk is called with LB: 106, UB: 107
 thread: 0, LongJobs.size() 15
thread: 2, MlBk is called with LB: 108, UB: 109
thread: 1, MlBk is called with LB: 107, UB: 108
 thread: 2, LongJobs.size() 14
 thread: 1, LongJobs.size() 15
thread: 2, NSTable size: 21
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 0 2 0 3 3 0 2 3 2 2 2 2 0 
thread: 2, divisorComp: 0 0 0 0 1 0 1 1 0 1 1 2 1 1 1 0 
thread: 2, largestBlockVec: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 0 0 0 0 1 0 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
thread: 0, NSTable size: 28
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: thread: 1, NSTable size: 28
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0, i: 01, alltableelemets[maxindex].elm[i]: 
0thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 
1thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 1

thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: thread: 1, i: 1015, alltableelemets[maxindex].elm[i]: , alltableelemets[maxindex].elm[i]: 20
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 0


thread: 0, blockDimSizeComp: 0 0 0 2 2 0 3 3 0 2 3 2 2 2 2 0 
thread: 0, divisorComp: 0 0
 thread: 1, blockDimSizeComp: 0 0 0 2 2 0 3 3 0 2 30  21  1 20 2  2 10  1
 thread: 1, divisorComp: 0 0 0 1 1 0 1 1 0 1 1 20 1 1 1  01 
 thread: 1, largestBlockVec: 0 0 0 0 0 0 0 0 0 1 2 1 1 1 00 0  1 
0thread: 0, largestBlockVec: 0 0 0 0 0 0 0 0 0  0 0 0 
thread: 1, largestNoZeroBlockVec: 0 0 0 0 0 0 1 00 0 0  
0 1 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 0 0 0 0 0 1 0 thread: 01, allBlocks:  00 0  0
 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 thread: 0 0 00 0 , allBlocks: 0 10 0  0 00  00  0, mySum: 1 0
 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 , mySum: 1
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 10
copy the latest feasible solution to instance takes time: 1.05235
thread: 2, sOPT: 10
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 11
copy the latest feasible solution to instance takes time: 2e-06
thread: 1, sOPT: 11
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 11
copy the latest feasible solution to instance takes time: 1e-06
thread: 0, sOPT: 11
BKID: 0, LB: 108, UB: 108, OPT: 10
Dynamic Programming Runtime: 30.6585
Execution time between LB and UB is: 11
By far, all LB UB calculation runtime: 32
********************************************************
Total execution on UB and LB is: 32
OUT of Bk while loop  
UB    108
LB    108
T1    108
T2    108
OPT   10
nMachines   10
BkID	0
AllProbData.size()    3
ck :   2
AllProbData[ck].Ttable    108
ck :   1
AllProbData[ck].Ttable    108
ck :   0
AllProbData[ck].Ttable    112
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan116
Main Scheduling is Done
File 3-19 is Done.
******************************
Reading File...
File 3-20 is read.
Number of Jobs : 21
Number of Machines : 10
******************************************************************
Iteration: 1, UB: 190, LB: 97start at time: 1504655794
thread: 0, MlBk is called with LB: 97, UB: 120
thread: 3, MlBk is called with LB: 166, UB: 190
 thread: 0, LongJobs.size() 13
thread: thread: 2, MlBk is called with LB: 143, UB: 1166, MlBk is called with LB: 
120, UB:  thread: 3, LongJobs.size() 9
143
 thread: 2, LongJobs.size() 12
 thread: 1, LongJobs.size() 12
thread: 3, NSTable size: 16
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 4
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 3, blockDimSizeComp: 0 0 0 2 0 2 5 2 0 0 0 0 0 0 0 0 
thread: 3, divisorComp: 0 0 0 2 0 1 1 1 0 0 0 0 0 0 0 0 
thread: 3, largestBlockVec: 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 1 0 0 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
thread: 1, NSTable size: 17
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 1, blockDimSizeComp: 0 0 0 0 2 2 0 2 3 3 0 2 0 0 0 0 
thread: 1, divisorComp: 0 0 0 0 2 2 0 1 1 1 0 1 0 0 0 0 
thread: 1, largestBlockVec: 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 1 1 0 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 , mySum: 2
thread: 2, NSTable size: 43
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 0

thread: 2, blockDimSizeComp: 0 0 0 2 3 2 2 3 3 2 0 0 0 0 0 0 
thread: 2, divisorComp: 0 0 0 2 1 1 1 1 1 1 0 0 0 0 0 0 
thread: 2, largestBlockVec: 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 1 0 0 0 0 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 1
thread: 0, NSTable size: 26
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 1

thread: 0, blockDimSizeComp: 0 0 0 2 0 2 0 3 2 0 2 2 3 2 0 2 
thread: 0, divisorComp: 0 0 0 1 0 2 0 1 1 0 1 1 1 1 0 1 
thread: 0, largestBlockVec: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 1 0 0 0 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 4
copy the latest feasible solution to instance takes time: 0.02602
thread: 3, sOPT: 4
Thread: 1, gpu_BlockDP is done.
Thread: 2, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 7
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 2
copy the latest feasible solution to instance takes time: 0.186669
thread: 1, sOPT: 7
copy the latest feasible solution to instance takes time: 0.269255
thread: 2, sOPT: 2
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 8
copy the latest feasible solution to instance takes time: 0.190031
thread: 0, sOPT: 8
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 1, MlBk function is done, and BkID for all processes are collected.
3, MlBk function is done, and BkID for all processes are collected.
Thread: 2, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 97, UB: 109
BKID: 0, LB: 97, UB: 109, OPT: 8
Dynamic Programming Runtime: 6.43365
Execution time between LB and UB is: 3
By far, all LB UB calculation runtime: 3
Iteration: 2, UB: 109, LB: 97start at time: 1504655797
thread: 0, MlBk is called with LB: 97, UB: 100
thread: thread: 1, MlBk is called with LB: 100, UB: 103 thread: 0
, LongJobs.size() 14
3, MlBk is called with LB: 106, UB: 109
 thread: 1, LongJobs.size() 14
thread: 2, MlBk is called with LB: 103, UB: 106
 thread: 3, LongJobs.size() 14
 thread: 2, LongJobs.size() 14
thread: 2, NSTable size: 26
thread: 2, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 2, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 2, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 2, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 2, i: 15, alltableelemets[maxindex].elm[i]: 1

thread: 2, blockDimSizeComp: 0 0 0 3 0 2 0 3 2 0 2 2 3 2 0 2 
thread: 2, divisorComp: 0 0 0 1 0 2 0 1 1 0 1 1 1 1 0 1 
thread: 2, largestBlockVec: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 
thread: 2, largestNoZeroBlockVec: 0 1 0 0 0 0 0 0 0 
thread: 2, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
thread: 1, NSTable size: 22
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 1

thread: 1, blockDimSizeComp: 0 0 0 3 0 2 0 3 2 0 2 2 3 2 0 2 
thread: 1, divisorComp: 0 0 0 1 0 2 0 1 1 0 1 1 1 1 0 1 
thread: 1, largestBlockVec: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 1 0 0 0 0 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
thread: 0, NSTable size: 22
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 1

thread: 0, blockDimSizeComp: 0 0 0 3 0 2 0 3 2 0 2 2 3 2 0 2 
thread: 0, divisorComp: 0 0 0 1 0 2 0 1 1 0 1 1 1 1 0 1 
thread: 0, largestBlockVec: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 1 0 0 0 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
thread: 3, NSTable size: 26
thread: 3, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 3, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 3, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 3, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 3, i: 15, alltableelemets[maxindex].elm[i]: 1

thread: 3, blockDimSizeComp: 0 0 0 3 0 2 0 3 2 0 2 2 3 2 0 2 
thread: 3, divisorComp: 0 0 0 1 0 2 0 1 1 0 1 1 1 1 0 1 
thread: 3, largestBlockVec: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 
thread: 3, largestNoZeroBlockVec: 0 1 0 0 0 0 0 0 0 
thread: 3, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
Thread: 2, gpu_BlockDP is done.
Thread: 2, find the NS table for a selected configuration.
cpuId: 2, dpoptimal: 9
Thread: 1, gpu_BlockDP is done.
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 9
Thread: 3, gpu_BlockDP is done.
Thread: 3, find the NS table for a selected configuration.
cpuId: 3, dpoptimal: 9
Thread: 0, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 9
copy the latest feasible solution to instance takes time: 1.26731
thread: 2, sOPT: 9
copy the latest feasible solution to instance takes time: 1.42252
thread: 1, sOPT: 9
copy the latest feasible solution to instance takes time: 1.57878
thread: 3, sOPT: 9
copy the latest feasible solution to instance takes time: 0.87439
thread: 0, sOPT: 9
Thread: 0, MlBk function is done, and BkID for all processes are collected.
Thread: Thread: 2, MlBk function is done, and BkID for all processes are collected.
1, MlBk function is done, and BkID for all processes are collected.
Thread: 3, MlBk function is done, and BkID for all processes are collected.
sBkID is: 0 0 0 0 
BkID: 0
Thread: 0 has dirc: -1 -1 -1 -1
Pick seg 0 for next iteration where LB: 97, UB: 99
BKID: 0, LB: 97, UB: 99, OPT: 9
Dynamic Programming Runtime: 22.3084
Execution time between LB and UB is: 7
By far, all LB UB calculation runtime: 10
Iteration: 3, UB: 99, LB: 97start at time: 1504655804
thread: 0, MlBk is called with LB: 97, UB: 98
 thread: 0, LongJobs.size() thread: 14
1, MlBk is called with LB: 98, UB: 99
 thread: 1, LongJobs.size() 14
thread: 0, NSTable size: 22
thread: 0, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 0, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 0, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 0, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 0, i: 15, alltableelemets[maxindex].elm[i]: 1

thread: 0, blockDimSizeComp: 0 0 0 3 0 2 0 3 2 0 2 2 3 2 0 2 
thread: 0, divisorComp: 0 0 0 1 0 2 0 1 1 0 1 1 1 1 0 1 
thread: 0, largestBlockVec: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 
thread: 0, largestNoZeroBlockVec: 0 1 0 0 0 0 0 0 0 
thread: 0, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
thread: 1, NSTable size: 22
thread: 1, i: 0, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 1, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 2, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 3, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 4, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 5, alltableelemets[maxindex].elm[i]: 3
thread: 1, i: 6, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 7, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 8, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 9, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 10, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 11, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 12, alltableelemets[maxindex].elm[i]: 2
thread: 1, i: 13, alltableelemets[maxindex].elm[i]: 1
thread: 1, i: 14, alltableelemets[maxindex].elm[i]: 0
thread: 1, i: 15, alltableelemets[maxindex].elm[i]: 1

thread: 1, blockDimSizeComp: 0 0 0 3 0 2 0 3 2 0 2 2 3 2 0 2 
thread: 1, divisorComp: 0 0 0 1 0 2 0 1 1 0 1 1 1 1 0 1 
thread: 1, largestBlockVec: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 
thread: 1, largestNoZeroBlockVec: 0 1 0 0 0 0 0 0 0 
thread: 1, allBlocks: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 , mySum: 0
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 , mySum: 1
Thread: 0, gpu_BlockDP is done.
Thread: 1, gpu_BlockDP is done.
Thread: 0, find the NS table for a selected configuration.
cpuId: 0, dpoptimal: 9
Thread: 1, find the NS table for a selected configuration.
cpuId: 1, dpoptimal: 9
copy the latest feasible solution to instance takes time: 0.570195
thread: 0, sOPT: 9
copy the latest feasible solution to instance takes time: 0.687172
thread: 1, sOPT: 9
BKID: 0, LB: 97, UB: 97, OPT: 9
Dynamic Programming Runtime: 8.49246
Execution time between LB and UB is: 4
By far, all LB UB calculation runtime: 14
********************************************************
Total execution on UB and LB is: 14
OUT of Bk while loop  
UB    97
LB    97
T1    97
T2    97
OPT   9
nMachines   10
BkID	0
AllProbData.size()    3
ck :   2
AllProbData[ck].Ttable    97
ck :   1
AllProbData[ck].Ttable    98
ck :   0
AllProbData[ck].Ttable    108
No Problem until here 1
No Problem until here 2
No Problem until here 3
Final OptimalSchedule
FinalMakespan109
Main Scheduling is Done
File 3-20 is Done.
******************************
Total running time is: 498
